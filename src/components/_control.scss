//
// Control
//
// Used to combine different components and objects into one control
// The main control needs to be the first child of Control class to work properly

// Note: Nested label(s) are strongly discouraged by web standards but still in order
// to keep accessibility of developers we provide work around to use outer label for
// browser and inner label for styling controls i.e bending web standards a bit.
//
// Read more : https://stackoverflow.com/questions/20834755/standards-on-behaviour-of-nested-labels
label.control {
  cursor: pointer;
  label {
    pointer-events: none; // disable forwarding pointer events to inner label(s)
  }
}

.control {
  position: relative;
  display: block;
  margin-top: 2.25px;
  margin-bottom: 2.25px;
  @include fontsize($font-size-normal);
}
//
// feedback inside control
//
.control > .feedback {
  position: absolute;
  right: 0;
  bottom: 100%;
  display: none;
  padding: $control-feedback-padding;
  margin-bottom: $control-feedback-arrow-size + $control-feedback-offset-bottom;
  border-radius: border-radius();
  color: $control-feedback-color;
  box-shadow: box-shadow($control-feedback-shadow);
  @include gradient-bg($control-feedback-background, 180deg);

  @include before {
    content: "";
    position: absolute;
    right: $control-feedback-arrow-offset-right;
    bottom: -($control-feedback-arrow-size * 2);
    @include triangle(bottom, $control-feedback-arrow-size, $control-feedback-background);
  }
}

.control.is-valid > .feedback.is-valid {
  @extend %display-block;
}

.control.is-invalid > .feedback.is-invalid {
  @extend %display-block;
}

.is-validated .control {
  > .input:required {
    &:valid ~ .feedback.is-valid {
      @extend %display-block;
    }
    &:invalid ~ .feedback.is-invalid {
      @extend %display-block;
    }
  }

  > input[type="checkbox"]:required {
    &:checked ~ .feedback.is-valid {
      @extend %display-block;
    }
    &:not(:checked) ~ .feedback.is-invalid {
      @extend %display-block;
    }
  }
}
