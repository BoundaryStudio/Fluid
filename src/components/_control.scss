//
// Control
//
// Used to combine different components and objects into one control
// The main control needs to be the first child of Control class to work properly

label.control {
  > label {
    pointer-events: none;
  }
}

.control {
  position: relative;
  display: block;
  cursor: pointer;
  margin-top: 2.25px;
  margin-bottom: 2.25px;
  @include fontsize($font-size-normal);

  //
  // Radio / Checkbox shared Control
  //
  > .checkbox,
  > .radio {
    @extend %controls-hide;

    @include focus {
      ~ label {
        @include before {
          @include animation(pulse); // pulse animation on click event
        }
      }
    }

    @include active(":checked") {
      ~ label {
        @include before {
          border-color: currentColor;
        }
      }
    }

    ~ label {
      cursor: pointer;
      padding-left: $control-radio_checkbox-paddingleft;
      margin-bottom: 0; // override label margin bottom inside control

      @include before {
        @extend %controls;
        content: "";
        position: absolute;
        top: 50%;
        left: 0;
        transform: translateY(-50%);
        width: $control-radio_checkbox-size;
        height: $control-radio_checkbox-size;
        padding: 0; // override controls padding
        margin: 0; // override controls margin
        border-color: $control-radio_checkbox-bordercolor;
        background-color: $control-radio_checkbox-background;
        @include fontsize(unset); // override controls font-size
      }
    }

    //
    // Radio / Checkbox Color variants
    //
    @each $color, $value in $theme-colors {
      &.is-#{$color} {
        ~ label {
          @include before {
            color: $value;
          }
        }
      }
    }

    @include disabled {
      ~ label {
        @extend %controls-disabled;
        @include before {
          color: $controls-theme-light
        }
      }
    }
  }

  //
  // feedback inside control
  //
  > .feedback {
    position: absolute;
    right: 0;
    bottom: 100%;
    display: none;
    padding: $control-input-feedback-padding;
    margin-bottom: $control-input-feedback-arrow-size + $control-input-feedback-offset-bottom;
    border-radius: border-radius();
    color: $control-input-feedback-color;
    box-shadow: box-shadow($control-input-feedback-shadow);
    @include gradient-bg($control-input-feedback-background, 180deg);

    @include before {
      content: "";
      position: absolute;
      right: $control-input-feedback-arrow-offset-right;
      bottom: -($control-input-feedback-arrow-size * 2);
      @include triangle(bottom, $control-input-feedback-arrow-size, $control-input-feedback-background);
    }
  }

  &.is-valid > .feedback.is-valid {
    @extend %display-block;
  }

  &.is-invalid > .feedback.is-invalid {
    @extend %display-block;
  }
}
