//
// Buttons
//

@if $generate-component-classes {
  //
  // Base styles
  //

  .button {
    display: inline-block;
    margin-top: .1rem;
    margin-bottom: .1rem;
    font-family: $button-font-family;
    font-weight: $button-font-weight;
    line-height: $button-line-height;
    color: $body-color;
    text-align: center;
    text-decoration: none;
    vertical-align: middle;
    user-select: none;
    background-color: transparent;
    border: $border-width-default solid transparent;

    @include button-sizing($button-padding-y, $button-padding-x, $button-border-radius);
    @include font-size($font-size-default);
    @include transition($button-transition);

    @include hover {
      color: $body-color;
      box-shadow: 0 0 0 $button-focus-width rgba($button-theme-default, .5);
    }

    @include focus {
      @include animation(pulse); // pulse animation on click event
      outline: 0;
    }

    //
    // Theme Variants
    //

    // Is-solid
    &.is-solid {
      color: clr-contrast($button-theme-default);
      @include button-design-solid-varient($button-theme-default);

      // Color variants
      @each $color, $value in $theme-colors {
        &.is-#{$color} {
          @include button-design-solid-varient($value);
        }
      }

      @include active {
        @if not $design-solid-else-gradients {
          background-image: none; // Remove the gradient for the pressed/active state
        }
      }

      @include disabled {
        color: $white;
        background: $button-disabled-bg;
        @if not $design-solid-else-gradients {
          background-image: none; // Remove CSS gradients if they're enabled
        }
      }
    }

    // Is-outline
    &.is-outline {
      border-color: $button-outline-normal-border;
      @include button-design-outline-varient($button-theme-default); // Default button theme

      // Color variants
      @each $color, $value in $theme-colors {
        &.is-#{$color} {
          @include button-design-outline-varient($value);
        }
      }

      @include disabled {
        color: $button-theme-default;
        border-color: $button-disabled-bg;
      }
    }

    // Is-minimal
    &.is-minimal {
      position: relative;
      border-right: 0; // remove border to remove border spacing between minimal button groups
      border-left: 0; // remove border to remove border spacing between minimal button groups
      box-shadow: none; // remove focus box shadow

      @include after {
        position: absolute;
        right: 0;
        bottom: 0;
        left: 0;
        content: "";
        border-bottom: $border-width-default solid;

        @include transition(box-shadow .15s ease-in-out, bottom .15s ease-in-out);
      }

      @include button-design-minimal-varient($button-theme-default); // Default button theme

      // Color variants
      @each $color, $value in $theme-colors {
        &.is-#{$color} {
          @include button-design-minimal-varient($value);
        }
      }

      @include focus {
        @include animation(none); // disable animations and play again on click event
        @include after {
          @include animation(flash); // flash animation for underline
          bottom: 20%;
          // stylelint-disable-next-line declaration-no-important
          box-shadow: none !important;
        }
      }

      @include active {
        @include after {
          @include animation(none); // disable animations and play again on click event
        }
      }

      @include disabled {
        color: $button-theme-default;
        @include after {
          border-bottom-color: $button-disabled-bg;
        }
      }
    }

    // active comes in the end to override previous styles
    @include active {
      box-shadow: none; // no shadow in clicked state
      @include animation(none); // disable animations and play again on click event
    }

    // disable comes in the end to override previous styles
    @include disabled {
      pointer-events: none;
      opacity: $button-disabled-opacity;
    }
  }

  //
  // Size Variants
  //

  .button.is-small {
    @include button-sizing($button-padding-y-small, $button-padding-x-small, $button-border-radius-small);
  }

  .button.is-large {
    @include button-sizing($button-padding-y-large, $button-padding-x-large, $button-border-radius-large);
  }

  //
  // Loading Animation
  //

  .button.is-loading {
    // stylelint-disable-next-line declaration-no-important
    color: transparent !important;
    pointer-events: none;
    @include before-absolute {
      top: calc(50% - (1em / 2));
      left: calc(50% - (1em / 2));
      width: 1rem;
      height: 1rem;
      content: "";
      border: .15rem solid;
      border-color: transparent transparent $button-theme-default $button-theme-default;
      border-radius: $border-radius-pill;
      // avoid using @mixin animation to generate radius independent of `$enable-transitions` option
      animation: spin 1s infinite linear;
      @include include-keyframe(spin);
    }
  }

  //
  // Block
  //

  .button.is-block {
    width: 100%;
  }

  //
  // Round Circle
  //

  // useful for button with only icons
  .button.is-circle {
    padding: .375em;
  }
}
