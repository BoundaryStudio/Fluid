//
// Buttons Mixin
//

// Todo : add soft shadow design buttons
// Todo : add raised design buttons
// Todo : add Ghost design buttons

//
// Sizing Mixin
//

@mixin button-sizing($padding-y, $padding-x, $border-radius) {
  padding: $padding-y $padding-x;
  @include border-radius($border-radius);
}

//
// Theme Variants Mixin
//

// Solid button
@mixin button-design-solid-varient($color) {
  $hover-background: clr-step($color, 2);
  $focus-background: clr-step($color, -2);
  $active-background: clr-step($color, 4);

  // to avoid adding extra color override
  color: if(clr-auto($color) != clr-auto($button-theme-default) or clr-auto($color) != clr-auto($gray-900), clr-auto($color), null);
  @include gradient-bg($color, 180deg);

  @include hover {
    // to avoid adding extra color override
    color: if(clr-auto($color) != clr-auto($button-theme-default) or clr-auto($color) != clr-auto($gray-900), clr-auto($hover-background), null);
    box-shadow: 0 0 0 $button-focus-width rgba($color, .5);
    @include gradient-bg($hover-background, 180deg);
  }

  @include focus {
    // to avoid adding extra color override
    color: if(clr-auto($color) != clr-auto($button-theme-default) or clr-auto($color) != clr-auto($gray-900), clr-auto($focus-background), null);
    @include gradient-bg($focus-background, 180deg);
  }

  @include active {
    // to avoid adding extra color override
    color: if(clr-auto($color) != clr-auto($button-theme-default) or clr-auto($color) != clr-auto($gray-900), clr-auto($active-background), null);
    @if $design-solid-else-gradients {
      background-color: $active-background;
    }
  }

  &.is-loading {
    @include loading-spinner-color(clr-auto($color));
  }
}

// outline button
@mixin button-design-outline-varient($color) {
  border-color: $color;
  color: $color;
  $hover-border: clr-step($color, 2);
  $active-border: clr-step($color, 4);

  @include hover {
    box-shadow: 0 0 0 $button-focus-width rgba($color, .5);
  }

  @include focus {
    background-color: rgba($color, .25);
  }

  @include hover-focus {
    color: $hover-border;
  }

  @include active {
    border-color: $active-border;
    color: $active-border;
  }

  &.is-loading {
    @include loading-spinner-color($color);
  }
}

// minimal button
@mixin button-design-minimal-varient($color) {
  color: $color;

  @include after {
    border-bottom-color: $color;
  }

  @include hover {
    @include after {
      box-shadow: 0 (-($button-focus-width / 4)) 0 $button-focus-width / 4 rgba($color, .5);
    }
  }

  &.is-loading {
    @include loading-spinner-color($color);
  }
}
