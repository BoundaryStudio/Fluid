//
// DOC : Add Documentation
//

@mixin generate-style($config) {
  $properties: map-get($config, "properties");
  $values: to-map(map-get($config, "values"));
  $selector: map-get($config, "selector");
  $infixes: map-has-key($config, "infixes") and map-get($config, "infixes");
  $responsive: map-has-key($config, responsive) and map-get($config, responsive) == true;
  $enable-important-values: map-has-key($config, "enable-important-values") and map-get($config, "enable-important-values");
  $disable-prefix-values-keys: map-has-key($config, "disable-prefix-values-keys") and map-get($config, "disable-prefix-values-keys");
  $disable-prefix-infixes-keys: map-has-key($config, "disable-prefix-infixes-keys") and map-get($config, "disable-prefix-infixes-keys");
  $disable-prefix-infixes-values: map-has-key($config, "disable-prefix-infixes-values") and map-get($config, "disable-prefix-infixes-values");

  @each $breakpoint in map-keys( if($responsive, $breakpoints, (null: null)) ) {
    @include media-breakpoint-above($breakpoint) {
      $infixes: to-map(if($infixes, $infixes, null));
      @each $infix-key, $infix-value in $infixes {
        @if not $disable-prefix-infixes-keys {
          $infix-key: prefix($infix-key, "-");
        }

        @if not $disable-prefix-infixes-values {
          $infix-value: prefix($infix-value, "-");
        }

        $breakpoint-suffix: prefix(breakpoint-name($breakpoint), "\\"+ $breakpoints-prefix);

        @each $key, $value in $values {
          @if not $disable-prefix-values-keys {
            $key: prefix($key, "-");
          }

          .#{$selector}#{$infix-key}#{$key}#{$breakpoint-suffix} {
            @each $property in $properties {
              $enable-important-values: if($enable-important-values, !important, null);
              #{$property}#{$infix-value}: $value $enable-important-values;
            }
          }
        }
      }
    }
  }
}
