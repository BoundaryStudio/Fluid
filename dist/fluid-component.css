@charset "UTF-8";
/**
 * Fluid Components v0.20.0
 * Copyright (c) 2019-2027 Fluid Framework
 * Copyright (c) 2019-2027 Ashfahan
 * Licensed under MIT (https://github.com/fluid-framework/Fluid/blob/master/LICENSE)
*/
.dropdown-trigger.active ~ .menu, .dropdown.on-hover .dropdown.hover > .menu, .dropdown.on-hover .dropdown:hover > .menu, .dropdown.on-hover.hover > .menu, .dropdown.on-hover:hover > .menu, .list > li, .list.is-inline, .control.is-valid > .feedback.is-valid, .control.is-invalid > .feedback.is-invalid, .is-validated .control > .file:required:valid ~ .feedback.is-valid,
.is-validated .control > .input:required:valid ~ .feedback.is-valid, .is-validated .control > .file:required:invalid ~ .feedback.is-invalid,
.is-validated .control > .input:required:invalid ~ .feedback.is-invalid, .is-validated .control > input[type="checkbox"]:required:checked ~ .feedback.is-valid, .is-validated .control > input[type="checkbox"]:required:not(:checked) ~ .feedback.is-invalid {
  display: block;
}

.dropdown, .list.is-inline > li {
  display: inline-block;
}

.dropdown {
  position: relative;
}

.btn:not([disabled]):not(:disabled), .menu-item:not([disabled]):not(:disabled) {
  cursor: pointer;
}

.control > .radio ~ .label::before, .control > .checkbox ~ .label::before, .control > .switch ~ .label::before, .input, .btn, .range, .menu-item, .addon {
  position: relative;
  display: inline-block;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  padding: 0.375em 0.75em;
  border: 1px solid transparent;
  border-radius: 0.25em;
  color: #474747;
  background-color: transparent;
  vertical-align: middle;
  text-decoration: none;
  font-weight: 400;
  line-height: 1.5;
  font-size: 1rem;
  transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border 0.15s ease-in-out,box-shadow 0.15s ease-in-out;
}

.control > .radio ~ .label:not([disabled]):not(:disabled).active::before, .control > .checkbox ~ .label:not([disabled]):not(:disabled).active::before, .control > .switch ~ .label:not([disabled]):not(:disabled).active::before, .input:not([disabled]):not(:disabled).active, .btn:not([disabled]):not(:disabled).active, .control > .radio ~ .label:not([disabled]):not(:disabled):active::before, .control > .checkbox ~ .label:not([disabled]):not(:disabled):active::before, .control > .switch ~ .label:not([disabled]):not(:disabled):active::before, .input:not([disabled]):not(:disabled):active, .btn:not([disabled]):not(:disabled):active {
  -webkit-animation: none;
          animation: none;
  box-shadow: none;
}

.control > .radio ~ .hover.label::before, .control > .checkbox ~ .hover.label::before, .control > .switch ~ .hover.label::before, .hover.btn, .control > .radio ~ .label:hover::before, .control > .checkbox ~ .label:hover::before, .control > .switch ~ .label:hover::before, .btn:hover {
  box-shadow: 0 0 0 0.2rem rgba(99, 99, 99, 0.5);
}

.control > .radio ~ .focus.label::before, .control > .checkbox ~ .focus.label::before, .control > .switch ~ .focus.label::before, .focus.input, .focus.btn, .control > .radio ~ .label:focus::before, .control > .checkbox ~ .label:focus::before, .control > .switch ~ .label:focus::before, .input:focus, .btn:focus {
  -webkit-animation: ripple 1s ease-out both;
          animation: ripple 1s ease-out both;
  outline: 0;
}

@-webkit-keyframes ripple {
  from {
    box-shadow: 0 0 0 0 currentColor;
  }
  75% {
    box-shadow: 0 0 0 0.3rem transparent;
  }
  76% {
    box-shadow: none;
  }
}

@keyframes ripple {
  from {
    box-shadow: 0 0 0 0 currentColor;
  }
  75% {
    box-shadow: 0 0 0 0.3rem transparent;
  }
  76% {
    box-shadow: none;
  }
}

.control > .radio:not([disabled]):not(:disabled).active ~ .label::before, .control > .checkbox:not([disabled]):not(:disabled).active ~ .label::before, .control > .switch:not([disabled]):not(:disabled).active ~ .label::before, .control > .radio:not([disabled]):not(:disabled):active ~ .label::before, .control > .checkbox:not([disabled]):not(:disabled):active ~ .label::before, .control > .switch:not([disabled]):not(:disabled):active ~ .label::before {
  opacity: .5;
}

.control > .radio:checked ~ .label::before, .control > .checkbox:checked ~ .label::before, .control > .switch:checked ~ .label::before {
  border-color: currentColor;
  background: currentColor;
  -webkit-animation: none;
          animation: none;
}

.control > .focus.radio ~ .label::before, .control > .focus.checkbox ~ .label::before, .control > .focus.switch ~ .label::before, .control > .radio:focus ~ .label::before, .control > .checkbox:focus ~ .label::before, .control > .switch:focus ~ .label::before {
  -webkit-animation: ripple 1s ease-out both;
          animation: ripple 1s ease-out both;
}

.control > .radio ~ .label, .control > .checkbox ~ .label, .control > .switch ~ .label {
  position: relative;
  cursor: pointer;
  padding-left: 1.71429em;
  margin-bottom: 0;
}

.control > .radio ~ .label :not(:empty), .control > .checkbox ~ .label :not(:empty), .control > .switch ~ .label :not(:empty) {
  padding-right: .5rem;
  padding-left: 1.71429em;
}

.control > .radio ~ .label::before, .control > .checkbox ~ .label::before, .control > .switch ~ .label::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  width: 1.14286em;
  height: 1.14286em;
  padding: 0;
  border-color: #b8b8b8;
  background-color: #fff;
  font-size: inherit;
}

.control > .is-light.radio ~ .label::before, .control > .is-light.checkbox ~ .label::before, .control > .is-light.switch ~ .label::before {
  color: #f0f0f0;
}

.control > .is-dark.radio ~ .label::before, .control > .is-dark.checkbox ~ .label::before, .control > .is-dark.switch ~ .label::before {
  color: #474747;
}

.control > .is-primary.radio ~ .label::before, .control > .is-primary.checkbox ~ .label::before, .control > .is-primary.switch ~ .label::before {
  color: #805ad5;
}

.control > .is-secondary.radio ~ .label::before, .control > .is-secondary.checkbox ~ .label::before, .control > .is-secondary.switch ~ .label::before {
  color: gray;
}

.control > .is-info.radio ~ .label::before, .control > .is-info.checkbox ~ .label::before, .control > .is-info.switch ~ .label::before {
  color: #13c2c2;
}

.control > .is-warn.radio ~ .label::before, .control > .is-warn.checkbox ~ .label::before, .control > .is-warn.switch ~ .label::before {
  color: #fadb14;
}

.control > .is-valid.radio ~ .label::before, .control > .is-valid.checkbox ~ .label::before, .control > .is-valid.switch ~ .label::before {
  color: #52c41a;
}

.control > .is-error.radio ~ .label::before, .control > .is-error.checkbox ~ .label::before, .control > .is-error.switch ~ .label::before {
  color: #f5222d;
}

.control > .radio[disabled] ~ .label, .control > .checkbox[disabled] ~ .label, .control > .switch[disabled] ~ .label, .control > .radio:disabled ~ .label, .control > .checkbox:disabled ~ .label, .control > .switch:disabled ~ .label {
  pointer-events: none;
  opacity: 0.5;
}

.control > .radio[disabled] ~ .label::before, .control > .checkbox[disabled] ~ .label::before, .control > .switch[disabled] ~ .label::before, .control > .radio:disabled ~ .label::before, .control > .checkbox:disabled ~ .label::before, .control > .switch:disabled ~ .label::before {
  color: #b8b8b8 !important;
}

.control > .file, .control > .radio, .control > .checkbox, .control > .switch {
  position: absolute;
  z-index: -1;
  opacity: 0;
}

.input[disabled], .input:disabled, textarea.input:-moz-read-only,
input.input:-moz-read-only, .btn[disabled], .btn:disabled, .range[disabled], .range:disabled, .menu-item[disabled], .menu-item:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.input[disabled], .input:disabled, textarea.input:read-only,
input.input:read-only, .btn[disabled], .btn:disabled, .range[disabled], .range:disabled, .menu-item[disabled], .menu-item:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.input.is-info.has-icon, .input.is-warn.has-icon, .input.is-valid.has-icon, .is-validated .input:required:valid, .is-validated .file:required:valid ~ .input.label, .input.is-error.has-icon, .is-validated .input:required:invalid, .is-validated .file:required:invalid ~ .input.label, select.input {
  padding-right: 2.5rem;
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 1.3rem 1.3rem;
}

.group:not(.is-y) > .control, .group:not(.is-y) > .input,
.group:not(.is-y) > .addon,
.group:not(.is-y) > .btn {
  margin-right: -0.5px;
  margin-left: -0.5px;
}

.group.is-y > .control, .group.is-y > .input,
.group.is-y > .addon,
.group.is-y > .btn {
  margin-top: -0.5px;
  margin-bottom: -0.5px;
}

.group.is-borderless.is-y > .control > .input, .group.is-borderless.is-y > .input,
.group.is-borderless.is-y > .addon,
.group.is-borderless.is-y > .btn {
  border-right: 0;
  border-left: 0;
}

.group.is-borderless:not(.is-y) > .control > .input, .group.is-borderless:not(.is-y) > .input,
.group.is-borderless:not(.is-y) > .addon,
.group.is-borderless:not(.is-y) > .btn {
  border-top: 0;
  border-bottom: 0;
}

.group.is-borderless.is-y > .control:first-child > .input, .group.is-borderless.is-y > .input:first-child,
.group.is-borderless.is-y > .addon:first-child,
.group.is-borderless.is-y > .btn:first-child {
  border-top: 0;
}

.group.is-borderless:not(.is-y) > .control:last-child > .input, .group.is-borderless:not(.is-y) > .input:last-child,
.group.is-borderless:not(.is-y) > .addon:last-child,
.group.is-borderless:not(.is-y) > .btn:last-child {
  border-right: 0;
}

.group.is-borderless.is-y > .control:last-child > .input, .group.is-borderless.is-y > .input:last-child,
.group.is-borderless.is-y > .addon:last-child,
.group.is-borderless.is-y > .btn:last-child {
  border-bottom: 0;
}

.group.is-borderless:not(.is-y) > .control:first-child > .input, .group.is-borderless:not(.is-y) > .input:first-child,
.group.is-borderless:not(.is-y) > .addon:first-child,
.group.is-borderless:not(.is-y) > .btn:first-child {
  border-left: 0;
}

.group:not(.is-y) > .control > .input, .group:not(.is-y) > .input,
.group:not(.is-y) > .addon,
.group:not(.is-y) > .btn, .group.is-y > .control > .input, .group.is-y > .input,
.group.is-y > .addon,
.group.is-y > .btn, .group.is-borderless:not(.is-y) > .control > .input, .group.is-borderless:not(.is-y) > .input,
.group.is-borderless:not(.is-y) > .addon,
.group.is-borderless:not(.is-y) > .btn, .group.is-borderless.is-y > .control > .input, .group.is-borderless.is-y > .input,
.group.is-borderless.is-y > .addon,
.group.is-borderless.is-y > .btn {
  border-radius: 0;
}

.group.is-y > .control:first-child > .input:not(.is-min), .group.is-y > .input:first-child:not(.is-min),
.group.is-y > .addon:first-child:not(.is-min),
.group.is-y > .btn:first-child:not(.is-min) {
  border-top-left-radius: 0.25em;
  border-top-right-radius: 0.25em;
}

.group:not(.is-y) > .control:last-child > .input:not(.is-min), .group:not(.is-y) > .input:last-child:not(.is-min),
.group:not(.is-y) > .addon:last-child:not(.is-min),
.group:not(.is-y) > .btn:last-child:not(.is-min) {
  border-top-right-radius: 0.25em;
  border-bottom-right-radius: 0.25em;
}

.group.is-y > .control:last-child > .input:not(.is-min), .group.is-y > .input:last-child:not(.is-min),
.group.is-y > .addon:last-child:not(.is-min),
.group.is-y > .btn:last-child:not(.is-min) {
  border-bottom-right-radius: 0.25em;
  border-bottom-left-radius: 0.25em;
}

.group:not(.is-y) > .control:first-child > .input:not(.is-min), .group:not(.is-y) > .input:first-child:not(.is-min),
.group:not(.is-y) > .addon:first-child:not(.is-min),
.group:not(.is-y) > .btn:first-child:not(.is-min) {
  border-top-left-radius: 0.25em;
  border-bottom-left-radius: 0.25em;
}

.dropdown.on-hover .dropdown > .menu::before, .dropdown.on-hover > .menu::before {
  content: "";
  position: absolute;
  top: -0.25em;
  right: -0.25em;
  bottom: -0.25em;
  left: -0.25em;
  z-index: -1;
}

.input {
  width: 100%;
  border-color: #b8b8b8;
  background-color: #fff;
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1);
}

.input.hover, .input:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(99, 99, 99, 0.5);
}

.input.focus, .input:focus {
  border-color: currentColor;
  box-shadow: none;
}

.input.is-min {
  padding-bottom: 0.30357em;
  border-width: 0;
  border-bottom-width: 3px;
  border-radius: 0;
}

.input.is-min:not(.hover):not(:hover) {
  box-shadow: none;
}

.input.is-light {
  border-color: rgba(240, 240, 240, 0.5);
  color: #f0f0f0;
}

.input.is-light.hover, .input.is-light:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(240, 240, 240, 0.5);
}

.control > .input.is-light ~ .icon {
  color: #f0f0f0;
}

.control.has-floating-label > .input.is-light ~ .label {
  color: #f0f0f0;
}

.input.is-dark {
  border-color: rgba(71, 71, 71, 0.5);
  color: #474747;
}

.input.is-dark.hover, .input.is-dark:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(71, 71, 71, 0.5);
}

.control > .input.is-dark ~ .icon {
  color: #474747;
}

.control.has-floating-label > .input.is-dark ~ .label {
  color: #474747;
}

.input.is-primary {
  border-color: rgba(128, 90, 213, 0.5);
  color: #805ad5;
}

.input.is-primary.hover, .input.is-primary:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(128, 90, 213, 0.5);
}

.control > .input.is-primary ~ .icon {
  color: #805ad5;
}

.control.has-floating-label > .input.is-primary ~ .label {
  color: #805ad5;
}

.input.is-secondary {
  border-color: rgba(128, 128, 128, 0.5);
  color: gray;
}

.input.is-secondary.hover, .input.is-secondary:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(128, 128, 128, 0.5);
}

.control > .input.is-secondary ~ .icon {
  color: gray;
}

.control.has-floating-label > .input.is-secondary ~ .label {
  color: gray;
}

.input.is-info {
  border-color: rgba(19, 194, 194, 0.5);
  color: #13c2c2;
}

.input.is-info.hover, .input.is-info:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(19, 194, 194, 0.5);
}

.input.is-info.has-icon {
  background-image: url("data:image/svg+xml,%3Csvg style='stroke:%2313c2c2;stroke-linecap:round;stroke-linejoin:round;fill:none;stroke-width:1.7;fill-rule:evenodd' viewbox='0 0 21 21' xmlns='http://www.w3.org/2000/svg'%3E%3Cg%3E%3Ccircle cx='9' cy='9' r='8'/%3E%3Cpath d='m9 13.67v-5.48'/%3E%3Ccircle cx='9' cy='5.4' r='.43' stroke-width='0.85'/%3E%3C/g%3E%3C/svg%3E");
}

.control > .input.is-info ~ .icon {
  color: #13c2c2;
}

.control.has-floating-label > .input.is-info ~ .label {
  color: #13c2c2;
}

.input.is-warn {
  border-color: rgba(250, 219, 20, 0.5);
  color: #fadb14;
}

.input.is-warn.hover, .input.is-warn:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(250, 219, 20, 0.5);
}

.input.is-warn.has-icon {
  background-image: url("data:image/svg+xml,%3Csvg style='stroke:%23fadb14;stroke-linecap:round;stroke-linejoin:round;fill:none;stroke-width:1.7;fill-rule:evenodd' viewbox='0 0 21 21' xmlns='http://www.w3.org/2000/svg'%3E%3Cg%3E%3Cpath d='m9 7v4.2'/%3E%3Ccircle cx='9' cy='13.67' r='.43' stroke-width='0.85'/%3E%3Cpath d='m10.45 2.52-8.83 15.37h17.67z' stroke-width='2' transform='matrix(.87 0 0 .87 -.06 .1)'/%3E%3C/g%3E%3C/svg%3E");
}

.control > .input.is-warn ~ .icon {
  color: #fadb14;
}

.control.has-floating-label > .input.is-warn ~ .label {
  color: #fadb14;
}

.input.is-valid, .is-validated .input:required:valid, .is-validated .file:required:valid ~ .input.label {
  border-color: rgba(82, 196, 26, 0.5);
  color: #52c41a;
}

.input.is-valid.hover, .is-validated .hover.input:required:valid, .is-validated .file:required:valid ~ .hover.input.label, .input.is-valid:hover, .is-validated .input:hover:required:valid, .is-validated .file:required:valid ~ .input.label:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(82, 196, 26, 0.5);
}

.input.is-valid.has-icon, .is-validated .input:required:valid, .is-validated .file:required:valid ~ .input.label {
  background-image: url("data:image/svg+xml,%3Csvg style='stroke:%2352c41a;stroke-linecap:round;stroke-linejoin:round;fill:none;stroke-width:2;fill-rule:evenodd' viewbox='0 0 21 21' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m15.71 4.55-9 9-4.13-4.13'/%3E%3C/svg%3E");
}

.control > .input.is-valid ~ .icon, .is-validated .control > .input:required:valid ~ .icon, .is-validated .control > .file:required:valid ~ .input.label ~ .icon {
  color: #52c41a;
}

.control.has-floating-label > .input.is-valid ~ .label, .is-validated .control.has-floating-label > .input:required:valid ~ .label, .is-validated .control.has-floating-label > .file:required:valid ~ .input.label ~ .label {
  color: #52c41a;
}

.input.is-error, .is-validated .input:required:invalid, .is-validated .file:required:invalid ~ .input.label {
  border-color: rgba(245, 34, 45, 0.5);
  color: #f5222d;
}

.input.is-error.hover, .is-validated .hover.input:required:invalid, .is-validated .file:required:invalid ~ .hover.input.label, .input.is-error:hover, .is-validated .input:hover:required:invalid, .is-validated .file:required:invalid ~ .input.label:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(245, 34, 45, 0.5);
}

.input.is-error.has-icon, .is-validated .input:required:invalid, .is-validated .file:required:invalid ~ .input.label {
  background-image: url("data:image/svg+xml,%3Csvg style='stroke:%23f5222d;stroke-linecap:round;stroke-linejoin:round;fill:none;stroke-width:2;fill-rule:evenodd' viewbox='0 0 21 21' xmlns='http://www.w3.org/2000/svg'%3E%3Cg%3E%3Cpath d='m3.88 3.88 10.42 10.42'/%3E%3Cpath d='m14.3 3.88-10.42 10.42'/%3E%3C/g%3E%3C/svg%3E");
}

.control > .input.is-error ~ .icon, .is-validated .control > .input:required:invalid ~ .icon, .is-validated .control > .file:required:invalid ~ .input.label ~ .icon {
  color: #f5222d;
}

.control.has-floating-label > .input.is-error ~ .label, .is-validated .control.has-floating-label > .input:required:invalid ~ .label, .is-validated .control.has-floating-label > .file:required:invalid ~ .input.label ~ .label {
  color: #f5222d;
}

select.input {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg style='stroke:%23636363;stroke-linecap:round;stroke-linejoin:round;fill:none;stroke-width:1.7;fill-rule:evenodd' viewbox='0 0 21 21' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m4.75 7.12 4.75 4.75 4.75-4.75'/%3E%3C/svg%3E");
}

select.input[multiple], select.input[size]:not([size="1"]) {
  padding-right: 0.375em;
  background-image: none;
}

select.input::-ms-expand {
  display: none;
}

select.input::-ms-value {
  color: #474747;
  background: #fff;
}

.input::-ms-clear {
  color: #636363;
}

.input::-webkit-input-placeholder {
  opacity: 1;
  color: #b8b8b8;
}

.input::-moz-placeholder {
  opacity: 1;
  color: #b8b8b8;
}

.input:-ms-input-placeholder {
  opacity: 1;
  color: #b8b8b8;
}

.input::-ms-input-placeholder {
  opacity: 1;
  color: #b8b8b8;
}

.input::placeholder {
  opacity: 1;
  color: #b8b8b8;
}

textarea.input {
  height: auto;
  min-height: 2.4em;
}

.control > .input {
  font-size: inherit;
  display: flex;
  align-items: center;
  height: 100%;
}

.control.has-icon-left > .input ~ .icon {
  z-index: 11;
  pointer-events: none;
  opacity: 0.5;
}

.control.has-icon-left > .input.focus ~ .icon, .control.has-icon-left > .input:focus ~ .icon {
  opacity: 1;
}

.control.has-floating-label > .input[placeholder=" "] ~ .label {
  position: absolute;
  top: 50%;
  left: 0.75rem;
  transform: translateY(-50%);
  pointer-events: none;
  padding: 2px;
  background-color: #fff;
  line-height: 1;
  transition: top 0.15s ease-in-out,font-size 0.15s ease-in-out;
}

.control.has-floating-label > .input[placeholder=" "]:not(:placeholder-shown) ~ .label, .control.has-floating-label > .input[placeholder=" "].focus ~ .label, .control.has-floating-label > .input[placeholder=" "]:focus ~ .label {
  top: 0%;
  font-size: 0.75em;
}

.control.has-floating-label > .input[placeholder=" "]:not(:-ms-input-placeholder) ~ .label {
  top: 0%;
  font-size: 0.75em;
}

.btn {
  text-align: center;
}

.btn.is-sld {
  color: #fff;
  background-color: #636363;
}

.btn.is-sld.focus, .btn.is-sld:focus {
  background-color: #838383;
}

.btn.is-sld:not([disabled]):not(:disabled).active, .btn.is-sld:not([disabled]):not(:disabled):active {
  color: #fff;
  background-color: #3c3c3c;
}

.btn.is-sld.is-loading::before {
  color: #fff;
}

.btn.is-sld.is-light {
  color: #0f0f0f;
  background-color: #f0f0f0;
}

.btn.is-sld.is-light.hover, .btn.is-sld.is-light:hover {
  box-shadow: 0 0 0 0.2rem rgba(240, 240, 240, 0.5);
}

.btn.is-sld.is-light.focus, .btn.is-sld.is-light:focus {
  background-color: #f3f3f3;
}

.btn.is-sld.is-light:not([disabled]):not(:disabled).active, .btn.is-sld.is-light:not([disabled]):not(:disabled):active {
  color: #0f0f0f;
  background-color: #909090;
}

.btn.is-sld.is-light.is-loading::before {
  color: #0f0f0f;
}

.btn.is-sld.is-dark {
  background-color: #474747;
}

.btn.is-sld.is-dark.hover, .btn.is-sld.is-dark:hover {
  box-shadow: 0 0 0 0.2rem rgba(71, 71, 71, 0.5);
}

.btn.is-sld.is-dark.focus, .btn.is-sld.is-dark:focus {
  background-color: #6c6c6c;
}

.btn.is-sld.is-dark:not([disabled]):not(:disabled).active, .btn.is-sld.is-dark:not([disabled]):not(:disabled):active {
  background-color: #2b2b2b;
}

.btn.is-sld.is-primary {
  background-color: #805ad5;
}

.btn.is-sld.is-primary.hover, .btn.is-sld.is-primary:hover {
  box-shadow: 0 0 0 0.2rem rgba(128, 90, 213, 0.5);
}

.btn.is-sld.is-primary.focus, .btn.is-sld.is-primary:focus {
  background-color: #997bdd;
}

.btn.is-sld.is-primary:not([disabled]):not(:disabled).active, .btn.is-sld.is-primary:not([disabled]):not(:disabled):active {
  background-color: #4d3680;
}

.btn.is-sld.is-secondary {
  background-color: gray;
}

.btn.is-sld.is-secondary.hover, .btn.is-sld.is-secondary:hover {
  box-shadow: 0 0 0 0.2rem rgba(128, 128, 128, 0.5);
}

.btn.is-sld.is-secondary.focus, .btn.is-sld.is-secondary:focus {
  background-color: #999999;
}

.btn.is-sld.is-secondary:not([disabled]):not(:disabled).active, .btn.is-sld.is-secondary:not([disabled]):not(:disabled):active {
  background-color: #4d4d4d;
}

.btn.is-sld.is-info {
  color: #0f0f0f;
  background-color: #13c2c2;
}

.btn.is-sld.is-info.hover, .btn.is-sld.is-info:hover {
  box-shadow: 0 0 0 0.2rem rgba(19, 194, 194, 0.5);
}

.btn.is-sld.is-info.focus, .btn.is-sld.is-info:focus {
  background-color: #42cece;
}

.btn.is-sld.is-info:not([disabled]):not(:disabled).active, .btn.is-sld.is-info:not([disabled]):not(:disabled):active {
  color: #fff;
  background-color: #0b7474;
}

.btn.is-sld.is-info.is-loading::before {
  color: #0f0f0f;
}

.btn.is-sld.is-warn {
  color: #0f0f0f;
  background-color: #fadb14;
}

.btn.is-sld.is-warn.hover, .btn.is-sld.is-warn:hover {
  box-shadow: 0 0 0 0.2rem rgba(250, 219, 20, 0.5);
}

.btn.is-sld.is-warn.focus, .btn.is-sld.is-warn:focus {
  background-color: #fbe243;
}

.btn.is-sld.is-warn:not([disabled]):not(:disabled).active, .btn.is-sld.is-warn:not([disabled]):not(:disabled):active {
  color: #fff;
  background-color: #96830c;
}

.btn.is-sld.is-warn.is-loading::before {
  color: #0f0f0f;
}

.btn.is-sld.is-valid {
  color: #0f0f0f;
  background-color: #52c41a;
}

.btn.is-sld.is-valid.hover, .btn.is-sld.is-valid:hover {
  box-shadow: 0 0 0 0.2rem rgba(82, 196, 26, 0.5);
}

.btn.is-sld.is-valid.focus, .btn.is-sld.is-valid:focus {
  background-color: #75d048;
}

.btn.is-sld.is-valid:not([disabled]):not(:disabled).active, .btn.is-sld.is-valid:not([disabled]):not(:disabled):active {
  color: #fff;
  background-color: #317610;
}

.btn.is-sld.is-valid.is-loading::before {
  color: #0f0f0f;
}

.btn.is-sld.is-error {
  color: #0f0f0f;
  background-color: #f5222d;
}

.btn.is-sld.is-error.hover, .btn.is-sld.is-error:hover {
  box-shadow: 0 0 0 0.2rem rgba(245, 34, 45, 0.5);
}

.btn.is-sld.is-error.focus, .btn.is-sld.is-error:focus {
  background-color: #f74e57;
}

.btn.is-sld.is-error:not([disabled]):not(:disabled).active, .btn.is-sld.is-error:not([disabled]):not(:disabled):active {
  color: #fff;
  background-color: #93141b;
}

.btn.is-sld.is-error.is-loading::before {
  color: #0f0f0f;
}

.btn.is-sld.focus, .btn.is-sld:focus {
  -webkit-animation: ripple-gray 1s ease-out both;
          animation: ripple-gray 1s ease-out both;
}

@-webkit-keyframes ripple-gray {
  from {
    box-shadow: 0 0 0 0 gray;
  }
  75% {
    box-shadow: 0 0 0 0.3rem transparent;
  }
  76% {
    box-shadow: none;
  }
}

@keyframes ripple-gray {
  from {
    box-shadow: 0 0 0 0 gray;
  }
  75% {
    box-shadow: 0 0 0 0.3rem transparent;
  }
  76% {
    box-shadow: none;
  }
}

.btn.is-sld[disabled], .btn.is-sld:disabled {
  color: #fff;
  background: #636363;
}

.btn.is-out {
  border-color: #b8b8b8;
  color: #636363;
}

.btn.is-out.hover, .btn.is-out:hover {
  border-color: #636363;
  box-shadow: 0 0 0 0.2rem rgba(99, 99, 99, 0.5);
}

.btn.is-out.focus, .btn.is-out:focus {
  border-color: #636363;
  color: #636363;
}

.btn.is-out:not([disabled]):not(:disabled).active, .btn.is-out:not([disabled]):not(:disabled):active {
  border-color: #3c3c3c;
  color: #3c3c3c;
}

.btn.is-out.is-light.hover, .btn.is-out.is-light:hover {
  border-color: #f0f0f0;
  box-shadow: 0 0 0 0.2rem rgba(240, 240, 240, 0.5);
}

.btn.is-out.is-light.focus, .btn.is-out.is-light:focus {
  border-color: #f0f0f0;
  color: #f0f0f0;
}

.btn.is-out.is-light:not([disabled]):not(:disabled).active, .btn.is-out.is-light:not([disabled]):not(:disabled):active {
  border-color: #909090;
  color: #909090;
}

.btn.is-out.is-dark.hover, .btn.is-out.is-dark:hover {
  border-color: #474747;
  box-shadow: 0 0 0 0.2rem rgba(71, 71, 71, 0.5);
}

.btn.is-out.is-dark.focus, .btn.is-out.is-dark:focus {
  border-color: #474747;
  color: #474747;
}

.btn.is-out.is-dark:not([disabled]):not(:disabled).active, .btn.is-out.is-dark:not([disabled]):not(:disabled):active {
  border-color: #2b2b2b;
  color: #2b2b2b;
}

.btn.is-out.is-primary.hover, .btn.is-out.is-primary:hover {
  border-color: #805ad5;
  box-shadow: 0 0 0 0.2rem rgba(128, 90, 213, 0.5);
}

.btn.is-out.is-primary.focus, .btn.is-out.is-primary:focus {
  border-color: #805ad5;
  color: #805ad5;
}

.btn.is-out.is-primary:not([disabled]):not(:disabled).active, .btn.is-out.is-primary:not([disabled]):not(:disabled):active {
  border-color: #4d3680;
  color: #4d3680;
}

.btn.is-out.is-secondary.hover, .btn.is-out.is-secondary:hover {
  border-color: gray;
  box-shadow: 0 0 0 0.2rem rgba(128, 128, 128, 0.5);
}

.btn.is-out.is-secondary.focus, .btn.is-out.is-secondary:focus {
  border-color: gray;
  color: gray;
}

.btn.is-out.is-secondary:not([disabled]):not(:disabled).active, .btn.is-out.is-secondary:not([disabled]):not(:disabled):active {
  border-color: #4d4d4d;
  color: #4d4d4d;
}

.btn.is-out.is-info.hover, .btn.is-out.is-info:hover {
  border-color: #13c2c2;
  box-shadow: 0 0 0 0.2rem rgba(19, 194, 194, 0.5);
}

.btn.is-out.is-info.focus, .btn.is-out.is-info:focus {
  border-color: #13c2c2;
  color: #13c2c2;
}

.btn.is-out.is-info:not([disabled]):not(:disabled).active, .btn.is-out.is-info:not([disabled]):not(:disabled):active {
  border-color: #0b7474;
  color: #0b7474;
}

.btn.is-out.is-warn.hover, .btn.is-out.is-warn:hover {
  border-color: #fadb14;
  box-shadow: 0 0 0 0.2rem rgba(250, 219, 20, 0.5);
}

.btn.is-out.is-warn.focus, .btn.is-out.is-warn:focus {
  border-color: #fadb14;
  color: #fadb14;
}

.btn.is-out.is-warn:not([disabled]):not(:disabled).active, .btn.is-out.is-warn:not([disabled]):not(:disabled):active {
  border-color: #96830c;
  color: #96830c;
}

.btn.is-out.is-valid.hover, .btn.is-out.is-valid:hover {
  border-color: #52c41a;
  box-shadow: 0 0 0 0.2rem rgba(82, 196, 26, 0.5);
}

.btn.is-out.is-valid.focus, .btn.is-out.is-valid:focus {
  border-color: #52c41a;
  color: #52c41a;
}

.btn.is-out.is-valid:not([disabled]):not(:disabled).active, .btn.is-out.is-valid:not([disabled]):not(:disabled):active {
  border-color: #317610;
  color: #317610;
}

.btn.is-out.is-error.hover, .btn.is-out.is-error:hover {
  border-color: #f5222d;
  box-shadow: 0 0 0 0.2rem rgba(245, 34, 45, 0.5);
}

.btn.is-out.is-error.focus, .btn.is-out.is-error:focus {
  border-color: #f5222d;
  color: #f5222d;
}

.btn.is-out.is-error:not([disabled]):not(:disabled).active, .btn.is-out.is-error:not([disabled]):not(:disabled):active {
  border-color: #93141b;
  color: #93141b;
}

.btn.is-out[disabled], .btn.is-out:disabled {
  border-color: #636363;
  color: #636363;
}

.btn.is-min {
  border-right: 0;
  border-bottom-color: #b8b8b8;
  border-left: 0;
  border-radius: 0;
  box-shadow: none;
}

.btn.is-min::before {
  content: "";
  position: absolute;
  right: 0;
  bottom: -1px;
  left: 50%;
  transform: translateX(-50%);
  width: 0;
  border-bottom: 2px solid;
  transition: width 0.15s ease-in-out,border-bottom-color 0.15s ease-in-out;
}

.btn.is-min.hover, .btn.is-min:hover, .btn.is-min.focus, .btn.is-min:focus {
  color: #636363;
}

.btn.is-min.hover::before, .btn.is-min:hover::before, .btn.is-min.focus::before, .btn.is-min:focus::before {
  border-bottom-color: #636363;
}

.btn.is-min:not([disabled]):not(:disabled).active, .btn.is-min:not([disabled]):not(:disabled):active {
  color: #3c3c3c;
}

.btn.is-min:not([disabled]):not(:disabled).active::before, .btn.is-min:not([disabled]):not(:disabled):active::before {
  border-bottom-color: #3c3c3c;
}

.btn.is-min.is-loading::before {
  color: #636363;
}

.btn.is-min.is-light.hover, .btn.is-min.is-light:hover, .btn.is-min.is-light.focus, .btn.is-min.is-light:focus {
  color: #f0f0f0;
}

.btn.is-min.is-light.hover::before, .btn.is-min.is-light:hover::before, .btn.is-min.is-light.focus::before, .btn.is-min.is-light:focus::before {
  border-bottom-color: #f0f0f0;
}

.btn.is-min.is-light:not([disabled]):not(:disabled).active, .btn.is-min.is-light:not([disabled]):not(:disabled):active {
  color: #909090;
}

.btn.is-min.is-light:not([disabled]):not(:disabled).active::before, .btn.is-min.is-light:not([disabled]):not(:disabled):active::before {
  border-bottom-color: #909090;
}

.btn.is-min.is-light.is-loading::before {
  color: #f0f0f0;
}

.btn.is-min.is-dark.hover, .btn.is-min.is-dark:hover, .btn.is-min.is-dark.focus, .btn.is-min.is-dark:focus {
  color: #474747;
}

.btn.is-min.is-dark.hover::before, .btn.is-min.is-dark:hover::before, .btn.is-min.is-dark.focus::before, .btn.is-min.is-dark:focus::before {
  border-bottom-color: #474747;
}

.btn.is-min.is-dark:not([disabled]):not(:disabled).active, .btn.is-min.is-dark:not([disabled]):not(:disabled):active {
  color: #2b2b2b;
}

.btn.is-min.is-dark:not([disabled]):not(:disabled).active::before, .btn.is-min.is-dark:not([disabled]):not(:disabled):active::before {
  border-bottom-color: #2b2b2b;
}

.btn.is-min.is-dark.is-loading::before {
  color: #474747;
}

.btn.is-min.is-primary.hover, .btn.is-min.is-primary:hover, .btn.is-min.is-primary.focus, .btn.is-min.is-primary:focus {
  color: #805ad5;
}

.btn.is-min.is-primary.hover::before, .btn.is-min.is-primary:hover::before, .btn.is-min.is-primary.focus::before, .btn.is-min.is-primary:focus::before {
  border-bottom-color: #805ad5;
}

.btn.is-min.is-primary:not([disabled]):not(:disabled).active, .btn.is-min.is-primary:not([disabled]):not(:disabled):active {
  color: #4d3680;
}

.btn.is-min.is-primary:not([disabled]):not(:disabled).active::before, .btn.is-min.is-primary:not([disabled]):not(:disabled):active::before {
  border-bottom-color: #4d3680;
}

.btn.is-min.is-primary.is-loading::before {
  color: #805ad5;
}

.btn.is-min.is-secondary.hover, .btn.is-min.is-secondary:hover, .btn.is-min.is-secondary.focus, .btn.is-min.is-secondary:focus {
  color: gray;
}

.btn.is-min.is-secondary.hover::before, .btn.is-min.is-secondary:hover::before, .btn.is-min.is-secondary.focus::before, .btn.is-min.is-secondary:focus::before {
  border-bottom-color: gray;
}

.btn.is-min.is-secondary:not([disabled]):not(:disabled).active, .btn.is-min.is-secondary:not([disabled]):not(:disabled):active {
  color: #4d4d4d;
}

.btn.is-min.is-secondary:not([disabled]):not(:disabled).active::before, .btn.is-min.is-secondary:not([disabled]):not(:disabled):active::before {
  border-bottom-color: #4d4d4d;
}

.btn.is-min.is-secondary.is-loading::before {
  color: gray;
}

.btn.is-min.is-info.hover, .btn.is-min.is-info:hover, .btn.is-min.is-info.focus, .btn.is-min.is-info:focus {
  color: #13c2c2;
}

.btn.is-min.is-info.hover::before, .btn.is-min.is-info:hover::before, .btn.is-min.is-info.focus::before, .btn.is-min.is-info:focus::before {
  border-bottom-color: #13c2c2;
}

.btn.is-min.is-info:not([disabled]):not(:disabled).active, .btn.is-min.is-info:not([disabled]):not(:disabled):active {
  color: #0b7474;
}

.btn.is-min.is-info:not([disabled]):not(:disabled).active::before, .btn.is-min.is-info:not([disabled]):not(:disabled):active::before {
  border-bottom-color: #0b7474;
}

.btn.is-min.is-info.is-loading::before {
  color: #13c2c2;
}

.btn.is-min.is-warn.hover, .btn.is-min.is-warn:hover, .btn.is-min.is-warn.focus, .btn.is-min.is-warn:focus {
  color: #fadb14;
}

.btn.is-min.is-warn.hover::before, .btn.is-min.is-warn:hover::before, .btn.is-min.is-warn.focus::before, .btn.is-min.is-warn:focus::before {
  border-bottom-color: #fadb14;
}

.btn.is-min.is-warn:not([disabled]):not(:disabled).active, .btn.is-min.is-warn:not([disabled]):not(:disabled):active {
  color: #96830c;
}

.btn.is-min.is-warn:not([disabled]):not(:disabled).active::before, .btn.is-min.is-warn:not([disabled]):not(:disabled):active::before {
  border-bottom-color: #96830c;
}

.btn.is-min.is-warn.is-loading::before {
  color: #fadb14;
}

.btn.is-min.is-valid.hover, .btn.is-min.is-valid:hover, .btn.is-min.is-valid.focus, .btn.is-min.is-valid:focus {
  color: #52c41a;
}

.btn.is-min.is-valid.hover::before, .btn.is-min.is-valid:hover::before, .btn.is-min.is-valid.focus::before, .btn.is-min.is-valid:focus::before {
  border-bottom-color: #52c41a;
}

.btn.is-min.is-valid:not([disabled]):not(:disabled).active, .btn.is-min.is-valid:not([disabled]):not(:disabled):active {
  color: #317610;
}

.btn.is-min.is-valid:not([disabled]):not(:disabled).active::before, .btn.is-min.is-valid:not([disabled]):not(:disabled):active::before {
  border-bottom-color: #317610;
}

.btn.is-min.is-valid.is-loading::before {
  color: #52c41a;
}

.btn.is-min.is-error.hover, .btn.is-min.is-error:hover, .btn.is-min.is-error.focus, .btn.is-min.is-error:focus {
  color: #f5222d;
}

.btn.is-min.is-error.hover::before, .btn.is-min.is-error:hover::before, .btn.is-min.is-error.focus::before, .btn.is-min.is-error:focus::before {
  border-bottom-color: #f5222d;
}

.btn.is-min.is-error:not([disabled]):not(:disabled).active, .btn.is-min.is-error:not([disabled]):not(:disabled):active {
  color: #93141b;
}

.btn.is-min.is-error:not([disabled]):not(:disabled).active::before, .btn.is-min.is-error:not([disabled]):not(:disabled):active::before {
  border-bottom-color: #93141b;
}

.btn.is-min.is-error.is-loading::before {
  color: #f5222d;
}

.btn.is-min:not([disabled]):not(:disabled).active::before, .btn.is-min:not([disabled]):not(:disabled):active::before {
  -webkit-animation: none;
          animation: none;
}

.btn.is-min.hover::before, .btn.is-min:hover::before, .btn.is-min.focus::before, .btn.is-min:focus::before, .btn.is-min:not([disabled]):not(:disabled).active::before, .btn.is-min:not([disabled]):not(:disabled):active::before {
  width: 100%;
}

.btn.is-min.focus, .btn.is-min:focus {
  -webkit-animation: none;
          animation: none;
  border-bottom-color: transparent;
}

.btn.is-min.focus::before, .btn.is-min:focus::before {
  -webkit-animation: flash 1s ease-out both;
          animation: flash 1s ease-out both;
}

@-webkit-keyframes flash {
  from,
  50% {
    opacity: 1;
  }
  25%,
  75% {
    opacity: 0;
  }
}

@keyframes flash {
  from,
  50% {
    opacity: 1;
  }
  25%,
  75% {
    opacity: 0;
  }
}

.btn.is-min[disabled], .btn.is-min:disabled {
  color: #636363;
}

.btn.is-min[disabled]::before, .btn.is-min:disabled::before {
  border-bottom-color: #636363;
}

.btn.is-loading {
  pointer-events: none;
  color: transparent !important;
  position: relative;
}

.btn.is-loading::before {
  content: "";
  position: absolute;
  top: calc(50% - (1em / 2));
  right: 0;
  bottom: 0;
  left: calc(50% - (1em / 2));
  transform: inherit;
  width: 1em;
  height: 1em;
  border: .15em solid currentColor;
  border-right-color: transparent;
  border-radius: 50%;
  -webkit-animation: spin 1s infinite linear;
          animation: spin 1s infinite linear;
  color: #636363;
}

@-webkit-keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

.btn.is-block {
  width: 100%;
}

.btn.is-circle {
  width: 2.35em;
  height: 2.35em;
  padding: 0;
}

.control > .file ~ .label {
  margin-bottom: 0;
}

.control > .radio:checked ~ .label::before {
  border-width: 0.35em;
  background-color: #fff;
}

.control > .radio ~ .label::before {
  border-radius: 50%;
}

.control > .checkbox:checked ~ .label::after {
  top: 45%;
  transform: translate(-50%, -50%) rotate(45deg);
  width: 0.28571em;
  height: 0.57143em;
  border: 0.12em solid #fff;
  border-top-width: 0;
  border-left-width: 0;
}

.control > .checkbox:indeterminate ~ .label::before {
  border-color: currentColor;
  background: currentColor;
}

.control > .checkbox:indeterminate ~ .label::after {
  content: "";
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 0.57143em;
  height: 2px;
  background: #fff;
}

.control > .checkbox ~ .label::after {
  content: "";
  position: absolute;
  left: 0.57143em;
}

.range {
  display: block;
  width: 100%;
  height: 1.5em;
  padding: 0;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
}

.range.focus, .range:focus {
  outline: 0;
}

.range::-webkit-slider-thumb {
  width: 1em;
  height: 1em;
  border: 1px solid currentColor;
  border-radius: 50%;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background: #fff;
  box-shadow: 1px 1px 2px 0 rgba(0, 0, 0, 0.15);
  transition: transform 0.15s ease-in-out,border 0.15s ease-in-out;
}

.range::-moz-range-thumb {
  width: 1em;
  height: 1em;
  border: 1px solid currentColor;
  border-radius: 50%;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background: #fff;
  box-shadow: 1px 1px 2px 0 rgba(0, 0, 0, 0.15);
  transition: transform 0.15s ease-in-out,border 0.15s ease-in-out;
}

.range::-ms-thumb {
  width: 1em;
  height: 1em;
  border: 1px solid currentColor;
  border-radius: 50%;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background: #fff;
  box-shadow: 1px 1px 2px 0 rgba(0, 0, 0, 0.15);
  transition: transform 0.15s ease-in-out,border 0.15s ease-in-out;
}

.range.hover::-webkit-slider-thumb, .range:hover::-webkit-slider-thumb {
  transform: scale(1.1);
  border-width: 3px;
}

.range.hover::-moz-range-thumb, .range:hover::-moz-range-thumb {
  transform: scale(1.1);
  border-width: 3px;
}

.range.hover::-ms-thumb, .range:hover::-ms-thumb {
  transform: scale(1.1);
  border-width: 3px;
}

.range::-moz-range-track {
  display: flex;
  align-items: center;
  width: 100%;
  height: 0.22rem;
  margin: 0;
  border: 0;
  border-radius: 50em;
  background-color: #b8b8b8;
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.2);
  transition: background 0.15s ease-in-out;
}

.range::-webkit-slider-runnable-track {
  display: flex;
  align-items: center;
  width: 100%;
  height: 0.22rem;
  margin: 0;
  border: 0;
  border-radius: 50em;
  background-color: #b8b8b8;
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.2);
  transition: background 0.15s ease-in-out;
}

.range::-ms-track {
  color: transparent;
  display: flex;
  align-items: center;
  width: 100%;
  height: 0.22rem;
  margin: 0;
  border: 0;
  border-radius: 50em;
  background-color: #b8b8b8;
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.2);
  transition: background 0.15s ease-in-out;
}

.range::-ms-fill-lower {
  background: #636363;
}

.range.focus::-moz-range-track, .range:focus::-moz-range-track, .range:not([disabled]):not(:disabled).active::-moz-range-track, .range:not([disabled]):not(:disabled):active::-moz-range-track {
  background-color: currentColor;
}

.range.focus::-webkit-slider-runnable-track, .range:focus::-webkit-slider-runnable-track, .range:not([disabled]):not(:disabled).active::-webkit-slider-runnable-track, .range:not([disabled]):not(:disabled):active::-webkit-slider-runnable-track {
  background-color: currentColor;
}

.range.focus::-ms-fill-lower, .range:focus::-ms-fill-lower, .range:not([disabled]):not(:disabled).active::-ms-fill-lower, .range:not([disabled]):not(:disabled):active::-ms-fill-lower {
  color: inherit;
  background: currentColor;
}

.range.is-light {
  color: #f0f0f0;
}

.range.is-dark {
  color: #474747;
}

.range.is-primary {
  color: #805ad5;
}

.range.is-secondary {
  color: gray;
}

.range.is-info {
  color: #13c2c2;
}

.range.is-warn {
  color: #fadb14;
}

.range.is-valid {
  color: #52c41a;
}

.range.is-error {
  color: #f5222d;
}

.control > .switch:checked ~ .label::after {
  left: 1.14286em;
  background-color: #fff;
}

.control > .switch ~ .label {
  padding-left: 2.85714em;
}

.control > .switch ~ .label::before {
  width: 2.28571em;
  border-radius: 50em;
}

.control > .switch ~ .label::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%) scale(0.7);
  width: 1.14286em;
  height: 1.14286em;
  border-radius: 50%;
  background: #b8b8b8;
  transition: left 0.2s ease-in-out,background-color 0.2s ease-in-out;
}

.menu {
  display: block;
  padding: 0;
  margin: 0;
  font-size: 1rem;
}

.menu .menu-item.hover, .menu .menu-item:hover, .menu .menu-item.focus, .menu .menu-item:focus {
  border-color: #636363;
  background-color: #e0e0e0;
}

.menu .menu-item.active {
  color: #fff;
  background-color: #636363;
}

.menu-item {
  display: block;
  width: 100%;
  padding-left: 1.5em;
  border: 0;
  border-radius: 0;
  color: inherit;
  text-align: inherit;
  font-size: inherit;
}

.menu-item::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  border-left: 0 solid;
  border-left-color: inherit;
  transition: border-width 0.15s linear,border-color 1s cubic-bezier(1, 0, 1, 0);
}

.menu-item:not(.active).hover::before, .menu-item:not(.active):hover::before, .menu-item:not(.active).focus::before, .menu-item:not(.active):focus::before {
  transition: border-width 0.15s linear;
  border-left-width: 3px;
}

.menu-item.hover, .menu-item:hover {
  text-decoration: none;
}

.menu-item.focus, .menu-item:focus {
  outline: 0;
}

.menu.is-light .menu-item.hover, .menu.is-light .menu-item:hover, .menu.is-light .menu-item.focus, .menu.is-light .menu-item:focus {
  border-color: #f0f0f0;
  background-color: #fcfcfc;
}

.menu.is-light .menu-item.active {
  color: #0f0f0f;
  background-color: #f0f0f0;
}

.menu.is-dark .menu-item.hover, .menu.is-dark .menu-item:hover, .menu.is-dark .menu-item.focus, .menu.is-dark .menu-item:focus {
  border-color: #474747;
  background-color: #dadada;
}

.menu.is-dark .menu-item.active {
  color: #fff;
  background-color: #474747;
}

.menu.is-primary .menu-item.hover, .menu.is-primary .menu-item:hover, .menu.is-primary .menu-item.focus, .menu.is-primary .menu-item:focus {
  border-color: #805ad5;
  background-color: #e6def7;
}

.menu.is-primary .menu-item.active {
  color: #fff;
  background-color: #805ad5;
}

.menu.is-secondary .menu-item.hover, .menu.is-secondary .menu-item:hover, .menu.is-secondary .menu-item.focus, .menu.is-secondary .menu-item:focus {
  border-color: gray;
  background-color: #e6e6e6;
}

.menu.is-secondary .menu-item.active {
  color: #fff;
  background-color: gray;
}

.menu.is-info .menu-item.hover, .menu.is-info .menu-item:hover, .menu.is-info .menu-item.focus, .menu.is-info .menu-item:focus {
  border-color: #13c2c2;
  background-color: #d0f3f3;
}

.menu.is-info .menu-item.active {
  color: #0f0f0f;
  background-color: #13c2c2;
}

.menu.is-warn .menu-item.hover, .menu.is-warn .menu-item:hover, .menu.is-warn .menu-item.focus, .menu.is-warn .menu-item:focus {
  border-color: #fadb14;
  background-color: #fef8d0;
}

.menu.is-warn .menu-item.active {
  color: #0f0f0f;
  background-color: #fadb14;
}

.menu.is-valid .menu-item.hover, .menu.is-valid .menu-item:hover, .menu.is-valid .menu-item.focus, .menu.is-valid .menu-item:focus {
  border-color: #52c41a;
  background-color: #dcf3d1;
}

.menu.is-valid .menu-item.active {
  color: #0f0f0f;
  background-color: #52c41a;
}

.menu.is-error .menu-item.hover, .menu.is-error .menu-item:hover, .menu.is-error .menu-item.focus, .menu.is-error .menu-item:focus {
  border-color: #f5222d;
  background-color: #fdd3d5;
}

.menu.is-error .menu-item.active {
  color: #0f0f0f;
  background-color: #f5222d;
}

.menu > .menu {
  overflow: hidden;
  font-size: inherit;
}

.menu > .menu > * {
  padding-right: 2.25em;
  margin-left: 1.5em;
}

.menu > .menu > .menu {
  padding-right: 0;
}

.menu > .menu > .menu-trigger {
  padding-right: 0.75em;
  margin-left: 0;
}

.menu-trigger {
  display: inline-flex;
}

.menu-trigger::after {
  content: "";
  align-self: center;
  margin-left: auto;
  border: 6px solid transparent;
  border-top-color: currentColor;
  border-bottom: 0;
}

.menu-trigger.active::after {
  transform: scale(-1);
}

.menu-trigger ~ * {
  -webkit-animation: fadein 0.3s ease-out both;
          animation: fadein 0.3s ease-out both;
}

@-webkit-keyframes fadein {
  from {
    opacity: 0;
  }
}

@keyframes fadein {
  from {
    opacity: 0;
  }
}

.menu-trigger:not(.active) ~ * {
  display: none;
}

.dropdown > .menu {
  position: absolute;
  top: 100%;
  z-index: 14;
  display: none;
  min-width: 100%;
  padding: 0.35em 0;
  margin-top: 0.25em;
  border-radius: 0.25em;
  background-color: #fff;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
  font-size: inherit;
  -webkit-animation: fadein 0.3s ease-out both;
          animation: fadein 0.3s ease-out both;
}

.dropdown .dropdown {
  width: 100%;
}

.dropdown:not(.is-mega) .menu-item {
  white-space: nowrap;
}

.dropdown-trigger {
  font-size: inherit;
  display: inline-flex;
}

.dropdown-trigger::after {
  content: "";
  transform: translateX(3px);
  align-self: center;
  margin-right: 3px;
  margin-left: auto;
  border: 6px solid transparent;
  border-top-color: currentColor;
  border-bottom: 0;
}

.dropdown.is-top > .menu {
  top: auto;
  bottom: 100%;
  margin: 0 0 0.25em 0;
}

.dropdown.is-top > .dropdown-trigger::after {
  transform: scale(-1) translateX(-3px);
}

.dropdown.is-right > .menu {
  top: 0;
  left: 100%;
  margin: 0 0 0 0.25em;
}

.dropdown.is-right > .dropdown-trigger::after {
  transform: rotate(270deg) translateY(3px);
}

.dropdown.is-left > .menu {
  top: 0;
  right: 100%;
  margin: 0 0.25em 0 0;
}

.dropdown.is-left > .dropdown-trigger::after {
  transform: rotate(90deg) translateY(-3px);
}

.dropdown.is-mega {
  position: static;
}

.dropdown.is-mega > .menu {
  right: 0;
  left: 0;
  margin: 0;
}

.blockquote {
  padding: .4rem .8rem;
  border-left: 3px solid #805ad5;
}

.list {
  padding-left: 0;
}

.list.is-inline > li:not(:last-child) {
  margin-right: 0.5em;
}

.control {
  position: relative;
  display: block;
  font-size: 1rem;
}

label.control {
  margin-bottom: 0;
}

.control > .feedback {
  position: absolute;
  right: 0;
  bottom: 100%;
  display: none;
  padding: 3px 6px;
  margin-bottom: 7px;
  border-radius: 0.25em;
  color: #fff;
  box-shadow: 1px 4px 6px 0 rgba(0, 0, 0, 0.15);
  background-color: #474747;
}

.control > .feedback::before {
  content: "";
  position: absolute;
  top: 100%;
  right: 10px;
  border: 6px solid transparent;
  border-top-color: #474747;
  border-bottom: 0;
}

.addon {
  display: flex;
  -webkit-user-select: auto;
     -moz-user-select: auto;
      -ms-user-select: auto;
          user-select: auto;
  align-items: center;
  border-color: #b8b8b8;
  background-color: #fafafa;
}

.group {
  display: flex;
  flex-wrap: wrap;
}

.group.is-lg > .addon,
.group.is-lg > .btn {
  padding: 0.75rem 1.25rem;
}

.group > .input.hover, .group > .input:hover, .group > .input.focus, .group > .input:focus,
.group > .control.hover,
.group > .control:hover,
.group > .control.focus,
.group > .control:focus,
.group > .addon.hover,
.group > .addon:hover,
.group > .addon.focus,
.group > .addon:focus,
.group > .btn.hover,
.group > .btn:hover,
.group > .btn.focus,
.group > .btn:focus {
  z-index: 10;
}

.group > .input,
.group > .control:not(.addon) {
  flex: 1 1 0%;
}

.group.buttons {
  display: inline-flex;
}

.embed {
  position: relative;
  display: block;
  overflow: hidden;
  width: 100%;
  padding: 0;
}

.embed::before {
  content: "";
  display: block;
  padding-top: 56.25%;
}

.embed-item {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
}

.embed.is-1-1::before {
  padding-top: 100%;
}

.embed.is-4-3::before {
  padding-top: 75%;
}

.embed.is-16-10::before {
  padding-top: 62.5%;
}

.embed.is-21-9::before {
  padding-top: 42.85714%;
}

.breadcrumb {
  display: flex;
  list-style: none;
  flex-wrap: wrap;
  padding: 0.75rem 1rem;
  margin-bottom: 1rem;
  font-size: 1rem;
}

.breadcrumb a.hover, .breadcrumb a:hover {
  text-decoration: none;
}

.breadcrumb-item {
  padding-right: 0.5em;
}

.breadcrumb-item:not(:first-child)::before {
  content: "🠚";
  padding-right: 0.25em;
  color: #636363;
}

.breadcrumb-item:not([disabled]):not(:disabled).active, .breadcrumb-item:not([disabled]):not(:disabled):active {
  color: #636363;
}

.breadcrumb-item[data-separator]:not(:first-child)::before {
  content: attr(data-separator);
}
@media (prefers-reduced-motion: reduce) {
  .control > .radio ~ .label::before, .control > .checkbox ~ .label::before, .control > .switch ~ .label::before, .input, .btn, .range, .menu-item, .addon, .control.has-floating-label > .input[placeholder=" "] ~ .label, .btn.is-min::before, .range::-webkit-slider-thumb, .range::-moz-range-thumb, .range::-ms-thumb, .range::-moz-range-track, .range::-webkit-slider-runnable-track, .range::-ms-track, .control > .switch ~ .label::after, .menu-item::before, .menu-item.hover:not(.active)::before, .menu-item:not(.active):hover::before, .menu-item.focus:not(.active)::before, .menu-item:not(.active):focus::before {
    transition: none;
  }
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZsdWlkLWNvbXBvbmVudC5jc3MiLCJzcmMvZmx1aWQtY29tcG9uZW50LnNjc3MiLCJzcmMvc2V0dGluZ3MvcGxhY2Vob2xkZXJzL19nZW5lcmFsLnNjc3MiLCJzcmMvc2V0dGluZ3MvcGxhY2Vob2xkZXJzL19jb250cm9scy5zY3NzIiwic3JjL3NldHRpbmdzL2NvbXBvbmVudHMvX2NvbnRyb2xzLnNjc3MiLCJzcmMvc2V0dGluZ3MvZGVzaWduL19ib3JkZXIuc2NzcyIsInNyYy9zZXR0aW5ncy90aGVtZS9fY29sb3Iuc2NzcyIsInNyYy9zZXR0aW5ncy90eXBvZ3JhcGh5L19mb250LnNjc3MiLCJzcmMvdG9vbHMvbWl4aW5zL19mb250LXNpemUuc2NzcyIsInNyYy90b29scy9taXhpbnMvX3RyYW5zaXRpb25zLnNjc3MiLCJzcmMvdG9vbHMvZnVuY3Rpb25zL190cmFuc2l0aW9ucy5zY3NzIiwic3JjL3Rvb2xzL21peGlucy9fc3RhdGVzLnNjc3MiLCJzcmMvdG9vbHMvZnVuY3Rpb25zL19ib3gtc2hhZG93LnNjc3MiLCJzcmMvdG9vbHMvbWl4aW5zL19wc2V1ZG8tZWxlbWVudHMuc2NzcyIsInNyYy90b29scy9mdW5jdGlvbnMvX2NvbnZlcnQtdW5pdC5zY3NzIiwic3JjL3NldHRpbmdzL2NvbXBvbmVudHMvX2lucHV0LnNjc3MiLCJzcmMvc2V0dGluZ3MvcGxhY2Vob2xkZXJzL19ncm91cC5zY3NzIiwic3JjL3Rvb2xzL21peGlucy9fYm9yZGVyLXJhZGl1cy5zY3NzIiwic3JjL3NldHRpbmdzL3BsYWNlaG9sZGVycy9fZHJvcGRvd24uc2NzcyIsInNyYy9zZXR0aW5ncy9jb21wb25lbnRzL19kcm9wZG93bi5zY3NzIiwic3JjL2NvbXBvbmVudHMvX2lucHV0LnNjc3MiLCJzcmMvdG9vbHMvbWl4aW5zL2NvbXBvbmVudHMvX2lucHV0LnNjc3MiLCJzcmMvdG9vbHMvZnVuY3Rpb25zL19zdHItcmVwbGFjZS5zY3NzIiwic3JjL3NldHRpbmdzL2NvbXBvbmVudHMvX2dyb3VwLnNjc3MiLCJzcmMvc2V0dGluZ3MvY29tcG9uZW50cy9fY29udHJvbC5zY3NzIiwic3JjL2NvbXBvbmVudHMvX2J1dHRvbi5zY3NzIiwic3JjL3Rvb2xzL21peGlucy9fZ3JhZGllbnRzLnNjc3MiLCJzcmMvdG9vbHMvZnVuY3Rpb25zL19jbHItc3RlcC5zY3NzIiwic3JjL3Rvb2xzL21peGlucy9zaGFwZXMvX2FuaW1hdGVkLnNjc3MiLCJzcmMvdG9vbHMvbWl4aW5zL2NvbXBvbmVudHMvX2J1dHRvbi5zY3NzIiwic3JjL3NldHRpbmdzL2NvbXBvbmVudHMvX2J1dHRvbi5zY3NzIiwic3JjL2NvbXBvbmVudHMvX2ZpbGUuc2NzcyIsInNyYy9jb21wb25lbnRzL19yYWRpby5zY3NzIiwic3JjL3NldHRpbmdzL2NvbXBvbmVudHMvX3JhZGlvLnNjc3MiLCJzcmMvY29tcG9uZW50cy9fY2hlY2tib3guc2NzcyIsInNyYy9zZXR0aW5ncy9jb21wb25lbnRzL19jaGVja2JveC5zY3NzIiwic3JjL2NvbXBvbmVudHMvX3JhbmdlLnNjc3MiLCJzcmMvdG9vbHMvbWl4aW5zL2NvbXBvbmVudHMvX3JhbmdlLnNjc3MiLCJzcmMvc2V0dGluZ3MvY29tcG9uZW50cy9fcmFuZ2Uuc2NzcyIsInNyYy9jb21wb25lbnRzL19zd2l0Y2guc2NzcyIsInNyYy9zZXR0aW5ncy9jb21wb25lbnRzL19zd2l0Y2guc2NzcyIsInNyYy9jb21wb25lbnRzL19tZW51LnNjc3MiLCJzcmMvdG9vbHMvbWl4aW5zL2NvbXBvbmVudHMvX21lbnUuc2NzcyIsInNyYy9zZXR0aW5ncy9jb21wb25lbnRzL19tZW51LnNjc3MiLCJzcmMvdG9vbHMvbWl4aW5zL3NoYXBlcy9fYmFzaWMuc2NzcyIsInNyYy9jb21wb25lbnRzL19kcm9wZG93bi5zY3NzIiwic3JjL2NvbXBvbmVudHMvX2Jsb2NrcXVvdGUuc2NzcyIsInNyYy9jb21wb25lbnRzL19saXN0LnNjc3MiLCJzcmMvc2V0dGluZ3MvY29tcG9uZW50cy9fbGlzdC5zY3NzIiwic3JjL2NvbXBvbmVudHMvX2NvbnRyb2wuc2NzcyIsInNyYy9jb21wb25lbnRzL19ncm91cC5zY3NzIiwic3JjL3NldHRpbmdzL2Rlc2lnbi9fbGF5b3V0LnNjc3MiLCJzcmMvY29tcG9uZW50cy9fZW1iZWQuc2NzcyIsInNyYy9jb21wb25lbnRzL19icmVhZGNydW1iLnNjc3MiLCJzcmMvc2V0dGluZ3MvY29tcG9uZW50cy9fYnJlYWRjcnVtYi5zY3NzIiwic3JjL3NldHRpbmdzL3BsYWNlaG9sZGVycy9fcHJlZmVycy1yZWR1Y2VkLW1vdGlvbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQ0FoQjs7Ozs7Q0RNQztBRU5EOzs7RUFDRSxjQUFjO0FGVWhCOztBRVBBO0VBQ0UscUJBQXFCO0FGVXZCOztBRTRDQTtFQUNFLGtCQUFrQjtBRnpDcEI7O0FFZ0RBO0VBQ0UsZUFBZTtBRjdDakI7O0FHakJBO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQix5QkFBaUI7S0FBakIsc0JBQWlCO01BQWpCLHFCQUFpQjtVQUFqQixpQkFBaUI7RUFDakIsdUJDV3FEO0VEVnJELDZCQ1MyRDtFRFIzRCxxQkVBcUM7RUZDckMsY0d3QzhCO0VIdkM5Qiw2QkNLMkQ7RURKM0Qsc0JBQXNCO0VBQ3RCLHFCQUFxQjtFQUVyQixnQklpQitCO0VKaEIvQixnQklvQitCO0VDZjdCLGVBQVc7RUNWWCw0SENVMkY7QVZzQi9GOztBVzNCRTtFRmdCSSx1QkFBZTtVQUFmLGVBQWU7RU5OakIsZ0JBQTJCO0FIc0IvQjs7QVd2QkU7RVJTRSw4Q1NDMkM7QVppQi9DOztBV0RFO0VGZkksMENBUHVGO1VBT3ZGLGtDQVB1RjtFTmN6RixVQUFVO0FIY2Q7O0FTSFE7RUFDRTtJQUFPLGdDQUFZO0VUTzNCO0VTTlE7SUFBTSxvQ0FBWTtFVFMxQjtFU1JRO0lBQU0sZ0JBQVk7RVRXMUI7QUFDRjs7QVNmUTtFQUNFO0lBQU8sZ0NBQVk7RVRPM0I7RVNOUTtJQUFNLG9DQUFZO0VUUzFCO0VTUlE7SUFBTSxnQkFBWTtFVFcxQjtBQUNGOztBYS9ERTtFVitDTSxXQUFXO0FIb0JuQjs7QWFuRUU7RVZ1RE0sMEJBQTBCO0VBQzFCLHdCQUF3QjtFTTlCMUIsdUJBQWU7VUFBZixlQUFlO0FUK0NyQjs7QWF6RUU7RUo4QkksMENBUHVGO1VBT3ZGLGtDQVB1RjtBVHNEN0Y7O0FHUEU7RUFDRSxrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLHVCQ3pDK0U7RUQwQy9FLGdCQUFnQjtBSFVwQjs7QUdSSTtFQUNFLG9CQUFvQjtFQUNwQix1QkM5QzZFO0FKeURuRjs7QWF6RkU7RVZ1RkksV0FBVztFQUNYLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsT0FBTztFQUNQLDJCQUEyQjtFQUMzQixnQlcvRDZDO0VYZ0U3QyxpQldoRTZDO0VYaUU3QyxVQUFVO0VBQ1YscUJHdEQwQjtFSHVEMUIsc0JHMURlO0VFdkJqQixrQkFBVztBUndGZjs7QWF2R0U7RVY0R1EsY0dyRXNCO0FOb0VoQzs7QWEzR0U7RVY0R1EsY0doRXNCO0FObUVoQzs7QWEvR0U7RVY0R1EsY0c1R2E7QU5tSHZCOztBYW5IRTtFVjRHUSxXR2xFc0I7QU42RWhDOztBYXZIRTtFVjRHUSxjR3JHYTtBTm9IdkI7O0FhM0hFO0VWNEdRLGNHeEdhO0FOMkh2Qjs7QWEvSEU7RVY0R1EsY0d2R2E7QU44SHZCOztBYW5JRTtFVjRHUSxjRzFHYTtBTnFJdkI7O0FHcEJJO0VBRUUsb0JBQW9CO0VBQ3BCLFlDbEc4QztBSndIcEQ7O0FhNUlFO0VWeUhNLHlCQUF1QztBSHVCL0M7O0FHZkE7RUFLRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFVBQVU7QUhjWjs7QUdUQTs7RUFDRSxvQkFBb0I7RUFDcEIsWUMzSGtEO0FKd0lwRDs7QUdmQTs7RUFDRSxvQkFBb0I7RUFDcEIsWUMzSGtEO0FKd0lwRDs7QUdSQTtFQUNFLHFCWTFJNkY7RVoySTdGLDRCQUE0QjtFQUM1Qix5Q0FBNEQ7RUFDNUQsOEJZOUl5RDtBZnlKM0Q7O0FnQjVLQTs7O0VBQ0Usb0JBQXdDO0VBQ3hDLG1CQUF1QztBaEJpTHpDOztBZ0I5S0E7OztFQUNFLGtCQUFzQztFQUN0QyxxQkFBeUM7QWhCbUwzQzs7QWdCaExBOzs7RUFDRSxlQUFlO0VBQ2YsY0FBYztBaEJxTGhCOztBZ0JsTEE7OztFQUNFLGFBQWE7RUFDYixnQkFBZ0I7QWhCdUxsQjs7QWdCcExBOzs7RUFDRSxhQUFhO0FoQnlMZjs7QWdCdExBOzs7RUFDRSxlQUFlO0FoQjJMakI7O0FnQnhMQTs7O0VBQ0UsZ0JBQWdCO0FoQjZMbEI7O0FnQjFMQTs7O0VBQ0UsY0FBYztBaEIrTGhCOztBZ0I1TEE7Ozs7Ozs7OztFQUNFLGdCQUE4QjtBaEJ1TWhDOztBZ0JwTUE7OztFQ2pDRSw4QlpLcUM7RVlKckMsK0JaSXFDO0FMdU92Qzs7QWdCdk1BOzs7RUMvQkUsK0JaRHFDO0VZRXJDLGtDWkZxQztBTDhPdkM7O0FnQjFNQTs7O0VDN0JFLGtDWlBxQztFWVFyQyxpQ1pScUM7QUxxUHZDOztBZ0I3TUE7OztFQzNCRSw4QlpicUM7RVljckMsaUNaZHFDO0FMNFB2Qzs7QWtCeFFBO0VBQ0UsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixZQ2N1QztFRGJ2QyxjQ2F1QztFRFp2QyxlQ1l1QztFRFh2QyxhQ1d1QztFRFZ2QyxXQUFXO0FsQjJRYjs7QW9CM1FBO0VBS0UsV0FBVztFQUNYLHFCZHFDOEI7RWNwQzlCLHNCZGlDbUI7RWNoQ25CLGlEUnVCNkM7QVptUC9DOztBVzdQRTtFU1ZFLG9GUm9CMkM7QVp1UC9DOztBV3ZPRTtFU2hDRSwwQkFBMEI7RUFDMUIsZ0JBQTJCO0FwQjJRL0I7O0FvQmxRQTtFQUNFLHlCQUE2RTtFQUM3RSxlQUFlO0VBQ2Ysd0JmekJtQztFZTBCbkMsZ0JBQThCO0FwQnFRaEM7O0FXcFFFO0VTRUUsZ0JBQTJCO0FwQnNRL0I7O0FvQmpQRTtFQ25EQSxzQ2Z1QzhCO0VldEM5QixjZnNDOEI7QU5rUWhDOztBV3RSRTtFVWZFLHVGVHlCMkM7QVpnUi9DOztBcUJ2UkU7RUFDRSxjZmdCNEI7QU4wUWhDOztBcUJ2UkU7RUFDRSxjZlk0QjtBTjhRaEM7O0FvQmxRRTtFQ25EQSxtQ2Y0QzhCO0VlM0M5QixjZjJDOEI7QU44UWhDOztBV3ZTRTtFVWZFLG9GVHlCMkM7QVppUy9DOztBcUJ4U0U7RUFDRSxjZnFCNEI7QU5zUmhDOztBcUJ4U0U7RUFDRSxjZmlCNEI7QU4wUmhDOztBb0JuUkU7RUNuREEscUNmQXFCO0VlQ3JCLGNmRHFCO0FOMlV2Qjs7QVd4VEU7RVVmRSxzRlR5QjJDO0Faa1QvQzs7QXFCelRFO0VBQ0UsY2Z2Qm1CO0FObVZ2Qjs7QXFCelRFO0VBQ0UsY2YzQm1CO0FOdVZ2Qjs7QW9CcFNFO0VDbkRBLHNDZjBDOEI7RWV6QzlCLFdmeUM4QjtBTmtUaEM7O0FXelVFO0VVZkUsdUZUeUIyQztBWm1VL0M7O0FxQjFVRTtFQUNFLFdmbUI0QjtBTjBUaEM7O0FxQjFVRTtFQUNFLFdmZTRCO0FOOFRoQzs7QW9CclRFO0VDbkRBLHFDZk9xQjtFZU5yQixjZk1xQjtBTnNXdkI7O0FXMVZFO0VVZkUsc0ZUeUIyQztBWm9WL0M7O0FxQnpXSTtFQUtJLDhXQ2NtSTtBdEIwVjNJOztBcUIvVkU7RUFDRSxjZmhCbUI7QU5rWHZCOztBcUIvVkU7RUFDRSxjZnBCbUI7QU5zWHZCOztBb0IxVUU7RUNuREEscUNmSXFCO0VlSHJCLGNmR3FCO0FOOFh2Qjs7QVcvV0U7RVVmRSxzRlR5QjJDO0FaeVcvQzs7QXFCOVhJO0VBT0ksK2FDWW1JO0F0QitXM0k7O0FxQnBYRTtFQUNFLGNmbkJtQjtBTjBZdkI7O0FxQnBYRTtFQUNFLGNmdkJtQjtBTjhZdkI7O0FvQi9WRTtFQ25EQSxvQ2ZLcUI7RWVKckIsY2ZJcUI7QU5rWnZCOztBV3BZRTtFVWZFLHFGVHlCMkM7QVo4WC9DOztBcUJuWkk7RUFHSSw4UUNnQm1JO0F0Qm9ZM0k7O0FxQnpZRTtFQUNFLGNmbEJtQjtBTjhadkI7O0FxQnpZRTtFQUNFLGNmdEJtQjtBTmthdkI7O0FvQnBYRTtFQ25EQSxvQ2ZFcUI7RWVEckIsY2ZDcUI7QU4wYXZCOztBV3paRTtFVWZFLHFGVHlCMkM7QVptWi9DOztBcUJ4YUk7RUFTSSxnVUNVbUk7QXRCeVozSTs7QXFCOVpFO0VBQ0UsY2ZyQm1CO0FOc2J2Qjs7QXFCOVpFO0VBQ0UsY2Z6Qm1CO0FOMGJ2Qjs7QW9CdlhBO0VBRUUscUJBQXFCO0VBRXJCLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIscVJFaER5STtBdEJ3YTNJOztBb0I5WEE7RUFXSSxzQmhCbkRxRTtFZ0JvRHJFLHNCQUFzQjtBcEJ1WDFCOztBb0JuWUE7RUFnQkksYUFBYTtBcEJ1WGpCOztBb0J2WUE7RUFxQkksY2Q5QzRCO0VjK0M1QixnQmRyRGlCO0FOMmFyQjs7QW9CbFhBO0VBQ0UsY2RyRDhCO0FOMGFoQzs7QW9CbFhBO0VBQ0UsVUFBVTtFQUNWLGNkNUQ4QjtBTmliaEM7O0FvQnZYQTtFQUNFLFVBQVU7RUFDVixjZDVEOEI7QU5pYmhDOztBb0J2WEE7RUFDRSxVQUFVO0VBQ1YsY2Q1RDhCO0FOaWJoQzs7QW9CdlhBO0VBQ0UsVUFBVTtFQUNWLGNkNUQ4QjtBTmliaEM7O0FvQnZYQTtFQUNFLFVBQVU7RUFDVixjZDVEOEI7QU5pYmhDOztBb0JsWEE7RUFDRSxZQUFZO0VBQ1osaUJMdkd5RztBZjRkM0c7O0FvQi9XQTtFWmpHSSxrQkFBVztFWW9HWCxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFlBQVk7QXBCaVhoQjs7QW9CdFhBO0VBV1EsV0c3SG1DO0VIOEhuQyxvQkFBb0I7RUFDcEIsWUkvSDZDO0F4QjhlckQ7O0FvQjVYQTtFQWtCVSxVQUFVO0FwQjhXcEI7O0FvQmhZQTtFQTBCTSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLGFOckc4QjtFTXNHOUIsMkJBQTJCO0VBQzNCLG9CQUFvQjtFQUNwQixZQUFZO0VBQ1osc0JkMUdlO0VjMkdmLGNBQWM7RVg1SWhCLDZEQ1UyRjtBVjZlL0Y7O0FvQjVZQTtFQXVDUSxPQUFPO0VaeElYLGlCQUFXO0FSa2ZmOztBb0JqWkE7RUE4Q1EsT0FBTztFWi9JWCxpQkFBVztBUnVmZjs7QXlCdGdCRTtFQU1FLGtCQUFrQjtBekJvZ0J0Qjs7QXlCeGZFO0VBT0UsV25CYWlCO0VvQjVCakIseUJwQmlDNEI7QU5vZWhDOztBV2xlRTtFZW5DRSx5QkNjNEQ7QTNCMmZoRTs7QVd6Z0JFO0VjK0JJLFduQkhlO0VtQktiLHlCRW5Cd0Q7QTNCZ2dCaEU7O0FheGhCRTtFZXFCRSxXdEJpQmlCO0FOc2ZyQjs7QXlCMWdCRTtFSVZBLGN2QnNDNkI7RW9CcEMzQix5QnBCNkI0QjtBTjBmaEM7O0FXOWdCRTtFa0JQRSxpRGpCaUIyQztBWndnQi9DOztBV3hmRTtFZW5DRSx5QkNjNEQ7QTNCaWhCaEU7O0FXL2hCRTtFa0JZRSxjdkJ3QjJCO0V1QnRCekIseUJGQTBEO0EzQnNoQmhFOztBYTlpQkU7RWVxQkUsY3RCeUIyQjtBTm9nQi9COztBeUJoaUJFO0VDUkUseUJwQmtDNEI7QU4wZ0JoQzs7QVduaUJFO0VrQlBFLDhDakJpQjJDO0FaNmhCL0M7O0FXN2dCRTtFZW5DRSx5QkNjNEQ7QTNCc2lCaEU7O0FXcGpCRTtFa0JjSSx5QkZBMEQ7QTNCMGlCaEU7O0F5QmhqQkU7RUNSRSx5QnBCVm1CO0FOc2tCdkI7O0FXbmpCRTtFa0JQRSxnRGpCaUIyQztBWjZpQi9DOztBVzdoQkU7RWVuQ0UseUJDYzREO0EzQnNqQmhFOztBV3BrQkU7RWtCY0kseUJGQTBEO0EzQjBqQmhFOztBeUJoa0JFO0VDUkUsc0JwQmdDNEI7QU40aUJoQzs7QVdua0JFO0VrQlBFLGlEakJpQjJDO0FaNmpCL0M7O0FXN2lCRTtFZW5DRSx5QkNjNEQ7QTNCc2tCaEU7O0FXcGxCRTtFa0JjSSx5QkZBMEQ7QTNCMGtCaEU7O0F5QmhsQkU7RUlWQSxjdkJzQzZCO0VvQnBDM0IseUJwQkhtQjtBTmdtQnZCOztBV3BsQkU7RWtCUEUsZ0RqQmlCMkM7QVo4a0IvQzs7QVc5akJFO0VlbkNFLHlCQ2M0RDtBM0J1bEJoRTs7QVdybUJFO0VrQllFLFd2QmdCaUI7RXVCZGYseUJGQTBEO0EzQjRsQmhFOztBYXBuQkU7RWVxQkUsY3RCeUIyQjtBTjBrQi9COztBeUJ0bUJFO0VJVkEsY3ZCc0M2QjtFb0JwQzNCLHlCcEJObUI7QU55bkJ2Qjs7QVcxbUJFO0VrQlBFLGdEakJpQjJDO0Fab21CL0M7O0FXcGxCRTtFZW5DRSx5QkNjNEQ7QTNCNm1CaEU7O0FXM25CRTtFa0JZRSxXdkJnQmlCO0V1QmRmLHlCRkEwRDtBM0JrbkJoRTs7QWExb0JFO0VlcUJFLGN0QnlCMkI7QU5nbUIvQjs7QXlCNW5CRTtFSVZBLGN2QnNDNkI7RW9CcEMzQix5QnBCTG1CO0FOOG9CdkI7O0FXaG9CRTtFa0JQRSwrQ2pCaUIyQztBWjBuQi9DOztBVzFtQkU7RWVuQ0UseUJDYzREO0EzQm1vQmhFOztBV2pwQkU7RWtCWUUsV3ZCZ0JpQjtFdUJkZix5QkZBMEQ7QTNCd29CaEU7O0FhaHFCRTtFZXFCRSxjdEJ5QjJCO0FOc25CL0I7O0F5QmxwQkU7RUlWQSxjdkJzQzZCO0VvQnBDM0IseUJwQlJtQjtBTnVxQnZCOztBV3RwQkU7RWtCUEUsK0NqQmlCMkM7QVpncEIvQzs7QVdob0JFO0VlbkNFLHlCQ2M0RDtBM0J5cEJoRTs7QVd2cUJFO0VrQllFLFd2QmdCaUI7RXVCZGYseUJGQTBEO0EzQjhwQmhFOztBYXRyQkU7RWVxQkUsY3RCeUIyQjtBTjRvQi9COztBVzdvQkU7RUZmSSwrQ0FQdUY7VUFPdkYsdUNBUHVGO0FUdXFCN0Y7O0FTeG9CUTtFQUNFO0lBQU8sd0JBQVk7RVQ0b0IzQjtFUzNvQlE7SUFBTSxvQ0FBWTtFVDhvQjFCO0VTN29CUTtJQUFNLGdCQUFZO0VUZ3BCMUI7QUFDRjs7QVNwcEJRO0VBQ0U7SUFBTyx3QkFBWTtFVDRvQjNCO0VTM29CUTtJQUFNLG9DQUFZO0VUOG9CMUI7RVM3b0JRO0lBQU0sZ0JBQVk7RVRncEIxQjtBQUNGOztBVzFtQkU7RWN0QkksV25CcENlO0VtQnFDZixtQm5CaEMwQjtBTm9xQmhDOztBeUI1bkJFO0VBSUUscUJuQjlDNEI7RW1CK0M1QixjbkI3QzRCO0FOeXFCaEM7O0FXanNCRTtFa0J1QkUscUJ2QkM0QjtFdUJBNUIsOENqQmQyQztBWjRyQi9DOztBVzVxQkU7RWtCRUUscUJ2Qko0QjtFdUJLNUIsY3ZCTDRCO0FObXJCaEM7O0FXcHRCRTtFa0IwQ0UscUJGNUI0RDtFRTZCNUQsY0Y3QjREO0EzQjJzQmhFOztBV2h0QkU7RWtCdUJFLHFCdkJINEI7RXVCSTVCLGlEakJkMkM7QVoyc0IvQzs7QVczckJFO0VrQkVFLHFCdkJSNEI7RXVCUzVCLGN2QlQ0QjtBTnNzQmhDOztBV251QkU7RWtCMENFLHFCRjVCNEQ7RUU2QjVELGNGN0I0RDtBM0IwdEJoRTs7QVcvdEJFO0VrQnVCRSxxQnZCRTRCO0V1QkQ1Qiw4Q2pCZDJDO0FaMHRCL0M7O0FXMXNCRTtFa0JFRSxxQnZCSDRCO0V1Qkk1QixjdkJKNEI7QU5ndEJoQzs7QVdsdkJFO0VrQjBDRSxxQkY1QjREO0VFNkI1RCxjRjdCNEQ7QTNCeXVCaEU7O0FXOXVCRTtFa0J1QkUscUJ2QjFDbUI7RXVCMkNuQixnRGpCZDJDO0FaeXVCL0M7O0FXenRCRTtFa0JFRSxxQnZCL0NtQjtFdUJnRG5CLGN2QmhEbUI7QU4yd0J2Qjs7QVdqd0JFO0VrQjBDRSxxQkY1QjREO0VFNkI1RCxjRjdCNEQ7QTNCd3ZCaEU7O0FXN3ZCRTtFa0J1QkUsa0J2QkE0QjtFdUJDNUIsaURqQmQyQztBWnd2Qi9DOztBV3h1QkU7RWtCRUUsa0J2Qkw0QjtFdUJNNUIsV3ZCTjRCO0FOZ3ZCaEM7O0FXaHhCRTtFa0IwQ0UscUJGNUI0RDtFRTZCNUQsY0Y3QjREO0EzQnV3QmhFOztBVzV3QkU7RWtCdUJFLHFCdkJuQ21CO0V1Qm9DbkIsZ0RqQmQyQztBWnV3Qi9DOztBV3Z2QkU7RWtCRUUscUJ2QnhDbUI7RXVCeUNuQixjdkJ6Q21CO0FOa3lCdkI7O0FXL3hCRTtFa0IwQ0UscUJGNUI0RDtFRTZCNUQsY0Y3QjREO0EzQnN4QmhFOztBVzN4QkU7RWtCdUJFLHFCdkJ0Q21CO0V1QnVDbkIsZ0RqQmQyQztBWnN4Qi9DOztBV3R3QkU7RWtCRUUscUJ2QjNDbUI7RXVCNENuQixjdkI1Q21CO0FOb3pCdkI7O0FXOXlCRTtFa0IwQ0UscUJGNUI0RDtFRTZCNUQsY0Y3QjREO0EzQnF5QmhFOztBVzF5QkU7RWtCdUJFLHFCdkJyQ21CO0V1QnNDbkIsK0NqQmQyQztBWnF5Qi9DOztBV3J4QkU7RWtCRUUscUJ2QjFDbUI7RXVCMkNuQixjdkIzQ21CO0FOazBCdkI7O0FXN3pCRTtFa0IwQ0UscUJGNUI0RDtFRTZCNUQsY0Y3QjREO0EzQm96QmhFOztBV3p6QkU7RWtCdUJFLHFCdkJ4Q21CO0V1QnlDbkIsK0NqQmQyQztBWm96Qi9DOztBV3B5QkU7RWtCRUUscUJ2QjdDbUI7RXVCOENuQixjdkI5Q21CO0FObzFCdkI7O0FXNTBCRTtFa0IwQ0UscUJGNUI0RDtFRTZCNUQsY0Y3QjREO0EzQm0wQmhFOztBVzN2QkU7RWNJSSxxQm5CekQwQjtFbUIwRDFCLGNuQjFEMEI7QU5xekJoQzs7QXlCdHZCRTtFQUlFLGVBQWU7RUFDZiw0Qm5CdEU0QjtFbUJ1RTVCLGNBQWM7RUFDZCxnQkFBOEI7RUFDOUIsZ0JBQTJCO0F6QnN2Qi9COztBYXgyQkU7RVlxSEksV0FBVztFQUNYLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsWUFBWTtFQUNaLFNBQVM7RUFDVCwyQkFBMkI7RUFDM0IsUUFBUTtFQUNSLHdCQUE2QztFaEJ2SC9DLHlFQ1UyRjtBVnEyQi9GOztBVzl6QkU7RWtCUUUsY3ZCbkI0QjtBTjYwQmhDOztBYXgzQkU7RWdCZ0VJLDRCdkJyQjBCO0FOaTFCaEM7O0FXbDNCRTtFa0IyREUsY0Y3QzREO0EzQncyQmhFOztBYWg0QkU7RWdCdUVJLDRCRi9DMEQ7QTNCNDJCaEU7O0FhcDRCRTtFZXFCRSxjdEJzQjRCO0FONjFCaEM7O0FXbDFCRTtFa0JRRSxjdkJ2QjRCO0FOcTJCaEM7O0FhNTRCRTtFZ0JnRUksNEJ2QnpCMEI7QU55MkJoQzs7QVd0NEJFO0VrQjJERSxjRjdDNEQ7QTNCNDNCaEU7O0FhcDVCRTtFZ0J1RUksNEJGL0MwRDtBM0JnNEJoRTs7QWF4NUJFO0VlcUJFLGN0QmtCNEI7QU5xM0JoQzs7QVd0MkJFO0VrQlFFLGN2QmxCNEI7QU5vM0JoQzs7QWFoNkJFO0VnQmdFSSw0QnZCcEIwQjtBTnczQmhDOztBVzE1QkU7RWtCMkRFLGNGN0M0RDtBM0JnNUJoRTs7QWF4NkJFO0VnQnVFSSw0QkYvQzBEO0EzQm81QmhFOztBYTU2QkU7RWVxQkUsY3RCdUI0QjtBTm80QmhDOztBVzEzQkU7RWtCUUUsY3ZCOURtQjtBTm83QnZCOztBYXA3QkU7RWdCZ0VJLDRCdkJoRWlCO0FOdzdCdkI7O0FXOTZCRTtFa0IyREUsY0Y3QzREO0EzQm82QmhFOztBYTU3QkU7RWdCdUVJLDRCRi9DMEQ7QTNCdzZCaEU7O0FhaDhCRTtFZXFCRSxjdEJyQm1CO0FObzhCdkI7O0FXOTRCRTtFa0JRRSxXdkJwQjRCO0FOODVCaEM7O0FheDhCRTtFZ0JnRUkseUJ2QnRCMEI7QU5rNkJoQzs7QVdsOEJFO0VrQjJERSxjRjdDNEQ7QTNCdzdCaEU7O0FhaDlCRTtFZ0J1RUksNEJGL0MwRDtBM0I0N0JoRTs7QWFwOUJFO0VlcUJFLFd0QnFCNEI7QU44NkJoQzs7QVdsNkJFO0VrQlFFLGN2QnZEbUI7QU5xOUJ2Qjs7QWE1OUJFO0VnQmdFSSw0QnZCekRpQjtBTnk5QnZCOztBV3Q5QkU7RWtCMkRFLGNGN0M0RDtBM0I0OEJoRTs7QWFwK0JFO0VnQnVFSSw0QkYvQzBEO0EzQmc5QmhFOztBYXgrQkU7RWVxQkUsY3RCZG1CO0FOcStCdkI7O0FXdDdCRTtFa0JRRSxjdkIxRG1CO0FONCtCdkI7O0FhaC9CRTtFZ0JnRUksNEJ2QjVEaUI7QU5nL0J2Qjs7QVcxK0JFO0VrQjJERSxjRjdDNEQ7QTNCZytCaEU7O0FheC9CRTtFZ0J1RUksNEJGL0MwRDtBM0JvK0JoRTs7QWE1L0JFO0VlcUJFLGN0QmpCbUI7QU40L0J2Qjs7QVcxOEJFO0VrQlFFLGN2QnpEbUI7QU4rL0J2Qjs7QWFwZ0NFO0VnQmdFSSw0QnZCM0RpQjtBTm1nQ3ZCOztBVzkvQkU7RWtCMkRFLGNGN0M0RDtBM0JvL0JoRTs7QWE1Z0NFO0VnQnVFSSw0QkYvQzBEO0EzQncvQmhFOztBYWhoQ0U7RWVxQkUsY3RCaEJtQjtBTitnQ3ZCOztBVzk5QkU7RWtCUUUsY3ZCNURtQjtBTnNoQ3ZCOztBYXhoQ0U7RWdCZ0VJLDRCdkI5RGlCO0FOMGhDdkI7O0FXbGhDRTtFa0IyREUsY0Y3QzREO0EzQndnQ2hFOztBYWhpQ0U7RWdCdUVJLDRCRi9DMEQ7QTNCNGdDaEU7O0FhcGlDRTtFZXFCRSxjdEJuQm1CO0FOc2lDdkI7O0FheGlDRTtFSjBCSSx1QkFBZTtVQUFmLGVBQWU7QVRraENyQjs7QWE1aUNFO0VZaUpNLFdBQVc7QXpCKzVCbkI7O0FXbmdDRTtFRm5CSSx1QkFBZTtVQUFmLGVBQWU7RWdCNkhmLGdDQUFnQztBekI4NUJ0Qzs7QWFyakNFO0VKOEJJLHlDQVB1RjtVQU92RixpQ0FQdUY7QVRraUM3Rjs7QVM3L0JRO0VBQ0U7O0lBQ00sVUFBVTtFVGlnQ3hCO0VTLy9CUTs7SUFDTSxVQUFVO0VUa2dDeEI7QUFDRjs7QVN4Z0NRO0VBQ0U7O0lBQ00sVUFBVTtFVGlnQ3hCO0VTLy9CUTs7SUFDTSxVQUFVO0VUa2dDeEI7QUFDRjs7QVdwK0JFO0VjOERJLGNuQm5IMEI7QU42aENoQzs7QWF4a0NFO0VZZ0tNLDRCbkJySHdCO0FOaWlDaEM7O0F5QjM1QkU7RUFDRSxvQkFBb0I7RUFFcEIsNkJBQTZCO0VHdkwvQixrQkFBa0I7QTVCcWxDcEI7O0FhbGxDRTtFZURFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsMEJBQTBCO0VBQzFCLFFBQVE7RUFDUixTQUFTO0VBQ1QsMkJBQTJCO0VBQzNCLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsV0FBVztFQUNYLGdDQUFnQztFQUNoQywrQkFBK0I7RUFDL0Isa0JBQWtCO0VBRWxCLDBDQUFrQztVQUFsQyxrQ0FBa0M7RUFDbEMsY3RCOEI0QjtBTndqQ2hDOztBUzNoQ1E7RUFDRTtJQUFPLHlCQUF5QjtFVCtoQ3hDO0FBQ0Y7O0FTamlDUTtFQUNFO0lBQU8seUJBQXlCO0VUK2hDeEM7QUFDRjs7QXlCNzZCRTtFQUNFLFdBQVc7QXpCZzdCZjs7QXlCeDZCRTtFQUNFLGFLdE1tRDtFTHVNbkQsY0t2TW1EO0VMd01uRCxVQUFVO0F6QjI2QmQ7O0ErQnpuQ0E7RUFLTSxnQkFBZ0I7QS9Cd25DdEI7O0Fhdm5DRTtFbUJFUSxvQkNKb0M7RURLcEMsc0IxQm1DVztBTnNsQ3JCOztBYTVuQ0U7RW1CVU0sa0IzQkg2QjtBTHluQ3JDOztBYXhuQ0U7RXFCTlEsUUNIMEM7RURJMUMsOENBQThDO0VBQzlDLGdCQUF1QztFQUN2QyxpQkNQc0U7RURRdEUseUI1QmdDVztFNEIvQlgsbUJBQW1CO0VBQ25CLG9CQUFvQjtBbENrb0M5Qjs7QWExb0NFO0VxQmdCUSwwQkFBMEI7RUFDMUIsd0JBQXdCO0FsQzhuQ2xDOztBYXZvQ0U7RXFCYVEsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsZ0NBQWdDO0VBQ2hDLGdCQ3RCc0U7RUR1QnRFLFdDdEIwQztFRHVCMUMsZ0I1QldXO0FObW5DckI7O0FhanBDRTtFcUIwQk0sV0FBVztFQUNYLGtCQUFrQjtFQUNsQixlQUFxQztBbEMybkM3Qzs7QW9DcHFDQTtFQUdFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsYUFBYTtFQUNiLFVBQVU7RUFFVixxQkFBcUI7RUFFckIsd0JBQXdCO0VBQ3hCLGdCQUFnQjtBcENtcUNsQjs7QVc1bkNFO0V5QnBDRSxVQUFVO0FwQ29xQ2Q7O0FvQ2xyQ0E7RUNVRSxVQ0d5RDtFREZ6RCxXQ0V5RDtFRER6RCw4QkNHNEU7RURGNUUsa0JoQ0RtQztFZ0NHbkMscUJBQXFCO0VBRXJCLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsZ0IvQndCbUI7RStCdkJuQiw2Q3pCYzZDO0VIeEIzQyxnRUNVMkY7QVYycUMvRjs7QW9DL3JDQTtFQ1VFLFVDR3lEO0VERnpELFdDRXlEO0VERHpELDhCQ0c0RTtFREY1RSxrQmhDRG1DO0VnQ0duQyxxQkFBcUI7RUFFckIsd0JBQXdCO0VBQ3hCLGdCQUFnQjtFQUNoQixnQi9Cd0JtQjtFK0J2Qm5CLDZDekJjNkM7RUh4QjNDLGdFQ1UyRjtBVndyQy9GOztBb0M1c0NBO0VDVUUsVUNHeUQ7RURGekQsV0NFeUQ7RUREekQsOEJDRzRFO0VERjVFLGtCaENEbUM7RWdDR25DLHFCQUFxQjtFQUVyQix3QkFBd0I7RUFDeEIsZ0JBQWdCO0VBQ2hCLGdCL0J3Qm1CO0UrQnZCbkIsNkN6QmM2QztFSHhCM0MsZ0VDVTJGO0FWcXNDL0Y7O0FvQ3p0Q0E7RUFrQ00scUJBQWdEO0VBQ2hELGlCL0I3QitCO0FMd3RDckM7O0FvQzl0Q0E7RUF1Q00scUJBQWdEO0VBQ2hELGlCL0JsQytCO0FMNnRDckM7O0FvQ251Q0E7RUE0Q00scUJBQWdEO0VBQ2hELGlCL0J2QytCO0FMa3VDckM7O0FvQ3h1Q0E7RUNIRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFdBQVc7RUFDWCxlQ1E0RDtFRFA1RCxTQUFTO0VBQ1QsU0FBUztFQUNULG1CaENRb0M7RWdDUHBDLHlCL0IwQzhCO0UrQnpDOUIsaUR6QjZCNkM7RUh4QjNDLHdDQ1UyRjtBVml1Qy9GOztBb0NydkNBO0VDSEUsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixXQUFXO0VBQ1gsZUNRNEQ7RURQNUQsU0FBUztFQUNULFNBQVM7RUFDVCxtQmhDUW9DO0VnQ1BwQyx5Qi9CMEM4QjtFK0J6QzlCLGlEekI2QjZDO0VIeEIzQyx3Q0NVMkY7QVY4dUMvRjs7QW9DbHdDQTtFQTJESSxrQkFBa0I7RUM5RHBCLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLGVDUTREO0VEUDVELFNBQVM7RUFDVCxTQUFTO0VBQ1QsbUJoQ1FvQztFZ0NQcEMseUIvQjBDOEI7RStCekM5QixpRHpCNkI2QztFSHhCM0Msd0NDVTJGO0FWNHZDL0Y7O0FvQ2h4Q0E7RUFnRUksbUI5QmhCNEI7QU5vdUNoQzs7QW9DcHhDQTtFQXFFTSw4QkFBOEI7QXBDbXRDcEM7O0FvQ3h4Q0E7RUF5RU0sOEJBQThCO0FwQ210Q3BDOztBb0M1eENBO0VBNkVNLGNBQWM7RUFDZCx3QkFBd0I7QXBDbXRDOUI7O0FvQ3RzQ0U7RUFDRSxjOUJoRDRCO0FOeXZDaEM7O0FvQzFzQ0U7RUFDRSxjOUIzQzRCO0FOd3ZDaEM7O0FvQzlzQ0U7RUFDRSxjOUJ2Rm1CO0FOd3lDdkI7O0FvQ2x0Q0U7RUFDRSxXOUI3QzRCO0FOa3dDaEM7O0FvQ3R0Q0U7RUFDRSxjOUJoRm1CO0FOeXlDdkI7O0FvQzF0Q0U7RUFDRSxjOUJuRm1CO0FOZ3pDdkI7O0FvQzl0Q0U7RUFDRSxjOUJsRm1CO0FObXpDdkI7O0FvQ2x1Q0U7RUFDRSxjOUJyRm1CO0FOMHpDdkI7O0FhcHpDRTtFMEJOUSxlQUF5QztFQUN6QyxzQmpDbUNXO0FOMnhDckI7O0F1Q3YwQ0E7RUFlTSx1QkNDaUY7QXhDMnpDdkY7O0FhcjBDRTtFMEJXTSxnQkNiK0Q7RURjL0QsbUJsQ044QjtBTG8wQ3RDOztBYWwwQ0U7RTBCUU0sV0FBVztFQUNYLGtCQUFrQjtFQUNsQixRQUFRO0VBQ1IsT0FBTztFQUNQLHNDQUFnRTtFQUNoRSxnQnpCUTJDO0V5QlAzQyxpQnpCTzJDO0V5Qk4zQyxrQmxDaEI2QjtFa0NpQjdCLG1CakNpQndCO0VHcEM1QixtRUNVMkY7QVZ3MEMvRjs7QXlDNTFDQTtFQUNFLGNBQWM7RUFDZCxVQUFVO0VBQ1YsU0FBUztFakNpQlAsZUFBVztBUiswQ2Y7O0FXeHlDRTtFK0JwREkscUJwQ3lDMEI7RW9DeEMxQix5QmZxQjBEO0EzQjIwQ2hFOztBMEM3MUNJO0VBQ0UsV3BDK0JlO0VvQzlCZix5QnBDbUMwQjtBTjZ6Q2hDOztBeUNsMkNBO0VBRUUsY0FBYztFQUNkLFdBQVc7RUFDWCxtQkVBK0Q7RUZDL0QsU0FBUztFQUNULGdCQUE4QjtFQUM5QixjQUFjO0VBQ2QsbUJBQW1CO0VqQ0NqQixrQkFBVztBUm8yQ2Y7O0FhbjNDRTtFNEJrQkUsV0FBVztFQUNYLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sU0FBUztFQUNULE9BQU87RUFDUCxvQkFBb0I7RUFDcEIsMEJBQTBCO0VoQ25CMUIsOEVDVTJGO0FWKzJDL0Y7O0FhOTNDRTtFSktFLHFDQ1UyRjtFK0JrQnZGLHNCcENoQzZCO0FMazRDckM7O0FXaDNDRTtFOEJvQkUscUJBQXFCO0F6Q2cyQ3pCOztBVzExQ0U7RThCRkUsVUFBVTtBekNnMkNkOztBV3IxQ0U7RStCcERJLHFCcENxQzBCO0VvQ3BDMUIseUJmcUIwRDtBM0J3M0NoRTs7QTBDMTRDSTtFQUNFLGNwQ3VDeUI7RW9DdEN6Qix5QnBDK0IwQjtBTjgyQ2hDOztBVy8xQ0U7RStCcERJLHFCcEMwQzBCO0VvQ3pDMUIseUJmcUIwRDtBM0JrNENoRTs7QTBDcDVDSTtFQUNFLFdwQytCZTtFb0M5QmYseUJwQ29DMEI7QU5tM0NoQzs7QVd6MkNFO0UrQnBESSxxQnBDRmlCO0VvQ0dqQix5QmZxQjBEO0EzQjQ0Q2hFOztBMEM5NUNJO0VBQ0UsV3BDK0JlO0VvQzlCZix5QnBDUmlCO0FOeTZDdkI7O0FXbjNDRTtFK0JwREksa0JwQ3dDMEI7RW9DdkMxQix5QmZxQjBEO0EzQnM1Q2hFOztBMEN4NkNJO0VBQ0UsV3BDK0JlO0VvQzlCZixzQnBDa0MwQjtBTnk0Q2hDOztBVzczQ0U7RStCcERJLHFCcENLaUI7RW9DSmpCLHlCZnFCMEQ7QTNCZzZDaEU7O0EwQ2w3Q0k7RUFDRSxjcEN1Q3lCO0VvQ3RDekIseUJwQ0RpQjtBTnM3Q3ZCOztBV3Y0Q0U7RStCcERJLHFCcENFaUI7RW9DRGpCLHlCZnFCMEQ7QTNCMDZDaEU7O0EwQzU3Q0k7RUFDRSxjcEN1Q3lCO0VvQ3RDekIseUJwQ0ppQjtBTm04Q3ZCOztBV2o1Q0U7RStCcERJLHFCcENHaUI7RW9DRmpCLHlCZnFCMEQ7QTNCbzdDaEU7O0EwQ3Q4Q0k7RUFDRSxjcEN1Q3lCO0VvQ3RDekIseUJwQ0hpQjtBTjQ4Q3ZCOztBVzM1Q0U7RStCcERJLHFCcENBaUI7RW9DQ2pCLHlCZnFCMEQ7QTNCODdDaEU7O0EwQ2g5Q0k7RUFDRSxjcEN1Q3lCO0VvQ3RDekIseUJwQ05pQjtBTnk5Q3ZCOztBeUM1NENBO0VBQ0UsZ0JBQWdCO0VqQ2pFZCxrQkFBVztBUmk5Q2Y7O0F5Q2o1Q0E7RUFNSSxxQkFBdUQ7RUFDdkQsa0JFNUU2RDtBM0MyOUNqRTs7QXlDdDVDQTtFQVdJLGdCQUFnQjtBekMrNENwQjs7QXlDMTVDQTtFQWVJLHFCckNsRm1EO0VxQ21GbkQsY0FBYztBekMrNENsQjs7QXlDMTRDQTtFQUNFLG9CQUFvQjtBekM2NEN0Qjs7QWExK0NFO0U0QmdHRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLGlCQUFpQjtFR3RHbkIsNkJBQStCO0VBQy9CLDhCRENvRDtFQ0FwRCxnQkFBOEI7QTVDcS9DaEM7O0Fhbi9DRTtFNEJ3R0ksb0JBQW9CO0F6Qys0QzFCOztBeUMzNUNBO0VoQ3RFTSw0Q0FQdUY7VUFPdkYsb0NBUHVGO0FUNCtDN0Y7O0FTLzdDUTtFQUNFO0lBQU8sVUFBVTtFVG04Q3pCO0FBQ0Y7O0FTcjhDUTtFQUNFO0lBQU8sVUFBVTtFVG04Q3pCO0FBQ0Y7O0F5Q3I2Q0E7RUF1Qk0sYUFBYTtBekNrNUNuQjs7QTZDbGhEQTtFQUtJLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsVzFCUWtDO0UwQlBsQyxhQUFhO0VBQ2IsZTFCS29DO0UwQkpwQyxpQkFBbUM7RUFDbkMsa0IxQkVxQztFMEJEckMscUJ4Q0ptQztFd0NLbkMsc0J2QzhCaUI7RXVDN0JqQiwwQ2pDb0IyQztFSmQzQyxrQkFBVztFQ2VULDRDQVB1RjtVQU92RixvQ0FQdUY7QVRxZ0Q3Rjs7QTZDamlEQTtFQW9CSSxXQUFXO0E3Q2loRGY7O0E2Q3JpREE7RUF5Qk0sbUJBQW1CO0E3Q2doRHpCOztBNkNqZ0RBO0VyQ3BCSSxrQkFBVztFcUNzQmIsb0JBQW9CO0E3Q29nRHRCOztBYWppREU7RWdDZ0NFLFdBQVc7RUFDWCwwQkFBdUQ7RUFDdkQsa0JBQWtCO0VBQ2xCLGlCQUE4QztFQUM5QyxpQkFBaUI7RUR4Q25CLDZCQUErQjtFQUMvQiw4QnpCTzhDO0V5Qk45QyxnQkFBOEI7QTVDOGlEaEM7O0E2QzUvQ0E7RUFFSSxTQUFTO0VBQ1QsWUFBWTtFQUNaLG9CQUFtQztBN0M4L0N2Qzs7QWFsakRFO0VnQ3lESSxxQ0FBa0U7QTdDNi9DeEU7O0E2Q3gvQ0E7RUFFSSxNQUFNO0VBQ04sVUFBVTtFQUNWLG9CMUJsRXFDO0FuQjRqRHpDOztBYTVqREU7RWdDdUVJLHlDQUFzRTtBN0N5L0M1RTs7QTZDcC9DQTtFQUVJLE1BQU07RUFDTixXQUFXO0VBQ1gsb0JBQW1DO0E3Q3MvQ3ZDOztBYXRrREU7RWdDcUZJLHlDQUFzRTtBN0NxL0M1RTs7QTZDdjhDQTtFQUNFLGdCQUFnQjtBN0MwOENsQjs7QTZDMzhDQTtFQUlJLFFBQVE7RUFDUixPQUFPO0VBQ1AsU0FBUztBN0MyOENiOztBOENqbURBO0VBQ0Usb0JBQW9CO0VBQ3BCLDhCeENHcUI7QU5pbUR2Qjs7QStDcm1ERTtFQUNFLGVBQWU7QS9Dd21EbkI7O0ErQ2ptREU7RUFPTSxtQkNicUM7QWhEMm1EN0M7O0FpRDVtREE7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYztFekNnQlosZUFBVztBUmdtRGY7O0FpRDVtREE7RUFDRSxnQkFBZ0I7QWpEK21EbEI7O0FpRHptREE7RUFDRSxrQkFBa0I7RUFDbEIsUUFBUTtFQUNSLFlBQVk7RUFDWixhQUFhO0VBQ2IsZ0J6QmZ3RDtFeUJnQnhELGtCQUE2RTtFQUM3RSxxQjVDZHFDO0U0Q2VyQyxXM0NvQm1CO0UyQ25CbkIsNkNyQ1U2QztFY25CM0MseUJwQmtDNEI7QU5vbERoQzs7QWFob0RFO0VvQ3VCRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxXekJuQm1EO0VvQkhyRCw2QkFBK0I7RUFDL0IseUJ0Q3VDOEI7RXNDdEM5QixnQkFBOEI7QTVDb29EaEM7O0FrRDVvREU7RUFFRSxhQUFhO0VBQ2IseUJBQWlCO0tBQWpCLHNCQUFpQjtNQUFqQixxQkFBaUI7VUFBakIsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixxQjVDc0M0QjtFNENyQzVCLHlCQ0syRTtBbkR5b0QvRTs7QWtEdm9ERTtFQUNFLGFBQWE7RUFDYixlQUFlO0FsRDBvRG5COztBa0Q1b0RFOztFQU9NLHdCM0Jkd0M7QXZCd3BEaEQ7O0FXdG1ERTs7Ozs7Ozs7Ozs7OztFdUMzQk0sVzNCN0JtQztBdkI4cUQzQzs7QWtEanFERTs7RUFzQkksWUFBWTtBbERncERsQjs7QWtEeGdERTtFQUNFLG9CQUFvQjtBbEQyZ0R4Qjs7QW9EcnJERTtFQUNFLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLFdBQVc7RUFDWCxVQUFVO0FwRHdyRGQ7O0FhN3JERTtFdUNRSSxXQUFXO0VBQ1gsY0FBYztFQUVkLG1CQUE0RjtBcER3ckRsRzs7QW9EcHJERTtFQUNFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sU0FBUztFQUNULE9BQU87RUFDUCxXQUFXO0VBQ1gsWUFBWTtFQUNaLFNBQVM7QXBEdXJEYjs7QWE3c0RFO0V1QzZCTSxpQkFBZ0U7QXBEb3JEeEU7O0FhanRERTtFdUM2Qk0sZ0JBQWdFO0FwRHdyRHhFOztBYXJ0REU7RXVDNkJNLGtCQUFnRTtBcEQ0ckR4RTs7QWF6dERFO0V1QzZCTSxzQkFBZ0U7QXBEZ3NEeEU7O0FxRDd0REU7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixxQkNMb0M7RURNcEMsbUJDSm9DO0U5Q2NwQyxlQUFXO0FSdXREZjs7QVdudERFO0UwQ1RNLHFCQUFxQjtBckRndUQ3Qjs7QXFEM3RERTtFQUNFLG9CQ2hCb0M7QXREOHVEeEM7O0FhOXVERTtFd0NvQk0sYUNqQjRCO0VEa0I1QixxQkFBNkM7RUFDN0MsYy9DcUJ3QjtBTnlzRGhDOztBVzF1REU7RTBDaUJJLGMvQ2dCMEI7QU42c0RoQzs7QWF4dkRFO0V3Q2lDUSw2QkFBNkI7QXJEMnREdkM7QXVEbndERTtFQURGO0lBR0ksZ0JBQWdCO0V2RHdCbEI7QUFDRiIsImZpbGUiOiJmbHVpZC1jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyoqXHJcbiAqIEZsdWlkIENvbXBvbmVudHMgdjAuMjAuMFxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTktMjAyNyBGbHVpZCBGcmFtZXdvcmtcclxuICogQ29weXJpZ2h0IChjKSAyMDE5LTIwMjcgQXNoZmFoYW5cclxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vZmx1aWQtZnJhbWV3b3JrL0ZsdWlkL2Jsb2IvbWFzdGVyL0xJQ0VOU0UpXHJcbiovXG4uZHJvcGRvd24tdHJpZ2dlci5hY3RpdmUgfiAubWVudSwgLmRyb3Bkb3duLm9uLWhvdmVyIC5kcm9wZG93bi5ob3ZlciA+IC5tZW51LCAuZHJvcGRvd24ub24taG92ZXIgLmRyb3Bkb3duOmhvdmVyID4gLm1lbnUsIC5kcm9wZG93bi5vbi1ob3Zlci5ob3ZlciA+IC5tZW51LCAuZHJvcGRvd24ub24taG92ZXI6aG92ZXIgPiAubWVudSwgLmxpc3QgPiBsaSwgLmxpc3QuaXMtaW5saW5lLCAuY29udHJvbC5pcy12YWxpZCA+IC5mZWVkYmFjay5pcy12YWxpZCwgLmNvbnRyb2wuaXMtaW52YWxpZCA+IC5mZWVkYmFjay5pcy1pbnZhbGlkLCAuaXMtdmFsaWRhdGVkIC5jb250cm9sID4gLmZpbGU6cmVxdWlyZWQ6dmFsaWQgfiAuZmVlZGJhY2suaXMtdmFsaWQsXG4uaXMtdmFsaWRhdGVkIC5jb250cm9sID4gLmlucHV0OnJlcXVpcmVkOnZhbGlkIH4gLmZlZWRiYWNrLmlzLXZhbGlkLCAuaXMtdmFsaWRhdGVkIC5jb250cm9sID4gLmZpbGU6cmVxdWlyZWQ6aW52YWxpZCB+IC5mZWVkYmFjay5pcy1pbnZhbGlkLFxuLmlzLXZhbGlkYXRlZCAuY29udHJvbCA+IC5pbnB1dDpyZXF1aXJlZDppbnZhbGlkIH4gLmZlZWRiYWNrLmlzLWludmFsaWQsIC5pcy12YWxpZGF0ZWQgLmNvbnRyb2wgPiBpbnB1dFt0eXBlPVwiY2hlY2tib3hcIl06cmVxdWlyZWQ6Y2hlY2tlZCB+IC5mZWVkYmFjay5pcy12YWxpZCwgLmlzLXZhbGlkYXRlZCAuY29udHJvbCA+IGlucHV0W3R5cGU9XCJjaGVja2JveFwiXTpyZXF1aXJlZDpub3QoOmNoZWNrZWQpIH4gLmZlZWRiYWNrLmlzLWludmFsaWQge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmRyb3Bkb3duLCAubGlzdC5pcy1pbmxpbmUgPiBsaSB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLmRyb3Bkb3duIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uYnRuOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKSwgLm1lbnUtaXRlbTpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKSB7XG4gIC5jb250cm9sID4gLnJhZGlvIH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmNoZWNrYm94IH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLnN3aXRjaCB+IC5sYWJlbDo6YmVmb3JlLCAuaW5wdXQsIC5idG4sIC5yYW5nZSwgLm1lbnUtaXRlbSwgLmFkZG9uLCAuY29udHJvbC5oYXMtZmxvYXRpbmctbGFiZWwgPiAuaW5wdXRbcGxhY2Vob2xkZXI9XCIgXCJdIH4gLmxhYmVsLCAuYnRuLmlzLW1pbjo6YmVmb3JlLCAucmFuZ2U6Oi13ZWJraXQtc2xpZGVyLXRodW1iLCAucmFuZ2U6Oi1tb3otcmFuZ2UtdGh1bWIsIC5yYW5nZTo6LW1zLXRodW1iLCAucmFuZ2U6Oi1tb3otcmFuZ2UtdHJhY2ssIC5yYW5nZTo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2ssIC5yYW5nZTo6LW1zLXRyYWNrLCAuY29udHJvbCA+IC5zd2l0Y2ggfiAubGFiZWw6OmFmdGVyLCAubWVudS1pdGVtOjpiZWZvcmUsIC5tZW51LWl0ZW0uaG92ZXI6bm90KC5hY3RpdmUpOjpiZWZvcmUsIC5tZW51LWl0ZW06bm90KC5hY3RpdmUpOmhvdmVyOjpiZWZvcmUsIC5tZW51LWl0ZW0uZm9jdXM6bm90KC5hY3RpdmUpOjpiZWZvcmUsIC5tZW51LWl0ZW06bm90KC5hY3RpdmUpOmZvY3VzOjpiZWZvcmUge1xuICAgIHRyYW5zaXRpb246IG5vbmU7XG4gIH1cbn1cblxuLmNvbnRyb2wgPiAucmFkaW8gfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuY2hlY2tib3ggfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUsIC5pbnB1dCwgLmJ0biwgLnJhbmdlLCAubWVudS1pdGVtLCAuYWRkb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIHBhZGRpbmc6IDAuMzc1ZW0gMC43NWVtO1xuICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICBjb2xvcjogIzQ3NDc0NztcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgZm9udC1zaXplOiAxcmVtO1xuICB0cmFuc2l0aW9uOiBjb2xvciAwLjE1cyBlYXNlLWluLW91dCxiYWNrZ3JvdW5kLWNvbG9yIDAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlciAwLjE1cyBlYXNlLWluLW91dCxib3gtc2hhZG93IDAuMTVzIGVhc2UtaW4tb3V0O1xufVxuXG4uY29udHJvbCA+IC5yYWRpbyB+IC5sYWJlbDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlOjpiZWZvcmUsIC5jb250cm9sID4gLmNoZWNrYm94IH4gLmxhYmVsOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmU6OmJlZm9yZSwgLmNvbnRyb2wgPiAuc3dpdGNoIH4gLmxhYmVsOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmU6OmJlZm9yZSwgLmlucHV0Om5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUsIC5idG46bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmNvbnRyb2wgPiAucmFkaW8gfiAubGFiZWw6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZTo6YmVmb3JlLCAuY29udHJvbCA+IC5jaGVja2JveCB+IC5sYWJlbDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlOjpiZWZvcmUsIC5jb250cm9sID4gLnN3aXRjaCB+IC5sYWJlbDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlOjpiZWZvcmUsIC5pbnB1dDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlLCAuYnRuOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICBhbmltYXRpb246IG5vbmU7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG59XG5cbi5jb250cm9sID4gLnJhZGlvIH4gLmhvdmVyLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmNoZWNrYm94IH4gLmhvdmVyLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLnN3aXRjaCB+IC5ob3Zlci5sYWJlbDo6YmVmb3JlLCAuaG92ZXIuYnRuLCAuY29udHJvbCA+IC5yYWRpbyB+IC5sYWJlbDpob3Zlcjo6YmVmb3JlLCAuY29udHJvbCA+IC5jaGVja2JveCB+IC5sYWJlbDpob3Zlcjo6YmVmb3JlLCAuY29udHJvbCA+IC5zd2l0Y2ggfiAubGFiZWw6aG92ZXI6OmJlZm9yZSwgLmJ0bjpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDk5LCA5OSwgOTksIDAuNSk7XG59XG5cbi5jb250cm9sID4gLnJhZGlvIH4gLmZvY3VzLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmNoZWNrYm94IH4gLmZvY3VzLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLnN3aXRjaCB+IC5mb2N1cy5sYWJlbDo6YmVmb3JlLCAuZm9jdXMuaW5wdXQsIC5mb2N1cy5idG4sIC5jb250cm9sID4gLnJhZGlvIH4gLmxhYmVsOmZvY3VzOjpiZWZvcmUsIC5jb250cm9sID4gLmNoZWNrYm94IH4gLmxhYmVsOmZvY3VzOjpiZWZvcmUsIC5jb250cm9sID4gLnN3aXRjaCB+IC5sYWJlbDpmb2N1czo6YmVmb3JlLCAuaW5wdXQ6Zm9jdXMsIC5idG46Zm9jdXMge1xuICBhbmltYXRpb246IHJpcHBsZSAxcyBlYXNlLW91dCBib3RoO1xuICBvdXRsaW5lOiAwO1xufVxuXG5Aa2V5ZnJhbWVzIHJpcHBsZSB7XG4gIGZyb20ge1xuICAgIGJveC1zaGFkb3c6IDAgMCAwIDAgY3VycmVudENvbG9yO1xuICB9XG4gIDc1JSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgMC4zcmVtIHRyYW5zcGFyZW50O1xuICB9XG4gIDc2JSB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgfVxufVxuXG4uY29udHJvbCA+IC5yYWRpbzpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlIH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmNoZWNrYm94Om5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUgfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuc3dpdGNoOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUgfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAucmFkaW86bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5jaGVja2JveDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLnN3aXRjaDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIH4gLmxhYmVsOjpiZWZvcmUge1xuICBvcGFjaXR5OiAuNTtcbn1cblxuLmNvbnRyb2wgPiAucmFkaW86Y2hlY2tlZCB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5jaGVja2JveDpjaGVja2VkIH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLnN3aXRjaDpjaGVja2VkIH4gLmxhYmVsOjpiZWZvcmUge1xuICBib3JkZXItY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgYmFja2dyb3VuZDogY3VycmVudENvbG9yO1xuICBhbmltYXRpb246IG5vbmU7XG59XG5cbi5jb250cm9sID4gLmZvY3VzLnJhZGlvIH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmZvY3VzLmNoZWNrYm94IH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmZvY3VzLnN3aXRjaCB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5yYWRpbzpmb2N1cyB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5jaGVja2JveDpmb2N1cyB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5zd2l0Y2g6Zm9jdXMgfiAubGFiZWw6OmJlZm9yZSB7XG4gIGFuaW1hdGlvbjogcmlwcGxlIDFzIGVhc2Utb3V0IGJvdGg7XG59XG5cbi5jb250cm9sID4gLnJhZGlvIH4gLmxhYmVsLCAuY29udHJvbCA+IC5jaGVja2JveCB+IC5sYWJlbCwgLmNvbnRyb2wgPiAuc3dpdGNoIH4gLmxhYmVsIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHBhZGRpbmctbGVmdDogMS43MTQyOWVtO1xuICBtYXJnaW4tYm90dG9tOiAwO1xufVxuXG4uY29udHJvbCA+IC5yYWRpbyB+IC5sYWJlbCA6bm90KDplbXB0eSksIC5jb250cm9sID4gLmNoZWNrYm94IH4gLmxhYmVsIDpub3QoOmVtcHR5KSwgLmNvbnRyb2wgPiAuc3dpdGNoIH4gLmxhYmVsIDpub3QoOmVtcHR5KSB7XG4gIHBhZGRpbmctcmlnaHQ6IC41cmVtO1xuICBwYWRkaW5nLWxlZnQ6IDEuNzE0MjllbTtcbn1cblxuLmNvbnRyb2wgPiAucmFkaW8gfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuY2hlY2tib3ggfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiAwO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gIHdpZHRoOiAxLjE0Mjg2ZW07XG4gIGhlaWdodDogMS4xNDI4NmVtO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXItY29sb3I6ICNiOGI4Yjg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbn1cblxuLmNvbnRyb2wgPiAuaXMtbGlnaHQucmFkaW8gfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuaXMtbGlnaHQuY2hlY2tib3ggfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuaXMtbGlnaHQuc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUge1xuICBjb2xvcjogI2YwZjBmMDtcbn1cblxuLmNvbnRyb2wgPiAuaXMtZGFyay5yYWRpbyB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5pcy1kYXJrLmNoZWNrYm94IH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmlzLWRhcmsuc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUge1xuICBjb2xvcjogIzQ3NDc0Nztcbn1cblxuLmNvbnRyb2wgPiAuaXMtcHJpbWFyeS5yYWRpbyB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5pcy1wcmltYXJ5LmNoZWNrYm94IH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmlzLXByaW1hcnkuc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUge1xuICBjb2xvcjogIzgwNWFkNTtcbn1cblxuLmNvbnRyb2wgPiAuaXMtc2Vjb25kYXJ5LnJhZGlvIH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmlzLXNlY29uZGFyeS5jaGVja2JveCB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5pcy1zZWNvbmRhcnkuc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUge1xuICBjb2xvcjogZ3JheTtcbn1cblxuLmNvbnRyb2wgPiAuaXMtaW5mby5yYWRpbyB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5pcy1pbmZvLmNoZWNrYm94IH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmlzLWluZm8uc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUge1xuICBjb2xvcjogIzEzYzJjMjtcbn1cblxuLmNvbnRyb2wgPiAuaXMtd2Fybi5yYWRpbyB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5pcy13YXJuLmNoZWNrYm94IH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmlzLXdhcm4uc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUge1xuICBjb2xvcjogI2ZhZGIxNDtcbn1cblxuLmNvbnRyb2wgPiAuaXMtdmFsaWQucmFkaW8gfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuaXMtdmFsaWQuY2hlY2tib3ggfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuaXMtdmFsaWQuc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUge1xuICBjb2xvcjogIzUyYzQxYTtcbn1cblxuLmNvbnRyb2wgPiAuaXMtZXJyb3IucmFkaW8gfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuaXMtZXJyb3IuY2hlY2tib3ggfiAubGFiZWw6OmJlZm9yZSwgLmNvbnRyb2wgPiAuaXMtZXJyb3Iuc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUge1xuICBjb2xvcjogI2Y1MjIyZDtcbn1cblxuLmNvbnRyb2wgPiAucmFkaW9bZGlzYWJsZWRdIH4gLmxhYmVsLCAuY29udHJvbCA+IC5jaGVja2JveFtkaXNhYmxlZF0gfiAubGFiZWwsIC5jb250cm9sID4gLnN3aXRjaFtkaXNhYmxlZF0gfiAubGFiZWwsIC5jb250cm9sID4gLnJhZGlvOmRpc2FibGVkIH4gLmxhYmVsLCAuY29udHJvbCA+IC5jaGVja2JveDpkaXNhYmxlZCB+IC5sYWJlbCwgLmNvbnRyb2wgPiAuc3dpdGNoOmRpc2FibGVkIH4gLmxhYmVsIHtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIG9wYWNpdHk6IDAuNTtcbn1cblxuLmNvbnRyb2wgPiAucmFkaW9bZGlzYWJsZWRdIH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmNoZWNrYm94W2Rpc2FibGVkXSB+IC5sYWJlbDo6YmVmb3JlLCAuY29udHJvbCA+IC5zd2l0Y2hbZGlzYWJsZWRdIH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLnJhZGlvOmRpc2FibGVkIH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLmNoZWNrYm94OmRpc2FibGVkIH4gLmxhYmVsOjpiZWZvcmUsIC5jb250cm9sID4gLnN3aXRjaDpkaXNhYmxlZCB+IC5sYWJlbDo6YmVmb3JlIHtcbiAgY29sb3I6ICNiOGI4YjggIWltcG9ydGFudDtcbn1cblxuLmNvbnRyb2wgPiAuZmlsZSwgLmNvbnRyb2wgPiAucmFkaW8sIC5jb250cm9sID4gLmNoZWNrYm94LCAuY29udHJvbCA+IC5zd2l0Y2gge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHotaW5kZXg6IC0xO1xuICBvcGFjaXR5OiAwO1xufVxuXG4uaW5wdXRbZGlzYWJsZWRdLCAuaW5wdXQ6ZGlzYWJsZWQsIHRleHRhcmVhLmlucHV0OnJlYWQtb25seSxcbmlucHV0LmlucHV0OnJlYWQtb25seSwgLmJ0bltkaXNhYmxlZF0sIC5idG46ZGlzYWJsZWQsIC5yYW5nZVtkaXNhYmxlZF0sIC5yYW5nZTpkaXNhYmxlZCwgLm1lbnUtaXRlbVtkaXNhYmxlZF0sIC5tZW51LWl0ZW06ZGlzYWJsZWQge1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgb3BhY2l0eTogMC41O1xufVxuXG4uaW5wdXQuaXMtaW5mby5oYXMtaWNvbiwgLmlucHV0LmlzLXdhcm4uaGFzLWljb24sIC5pbnB1dC5pcy12YWxpZC5oYXMtaWNvbiwgLmlzLXZhbGlkYXRlZCAuaW5wdXQ6cmVxdWlyZWQ6dmFsaWQsIC5pcy12YWxpZGF0ZWQgLmZpbGU6cmVxdWlyZWQ6dmFsaWQgfiAuaW5wdXQubGFiZWwsIC5pbnB1dC5pcy1lcnJvci5oYXMtaWNvbiwgLmlzLXZhbGlkYXRlZCAuaW5wdXQ6cmVxdWlyZWQ6aW52YWxpZCwgLmlzLXZhbGlkYXRlZCAuZmlsZTpyZXF1aXJlZDppbnZhbGlkIH4gLmlucHV0LmxhYmVsLCBzZWxlY3QuaW5wdXQge1xuICBwYWRkaW5nLXJpZ2h0OiAyLjVyZW07XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IDAuNzVyZW0gY2VudGVyO1xuICBiYWNrZ3JvdW5kLXNpemU6IDEuM3JlbSAxLjNyZW07XG59XG5cbi5ncm91cDpub3QoLmlzLXkpID4gLmNvbnRyb2wsIC5ncm91cDpub3QoLmlzLXkpID4gLmlucHV0LFxuLmdyb3VwOm5vdCguaXMteSkgPiAuYWRkb24sXG4uZ3JvdXA6bm90KC5pcy15KSA+IC5idG4ge1xuICBtYXJnaW4tcmlnaHQ6IC0wLjVweDtcbiAgbWFyZ2luLWxlZnQ6IC0wLjVweDtcbn1cblxuLmdyb3VwLmlzLXkgPiAuY29udHJvbCwgLmdyb3VwLmlzLXkgPiAuaW5wdXQsXG4uZ3JvdXAuaXMteSA+IC5hZGRvbixcbi5ncm91cC5pcy15ID4gLmJ0biB7XG4gIG1hcmdpbi10b3A6IC0wLjVweDtcbiAgbWFyZ2luLWJvdHRvbTogLTAuNXB4O1xufVxuXG4uZ3JvdXAuaXMtYm9yZGVybGVzcy5pcy15ID4gLmNvbnRyb2wgPiAuaW5wdXQsIC5ncm91cC5pcy1ib3JkZXJsZXNzLmlzLXkgPiAuaW5wdXQsXG4uZ3JvdXAuaXMtYm9yZGVybGVzcy5pcy15ID4gLmFkZG9uLFxuLmdyb3VwLmlzLWJvcmRlcmxlc3MuaXMteSA+IC5idG4ge1xuICBib3JkZXItcmlnaHQ6IDA7XG4gIGJvcmRlci1sZWZ0OiAwO1xufVxuXG4uZ3JvdXAuaXMtYm9yZGVybGVzczpub3QoLmlzLXkpID4gLmNvbnRyb2wgPiAuaW5wdXQsIC5ncm91cC5pcy1ib3JkZXJsZXNzOm5vdCguaXMteSkgPiAuaW5wdXQsXG4uZ3JvdXAuaXMtYm9yZGVybGVzczpub3QoLmlzLXkpID4gLmFkZG9uLFxuLmdyb3VwLmlzLWJvcmRlcmxlc3M6bm90KC5pcy15KSA+IC5idG4ge1xuICBib3JkZXItdG9wOiAwO1xuICBib3JkZXItYm90dG9tOiAwO1xufVxuXG4uZ3JvdXAuaXMtYm9yZGVybGVzcy5pcy15ID4gLmNvbnRyb2w6Zmlyc3QtY2hpbGQgPiAuaW5wdXQsIC5ncm91cC5pcy1ib3JkZXJsZXNzLmlzLXkgPiAuaW5wdXQ6Zmlyc3QtY2hpbGQsXG4uZ3JvdXAuaXMtYm9yZGVybGVzcy5pcy15ID4gLmFkZG9uOmZpcnN0LWNoaWxkLFxuLmdyb3VwLmlzLWJvcmRlcmxlc3MuaXMteSA+IC5idG46Zmlyc3QtY2hpbGQge1xuICBib3JkZXItdG9wOiAwO1xufVxuXG4uZ3JvdXAuaXMtYm9yZGVybGVzczpub3QoLmlzLXkpID4gLmNvbnRyb2w6bGFzdC1jaGlsZCA+IC5pbnB1dCwgLmdyb3VwLmlzLWJvcmRlcmxlc3M6bm90KC5pcy15KSA+IC5pbnB1dDpsYXN0LWNoaWxkLFxuLmdyb3VwLmlzLWJvcmRlcmxlc3M6bm90KC5pcy15KSA+IC5hZGRvbjpsYXN0LWNoaWxkLFxuLmdyb3VwLmlzLWJvcmRlcmxlc3M6bm90KC5pcy15KSA+IC5idG46bGFzdC1jaGlsZCB7XG4gIGJvcmRlci1yaWdodDogMDtcbn1cblxuLmdyb3VwLmlzLWJvcmRlcmxlc3MuaXMteSA+IC5jb250cm9sOmxhc3QtY2hpbGQgPiAuaW5wdXQsIC5ncm91cC5pcy1ib3JkZXJsZXNzLmlzLXkgPiAuaW5wdXQ6bGFzdC1jaGlsZCxcbi5ncm91cC5pcy1ib3JkZXJsZXNzLmlzLXkgPiAuYWRkb246bGFzdC1jaGlsZCxcbi5ncm91cC5pcy1ib3JkZXJsZXNzLmlzLXkgPiAuYnRuOmxhc3QtY2hpbGQge1xuICBib3JkZXItYm90dG9tOiAwO1xufVxuXG4uZ3JvdXAuaXMtYm9yZGVybGVzczpub3QoLmlzLXkpID4gLmNvbnRyb2w6Zmlyc3QtY2hpbGQgPiAuaW5wdXQsIC5ncm91cC5pcy1ib3JkZXJsZXNzOm5vdCguaXMteSkgPiAuaW5wdXQ6Zmlyc3QtY2hpbGQsXG4uZ3JvdXAuaXMtYm9yZGVybGVzczpub3QoLmlzLXkpID4gLmFkZG9uOmZpcnN0LWNoaWxkLFxuLmdyb3VwLmlzLWJvcmRlcmxlc3M6bm90KC5pcy15KSA+IC5idG46Zmlyc3QtY2hpbGQge1xuICBib3JkZXItbGVmdDogMDtcbn1cblxuLmdyb3VwOm5vdCguaXMteSkgPiAuY29udHJvbCA+IC5pbnB1dCwgLmdyb3VwOm5vdCguaXMteSkgPiAuaW5wdXQsXG4uZ3JvdXA6bm90KC5pcy15KSA+IC5hZGRvbixcbi5ncm91cDpub3QoLmlzLXkpID4gLmJ0biwgLmdyb3VwLmlzLXkgPiAuY29udHJvbCA+IC5pbnB1dCwgLmdyb3VwLmlzLXkgPiAuaW5wdXQsXG4uZ3JvdXAuaXMteSA+IC5hZGRvbixcbi5ncm91cC5pcy15ID4gLmJ0biwgLmdyb3VwLmlzLWJvcmRlcmxlc3M6bm90KC5pcy15KSA+IC5jb250cm9sID4gLmlucHV0LCAuZ3JvdXAuaXMtYm9yZGVybGVzczpub3QoLmlzLXkpID4gLmlucHV0LFxuLmdyb3VwLmlzLWJvcmRlcmxlc3M6bm90KC5pcy15KSA+IC5hZGRvbixcbi5ncm91cC5pcy1ib3JkZXJsZXNzOm5vdCguaXMteSkgPiAuYnRuLCAuZ3JvdXAuaXMtYm9yZGVybGVzcy5pcy15ID4gLmNvbnRyb2wgPiAuaW5wdXQsIC5ncm91cC5pcy1ib3JkZXJsZXNzLmlzLXkgPiAuaW5wdXQsXG4uZ3JvdXAuaXMtYm9yZGVybGVzcy5pcy15ID4gLmFkZG9uLFxuLmdyb3VwLmlzLWJvcmRlcmxlc3MuaXMteSA+IC5idG4ge1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG4uZ3JvdXAuaXMteSA+IC5jb250cm9sOmZpcnN0LWNoaWxkID4gLmlucHV0Om5vdCguaXMtbWluKSwgLmdyb3VwLmlzLXkgPiAuaW5wdXQ6Zmlyc3QtY2hpbGQ6bm90KC5pcy1taW4pLFxuLmdyb3VwLmlzLXkgPiAuYWRkb246Zmlyc3QtY2hpbGQ6bm90KC5pcy1taW4pLFxuLmdyb3VwLmlzLXkgPiAuYnRuOmZpcnN0LWNoaWxkOm5vdCguaXMtbWluKSB7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDAuMjVlbTtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDAuMjVlbTtcbn1cblxuLmdyb3VwOm5vdCguaXMteSkgPiAuY29udHJvbDpsYXN0LWNoaWxkID4gLmlucHV0Om5vdCguaXMtbWluKSwgLmdyb3VwOm5vdCguaXMteSkgPiAuaW5wdXQ6bGFzdC1jaGlsZDpub3QoLmlzLW1pbiksXG4uZ3JvdXA6bm90KC5pcy15KSA+IC5hZGRvbjpsYXN0LWNoaWxkOm5vdCguaXMtbWluKSxcbi5ncm91cDpub3QoLmlzLXkpID4gLmJ0bjpsYXN0LWNoaWxkOm5vdCguaXMtbWluKSB7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwLjI1ZW07XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwLjI1ZW07XG59XG5cbi5ncm91cC5pcy15ID4gLmNvbnRyb2w6bGFzdC1jaGlsZCA+IC5pbnB1dDpub3QoLmlzLW1pbiksIC5ncm91cC5pcy15ID4gLmlucHV0Omxhc3QtY2hpbGQ6bm90KC5pcy1taW4pLFxuLmdyb3VwLmlzLXkgPiAuYWRkb246bGFzdC1jaGlsZDpub3QoLmlzLW1pbiksXG4uZ3JvdXAuaXMteSA+IC5idG46bGFzdC1jaGlsZDpub3QoLmlzLW1pbikge1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMC4yNWVtO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwLjI1ZW07XG59XG5cbi5ncm91cDpub3QoLmlzLXkpID4gLmNvbnRyb2w6Zmlyc3QtY2hpbGQgPiAuaW5wdXQ6bm90KC5pcy1taW4pLCAuZ3JvdXA6bm90KC5pcy15KSA+IC5pbnB1dDpmaXJzdC1jaGlsZDpub3QoLmlzLW1pbiksXG4uZ3JvdXA6bm90KC5pcy15KSA+IC5hZGRvbjpmaXJzdC1jaGlsZDpub3QoLmlzLW1pbiksXG4uZ3JvdXA6bm90KC5pcy15KSA+IC5idG46Zmlyc3QtY2hpbGQ6bm90KC5pcy1taW4pIHtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMC4yNWVtO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwLjI1ZW07XG59XG5cbi5kcm9wZG93bi5vbi1ob3ZlciAuZHJvcGRvd24gPiAubWVudTo6YmVmb3JlLCAuZHJvcGRvd24ub24taG92ZXIgPiAubWVudTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC0wLjI1ZW07XG4gIHJpZ2h0OiAtMC4yNWVtO1xuICBib3R0b206IC0wLjI1ZW07XG4gIGxlZnQ6IC0wLjI1ZW07XG4gIHotaW5kZXg6IC0xO1xufVxuXG4uaW5wdXQge1xuICB3aWR0aDogMTAwJTtcbiAgYm9yZGVyLWNvbG9yOiAjYjhiOGI4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAycHggcmdiYSgxNSwgMTUsIDE1LCAwLjEpO1xufVxuXG4uaW5wdXQuaG92ZXIsIC5pbnB1dDpob3ZlciB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDE1LCAxNSwgMTUsIDAuMSksMCAwIDAgMC4ycmVtIHJnYmEoOTksIDk5LCA5OSwgMC41KTtcbn1cblxuLmlucHV0LmZvY3VzLCAuaW5wdXQ6Zm9jdXMge1xuICBib3JkZXItY29sb3I6IGN1cnJlbnRDb2xvcjtcbiAgYm94LXNoYWRvdzogbm9uZTtcbn1cblxuLmlucHV0LmlzLW1pbiB7XG4gIHBhZGRpbmctYm90dG9tOiAwLjMwMzU3ZW07XG4gIGJvcmRlci13aWR0aDogMDtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogM3B4O1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG4uaW5wdXQuaXMtbWluOm5vdCguaG92ZXIpOm5vdCg6aG92ZXIpIHtcbiAgYm94LXNoYWRvdzogbm9uZTtcbn1cblxuLmlucHV0LmlzLWxpZ2h0IHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDI0MCwgMjQwLCAyNDAsIDAuNSk7XG4gIGNvbG9yOiAjZjBmMGYwO1xufVxuXG4uaW5wdXQuaXMtbGlnaHQuaG92ZXIsIC5pbnB1dC5pcy1saWdodDpob3ZlciB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDE1LCAxNSwgMTUsIDAuMSksMCAwIDAgMC4ycmVtIHJnYmEoMjQwLCAyNDAsIDI0MCwgMC41KTtcbn1cblxuLmNvbnRyb2wgPiAuaW5wdXQuaXMtbGlnaHQgfiAuaWNvbiB7XG4gIGNvbG9yOiAjZjBmMGYwO1xufVxuXG4uY29udHJvbC5oYXMtZmxvYXRpbmctbGFiZWwgPiAuaW5wdXQuaXMtbGlnaHQgfiAubGFiZWwge1xuICBjb2xvcjogI2YwZjBmMDtcbn1cblxuLmlucHV0LmlzLWRhcmsge1xuICBib3JkZXItY29sb3I6IHJnYmEoNzEsIDcxLCA3MSwgMC41KTtcbiAgY29sb3I6ICM0NzQ3NDc7XG59XG5cbi5pbnB1dC5pcy1kYXJrLmhvdmVyLCAuaW5wdXQuaXMtZGFyazpob3ZlciB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDE1LCAxNSwgMTUsIDAuMSksMCAwIDAgMC4ycmVtIHJnYmEoNzEsIDcxLCA3MSwgMC41KTtcbn1cblxuLmNvbnRyb2wgPiAuaW5wdXQuaXMtZGFyayB+IC5pY29uIHtcbiAgY29sb3I6ICM0NzQ3NDc7XG59XG5cbi5jb250cm9sLmhhcy1mbG9hdGluZy1sYWJlbCA+IC5pbnB1dC5pcy1kYXJrIH4gLmxhYmVsIHtcbiAgY29sb3I6ICM0NzQ3NDc7XG59XG5cbi5pbnB1dC5pcy1wcmltYXJ5IHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDEyOCwgOTAsIDIxMywgMC41KTtcbiAgY29sb3I6ICM4MDVhZDU7XG59XG5cbi5pbnB1dC5pcy1wcmltYXJ5LmhvdmVyLCAuaW5wdXQuaXMtcHJpbWFyeTpob3ZlciB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDE1LCAxNSwgMTUsIDAuMSksMCAwIDAgMC4ycmVtIHJnYmEoMTI4LCA5MCwgMjEzLCAwLjUpO1xufVxuXG4uY29udHJvbCA+IC5pbnB1dC5pcy1wcmltYXJ5IH4gLmljb24ge1xuICBjb2xvcjogIzgwNWFkNTtcbn1cblxuLmNvbnRyb2wuaGFzLWZsb2F0aW5nLWxhYmVsID4gLmlucHV0LmlzLXByaW1hcnkgfiAubGFiZWwge1xuICBjb2xvcjogIzgwNWFkNTtcbn1cblxuLmlucHV0LmlzLXNlY29uZGFyeSB7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjUpO1xuICBjb2xvcjogZ3JheTtcbn1cblxuLmlucHV0LmlzLXNlY29uZGFyeS5ob3ZlciwgLmlucHV0LmlzLXNlY29uZGFyeTpob3ZlciB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDE1LCAxNSwgMTUsIDAuMSksMCAwIDAgMC4ycmVtIHJnYmEoMTI4LCAxMjgsIDEyOCwgMC41KTtcbn1cblxuLmNvbnRyb2wgPiAuaW5wdXQuaXMtc2Vjb25kYXJ5IH4gLmljb24ge1xuICBjb2xvcjogZ3JheTtcbn1cblxuLmNvbnRyb2wuaGFzLWZsb2F0aW5nLWxhYmVsID4gLmlucHV0LmlzLXNlY29uZGFyeSB+IC5sYWJlbCB7XG4gIGNvbG9yOiBncmF5O1xufVxuXG4uaW5wdXQuaXMtaW5mbyB7XG4gIGJvcmRlci1jb2xvcjogcmdiYSgxOSwgMTk0LCAxOTQsIDAuNSk7XG4gIGNvbG9yOiAjMTNjMmMyO1xufVxuXG4uaW5wdXQuaXMtaW5mby5ob3ZlciwgLmlucHV0LmlzLWluZm86aG92ZXIge1xuICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAycHggcmdiYSgxNSwgMTUsIDE1LCAwLjEpLDAgMCAwIDAuMnJlbSByZ2JhKDE5LCAxOTQsIDE5NCwgMC41KTtcbn1cblxuLmlucHV0LmlzLWluZm8uaGFzLWljb24ge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHN0eWxlPSdzdHJva2U6JTIzMTNjMmMyO3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtmaWxsOm5vbmU7c3Ryb2tlLXdpZHRoOjEuNztmaWxsLXJ1bGU6ZXZlbm9kZCcgdmlld2JveD0nMCAwIDIxIDIxJyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnJTNFJTNDZyUzRSUzQ2NpcmNsZSBjeD0nOScgY3k9JzknIHI9JzgnLyUzRSUzQ3BhdGggZD0nbTkgMTMuNjd2LTUuNDgnLyUzRSUzQ2NpcmNsZSBjeD0nOScgY3k9JzUuNCcgcj0nLjQzJyBzdHJva2Utd2lkdGg9JzAuODUnLyUzRSUzQy9nJTNFJTNDL3N2ZyUzRVwiKTtcbn1cblxuLmNvbnRyb2wgPiAuaW5wdXQuaXMtaW5mbyB+IC5pY29uIHtcbiAgY29sb3I6ICMxM2MyYzI7XG59XG5cbi5jb250cm9sLmhhcy1mbG9hdGluZy1sYWJlbCA+IC5pbnB1dC5pcy1pbmZvIH4gLmxhYmVsIHtcbiAgY29sb3I6ICMxM2MyYzI7XG59XG5cbi5pbnB1dC5pcy13YXJuIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDI1MCwgMjE5LCAyMCwgMC41KTtcbiAgY29sb3I6ICNmYWRiMTQ7XG59XG5cbi5pbnB1dC5pcy13YXJuLmhvdmVyLCAuaW5wdXQuaXMtd2Fybjpob3ZlciB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDE1LCAxNSwgMTUsIDAuMSksMCAwIDAgMC4ycmVtIHJnYmEoMjUwLCAyMTksIDIwLCAwLjUpO1xufVxuXG4uaW5wdXQuaXMtd2Fybi5oYXMtaWNvbiB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM0Nzdmcgc3R5bGU9J3N0cm9rZTolMjNmYWRiMTQ7c3Ryb2tlLWxpbmVjYXA6cm91bmQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO2ZpbGw6bm9uZTtzdHJva2Utd2lkdGg6MS43O2ZpbGwtcnVsZTpldmVub2RkJyB2aWV3Ym94PScwIDAgMjEgMjEnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyclM0UlM0NnJTNFJTNDcGF0aCBkPSdtOSA3djQuMicvJTNFJTNDY2lyY2xlIGN4PSc5JyBjeT0nMTMuNjcnIHI9Jy40Mycgc3Ryb2tlLXdpZHRoPScwLjg1Jy8lM0UlM0NwYXRoIGQ9J20xMC40NSAyLjUyLTguODMgMTUuMzdoMTcuNjd6JyBzdHJva2Utd2lkdGg9JzInIHRyYW5zZm9ybT0nbWF0cml4KC44NyAwIDAgLjg3IC0uMDYgLjEpJy8lM0UlM0MvZyUzRSUzQy9zdmclM0VcIik7XG59XG5cbi5jb250cm9sID4gLmlucHV0LmlzLXdhcm4gfiAuaWNvbiB7XG4gIGNvbG9yOiAjZmFkYjE0O1xufVxuXG4uY29udHJvbC5oYXMtZmxvYXRpbmctbGFiZWwgPiAuaW5wdXQuaXMtd2FybiB+IC5sYWJlbCB7XG4gIGNvbG9yOiAjZmFkYjE0O1xufVxuXG4uaW5wdXQuaXMtdmFsaWQsIC5pcy12YWxpZGF0ZWQgLmlucHV0OnJlcXVpcmVkOnZhbGlkLCAuaXMtdmFsaWRhdGVkIC5maWxlOnJlcXVpcmVkOnZhbGlkIH4gLmlucHV0LmxhYmVsIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDgyLCAxOTYsIDI2LCAwLjUpO1xuICBjb2xvcjogIzUyYzQxYTtcbn1cblxuLmlucHV0LmlzLXZhbGlkLmhvdmVyLCAuaXMtdmFsaWRhdGVkIC5ob3Zlci5pbnB1dDpyZXF1aXJlZDp2YWxpZCwgLmlzLXZhbGlkYXRlZCAuZmlsZTpyZXF1aXJlZDp2YWxpZCB+IC5ob3Zlci5pbnB1dC5sYWJlbCwgLmlucHV0LmlzLXZhbGlkOmhvdmVyLCAuaXMtdmFsaWRhdGVkIC5pbnB1dDpob3ZlcjpyZXF1aXJlZDp2YWxpZCwgLmlzLXZhbGlkYXRlZCAuZmlsZTpyZXF1aXJlZDp2YWxpZCB+IC5pbnB1dC5sYWJlbDpob3ZlciB7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDE1LCAxNSwgMTUsIDAuMSksMCAwIDAgMC4ycmVtIHJnYmEoODIsIDE5NiwgMjYsIDAuNSk7XG59XG5cbi5pbnB1dC5pcy12YWxpZC5oYXMtaWNvbiwgLmlzLXZhbGlkYXRlZCAuaW5wdXQ6cmVxdWlyZWQ6dmFsaWQsIC5pcy12YWxpZGF0ZWQgLmZpbGU6cmVxdWlyZWQ6dmFsaWQgfiAuaW5wdXQubGFiZWwge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHN0eWxlPSdzdHJva2U6JTIzNTJjNDFhO3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtmaWxsOm5vbmU7c3Ryb2tlLXdpZHRoOjI7ZmlsbC1ydWxlOmV2ZW5vZGQnIHZpZXdib3g9JzAgMCAyMSAyMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ3BhdGggZD0nbTE1LjcxIDQuNTUtOSA5LTQuMTMtNC4xMycvJTNFJTNDL3N2ZyUzRVwiKTtcbn1cblxuLmNvbnRyb2wgPiAuaW5wdXQuaXMtdmFsaWQgfiAuaWNvbiwgLmlzLXZhbGlkYXRlZCAuY29udHJvbCA+IC5pbnB1dDpyZXF1aXJlZDp2YWxpZCB+IC5pY29uLCAuaXMtdmFsaWRhdGVkIC5jb250cm9sID4gLmZpbGU6cmVxdWlyZWQ6dmFsaWQgfiAuaW5wdXQubGFiZWwgfiAuaWNvbiB7XG4gIGNvbG9yOiAjNTJjNDFhO1xufVxuXG4uY29udHJvbC5oYXMtZmxvYXRpbmctbGFiZWwgPiAuaW5wdXQuaXMtdmFsaWQgfiAubGFiZWwsIC5pcy12YWxpZGF0ZWQgLmNvbnRyb2wuaGFzLWZsb2F0aW5nLWxhYmVsID4gLmlucHV0OnJlcXVpcmVkOnZhbGlkIH4gLmxhYmVsLCAuaXMtdmFsaWRhdGVkIC5jb250cm9sLmhhcy1mbG9hdGluZy1sYWJlbCA+IC5maWxlOnJlcXVpcmVkOnZhbGlkIH4gLmlucHV0LmxhYmVsIH4gLmxhYmVsIHtcbiAgY29sb3I6ICM1MmM0MWE7XG59XG5cbi5pbnB1dC5pcy1lcnJvciwgLmlzLXZhbGlkYXRlZCAuaW5wdXQ6cmVxdWlyZWQ6aW52YWxpZCwgLmlzLXZhbGlkYXRlZCAuZmlsZTpyZXF1aXJlZDppbnZhbGlkIH4gLmlucHV0LmxhYmVsIHtcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKDI0NSwgMzQsIDQ1LCAwLjUpO1xuICBjb2xvcjogI2Y1MjIyZDtcbn1cblxuLmlucHV0LmlzLWVycm9yLmhvdmVyLCAuaXMtdmFsaWRhdGVkIC5ob3Zlci5pbnB1dDpyZXF1aXJlZDppbnZhbGlkLCAuaXMtdmFsaWRhdGVkIC5maWxlOnJlcXVpcmVkOmludmFsaWQgfiAuaG92ZXIuaW5wdXQubGFiZWwsIC5pbnB1dC5pcy1lcnJvcjpob3ZlciwgLmlzLXZhbGlkYXRlZCAuaW5wdXQ6aG92ZXI6cmVxdWlyZWQ6aW52YWxpZCwgLmlzLXZhbGlkYXRlZCAuZmlsZTpyZXF1aXJlZDppbnZhbGlkIH4gLmlucHV0LmxhYmVsOmhvdmVyIHtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoMTUsIDE1LCAxNSwgMC4xKSwwIDAgMCAwLjJyZW0gcmdiYSgyNDUsIDM0LCA0NSwgMC41KTtcbn1cblxuLmlucHV0LmlzLWVycm9yLmhhcy1pY29uLCAuaXMtdmFsaWRhdGVkIC5pbnB1dDpyZXF1aXJlZDppbnZhbGlkLCAuaXMtdmFsaWRhdGVkIC5maWxlOnJlcXVpcmVkOmludmFsaWQgfiAuaW5wdXQubGFiZWwge1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNDc3ZnIHN0eWxlPSdzdHJva2U6JTIzZjUyMjJkO3N0cm9rZS1saW5lY2FwOnJvdW5kO3N0cm9rZS1saW5lam9pbjpyb3VuZDtmaWxsOm5vbmU7c3Ryb2tlLXdpZHRoOjI7ZmlsbC1ydWxlOmV2ZW5vZGQnIHZpZXdib3g9JzAgMCAyMSAyMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ2clM0UlM0NwYXRoIGQ9J20zLjg4IDMuODggMTAuNDIgMTAuNDInLyUzRSUzQ3BhdGggZD0nbTE0LjMgMy44OC0xMC40MiAxMC40MicvJTNFJTNDL2clM0UlM0Mvc3ZnJTNFXCIpO1xufVxuXG4uY29udHJvbCA+IC5pbnB1dC5pcy1lcnJvciB+IC5pY29uLCAuaXMtdmFsaWRhdGVkIC5jb250cm9sID4gLmlucHV0OnJlcXVpcmVkOmludmFsaWQgfiAuaWNvbiwgLmlzLXZhbGlkYXRlZCAuY29udHJvbCA+IC5maWxlOnJlcXVpcmVkOmludmFsaWQgfiAuaW5wdXQubGFiZWwgfiAuaWNvbiB7XG4gIGNvbG9yOiAjZjUyMjJkO1xufVxuXG4uY29udHJvbC5oYXMtZmxvYXRpbmctbGFiZWwgPiAuaW5wdXQuaXMtZXJyb3IgfiAubGFiZWwsIC5pcy12YWxpZGF0ZWQgLmNvbnRyb2wuaGFzLWZsb2F0aW5nLWxhYmVsID4gLmlucHV0OnJlcXVpcmVkOmludmFsaWQgfiAubGFiZWwsIC5pcy12YWxpZGF0ZWQgLmNvbnRyb2wuaGFzLWZsb2F0aW5nLWxhYmVsID4gLmZpbGU6cmVxdWlyZWQ6aW52YWxpZCB+IC5pbnB1dC5sYWJlbCB+IC5sYWJlbCB7XG4gIGNvbG9yOiAjZjUyMjJkO1xufVxuXG5zZWxlY3QuaW5wdXQge1xuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyBzdHlsZT0nc3Ryb2tlOiUyMzYzNjM2MztzdHJva2UtbGluZWNhcDpyb3VuZDtzdHJva2UtbGluZWpvaW46cm91bmQ7ZmlsbDpub25lO3N0cm9rZS13aWR0aDoxLjc7ZmlsbC1ydWxlOmV2ZW5vZGQnIHZpZXdib3g9JzAgMCAyMSAyMScgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyUzRSUzQ3BhdGggZD0nbTQuNzUgNy4xMiA0Ljc1IDQuNzUgNC43NS00Ljc1Jy8lM0UlM0Mvc3ZnJTNFXCIpO1xufVxuXG5zZWxlY3QuaW5wdXRbbXVsdGlwbGVdLCBzZWxlY3QuaW5wdXRbc2l6ZV06bm90KFtzaXplPVwiMVwiXSkge1xuICBwYWRkaW5nLXJpZ2h0OiAwLjM3NWVtO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xufVxuXG5zZWxlY3QuaW5wdXQ6Oi1tcy1leHBhbmQge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG5zZWxlY3QuaW5wdXQ6Oi1tcy12YWx1ZSB7XG4gIGNvbG9yOiAjNDc0NzQ3O1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xufVxuXG4uaW5wdXQ6Oi1tcy1jbGVhciB7XG4gIGNvbG9yOiAjNjM2MzYzO1xufVxuXG4uaW5wdXQ6OnBsYWNlaG9sZGVyIHtcbiAgb3BhY2l0eTogMTtcbiAgY29sb3I6ICNiOGI4Yjg7XG59XG5cbnRleHRhcmVhLmlucHV0IHtcbiAgaGVpZ2h0OiBhdXRvO1xuICBtaW4taGVpZ2h0OiAyLjRlbTtcbn1cblxuLmNvbnRyb2wgPiAuaW5wdXQge1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmNvbnRyb2wuaGFzLWljb24tbGVmdCA+IC5pbnB1dCB+IC5pY29uIHtcbiAgei1pbmRleDogMTE7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBvcGFjaXR5OiAwLjU7XG59XG5cbi5jb250cm9sLmhhcy1pY29uLWxlZnQgPiAuaW5wdXQuZm9jdXMgfiAuaWNvbiwgLmNvbnRyb2wuaGFzLWljb24tbGVmdCA+IC5pbnB1dDpmb2N1cyB+IC5pY29uIHtcbiAgb3BhY2l0eTogMTtcbn1cblxuLmNvbnRyb2wuaGFzLWZsb2F0aW5nLWxhYmVsID4gLmlucHV0W3BsYWNlaG9sZGVyPVwiIFwiXSB+IC5sYWJlbCB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiA1MCU7XG4gIGxlZnQ6IDAuNzVyZW07XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gIHBhZGRpbmc6IDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHRyYW5zaXRpb246IHRvcCAwLjE1cyBlYXNlLWluLW91dCxmb250LXNpemUgMC4xNXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5jb250cm9sLmhhcy1mbG9hdGluZy1sYWJlbCA+IC5pbnB1dFtwbGFjZWhvbGRlcj1cIiBcIl06bm90KDpwbGFjZWhvbGRlci1zaG93bikgfiAubGFiZWwsIC5jb250cm9sLmhhcy1mbG9hdGluZy1sYWJlbCA+IC5pbnB1dFtwbGFjZWhvbGRlcj1cIiBcIl0uZm9jdXMgfiAubGFiZWwsIC5jb250cm9sLmhhcy1mbG9hdGluZy1sYWJlbCA+IC5pbnB1dFtwbGFjZWhvbGRlcj1cIiBcIl06Zm9jdXMgfiAubGFiZWwge1xuICB0b3A6IDAlO1xuICBmb250LXNpemU6IDAuNzVlbTtcbn1cblxuLmNvbnRyb2wuaGFzLWZsb2F0aW5nLWxhYmVsID4gLmlucHV0W3BsYWNlaG9sZGVyPVwiIFwiXTpub3QoOi1tcy1pbnB1dC1wbGFjZWhvbGRlcikgfiAubGFiZWwge1xuICB0b3A6IDAlO1xuICBmb250LXNpemU6IDAuNzVlbTtcbn1cblxuLmJ0biB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmJ0bi5pcy1zbGQge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYzNjM2Mztcbn1cblxuLmJ0bi5pcy1zbGQuZm9jdXMsIC5idG4uaXMtc2xkOmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzgzODM4Mztcbn1cblxuLmJ0bi5pcy1zbGQ6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1zbGQ6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM2MzYzNjO1xufVxuXG4uYnRuLmlzLXNsZC5pcy1sb2FkaW5nOjpiZWZvcmUge1xuICBjb2xvcjogI2ZmZjtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtbGlnaHQge1xuICBjb2xvcjogIzBmMGYwZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtbGlnaHQuaG92ZXIsIC5idG4uaXMtc2xkLmlzLWxpZ2h0OmhvdmVyIHtcbiAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMjQwLCAyNDAsIDI0MCwgMC41KTtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtbGlnaHQuZm9jdXMsIC5idG4uaXMtc2xkLmlzLWxpZ2h0OmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjNmMztcbn1cblxuLmJ0bi5pcy1zbGQuaXMtbGlnaHQ6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1zbGQuaXMtbGlnaHQ6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGNvbG9yOiAjMGYwZjBmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTA5MDkwO1xufVxuXG4uYnRuLmlzLXNsZC5pcy1saWdodC5pcy1sb2FkaW5nOjpiZWZvcmUge1xuICBjb2xvcjogIzBmMGYwZjtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtZGFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NzQ3NDc7XG59XG5cbi5idG4uaXMtc2xkLmlzLWRhcmsuaG92ZXIsIC5idG4uaXMtc2xkLmlzLWRhcms6aG92ZXIge1xuICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSg3MSwgNzEsIDcxLCAwLjUpO1xufVxuXG4uYnRuLmlzLXNsZC5pcy1kYXJrLmZvY3VzLCAuYnRuLmlzLXNsZC5pcy1kYXJrOmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzZjNmM2Yztcbn1cblxuLmJ0bi5pcy1zbGQuaXMtZGFyazpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlLCAuYnRuLmlzLXNsZC5pcy1kYXJrOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmIyYjJiO1xufVxuXG4uYnRuLmlzLXNsZC5pcy1wcmltYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzgwNWFkNTtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtcHJpbWFyeS5ob3ZlciwgLmJ0bi5pcy1zbGQuaXMtcHJpbWFyeTpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDEyOCwgOTAsIDIxMywgMC41KTtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtcHJpbWFyeS5mb2N1cywgLmJ0bi5pcy1zbGQuaXMtcHJpbWFyeTpmb2N1cyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5OTdiZGQ7XG59XG5cbi5idG4uaXMtc2xkLmlzLXByaW1hcnk6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1zbGQuaXMtcHJpbWFyeTpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRkMzY4MDtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtc2Vjb25kYXJ5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtc2Vjb25kYXJ5LmhvdmVyLCAuYnRuLmlzLXNsZC5pcy1zZWNvbmRhcnk6aG92ZXIge1xuICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgxMjgsIDEyOCwgMTI4LCAwLjUpO1xufVxuXG4uYnRuLmlzLXNsZC5pcy1zZWNvbmRhcnkuZm9jdXMsIC5idG4uaXMtc2xkLmlzLXNlY29uZGFyeTpmb2N1cyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5OTk5OTk7XG59XG5cbi5idG4uaXMtc2xkLmlzLXNlY29uZGFyeTpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlLCAuYnRuLmlzLXNsZC5pcy1zZWNvbmRhcnk6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0ZDRkNGQ7XG59XG5cbi5idG4uaXMtc2xkLmlzLWluZm8ge1xuICBjb2xvcjogIzBmMGYwZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEzYzJjMjtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtaW5mby5ob3ZlciwgLmJ0bi5pcy1zbGQuaXMtaW5mbzpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDE5LCAxOTQsIDE5NCwgMC41KTtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtaW5mby5mb2N1cywgLmJ0bi5pcy1zbGQuaXMtaW5mbzpmb2N1cyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM0MmNlY2U7XG59XG5cbi5idG4uaXMtc2xkLmlzLWluZm86bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1zbGQuaXMtaW5mbzpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMwYjc0NzQ7XG59XG5cbi5idG4uaXMtc2xkLmlzLWluZm8uaXMtbG9hZGluZzo6YmVmb3JlIHtcbiAgY29sb3I6ICMwZjBmMGY7XG59XG5cbi5idG4uaXMtc2xkLmlzLXdhcm4ge1xuICBjb2xvcjogIzBmMGYwZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZGIxNDtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtd2Fybi5ob3ZlciwgLmJ0bi5pcy1zbGQuaXMtd2Fybjpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDI1MCwgMjE5LCAyMCwgMC41KTtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtd2Fybi5mb2N1cywgLmJ0bi5pcy1zbGQuaXMtd2Fybjpmb2N1cyB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYmUyNDM7XG59XG5cbi5idG4uaXMtc2xkLmlzLXdhcm46bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1zbGQuaXMtd2Fybjpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICM5NjgzMGM7XG59XG5cbi5idG4uaXMtc2xkLmlzLXdhcm4uaXMtbG9hZGluZzo6YmVmb3JlIHtcbiAgY29sb3I6ICMwZjBmMGY7XG59XG5cbi5idG4uaXMtc2xkLmlzLXZhbGlkIHtcbiAgY29sb3I6ICMwZjBmMGY7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1MmM0MWE7XG59XG5cbi5idG4uaXMtc2xkLmlzLXZhbGlkLmhvdmVyLCAuYnRuLmlzLXNsZC5pcy12YWxpZDpob3ZlciB7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDgyLCAxOTYsIDI2LCAwLjUpO1xufVxuXG4uYnRuLmlzLXNsZC5pcy12YWxpZC5mb2N1cywgLmJ0bi5pcy1zbGQuaXMtdmFsaWQ6Zm9jdXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzVkMDQ4O1xufVxuXG4uYnRuLmlzLXNsZC5pcy12YWxpZDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlLCAuYnRuLmlzLXNsZC5pcy12YWxpZDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzMTc2MTA7XG59XG5cbi5idG4uaXMtc2xkLmlzLXZhbGlkLmlzLWxvYWRpbmc6OmJlZm9yZSB7XG4gIGNvbG9yOiAjMGYwZjBmO1xufVxuXG4uYnRuLmlzLXNsZC5pcy1lcnJvciB7XG4gIGNvbG9yOiAjMGYwZjBmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjUyMjJkO1xufVxuXG4uYnRuLmlzLXNsZC5pcy1lcnJvci5ob3ZlciwgLmJ0bi5pcy1zbGQuaXMtZXJyb3I6aG92ZXIge1xuICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyNDUsIDM0LCA0NSwgMC41KTtcbn1cblxuLmJ0bi5pcy1zbGQuaXMtZXJyb3IuZm9jdXMsIC5idG4uaXMtc2xkLmlzLWVycm9yOmZvY3VzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y3NGU1Nztcbn1cblxuLmJ0bi5pcy1zbGQuaXMtZXJyb3I6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1zbGQuaXMtZXJyb3I6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTMxNDFiO1xufVxuXG4uYnRuLmlzLXNsZC5pcy1lcnJvci5pcy1sb2FkaW5nOjpiZWZvcmUge1xuICBjb2xvcjogIzBmMGYwZjtcbn1cblxuLmJ0bi5pcy1zbGQuZm9jdXMsIC5idG4uaXMtc2xkOmZvY3VzIHtcbiAgYW5pbWF0aW9uOiByaXBwbGUtZ3JheSAxcyBlYXNlLW91dCBib3RoO1xufVxuXG5Aa2V5ZnJhbWVzIHJpcHBsZS1ncmF5IHtcbiAgZnJvbSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgMCBncmF5O1xuICB9XG4gIDc1JSB7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgMC4zcmVtIHRyYW5zcGFyZW50O1xuICB9XG4gIDc2JSB7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgfVxufVxuXG4uYnRuLmlzLXNsZFtkaXNhYmxlZF0sIC5idG4uaXMtc2xkOmRpc2FibGVkIHtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICM2MzYzNjM7XG59XG5cbi5idG4uaXMtb3V0IHtcbiAgYm9yZGVyLWNvbG9yOiAjYjhiOGI4O1xuICBjb2xvcjogIzYzNjM2Mztcbn1cblxuLmJ0bi5pcy1vdXQuaG92ZXIsIC5idG4uaXMtb3V0OmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjNjM2MzYzO1xuICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSg5OSwgOTksIDk5LCAwLjUpO1xufVxuXG4uYnRuLmlzLW91dC5mb2N1cywgLmJ0bi5pcy1vdXQ6Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICM2MzYzNjM7XG4gIGNvbG9yOiAjNjM2MzYzO1xufVxuXG4uYnRuLmlzLW91dDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlLCAuYnRuLmlzLW91dDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgYm9yZGVyLWNvbG9yOiAjM2MzYzNjO1xuICBjb2xvcjogIzNjM2MzYztcbn1cblxuLmJ0bi5pcy1vdXQuaXMtbGlnaHQuaG92ZXIsIC5idG4uaXMtb3V0LmlzLWxpZ2h0OmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjZjBmMGYwO1xuICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgyNDAsIDI0MCwgMjQwLCAwLjUpO1xufVxuXG4uYnRuLmlzLW91dC5pcy1saWdodC5mb2N1cywgLmJ0bi5pcy1vdXQuaXMtbGlnaHQ6Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICNmMGYwZjA7XG4gIGNvbG9yOiAjZjBmMGYwO1xufVxuXG4uYnRuLmlzLW91dC5pcy1saWdodDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlLCAuYnRuLmlzLW91dC5pcy1saWdodDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgYm9yZGVyLWNvbG9yOiAjOTA5MDkwO1xuICBjb2xvcjogIzkwOTA5MDtcbn1cblxuLmJ0bi5pcy1vdXQuaXMtZGFyay5ob3ZlciwgLmJ0bi5pcy1vdXQuaXMtZGFyazpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogIzQ3NDc0NztcbiAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoNzEsIDcxLCA3MSwgMC41KTtcbn1cblxuLmJ0bi5pcy1vdXQuaXMtZGFyay5mb2N1cywgLmJ0bi5pcy1vdXQuaXMtZGFyazpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogIzQ3NDc0NztcbiAgY29sb3I6ICM0NzQ3NDc7XG59XG5cbi5idG4uaXMtb3V0LmlzLWRhcms6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1vdXQuaXMtZGFyazpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgYm9yZGVyLWNvbG9yOiAjMmIyYjJiO1xuICBjb2xvcjogIzJiMmIyYjtcbn1cblxuLmJ0bi5pcy1vdXQuaXMtcHJpbWFyeS5ob3ZlciwgLmJ0bi5pcy1vdXQuaXMtcHJpbWFyeTpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogIzgwNWFkNTtcbiAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMTI4LCA5MCwgMjEzLCAwLjUpO1xufVxuXG4uYnRuLmlzLW91dC5pcy1wcmltYXJ5LmZvY3VzLCAuYnRuLmlzLW91dC5pcy1wcmltYXJ5OmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiAjODA1YWQ1O1xuICBjb2xvcjogIzgwNWFkNTtcbn1cblxuLmJ0bi5pcy1vdXQuaXMtcHJpbWFyeTpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlLCAuYnRuLmlzLW91dC5pcy1wcmltYXJ5Om5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICBib3JkZXItY29sb3I6ICM0ZDM2ODA7XG4gIGNvbG9yOiAjNGQzNjgwO1xufVxuXG4uYnRuLmlzLW91dC5pcy1zZWNvbmRhcnkuaG92ZXIsIC5idG4uaXMtb3V0LmlzLXNlY29uZGFyeTpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogZ3JheTtcbiAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMTI4LCAxMjgsIDEyOCwgMC41KTtcbn1cblxuLmJ0bi5pcy1vdXQuaXMtc2Vjb25kYXJ5LmZvY3VzLCAuYnRuLmlzLW91dC5pcy1zZWNvbmRhcnk6Zm9jdXMge1xuICBib3JkZXItY29sb3I6IGdyYXk7XG4gIGNvbG9yOiBncmF5O1xufVxuXG4uYnRuLmlzLW91dC5pcy1zZWNvbmRhcnk6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1vdXQuaXMtc2Vjb25kYXJ5Om5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICBib3JkZXItY29sb3I6ICM0ZDRkNGQ7XG4gIGNvbG9yOiAjNGQ0ZDRkO1xufVxuXG4uYnRuLmlzLW91dC5pcy1pbmZvLmhvdmVyLCAuYnRuLmlzLW91dC5pcy1pbmZvOmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjMTNjMmMyO1xuICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSgxOSwgMTk0LCAxOTQsIDAuNSk7XG59XG5cbi5idG4uaXMtb3V0LmlzLWluZm8uZm9jdXMsIC5idG4uaXMtb3V0LmlzLWluZm86Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICMxM2MyYzI7XG4gIGNvbG9yOiAjMTNjMmMyO1xufVxuXG4uYnRuLmlzLW91dC5pcy1pbmZvOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUsIC5idG4uaXMtb3V0LmlzLWluZm86bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGJvcmRlci1jb2xvcjogIzBiNzQ3NDtcbiAgY29sb3I6ICMwYjc0NzQ7XG59XG5cbi5idG4uaXMtb3V0LmlzLXdhcm4uaG92ZXIsIC5idG4uaXMtb3V0LmlzLXdhcm46aG92ZXIge1xuICBib3JkZXItY29sb3I6ICNmYWRiMTQ7XG4gIGJveC1zaGFkb3c6IDAgMCAwIDAuMnJlbSByZ2JhKDI1MCwgMjE5LCAyMCwgMC41KTtcbn1cblxuLmJ0bi5pcy1vdXQuaXMtd2Fybi5mb2N1cywgLmJ0bi5pcy1vdXQuaXMtd2Fybjpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogI2ZhZGIxNDtcbiAgY29sb3I6ICNmYWRiMTQ7XG59XG5cbi5idG4uaXMtb3V0LmlzLXdhcm46bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1vdXQuaXMtd2Fybjpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgYm9yZGVyLWNvbG9yOiAjOTY4MzBjO1xuICBjb2xvcjogIzk2ODMwYztcbn1cblxuLmJ0bi5pcy1vdXQuaXMtdmFsaWQuaG92ZXIsIC5idG4uaXMtb3V0LmlzLXZhbGlkOmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjNTJjNDFhO1xuICBib3gtc2hhZG93OiAwIDAgMCAwLjJyZW0gcmdiYSg4MiwgMTk2LCAyNiwgMC41KTtcbn1cblxuLmJ0bi5pcy1vdXQuaXMtdmFsaWQuZm9jdXMsIC5idG4uaXMtb3V0LmlzLXZhbGlkOmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiAjNTJjNDFhO1xuICBjb2xvcjogIzUyYzQxYTtcbn1cblxuLmJ0bi5pcy1vdXQuaXMtdmFsaWQ6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1vdXQuaXMtdmFsaWQ6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGJvcmRlci1jb2xvcjogIzMxNzYxMDtcbiAgY29sb3I6ICMzMTc2MTA7XG59XG5cbi5idG4uaXMtb3V0LmlzLWVycm9yLmhvdmVyLCAuYnRuLmlzLW91dC5pcy1lcnJvcjpob3ZlciB7XG4gIGJvcmRlci1jb2xvcjogI2Y1MjIyZDtcbiAgYm94LXNoYWRvdzogMCAwIDAgMC4ycmVtIHJnYmEoMjQ1LCAzNCwgNDUsIDAuNSk7XG59XG5cbi5idG4uaXMtb3V0LmlzLWVycm9yLmZvY3VzLCAuYnRuLmlzLW91dC5pcy1lcnJvcjpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogI2Y1MjIyZDtcbiAgY29sb3I6ICNmNTIyMmQ7XG59XG5cbi5idG4uaXMtb3V0LmlzLWVycm9yOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUsIC5idG4uaXMtb3V0LmlzLWVycm9yOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICBib3JkZXItY29sb3I6ICM5MzE0MWI7XG4gIGNvbG9yOiAjOTMxNDFiO1xufVxuXG4uYnRuLmlzLW91dFtkaXNhYmxlZF0sIC5idG4uaXMtb3V0OmRpc2FibGVkIHtcbiAgYm9yZGVyLWNvbG9yOiAjNjM2MzYzO1xuICBjb2xvcjogIzYzNjM2Mztcbn1cblxuLmJ0bi5pcy1taW4ge1xuICBib3JkZXItcmlnaHQ6IDA7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNiOGI4Yjg7XG4gIGJvcmRlci1sZWZ0OiAwO1xuICBib3JkZXItcmFkaXVzOiAwO1xuICBib3gtc2hhZG93OiBub25lO1xufVxuXG4uYnRuLmlzLW1pbjo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAtMXB4O1xuICBsZWZ0OiA1MCU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgd2lkdGg6IDA7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZDtcbiAgdHJhbnNpdGlvbjogd2lkdGggMC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWJvdHRvbS1jb2xvciAwLjE1cyBlYXNlLWluLW91dDtcbn1cblxuLmJ0bi5pcy1taW4uaG92ZXIsIC5idG4uaXMtbWluOmhvdmVyLCAuYnRuLmlzLW1pbi5mb2N1cywgLmJ0bi5pcy1taW46Zm9jdXMge1xuICBjb2xvcjogIzYzNjM2Mztcbn1cblxuLmJ0bi5pcy1taW4uaG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW46aG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uZm9jdXM6OmJlZm9yZSwgLmJ0bi5pcy1taW46Zm9jdXM6OmJlZm9yZSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICM2MzYzNjM7XG59XG5cbi5idG4uaXMtbWluOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUsIC5idG4uaXMtbWluOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICBjb2xvcjogIzNjM2MzYztcbn1cblxuLmJ0bi5pcy1taW46bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZTo6YmVmb3JlLCAuYnRuLmlzLW1pbjpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlOjpiZWZvcmUge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjM2MzYzNjO1xufVxuXG4uYnRuLmlzLW1pbi5pcy1sb2FkaW5nOjpiZWZvcmUge1xuICBjb2xvcjogIzYzNjM2Mztcbn1cblxuLmJ0bi5pcy1taW4uaXMtbGlnaHQuaG92ZXIsIC5idG4uaXMtbWluLmlzLWxpZ2h0OmhvdmVyLCAuYnRuLmlzLW1pbi5pcy1saWdodC5mb2N1cywgLmJ0bi5pcy1taW4uaXMtbGlnaHQ6Zm9jdXMge1xuICBjb2xvcjogI2YwZjBmMDtcbn1cblxuLmJ0bi5pcy1taW4uaXMtbGlnaHQuaG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtbGlnaHQ6aG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtbGlnaHQuZm9jdXM6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtbGlnaHQ6Zm9jdXM6OmJlZm9yZSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNmMGYwZjA7XG59XG5cbi5idG4uaXMtbWluLmlzLWxpZ2h0Om5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUsIC5idG4uaXMtbWluLmlzLWxpZ2h0Om5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICBjb2xvcjogIzkwOTA5MDtcbn1cblxuLmJ0bi5pcy1taW4uaXMtbGlnaHQ6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZTo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy1saWdodDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlOjpiZWZvcmUge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjOTA5MDkwO1xufVxuXG4uYnRuLmlzLW1pbi5pcy1saWdodC5pcy1sb2FkaW5nOjpiZWZvcmUge1xuICBjb2xvcjogI2YwZjBmMDtcbn1cblxuLmJ0bi5pcy1taW4uaXMtZGFyay5ob3ZlciwgLmJ0bi5pcy1taW4uaXMtZGFyazpob3ZlciwgLmJ0bi5pcy1taW4uaXMtZGFyay5mb2N1cywgLmJ0bi5pcy1taW4uaXMtZGFyazpmb2N1cyB7XG4gIGNvbG9yOiAjNDc0NzQ3O1xufVxuXG4uYnRuLmlzLW1pbi5pcy1kYXJrLmhvdmVyOjpiZWZvcmUsIC5idG4uaXMtbWluLmlzLWRhcms6aG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtZGFyay5mb2N1czo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy1kYXJrOmZvY3VzOjpiZWZvcmUge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjNDc0NzQ3O1xufVxuXG4uYnRuLmlzLW1pbi5pcy1kYXJrOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUsIC5idG4uaXMtbWluLmlzLWRhcms6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGNvbG9yOiAjMmIyYjJiO1xufVxuXG4uYnRuLmlzLW1pbi5pcy1kYXJrOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmU6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtZGFyazpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlOjpiZWZvcmUge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjMmIyYjJiO1xufVxuXG4uYnRuLmlzLW1pbi5pcy1kYXJrLmlzLWxvYWRpbmc6OmJlZm9yZSB7XG4gIGNvbG9yOiAjNDc0NzQ3O1xufVxuXG4uYnRuLmlzLW1pbi5pcy1wcmltYXJ5LmhvdmVyLCAuYnRuLmlzLW1pbi5pcy1wcmltYXJ5OmhvdmVyLCAuYnRuLmlzLW1pbi5pcy1wcmltYXJ5LmZvY3VzLCAuYnRuLmlzLW1pbi5pcy1wcmltYXJ5OmZvY3VzIHtcbiAgY29sb3I6ICM4MDVhZDU7XG59XG5cbi5idG4uaXMtbWluLmlzLXByaW1hcnkuaG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtcHJpbWFyeTpob3Zlcjo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy1wcmltYXJ5LmZvY3VzOjpiZWZvcmUsIC5idG4uaXMtbWluLmlzLXByaW1hcnk6Zm9jdXM6OmJlZm9yZSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICM4MDVhZDU7XG59XG5cbi5idG4uaXMtbWluLmlzLXByaW1hcnk6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1taW4uaXMtcHJpbWFyeTpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgY29sb3I6ICM0ZDM2ODA7XG59XG5cbi5idG4uaXMtbWluLmlzLXByaW1hcnk6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZTo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy1wcmltYXJ5Om5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmU6OmJlZm9yZSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICM0ZDM2ODA7XG59XG5cbi5idG4uaXMtbWluLmlzLXByaW1hcnkuaXMtbG9hZGluZzo6YmVmb3JlIHtcbiAgY29sb3I6ICM4MDVhZDU7XG59XG5cbi5idG4uaXMtbWluLmlzLXNlY29uZGFyeS5ob3ZlciwgLmJ0bi5pcy1taW4uaXMtc2Vjb25kYXJ5OmhvdmVyLCAuYnRuLmlzLW1pbi5pcy1zZWNvbmRhcnkuZm9jdXMsIC5idG4uaXMtbWluLmlzLXNlY29uZGFyeTpmb2N1cyB7XG4gIGNvbG9yOiBncmF5O1xufVxuXG4uYnRuLmlzLW1pbi5pcy1zZWNvbmRhcnkuaG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtc2Vjb25kYXJ5OmhvdmVyOjpiZWZvcmUsIC5idG4uaXMtbWluLmlzLXNlY29uZGFyeS5mb2N1czo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy1zZWNvbmRhcnk6Zm9jdXM6OmJlZm9yZSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6IGdyYXk7XG59XG5cbi5idG4uaXMtbWluLmlzLXNlY29uZGFyeTpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlLCAuYnRuLmlzLW1pbi5pcy1zZWNvbmRhcnk6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGNvbG9yOiAjNGQ0ZDRkO1xufVxuXG4uYnRuLmlzLW1pbi5pcy1zZWNvbmRhcnk6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZTo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy1zZWNvbmRhcnk6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZTo6YmVmb3JlIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzRkNGQ0ZDtcbn1cblxuLmJ0bi5pcy1taW4uaXMtc2Vjb25kYXJ5LmlzLWxvYWRpbmc6OmJlZm9yZSB7XG4gIGNvbG9yOiBncmF5O1xufVxuXG4uYnRuLmlzLW1pbi5pcy1pbmZvLmhvdmVyLCAuYnRuLmlzLW1pbi5pcy1pbmZvOmhvdmVyLCAuYnRuLmlzLW1pbi5pcy1pbmZvLmZvY3VzLCAuYnRuLmlzLW1pbi5pcy1pbmZvOmZvY3VzIHtcbiAgY29sb3I6ICMxM2MyYzI7XG59XG5cbi5idG4uaXMtbWluLmlzLWluZm8uaG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtaW5mbzpob3Zlcjo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy1pbmZvLmZvY3VzOjpiZWZvcmUsIC5idG4uaXMtbWluLmlzLWluZm86Zm9jdXM6OmJlZm9yZSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICMxM2MyYzI7XG59XG5cbi5idG4uaXMtbWluLmlzLWluZm86bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi5pcy1taW4uaXMtaW5mbzpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcbiAgY29sb3I6ICMwYjc0NzQ7XG59XG5cbi5idG4uaXMtbWluLmlzLWluZm86bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZTo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy1pbmZvOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmU6OmJlZm9yZSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICMwYjc0NzQ7XG59XG5cbi5idG4uaXMtbWluLmlzLWluZm8uaXMtbG9hZGluZzo6YmVmb3JlIHtcbiAgY29sb3I6ICMxM2MyYzI7XG59XG5cbi5idG4uaXMtbWluLmlzLXdhcm4uaG92ZXIsIC5idG4uaXMtbWluLmlzLXdhcm46aG92ZXIsIC5idG4uaXMtbWluLmlzLXdhcm4uZm9jdXMsIC5idG4uaXMtbWluLmlzLXdhcm46Zm9jdXMge1xuICBjb2xvcjogI2ZhZGIxNDtcbn1cblxuLmJ0bi5pcy1taW4uaXMtd2Fybi5ob3Zlcjo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy13YXJuOmhvdmVyOjpiZWZvcmUsIC5idG4uaXMtbWluLmlzLXdhcm4uZm9jdXM6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtd2Fybjpmb2N1czo6YmVmb3JlIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2ZhZGIxNDtcbn1cblxuLmJ0bi5pcy1taW4uaXMtd2Fybjpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlLCAuYnRuLmlzLW1pbi5pcy13YXJuOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICBjb2xvcjogIzk2ODMwYztcbn1cblxuLmJ0bi5pcy1taW4uaXMtd2Fybjpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlOjpiZWZvcmUsIC5idG4uaXMtbWluLmlzLXdhcm46bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZTo6YmVmb3JlIHtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzk2ODMwYztcbn1cblxuLmJ0bi5pcy1taW4uaXMtd2Fybi5pcy1sb2FkaW5nOjpiZWZvcmUge1xuICBjb2xvcjogI2ZhZGIxNDtcbn1cblxuLmJ0bi5pcy1taW4uaXMtdmFsaWQuaG92ZXIsIC5idG4uaXMtbWluLmlzLXZhbGlkOmhvdmVyLCAuYnRuLmlzLW1pbi5pcy12YWxpZC5mb2N1cywgLmJ0bi5pcy1taW4uaXMtdmFsaWQ6Zm9jdXMge1xuICBjb2xvcjogIzUyYzQxYTtcbn1cblxuLmJ0bi5pcy1taW4uaXMtdmFsaWQuaG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtdmFsaWQ6aG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtdmFsaWQuZm9jdXM6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtdmFsaWQ6Zm9jdXM6OmJlZm9yZSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICM1MmM0MWE7XG59XG5cbi5idG4uaXMtbWluLmlzLXZhbGlkOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUsIC5idG4uaXMtbWluLmlzLXZhbGlkOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICBjb2xvcjogIzMxNzYxMDtcbn1cblxuLmJ0bi5pcy1taW4uaXMtdmFsaWQ6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZTo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy12YWxpZDpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlOjpiZWZvcmUge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjMzE3NjEwO1xufVxuXG4uYnRuLmlzLW1pbi5pcy12YWxpZC5pcy1sb2FkaW5nOjpiZWZvcmUge1xuICBjb2xvcjogIzUyYzQxYTtcbn1cblxuLmJ0bi5pcy1taW4uaXMtZXJyb3IuaG92ZXIsIC5idG4uaXMtbWluLmlzLWVycm9yOmhvdmVyLCAuYnRuLmlzLW1pbi5pcy1lcnJvci5mb2N1cywgLmJ0bi5pcy1taW4uaXMtZXJyb3I6Zm9jdXMge1xuICBjb2xvcjogI2Y1MjIyZDtcbn1cblxuLmJ0bi5pcy1taW4uaXMtZXJyb3IuaG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtZXJyb3I6aG92ZXI6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtZXJyb3IuZm9jdXM6OmJlZm9yZSwgLmJ0bi5pcy1taW4uaXMtZXJyb3I6Zm9jdXM6OmJlZm9yZSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICNmNTIyMmQ7XG59XG5cbi5idG4uaXMtbWluLmlzLWVycm9yOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUsIC5idG4uaXMtbWluLmlzLWVycm9yOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICBjb2xvcjogIzkzMTQxYjtcbn1cblxuLmJ0bi5pcy1taW4uaXMtZXJyb3I6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZTo6YmVmb3JlLCAuYnRuLmlzLW1pbi5pcy1lcnJvcjpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlOjpiZWZvcmUge1xuICBib3JkZXItYm90dG9tLWNvbG9yOiAjOTMxNDFiO1xufVxuXG4uYnRuLmlzLW1pbi5pcy1lcnJvci5pcy1sb2FkaW5nOjpiZWZvcmUge1xuICBjb2xvcjogI2Y1MjIyZDtcbn1cblxuLmJ0bi5pcy1taW46bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZTo6YmVmb3JlLCAuYnRuLmlzLW1pbjpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlOjpiZWZvcmUge1xuICBhbmltYXRpb246IG5vbmU7XG59XG5cbi5idG4uaXMtbWluLmhvdmVyOjpiZWZvcmUsIC5idG4uaXMtbWluOmhvdmVyOjpiZWZvcmUsIC5idG4uaXMtbWluLmZvY3VzOjpiZWZvcmUsIC5idG4uaXMtbWluOmZvY3VzOjpiZWZvcmUsIC5idG4uaXMtbWluOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmU6OmJlZm9yZSwgLmJ0bi5pcy1taW46bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZTo6YmVmb3JlIHtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi5idG4uaXMtbWluLmZvY3VzLCAuYnRuLmlzLW1pbjpmb2N1cyB7XG4gIGFuaW1hdGlvbjogbm9uZTtcbiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi5idG4uaXMtbWluLmZvY3VzOjpiZWZvcmUsIC5idG4uaXMtbWluOmZvY3VzOjpiZWZvcmUge1xuICBhbmltYXRpb246IGZsYXNoIDFzIGVhc2Utb3V0IGJvdGg7XG59XG5cbkBrZXlmcmFtZXMgZmxhc2gge1xuICBmcm9tLFxuICA1MCUge1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgMjUlLFxuICA3NSUge1xuICAgIG9wYWNpdHk6IDA7XG4gIH1cbn1cblxuLmJ0bi5pcy1taW5bZGlzYWJsZWRdLCAuYnRuLmlzLW1pbjpkaXNhYmxlZCB7XG4gIGNvbG9yOiAjNjM2MzYzO1xufVxuXG4uYnRuLmlzLW1pbltkaXNhYmxlZF06OmJlZm9yZSwgLmJ0bi5pcy1taW46ZGlzYWJsZWQ6OmJlZm9yZSB7XG4gIGJvcmRlci1ib3R0b20tY29sb3I6ICM2MzYzNjM7XG59XG5cbi5idG4uaXMtbG9hZGluZyB7XG4gIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICBjb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4uYnRuLmlzLWxvYWRpbmc6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiBjYWxjKDUwJSAtICgxZW0gLyAyKSk7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IGNhbGMoNTAlIC0gKDFlbSAvIDIpKTtcbiAgdHJhbnNmb3JtOiBpbmhlcml0O1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgYm9yZGVyOiAuMTVlbSBzb2xpZCBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci1yaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYW5pbWF0aW9uOiBzcGluIDFzIGluZmluaXRlIGxpbmVhcjtcbiAgY29sb3I6ICM2MzYzNjM7XG59XG5cbkBrZXlmcmFtZXMgc3BpbiB7XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gIH1cbn1cblxuLmJ0bi5pcy1ibG9jayB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uYnRuLmlzLWNpcmNsZSB7XG4gIHdpZHRoOiAyLjM1ZW07XG4gIGhlaWdodDogMi4zNWVtO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uY29udHJvbCA+IC5maWxlIH4gLmxhYmVsIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmNvbnRyb2wgPiAucmFkaW86Y2hlY2tlZCB+IC5sYWJlbDo6YmVmb3JlIHtcbiAgYm9yZGVyLXdpZHRoOiAwLjM1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG59XG5cbi5jb250cm9sID4gLnJhZGlvIH4gLmxhYmVsOjpiZWZvcmUge1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG5cbi5jb250cm9sID4gLmNoZWNrYm94OmNoZWNrZWQgfiAubGFiZWw6OmFmdGVyIHtcbiAgdG9wOiA0NSU7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIHJvdGF0ZSg0NWRlZyk7XG4gIHdpZHRoOiAwLjI4NTcxZW07XG4gIGhlaWdodDogMC41NzE0M2VtO1xuICBib3JkZXI6IDAuMTJlbSBzb2xpZCAjZmZmO1xuICBib3JkZXItdG9wLXdpZHRoOiAwO1xuICBib3JkZXItbGVmdC13aWR0aDogMDtcbn1cblxuLmNvbnRyb2wgPiAuY2hlY2tib3g6aW5kZXRlcm1pbmF0ZSB+IC5sYWJlbDo6YmVmb3JlIHtcbiAgYm9yZGVyLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcbn1cblxuLmNvbnRyb2wgPiAuY2hlY2tib3g6aW5kZXRlcm1pbmF0ZSB+IC5sYWJlbDo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgd2lkdGg6IDAuNTcxNDNlbTtcbiAgaGVpZ2h0OiAycHg7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG59XG5cbi5jb250cm9sID4gLmNoZWNrYm94IH4gLmxhYmVsOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbGVmdDogMC41NzE0M2VtO1xufVxuXG4ucmFuZ2Uge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMS41ZW07XG4gIHBhZGRpbmc6IDA7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBhcHBlYXJhbmNlOiBub25lO1xufVxuXG4ucmFuZ2UuZm9jdXMsIC5yYW5nZTpmb2N1cyB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi5yYW5nZTo6LXdlYmtpdC1zbGlkZXItdGh1bWIge1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgY3VycmVudENvbG9yO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3gtc2hhZG93OiAxcHggMXB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjE1cyBlYXNlLWluLW91dCxib3JkZXIgMC4xNXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5yYW5nZTo6LW1vei1yYW5nZS10aHVtYiB7XG4gIHdpZHRoOiAxZW07XG4gIGhlaWdodDogMWVtO1xuICBib3JkZXI6IDFweCBzb2xpZCBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIGJhY2tncm91bmQ6ICNmZmY7XG4gIGJveC1zaGFkb3c6IDFweCAxcHggMnB4IDAgcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlciAwLjE1cyBlYXNlLWluLW91dDtcbn1cblxuLnJhbmdlOjotbXMtdGh1bWIge1xuICB3aWR0aDogMWVtO1xuICBoZWlnaHQ6IDFlbTtcbiAgYm9yZGVyOiAxcHggc29saWQgY3VycmVudENvbG9yO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBib3gtc2hhZG93OiAxcHggMXB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjE1cyBlYXNlLWluLW91dCxib3JkZXIgMC4xNXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5yYW5nZS5ob3Zlcjo6LXdlYmtpdC1zbGlkZXItdGh1bWIsIC5yYW5nZTpob3Zlcjo6LXdlYmtpdC1zbGlkZXItdGh1bWIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gIGJvcmRlci13aWR0aDogM3B4O1xufVxuXG4ucmFuZ2UuaG92ZXI6Oi1tb3otcmFuZ2UtdGh1bWIsIC5yYW5nZTpob3Zlcjo6LW1vei1yYW5nZS10aHVtYiB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgYm9yZGVyLXdpZHRoOiAzcHg7XG59XG5cbi5yYW5nZS5ob3Zlcjo6LW1zLXRodW1iLCAucmFuZ2U6aG92ZXI6Oi1tcy10aHVtYiB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgYm9yZGVyLXdpZHRoOiAzcHg7XG59XG5cbi5yYW5nZTo6LW1vei1yYW5nZS10cmFjayB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDAuMjJyZW07XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItcmFkaXVzOiA1MGVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjhiOGI4O1xuICBib3gtc2hhZG93OiBpbnNldCAwIDFweCAycHggcmdiYSgxNSwgMTUsIDE1LCAwLjIpO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuMTVzIGVhc2UtaW4tb3V0O1xufVxuXG4ucmFuZ2U6Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMC4yMnJlbTtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDUwZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNiOGI4Yjg7XG4gIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDE1LCAxNSwgMTUsIDAuMik7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4xNXMgZWFzZS1pbi1vdXQ7XG59XG5cbi5yYW5nZTo6LW1zLXRyYWNrIHtcbiAgY29sb3I6IHRyYW5zcGFyZW50O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAwLjIycmVtO1xuICBtYXJnaW46IDA7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXJhZGl1czogNTBlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2I4YjhiODtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoMTUsIDE1LCAxNSwgMC4yKTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjE1cyBlYXNlLWluLW91dDtcbn1cblxuLnJhbmdlOjotbXMtZmlsbC1sb3dlciB7XG4gIGJhY2tncm91bmQ6ICM2MzYzNjM7XG59XG5cbi5yYW5nZS5mb2N1czo6LW1vei1yYW5nZS10cmFjaywgLnJhbmdlOmZvY3VzOjotbW96LXJhbmdlLXRyYWNrLCAucmFuZ2U6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZTo6LW1vei1yYW5nZS10cmFjaywgLnJhbmdlOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmU6Oi1tb3otcmFuZ2UtdHJhY2sge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XG59XG5cbi5yYW5nZS5mb2N1czo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2ssIC5yYW5nZTpmb2N1czo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2ssIC5yYW5nZTpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjaywgLnJhbmdlOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmU6Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogY3VycmVudENvbG9yO1xufVxuXG4ucmFuZ2UuZm9jdXM6Oi1tcy1maWxsLWxvd2VyLCAucmFuZ2U6Zm9jdXM6Oi1tcy1maWxsLWxvd2VyLCAucmFuZ2U6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZTo6LW1zLWZpbGwtbG93ZXIsIC5yYW5nZTpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlOjotbXMtZmlsbC1sb3dlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBiYWNrZ3JvdW5kOiBjdXJyZW50Q29sb3I7XG59XG5cbi5yYW5nZS5pcy1saWdodCB7XG4gIGNvbG9yOiAjZjBmMGYwO1xufVxuXG4ucmFuZ2UuaXMtZGFyayB7XG4gIGNvbG9yOiAjNDc0NzQ3O1xufVxuXG4ucmFuZ2UuaXMtcHJpbWFyeSB7XG4gIGNvbG9yOiAjODA1YWQ1O1xufVxuXG4ucmFuZ2UuaXMtc2Vjb25kYXJ5IHtcbiAgY29sb3I6IGdyYXk7XG59XG5cbi5yYW5nZS5pcy1pbmZvIHtcbiAgY29sb3I6ICMxM2MyYzI7XG59XG5cbi5yYW5nZS5pcy13YXJuIHtcbiAgY29sb3I6ICNmYWRiMTQ7XG59XG5cbi5yYW5nZS5pcy12YWxpZCB7XG4gIGNvbG9yOiAjNTJjNDFhO1xufVxuXG4ucmFuZ2UuaXMtZXJyb3Ige1xuICBjb2xvcjogI2Y1MjIyZDtcbn1cblxuLmNvbnRyb2wgPiAuc3dpdGNoOmNoZWNrZWQgfiAubGFiZWw6OmFmdGVyIHtcbiAgbGVmdDogMS4xNDI4NmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4uY29udHJvbCA+IC5zd2l0Y2ggfiAubGFiZWwge1xuICBwYWRkaW5nLWxlZnQ6IDIuODU3MTRlbTtcbn1cblxuLmNvbnRyb2wgPiAuc3dpdGNoIH4gLmxhYmVsOjpiZWZvcmUge1xuICB3aWR0aDogMi4yODU3MWVtO1xuICBib3JkZXItcmFkaXVzOiA1MGVtO1xufVxuXG4uY29udHJvbCA+IC5zd2l0Y2ggfiAubGFiZWw6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDUwJTtcbiAgbGVmdDogMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpIHNjYWxlKDAuNyk7XG4gIHdpZHRoOiAxLjE0Mjg2ZW07XG4gIGhlaWdodDogMS4xNDI4NmVtO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGJhY2tncm91bmQ6ICNiOGI4Yjg7XG4gIHRyYW5zaXRpb246IGxlZnQgMC4ycyBlYXNlLWluLW91dCxiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQ7XG59XG5cbi5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuXG4ubWVudSAubWVudS1pdGVtLmhvdmVyLCAubWVudSAubWVudS1pdGVtOmhvdmVyLCAubWVudSAubWVudS1pdGVtLmZvY3VzLCAubWVudSAubWVudS1pdGVtOmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiAjNjM2MzYzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGUwO1xufVxuXG4ubWVudSAubWVudS1pdGVtLmFjdGl2ZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjM2MzYzO1xufVxuXG4ubWVudS1pdGVtIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nLWxlZnQ6IDEuNWVtO1xuICBib3JkZXI6IDA7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWFsaWduOiBpbmhlcml0O1xuICBmb250LXNpemU6IGluaGVyaXQ7XG59XG5cbi5tZW51LWl0ZW06OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIGJvcmRlci1sZWZ0OiAwIHNvbGlkO1xuICBib3JkZXItbGVmdC1jb2xvcjogaW5oZXJpdDtcbiAgdHJhbnNpdGlvbjogYm9yZGVyLXdpZHRoIDAuMTVzIGxpbmVhcixib3JkZXItY29sb3IgMXMgY3ViaWMtYmV6aWVyKDEsIDAsIDEsIDApO1xufVxuXG4ubWVudS1pdGVtOm5vdCguYWN0aXZlKS5ob3Zlcjo6YmVmb3JlLCAubWVudS1pdGVtOm5vdCguYWN0aXZlKTpob3Zlcjo6YmVmb3JlLCAubWVudS1pdGVtOm5vdCguYWN0aXZlKS5mb2N1czo6YmVmb3JlLCAubWVudS1pdGVtOm5vdCguYWN0aXZlKTpmb2N1czo6YmVmb3JlIHtcbiAgdHJhbnNpdGlvbjogYm9yZGVyLXdpZHRoIDAuMTVzIGxpbmVhcjtcbiAgYm9yZGVyLWxlZnQtd2lkdGg6IDNweDtcbn1cblxuLm1lbnUtaXRlbS5ob3ZlciwgLm1lbnUtaXRlbTpob3ZlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuLm1lbnUtaXRlbS5mb2N1cywgLm1lbnUtaXRlbTpmb2N1cyB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi5tZW51LmlzLWxpZ2h0IC5tZW51LWl0ZW0uaG92ZXIsIC5tZW51LmlzLWxpZ2h0IC5tZW51LWl0ZW06aG92ZXIsIC5tZW51LmlzLWxpZ2h0IC5tZW51LWl0ZW0uZm9jdXMsIC5tZW51LmlzLWxpZ2h0IC5tZW51LWl0ZW06Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICNmMGYwZjA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmY2ZjZmM7XG59XG5cbi5tZW51LmlzLWxpZ2h0IC5tZW51LWl0ZW0uYWN0aXZlIHtcbiAgY29sb3I6ICMwZjBmMGY7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmMGYwZjA7XG59XG5cbi5tZW51LmlzLWRhcmsgLm1lbnUtaXRlbS5ob3ZlciwgLm1lbnUuaXMtZGFyayAubWVudS1pdGVtOmhvdmVyLCAubWVudS5pcy1kYXJrIC5tZW51LWl0ZW0uZm9jdXMsIC5tZW51LmlzLWRhcmsgLm1lbnUtaXRlbTpmb2N1cyB7XG4gIGJvcmRlci1jb2xvcjogIzQ3NDc0NztcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RhZGFkYTtcbn1cblxuLm1lbnUuaXMtZGFyayAubWVudS1pdGVtLmFjdGl2ZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDc0NzQ3O1xufVxuXG4ubWVudS5pcy1wcmltYXJ5IC5tZW51LWl0ZW0uaG92ZXIsIC5tZW51LmlzLXByaW1hcnkgLm1lbnUtaXRlbTpob3ZlciwgLm1lbnUuaXMtcHJpbWFyeSAubWVudS1pdGVtLmZvY3VzLCAubWVudS5pcy1wcmltYXJ5IC5tZW51LWl0ZW06Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICM4MDVhZDU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmRlZjc7XG59XG5cbi5tZW51LmlzLXByaW1hcnkgLm1lbnUtaXRlbS5hY3RpdmUge1xuICBjb2xvcjogI2ZmZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzgwNWFkNTtcbn1cblxuLm1lbnUuaXMtc2Vjb25kYXJ5IC5tZW51LWl0ZW0uaG92ZXIsIC5tZW51LmlzLXNlY29uZGFyeSAubWVudS1pdGVtOmhvdmVyLCAubWVudS5pcy1zZWNvbmRhcnkgLm1lbnUtaXRlbS5mb2N1cywgLm1lbnUuaXMtc2Vjb25kYXJ5IC5tZW51LWl0ZW06Zm9jdXMge1xuICBib3JkZXItY29sb3I6IGdyYXk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XG59XG5cbi5tZW51LmlzLXNlY29uZGFyeSAubWVudS1pdGVtLmFjdGl2ZSB7XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xufVxuXG4ubWVudS5pcy1pbmZvIC5tZW51LWl0ZW0uaG92ZXIsIC5tZW51LmlzLWluZm8gLm1lbnUtaXRlbTpob3ZlciwgLm1lbnUuaXMtaW5mbyAubWVudS1pdGVtLmZvY3VzLCAubWVudS5pcy1pbmZvIC5tZW51LWl0ZW06Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICMxM2MyYzI7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkMGYzZjM7XG59XG5cbi5tZW51LmlzLWluZm8gLm1lbnUtaXRlbS5hY3RpdmUge1xuICBjb2xvcjogIzBmMGYwZjtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEzYzJjMjtcbn1cblxuLm1lbnUuaXMtd2FybiAubWVudS1pdGVtLmhvdmVyLCAubWVudS5pcy13YXJuIC5tZW51LWl0ZW06aG92ZXIsIC5tZW51LmlzLXdhcm4gLm1lbnUtaXRlbS5mb2N1cywgLm1lbnUuaXMtd2FybiAubWVudS1pdGVtOmZvY3VzIHtcbiAgYm9yZGVyLWNvbG9yOiAjZmFkYjE0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmOGQwO1xufVxuXG4ubWVudS5pcy13YXJuIC5tZW51LWl0ZW0uYWN0aXZlIHtcbiAgY29sb3I6ICMwZjBmMGY7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmYWRiMTQ7XG59XG5cbi5tZW51LmlzLXZhbGlkIC5tZW51LWl0ZW0uaG92ZXIsIC5tZW51LmlzLXZhbGlkIC5tZW51LWl0ZW06aG92ZXIsIC5tZW51LmlzLXZhbGlkIC5tZW51LWl0ZW0uZm9jdXMsIC5tZW51LmlzLXZhbGlkIC5tZW51LWl0ZW06Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICM1MmM0MWE7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkY2YzZDE7XG59XG5cbi5tZW51LmlzLXZhbGlkIC5tZW51LWl0ZW0uYWN0aXZlIHtcbiAgY29sb3I6ICMwZjBmMGY7XG4gIGJhY2tncm91bmQtY29sb3I6ICM1MmM0MWE7XG59XG5cbi5tZW51LmlzLWVycm9yIC5tZW51LWl0ZW0uaG92ZXIsIC5tZW51LmlzLWVycm9yIC5tZW51LWl0ZW06aG92ZXIsIC5tZW51LmlzLWVycm9yIC5tZW51LWl0ZW0uZm9jdXMsIC5tZW51LmlzLWVycm9yIC5tZW51LWl0ZW06Zm9jdXMge1xuICBib3JkZXItY29sb3I6ICNmNTIyMmQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZGQzZDU7XG59XG5cbi5tZW51LmlzLWVycm9yIC5tZW51LWl0ZW0uYWN0aXZlIHtcbiAgY29sb3I6ICMwZjBmMGY7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNTIyMmQ7XG59XG5cbi5tZW51ID4gLm1lbnUge1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBmb250LXNpemU6IGluaGVyaXQ7XG59XG5cbi5tZW51ID4gLm1lbnUgPiAqIHtcbiAgcGFkZGluZy1yaWdodDogMi4yNWVtO1xuICBtYXJnaW4tbGVmdDogMS41ZW07XG59XG5cbi5tZW51ID4gLm1lbnUgPiAubWVudSB7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG59XG5cbi5tZW51ID4gLm1lbnUgPiAubWVudS10cmlnZ2VyIHtcbiAgcGFkZGluZy1yaWdodDogMC43NWVtO1xuICBtYXJnaW4tbGVmdDogMDtcbn1cblxuLm1lbnUtdHJpZ2dlciB7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xufVxuXG4ubWVudS10cmlnZ2VyOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIGJvcmRlcjogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci1ib3R0b206IDA7XG59XG5cbi5tZW51LXRyaWdnZXIuYWN0aXZlOjphZnRlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoLTEpO1xufVxuXG4ubWVudS10cmlnZ2VyIH4gKiB7XG4gIGFuaW1hdGlvbjogZmFkZWluIDAuM3MgZWFzZS1vdXQgYm90aDtcbn1cblxuQGtleWZyYW1lcyBmYWRlaW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59XG5cbi5tZW51LXRyaWdnZXI6bm90KC5hY3RpdmUpIH4gKiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5kcm9wZG93biA+IC5tZW51IHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwMCU7XG4gIHotaW5kZXg6IDE0O1xuICBkaXNwbGF5OiBub25lO1xuICBtaW4td2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDAuMzVlbSAwO1xuICBtYXJnaW4tdG9wOiAwLjI1ZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm94LXNoYWRvdzogMCA1cHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGFuaW1hdGlvbjogZmFkZWluIDAuM3MgZWFzZS1vdXQgYm90aDtcbn1cblxuLmRyb3Bkb3duIC5kcm9wZG93biB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uZHJvcGRvd246bm90KC5pcy1tZWdhKSAubWVudS1pdGVtIHtcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbn1cblxuLmRyb3Bkb3duLXRyaWdnZXIge1xuICBmb250LXNpemU6IGluaGVyaXQ7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xufVxuXG4uZHJvcGRvd24tdHJpZ2dlcjo6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoM3B4KTtcbiAgYWxpZ24tc2VsZjogY2VudGVyO1xuICBtYXJnaW4tcmlnaHQ6IDNweDtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIGJvcmRlcjogNnB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICBib3JkZXItdG9wLWNvbG9yOiBjdXJyZW50Q29sb3I7XG4gIGJvcmRlci1ib3R0b206IDA7XG59XG5cbi5kcm9wZG93bi5pcy10b3AgPiAubWVudSB7XG4gIHRvcDogYXV0bztcbiAgYm90dG9tOiAxMDAlO1xuICBtYXJnaW46IDAgMCAwLjI1ZW0gMDtcbn1cblxuLmRyb3Bkb3duLmlzLXRvcCA+IC5kcm9wZG93bi10cmlnZ2VyOjphZnRlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoLTEpIHRyYW5zbGF0ZVgoLTNweCk7XG59XG5cbi5kcm9wZG93bi5pcy1yaWdodCA+IC5tZW51IHtcbiAgdG9wOiAwO1xuICBsZWZ0OiAxMDAlO1xuICBtYXJnaW46IDAgMCAwIDAuMjVlbTtcbn1cblxuLmRyb3Bkb3duLmlzLXJpZ2h0ID4gLmRyb3Bkb3duLXRyaWdnZXI6OmFmdGVyIHtcbiAgdHJhbnNmb3JtOiByb3RhdGUoMjcwZGVnKSB0cmFuc2xhdGVZKDNweCk7XG59XG5cbi5kcm9wZG93bi5pcy1sZWZ0ID4gLm1lbnUge1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAxMDAlO1xuICBtYXJnaW46IDAgMC4yNWVtIDAgMDtcbn1cblxuLmRyb3Bkb3duLmlzLWxlZnQgPiAuZHJvcGRvd24tdHJpZ2dlcjo6YWZ0ZXIge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZykgdHJhbnNsYXRlWSgtM3B4KTtcbn1cblxuLmRyb3Bkb3duLmlzLW1lZ2Ege1xuICBwb3NpdGlvbjogc3RhdGljO1xufVxuXG4uZHJvcGRvd24uaXMtbWVnYSA+IC5tZW51IHtcbiAgcmlnaHQ6IDA7XG4gIGxlZnQ6IDA7XG4gIG1hcmdpbjogMDtcbn1cblxuLmJsb2NrcXVvdGUge1xuICBwYWRkaW5nOiAuNHJlbSAuOHJlbTtcbiAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjODA1YWQ1O1xufVxuXG4ubGlzdCB7XG4gIHBhZGRpbmctbGVmdDogMDtcbn1cblxuLmxpc3QuaXMtaW5saW5lID4gbGk6bm90KDpsYXN0LWNoaWxkKSB7XG4gIG1hcmdpbi1yaWdodDogMC41ZW07XG59XG5cbi5jb250cm9sIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuXG5sYWJlbC5jb250cm9sIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cblxuLmNvbnRyb2wgPiAuZmVlZGJhY2sge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDEwMCU7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHBhZGRpbmc6IDNweCA2cHg7XG4gIG1hcmdpbi1ib3R0b206IDdweDtcbiAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICBjb2xvcjogI2ZmZjtcbiAgYm94LXNoYWRvdzogMXB4IDRweCA2cHggMCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDc0NzQ3O1xufVxuXG4uY29udHJvbCA+IC5mZWVkYmFjazo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwMCU7XG4gIHJpZ2h0OiAxMHB4O1xuICBib3JkZXI6IDZweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXRvcC1jb2xvcjogIzQ3NDc0NztcbiAgYm9yZGVyLWJvdHRvbTogMDtcbn1cblxuLmFkZG9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgdXNlci1zZWxlY3Q6IGF1dG87XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJvcmRlci1jb2xvcjogI2I4YjhiODtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZhZmFmYTtcbn1cblxuLmdyb3VwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuXG4uZ3JvdXAuaXMtbGcgPiAuYWRkb24sXG4uZ3JvdXAuaXMtbGcgPiAuYnRuIHtcbiAgcGFkZGluZzogMC43NXJlbSAxLjI1cmVtO1xufVxuXG4uZ3JvdXAgPiAuaW5wdXQuaG92ZXIsIC5ncm91cCA+IC5pbnB1dDpob3ZlciwgLmdyb3VwID4gLmlucHV0LmZvY3VzLCAuZ3JvdXAgPiAuaW5wdXQ6Zm9jdXMsXG4uZ3JvdXAgPiAuY29udHJvbC5ob3Zlcixcbi5ncm91cCA+IC5jb250cm9sOmhvdmVyLFxuLmdyb3VwID4gLmNvbnRyb2wuZm9jdXMsXG4uZ3JvdXAgPiAuY29udHJvbDpmb2N1cyxcbi5ncm91cCA+IC5hZGRvbi5ob3Zlcixcbi5ncm91cCA+IC5hZGRvbjpob3Zlcixcbi5ncm91cCA+IC5hZGRvbi5mb2N1cyxcbi5ncm91cCA+IC5hZGRvbjpmb2N1cyxcbi5ncm91cCA+IC5idG4uaG92ZXIsXG4uZ3JvdXAgPiAuYnRuOmhvdmVyLFxuLmdyb3VwID4gLmJ0bi5mb2N1cyxcbi5ncm91cCA+IC5idG46Zm9jdXMge1xuICB6LWluZGV4OiAxMDtcbn1cblxuLmdyb3VwID4gLmlucHV0LFxuLmdyb3VwID4gLmNvbnRyb2w6bm90KC5hZGRvbikge1xuICBmbGV4OiAxIDEgMCU7XG59XG5cbi5ncm91cC5idXR0b25zIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG59XG5cbi5lbWJlZCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwO1xufVxuXG4uZW1iZWQ6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBwYWRkaW5nLXRvcDogNTYuMjUlO1xufVxuXG4uZW1iZWQtaXRlbSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMDtcbn1cblxuLmVtYmVkLmlzLTEtMTo6YmVmb3JlIHtcbiAgcGFkZGluZy10b3A6IDEwMCU7XG59XG5cbi5lbWJlZC5pcy00LTM6OmJlZm9yZSB7XG4gIHBhZGRpbmctdG9wOiA3NSU7XG59XG5cbi5lbWJlZC5pcy0xNi0xMDo6YmVmb3JlIHtcbiAgcGFkZGluZy10b3A6IDYyLjUlO1xufVxuXG4uZW1iZWQuaXMtMjEtOTo6YmVmb3JlIHtcbiAgcGFkZGluZy10b3A6IDQyLjg1NzE0JTtcbn1cblxuLmJyZWFkY3J1bWIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIHBhZGRpbmc6IDAuNzVyZW0gMXJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgZm9udC1zaXplOiAxcmVtO1xufVxuXG4uYnJlYWRjcnVtYiBhLmhvdmVyLCAuYnJlYWRjcnVtYiBhOmhvdmVyIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG4uYnJlYWRjcnVtYi1pdGVtIHtcbiAgcGFkZGluZy1yaWdodDogMC41ZW07XG59XG5cbi5icmVhZGNydW1iLWl0ZW06bm90KDpmaXJzdC1jaGlsZCk6OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi8J+gmlwiO1xuICBwYWRkaW5nLXJpZ2h0OiAwLjI1ZW07XG4gIGNvbG9yOiAjNjM2MzYzO1xufVxuXG4uYnJlYWRjcnVtYi1pdGVtOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUsIC5icmVhZGNydW1iLWl0ZW06bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XG4gIGNvbG9yOiAjNjM2MzYzO1xufVxuXG4uYnJlYWRjcnVtYi1pdGVtW2RhdGEtc2VwYXJhdG9yXTpub3QoOmZpcnN0LWNoaWxkKTo6YmVmb3JlIHtcbiAgY29udGVudDogYXR0cihkYXRhLXNlcGFyYXRvcik7XG59XG5cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXdvSkluWmxjbk5wYjI0aU9pQXpMQW9KSW1acGJHVWlPaUFpWkdsemRDOW1iSFZwWkMxamIyMXdiMjVsYm5RdVkzTnpJaXdLQ1NKemIzVnlZMlZ6SWpvZ1d3b0pDU0p6Y21NdlpteDFhV1F0WTI5dGNHOXVaVzUwTG5OamMzTWlMQW9KQ1NKemNtTXZkbVZ1Wkc5eWN5OWZkbVZ1Wkc5eWN5NXpZM056SWl3S0NRa2ljM0pqTDNSdmIyeHpMMTkwYjI5c2N5NXpZM056SWl3S0NRa2ljM0pqTDNSdmIyeHpMMloxYm1OMGFXOXVjeTlmY0hKbFptbDRMbk5qYzNNaUxBb0pDU0p6Y21NdmRHOXZiSE12Wm5WdVkzUnBiMjV6TDE5emRXWm1hWGd1YzJOemN5SXNDZ2tKSW5OeVl5OTBiMjlzY3k5bWRXNWpkR2x2Ym5NdlgzQnZkMlZ5TG5OamMzTWlMQW9KQ1NKemNtTXZkRzl2YkhNdlpuVnVZM1JwYjI1ekwxOTBieTFzYVhOMExuTmpjM01pTEFvSkNTSnpjbU12ZEc5dmJITXZablZ1WTNScGIyNXpMMTlzYVhOMExXNWxlSFF1YzJOemN5SXNDZ2tKSW5OeVl5OTBiMjlzY3k5bWRXNWpkR2x2Ym5NdlgyeHBjM1F0Y21WdGIzWmxMbk5qYzNNaUxBb0pDU0p6Y21NdmRHOXZiSE12Wm5WdVkzUnBiMjV6TDE5c2FYTjBMWEpsYlc5MlpTMWhkQzV6WTNOeklpd0tDUWtpYzNKakwzUnZiMnh6TDJaMWJtTjBhVzl1Y3k5ZmRHOHRiV0Z3TG5OamMzTWlMQW9KQ1NKemNtTXZkRzl2YkhNdlpuVnVZM1JwYjI1ekwxOXpkSEl0ZEhKcGJTNXpZM056SWl3S0NRa2ljM0pqTDNSdmIyeHpMMloxYm1OMGFXOXVjeTlmYzNSeUxXTmhjR2wwWVd4cGVtVXVjMk56Y3lJc0Nna0pJbk55WXk5MGIyOXNjeTltZFc1amRHbHZibk12WDNOMGNpMWxlSEJzYjJSbExuTmpjM01pTEFvSkNTSnpjbU12ZEc5dmJITXZablZ1WTNScGIyNXpMMTl6ZEhJdGNtVndiR0ZqWlM1elkzTnpJaXdLQ1FraWMzSmpMM1J2YjJ4ekwyWjFibU4wYVc5dWN5OWZjM1J5TFhKbFlXUmhZbXhsTG5OamMzTWlMQW9KQ1NKemNtTXZkRzl2YkhNdlpuVnVZM1JwYjI1ekwxOXVaV2RoZEdVdGJXRndMbk5qYzNNaUxBb0pDU0p6Y21NdmRHOXZiSE12Wm5WdVkzUnBiMjV6TDE5emRISnBjQzExYm1sMExuTmpjM01pTEFvSkNTSnpjbU12ZEc5dmJITXZablZ1WTNScGIyNXpMMTlqYjI1MlpYSjBMWFZ1YVhRdWMyTnpjeUlzQ2drSkluTnlZeTkwYjI5c2N5OW1kVzVqZEdsdmJuTXZYMk5zY2kxc2RXMXBibUZ1WTJVdWMyTnpjeUlzQ2drSkluTnlZeTkwYjI5c2N5OW1kVzVqZEdsdmJuTXZYMk5zY2kxamIyNTBjbUZ6ZEM1elkzTnpJaXdLQ1FraWMzSmpMM1J2YjJ4ekwyWjFibU4wYVc5dWN5OWZZMnh5TFhOMFpYQXVjMk56Y3lJc0Nna0pJbk55WXk5MGIyOXNjeTltZFc1amRHbHZibk12WDJOc2NpMWhkWFJ2TG5OamMzTWlMQW9KQ1NKemNtTXZkRzl2YkhNdlpuVnVZM1JwYjI1ekwxOXVZVzFwYm1jdWMyTnpjeUlzQ2drSkluTnlZeTkwYjI5c2N5OW1kVzVqZEdsdmJuTXZYMkp5WldGcmNHOXBiblJ6TG5OamMzTWlMQW9KQ1NKemNtTXZkRzl2YkhNdlpuVnVZM1JwYjI1ekwxOTBjbUZ1YzJsMGFXOXVjeTV6WTNOeklpd0tDUWtpYzNKakwzUnZiMnh6TDJaMWJtTjBhVzl1Y3k5ZlltOTRMWE5vWVdSdmR5NXpZM056SWl3S0NRa2ljM0pqTDNSdmIyeHpMMloxYm1OMGFXOXVjeTlmWW05eVpHVnlMbk5qYzNNaUxBb0pDU0p6Y21NdmRHOXZiSE12Wm5WdVkzUnBiMjV6TDE5aWIzSmtaWEl0Y21Ga2FYVnpMbk5qYzNNaUxBb0pDU0p6Y21NdmRHOXZiSE12Wm5WdVkzUnBiMjV6TDE5bmNtRmthV1Z1ZEhNdWMyTnpjeUlzQ2drSkluTnlZeTkwYjI5c2N5OW1kVzVqZEdsdmJuTXZYMmR5YVdRdWMyTnpjeUlzQ2drSkluTnlZeTkwYjI5c2N5OXRhWGhwYm5NdlgySnZjbVJsY2kxeVlXUnBkWE11YzJOemN5SXNDZ2tKSW5OeVl5OTBiMjlzY3k5dGFYaHBibk12WDJadmJuUXRjMmw2WlM1elkzTnpJaXdLQ1FraWMzSmpMM1J2YjJ4ekwyMXBlR2x1Y3k5ZlozSmhaR2xsYm5SekxuTmpjM01pTEFvSkNTSnpjbU12ZEc5dmJITXZiV2w0YVc1ekwxOWljbVZoYTNCdmFXNTBjeTV6WTNOeklpd0tDUWtpYzNKakwzUnZiMnh6TDIxcGVHbHVjeTlmWjJWdVpYSmhkR1V0YzNSNWJHVXVjMk56Y3lJc0Nna0pJbk55WXk5MGIyOXNjeTl0YVhocGJuTXZYM04wWVhSbGN5NXpZM056SWl3S0NRa2ljM0pqTDNSdmIyeHpMMjFwZUdsdWN5OWZjSE5sZFdSdkxXVnNaVzFsYm5SekxuTmpjM01pTEFvSkNTSnpjbU12ZEc5dmJITXZiV2w0YVc1ekwxOTBjbUZ1YzJsMGFXOXVjeTV6WTNOeklpd0tDUWtpYzNKakwzUnZiMnh6TDIxcGVHbHVjeTl6YUdGd1pYTXZYMkZ1YVcxaGRHVmtMbk5qYzNNaUxBb0pDU0p6Y21NdmRHOXZiSE12YldsNGFXNXpMM05vWVhCbGN5OWZZbUZ6YVdNdWMyTnpjeUlzQ2drSkluTnlZeTkwYjI5c2N5OXRhWGhwYm5NdlkyOXRjRzl1Wlc1MGN5OWZZblYwZEc5dUxuTmpjM01pTEFvSkNTSnpjbU12ZEc5dmJITXZiV2w0YVc1ekwyTnZiWEJ2Ym1WdWRITXZYMmx1Y0hWMExuTmpjM01pTEFvSkNTSnpjbU12ZEc5dmJITXZiV2w0YVc1ekwyTnZiWEJ2Ym1WdWRITXZYM0poYm1kbExuTmpjM01pTEFvSkNTSnpjbU12ZEc5dmJITXZiV2w0YVc1ekwyTnZiWEJ2Ym1WdWRITXZYMjFsYm5VdWMyTnpjeUlzQ2drSkluTnlZeTl6WlhSMGFXNW5jeTlmYzJWMGRHbHVaM011YzJOemN5SXNDZ2tKSW5OeVl5OXpaWFIwYVc1bmN5OXVZVzFwYm1jdlgyUnBZM1JwYjI1aGNua3VjMk56Y3lJc0Nna0pJbk55WXk5elpYUjBhVzVuY3k5aWNtVmhhM0J2YVc1MGN5OWZZbkpsWVd0d2IybHVkSE11YzJOemN5SXNDZ2tKSW5OeVl5OXpaWFIwYVc1bmN5OW5jbWxrTDE5bmNtbGtMbk5qYzNNaUxBb0pDU0p6Y21NdmMyVjBkR2x1WjNNdlkyOXVkR0ZwYm1WeWN5OWZZMjl1ZEdGcGJtVnljeTV6WTNOeklpd0tDUWtpYzNKakwzTmxkSFJwYm1kekwzTndZV05sTDE5emNHRmpaUzV6WTNOeklpd0tDUWtpYzNKakwzTmxkSFJwYm1kekwzUm9aVzFsTDE5amIyeHZjaTV6WTNOeklpd0tDUWtpYzNKakwzTmxkSFJwYm1kekwyUmxjMmxuYmk5ZlltOXlaR1Z5TG5OamMzTWlMQW9KQ1NKemNtTXZjMlYwZEdsdVozTXZaR1Z6YVdkdUwxOXphR0ZrYjNjdWMyTnpjeUlzQ2drSkluTnlZeTl6WlhSMGFXNW5jeTlrWlhOcFoyNHZYMnhoZVc5MWRDNXpZM056SWl3S0NRa2ljM0pqTDNObGRIUnBibWR6TDJSbGMybG5iaTlmYkdsdWF5NXpZM056SWl3S0NRa2ljM0pqTDNObGRIUnBibWR6TDJSbGMybG5iaTlmZEdGaWJHVXVjMk56Y3lJc0Nna0pJbk55WXk5elpYUjBhVzVuY3k5MGVYQnZaM0poY0doNUwxOTBaWGgwTG5OamMzTWlMQW9KQ1NKemNtTXZjMlYwZEdsdVozTXZkSGx3YjJkeVlYQm9lUzlmWm05dWRDNXpZM056SWl3S0NRa2ljM0pqTDNObGRIUnBibWR6TDNSNWNHOW5jbUZ3YUhrdlgyaGxZV1JwYm1jdWMyTnpjeUlzQ2drSkluTnlZeTl6WlhSMGFXNW5jeTkwZVhCdlozSmhjR2g1TDE5MGFYUnNaUzV6WTNOeklpd0tDUWtpYzNKakwzTmxkSFJwYm1kekwzUjVjRzluY21Gd2FIa3ZYMk52WkdVdWMyTnpjeUlzQ2drSkluTnlZeTl6WlhSMGFXNW5jeTkwZVhCdlozSmhjR2g1TDE5clltUXVjMk56Y3lJc0Nna0pJbk55WXk5elpYUjBhVzVuY3k5MGVYQnZaM0poY0doNUwxOW9jaTV6WTNOeklpd0tDUWtpYzNKakwzTmxkSFJwYm1kekwyMXBjMk12WDIxcGMyTXVjMk56Y3lJc0Nna0pJbk55WXk5elpYUjBhVzVuY3k5amIyMXdiMjVsYm5SekwxOWpiMjUwY205c2N5NXpZM056SWl3S0NRa2ljM0pqTDNObGRIUnBibWR6TDJOdmJYQnZibVZ1ZEhNdlgybHVjSFYwTG5OamMzTWlMQW9KQ1NKemNtTXZjMlYwZEdsdVozTXZZMjl0Y0c5dVpXNTBjeTlmWW5WMGRHOXVMbk5qYzNNaUxBb0pDU0p6Y21NdmMyVjBkR2x1WjNNdlkyOXRjRzl1Wlc1MGN5OWZjbUZrYVc4dWMyTnpjeUlzQ2drSkluTnlZeTl6WlhSMGFXNW5jeTlqYjIxd2IyNWxiblJ6TDE5amFHVmphMkp2ZUM1elkzTnpJaXdLQ1FraWMzSmpMM05sZEhScGJtZHpMMk52YlhCdmJtVnVkSE12WDNKaGJtZGxMbk5qYzNNaUxBb0pDU0p6Y21NdmMyVjBkR2x1WjNNdlkyOXRjRzl1Wlc1MGN5OWZjM2RwZEdOb0xuTmpjM01pTEFvSkNTSnpjbU12YzJWMGRHbHVaM012WTI5dGNHOXVaVzUwY3k5ZmJHbHpkQzV6WTNOeklpd0tDUWtpYzNKakwzTmxkSFJwYm1kekwyTnZiWEJ2Ym1WdWRITXZYMk52Ym5SeWIyd3VjMk56Y3lJc0Nna0pJbk55WXk5elpYUjBhVzVuY3k5amIyMXdiMjVsYm5SekwxOXRaVzUxTG5OamMzTWlMQW9KQ1NKemNtTXZjMlYwZEdsdVozTXZZMjl0Y0c5dVpXNTBjeTlmWkhKdmNHUnZkMjR1YzJOemN5SXNDZ2tKSW5OeVl5OXpaWFIwYVc1bmN5OWpiMjF3YjI1bGJuUnpMMTluY205MWNDNXpZM056SWl3S0NRa2ljM0pqTDNObGRIUnBibWR6TDJOdmJYQnZibVZ1ZEhNdlgyVnRZbVZrTG5OamMzTWlMQW9KQ1NKemNtTXZjMlYwZEdsdVozTXZZMjl0Y0c5dVpXNTBjeTlmWW5KbFlXUmpjblZ0WWk1elkzTnpJaXdLQ1FraWMzSmpMM05sZEhScGJtZHpMMmxqYjI0dlgybGpiMjR1YzJOemN5SXNDZ2tKSW5OeVl5OXpaWFIwYVc1bmN5OXdiR0ZqWldodmJHUmxjbk12WDJkbGJtVnlZV3d1YzJOemN5SXNDZ2tKSW5OeVl5OXpaWFIwYVc1bmN5OXdiR0ZqWldodmJHUmxjbk12WDNCeVpXWmxjbk10Y21Wa2RXTmxaQzF0YjNScGIyNHVjMk56Y3lJc0Nna0pJbk55WXk5elpYUjBhVzVuY3k5d2JHRmpaV2h2YkdSbGNuTXZYMk52Ym5SeWIyeHpMbk5qYzNNaUxBb0pDU0p6Y21NdmMyVjBkR2x1WjNNdmNHeGhZMlZvYjJ4a1pYSnpMMTluY205MWNDNXpZM056SWl3S0NRa2ljM0pqTDNObGRIUnBibWR6TDNCc1lXTmxhRzlzWkdWeWN5OWZaSEp2Y0dSdmQyNHVjMk56Y3lJc0Nna0pJbk55WXk5amIyMXdiMjVsYm5SekwxOXBibkIxZEM1elkzTnpJaXdLQ1FraWMzSmpMMk52YlhCdmJtVnVkSE12WDJKMWRIUnZiaTV6WTNOeklpd0tDUWtpYzNKakwyTnZiWEJ2Ym1WdWRITXZYMlpwYkdVdWMyTnpjeUlzQ2drSkluTnlZeTlqYjIxd2IyNWxiblJ6TDE5eVlXUnBieTV6WTNOeklpd0tDUWtpYzNKakwyTnZiWEJ2Ym1WdWRITXZYMk5vWldOclltOTRMbk5qYzNNaUxBb0pDU0p6Y21NdlkyOXRjRzl1Wlc1MGN5OWZjbUZ1WjJVdWMyTnpjeUlzQ2drSkluTnlZeTlqYjIxd2IyNWxiblJ6TDE5emQybDBZMmd1YzJOemN5SXNDZ2tKSW5OeVl5OWpiMjF3YjI1bGJuUnpMMTl0Wlc1MUxuTmpjM01pTEFvSkNTSnpjbU12WTI5dGNHOXVaVzUwY3k5ZlpISnZjR1J2ZDI0dWMyTnpjeUlzQ2drSkluTnlZeTlqYjIxd2IyNWxiblJ6TDE5aWJHOWphM0YxYjNSbExuTmpjM01pTEFvSkNTSnpjbU12WTI5dGNHOXVaVzUwY3k5ZmJHbHpkQzV6WTNOeklpd0tDUWtpYzNKakwyTnZiWEJ2Ym1WdWRITXZYMk52Ym5SeWIyd3VjMk56Y3lJc0Nna0pJbk55WXk5amIyMXdiMjVsYm5SekwxOW5jbTkxY0M1elkzTnpJaXdLQ1FraWMzSmpMMk52YlhCdmJtVnVkSE12WDJWdFltVmtMbk5qYzNNaUxBb0pDU0p6Y21NdlkyOXRjRzl1Wlc1MGN5OWZZbkpsWVdSamNuVnRZaTV6WTNOeklnb0pYU3dLQ1NKemIzVnlZMlZ6UTI5dWRHVnVkQ0k2SUZzS0NRa2lMeW9xWEhKY2JpQXFJRVpzZFdsa0lFTnZiWEJ2Ym1WdWRITWdkakF1TWpBdU1GeHlYRzRnS2lCRGIzQjVjbWxuYUhRZ0tHTXBJREl3TVRrdE1qQXlOeUJHYkhWcFpDQkdjbUZ0WlhkdmNtdGNjbHh1SUNvZ1EyOXdlWEpwWjJoMElDaGpLU0F5TURFNUxUSXdNamNnUVhOb1ptRm9ZVzVjY2x4dUlDb2dUR2xqWlc1elpXUWdkVzVrWlhJZ1RVbFVJQ2hvZEhSd2N6b3ZMMmRwZEdoMVlpNWpiMjB2Wm14MWFXUXRabkpoYldWM2IzSnJMMFpzZFdsa0wySnNiMkl2YldGemRHVnlMMHhKUTBWT1UwVXBYSEpjYmlvdlhISmNibHh5WEc0dkx5QkRiMjVtYVdkMWNtRjBhVzl1WEhKY2JseHlYRzVBYVcxd2IzSjBJRndpTGk5MlpXNWtiM0p6TDNabGJtUnZjbk5jSWp0Y2NseHVYSEpjYmk4dlhISmNiaTh2SUZSdmIyeHpYSEpjYmk4dlhISmNibHh5WEc1QWFXMXdiM0owSUZ3aUxpOTBiMjlzY3k5MGIyOXNjMXdpTzF4eVhHNWNjbHh1THk5Y2NseHVMeThnVTJWMGRHbHVaM05jY2x4dUx5OWNjbHh1WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMM05sZEhScGJtZHpMM05sZEhScGJtZHpYQ0k3WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJRYkdGalpXaHZiR1JsY25OY2NseHVMeTljY2x4dVhISmNia0JwYlhCdmNuUWdYQ0l1TDNObGRIUnBibWR6TDNCc1lXTmxhRzlzWkdWeWN5OW5aVzVsY21Gc1hDSTdYSEpjYmtCcGJYQnZjblFnWENJdUwzTmxkSFJwYm1kekwzQnNZV05sYUc5c1pHVnljeTl3Y21WbVpYSnpMWEpsWkhWalpXUXRiVzkwYVc5dVhDSTdYSEpjYmtCcGJYQnZjblFnWENJdUwzTmxkSFJwYm1kekwzQnNZV05sYUc5c1pHVnljeTlqYjI1MGNtOXNjMXdpTzF4eVhHNUFhVzF3YjNKMElGd2lMaTl6WlhSMGFXNW5jeTl3YkdGalpXaHZiR1JsY25NdlozSnZkWEJjSWp0Y2NseHVRR2x0Y0c5eWRDQmNJaTR2YzJWMGRHbHVaM012Y0d4aFkyVm9iMnhrWlhKekwyUnliM0JrYjNkdVhDSTdYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QkRiMjF3YjI1bGJuUnpYSEpjYmk4dlhISmNibHh5WEc1QWFXMXdiM0owSUZ3aUxpOWpiMjF3YjI1bGJuUnpMMmx1Y0hWMFhDSTdYSEpjYmtCcGJYQnZjblFnWENJdUwyTnZiWEJ2Ym1WdWRITXZZblYwZEc5dVhDSTdYSEpjYmtCcGJYQnZjblFnWENJdUwyTnZiWEJ2Ym1WdWRITXZabWxzWlZ3aU8xeHlYRzVBYVcxd2IzSjBJRndpTGk5amIyMXdiMjVsYm5SekwzSmhaR2x2WENJN1hISmNia0JwYlhCdmNuUWdYQ0l1TDJOdmJYQnZibVZ1ZEhNdlkyaGxZMnRpYjNoY0lqdGNjbHh1UUdsdGNHOXlkQ0JjSWk0dlkyOXRjRzl1Wlc1MGN5OXlZVzVuWlZ3aU8xeHlYRzVBYVcxd2IzSjBJRndpTGk5amIyMXdiMjVsYm5SekwzTjNhWFJqYUZ3aU8xeHlYRzVBYVcxd2IzSjBJRndpTGk5amIyMXdiMjVsYm5SekwyMWxiblZjSWp0Y2NseHVRR2x0Y0c5eWRDQmNJaTR2WTI5dGNHOXVaVzUwY3k5a2NtOXdaRzkzYmx3aU8xeHlYRzVBYVcxd2IzSjBJRndpTGk5amIyMXdiMjVsYm5SekwySnNiMk5yY1hWdmRHVmNJanRjY2x4dVFHbHRjRzl5ZENCY0lpNHZZMjl0Y0c5dVpXNTBjeTlzYVhOMFhDSTdYSEpjYmtCcGJYQnZjblFnWENJdUwyTnZiWEJ2Ym1WdWRITXZZMjl1ZEhKdmJGd2lPMXh5WEc1QWFXMXdiM0owSUZ3aUxpOWpiMjF3YjI1bGJuUnpMMmR5YjNWd1hDSTdYSEpjYmtCcGJYQnZjblFnWENJdUwyTnZiWEJ2Ym1WdWRITXZaVzFpWldSY0lqdGNjbHh1UUdsdGNHOXlkQ0JjSWk0dlkyOXRjRzl1Wlc1MGN5OWljbVZoWkdOeWRXMWlYQ0k3WEhKY2JpSXNDZ2tKSWk4dlhISmNiaTh2SUZabGJtUnZjbk5jY2x4dUx5OWNjbHh1THk4Z2RHaHBjbVFnY0dGeWRIa2dkRzl2YkhOY2NseHVJaXdLQ1FraUx5OWNjbHh1THk4Z1JuVnVZM1JwYjI1Y2NseHVMeTljY2x4dUx5OGdSblZ1WTNScGIyNXpJSEpsYkdGMFpXUWdkRzhnY0hKbFptbDRJR0Z1WkNCemRXWm1hWGhjY2x4dVFHbHRjRzl5ZENCY0lpNHZablZ1WTNScGIyNXpMM0J5WldacGVGd2lPMXh5WEc1QWFXMXdiM0owSUZ3aUxpOW1kVzVqZEdsdmJuTXZjM1ZtWm1sNFhDSTdYSEpjYmx4eVhHNHZMeUJHZFc1amRHbHZibk1nY21Wc1lYUmxaQ0IwYnlCTllYUm9YSEpjYmtCcGJYQnZjblFnWENJdUwyWjFibU4wYVc5dWN5OXdiM2RsY2x3aU8xeHlYRzVjY2x4dUx5OGdSblZ1WTNScGIyNXpJSEpsYkdGMFpXUWdkRzhnYkdsemRGeHlYRzVBYVcxd2IzSjBJRndpTGk5bWRXNWpkR2x2Ym5NdmRHOHRiR2x6ZEZ3aU8xeHlYRzVBYVcxd2IzSjBJRndpTGk5bWRXNWpkR2x2Ym5NdmJHbHpkQzF1WlhoMFhDSTdYSEpjYmtCcGJYQnZjblFnWENJdUwyWjFibU4wYVc5dWN5OXNhWE4wTFhKbGJXOTJaVndpTzF4eVhHNUFhVzF3YjNKMElGd2lMaTltZFc1amRHbHZibk12YkdsemRDMXlaVzF2ZG1VdFlYUmNJanRjY2x4dVhISmNiaTh2SUVaMWJtTjBhVzl1Y3lCeVpXeGhkR1ZrSUhSdklFMWhjRnh5WEc1QWFXMXdiM0owSUZ3aUxpOW1kVzVqZEdsdmJuTXZkRzh0YldGd1hDSTdYSEpjYmx4eVhHNHZMeUJHZFc1amRHbHZibk1nY21Wc1lYUmxaQ0IwYnlCVGRISnBibWRjY2x4dVFHbHRjRzl5ZENCY0lpNHZablZ1WTNScGIyNXpMM04wY2kxMGNtbHRYQ0k3WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMloxYm1OMGFXOXVjeTl6ZEhJdFkyRndhWFJoYkdsNlpWd2lPMXh5WEc1QWFXMXdiM0owSUZ3aUxpOW1kVzVqZEdsdmJuTXZjM1J5TFdWNGNHeHZaR1ZjSWp0Y2NseHVRR2x0Y0c5eWRDQmNJaTR2Wm5WdVkzUnBiMjV6TDNOMGNpMXlaWEJzWVdObFhDSTdYSEpjYmtCcGJYQnZjblFnWENJdUwyWjFibU4wYVc5dWN5OXpkSEl0Y21WaFpHRmliR1ZjSWp0Y2NseHVYSEpjYmk4dklFWjFibU4wYVc5dWN5QnlaV3hoZEdWa0lIUnZJSFZ1YVhSelhISmNia0JwYlhCdmNuUWdYQ0l1TDJaMWJtTjBhVzl1Y3k5dVpXZGhkR1V0YldGd1hDSTdYSEpjYmtCcGJYQnZjblFnWENJdUwyWjFibU4wYVc5dWN5OXpkSEpwY0MxMWJtbDBYQ0k3WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMloxYm1OMGFXOXVjeTlqYjI1MlpYSjBMWFZ1YVhSY0lqdGNjbHh1WEhKY2JpOHZJRVoxYm1OMGFXOXVjeUJ5Wld4aGRHVmtJSFJ2SUdOdmJHOXlYSEpjYmtCcGJYQnZjblFnWENJdUwyWjFibU4wYVc5dWN5OWpiSEl0YkhWdGFXNWhibU5sWENJN1hISmNia0JwYlhCdmNuUWdYQ0l1TDJaMWJtTjBhVzl1Y3k5amJISXRZMjl1ZEhKaGMzUmNJanRjY2x4dVFHbHRjRzl5ZENCY0lpNHZablZ1WTNScGIyNXpMMk5zY2kxemRHVndYQ0k3WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMloxYm1OMGFXOXVjeTlqYkhJdFlYVjBiMXdpTzF4eVhHNWNjbHh1THk4Z1JuVnVZM1JwYjI1eklISmxiR0YwWldRZ2RHOGdibUZ0YVc1blhISmNia0JwYlhCdmNuUWdYQ0l1TDJaMWJtTjBhVzl1Y3k5dVlXMXBibWRjSWp0Y2NseHVYSEpjYmk4dklFWjFibU4wYVc5dWN5QnlaV3hoZEdWa0lIUnZJR0p5WldGcmNHOXBiblJ6WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMloxYm1OMGFXOXVjeTlpY21WaGEzQnZhVzUwYzF3aU8xeHlYRzVjY2x4dUx5OGdSblZ1WTNScGIyNXpJSEpsYkdGMFpXUWdkRzhnZEhKaGJuTnBkR2x2Ym5OY2NseHVRR2x0Y0c5eWRDQmNJaTR2Wm5WdVkzUnBiMjV6TDNSeVlXNXphWFJwYjI1elhDSTdYSEpjYmx4eVhHNHZMeUJHZFc1amRHbHZibk1nY21Wc1lYUmxaQ0IwYnlCaWIzZ3RjMmhoWkc5M1hISmNia0JwYlhCdmNuUWdYQ0l1TDJaMWJtTjBhVzl1Y3k5aWIzZ3RjMmhoWkc5M1hDSTdYSEpjYmx4eVhHNHZMeUJHZFc1amRHbHZibk1nY21Wc1lYUmxaQ0IwYnlCaWIzSmtaWEp6WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMloxYm1OMGFXOXVjeTlpYjNKa1pYSmNJanRjY2x4dVFHbHRjRzl5ZENCY0lpNHZablZ1WTNScGIyNXpMMkp2Y21SbGNpMXlZV1JwZFhOY0lqdGNjbHh1WEhKY2JpOHZJRVoxYm1OMGFXOXVjeUJ5Wld4aGRHVmtJSFJ2SUdkeVlXUnBaVzUwYzF4eVhHNUFhVzF3YjNKMElGd2lMaTltZFc1amRHbHZibk12WjNKaFpHbGxiblJ6WENJN1hISmNibHh5WEc0dkx5QkdkVzVqZEdsdmJuTWdjbVZzWVhSbFpDQjBieUJuY21sa1hISmNia0JwYlhCdmNuUWdYQ0l1TDJaMWJtTjBhVzl1Y3k5bmNtbGtYQ0k3WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJOYVhocGJseHlYRzR2TDF4eVhHNWNjbHh1THk4Z1RXbDRhVzRnVlhObFpDQm1iM0lnWW05eVpHVnljMXh5WEc1QWFXMXdiM0owSUZ3aUxpOXRhWGhwYm5NdlltOXlaR1Z5TFhKaFpHbDFjMXdpTzF4eVhHNWNjbHh1THk4Z1RXbDRhVzRnVlhObFpDQm1iM0lnWm05dWRGeHlYRzVBYVcxd2IzSjBJRndpTGk5dGFYaHBibk12Wm05dWRDMXphWHBsWENJN1hISmNibHh5WEc0dkx5Qk5hWGhwYmlCVmMyVmtJR1p2Y2lCbmNtRmthV1Z1ZEhOY2NseHVRR2x0Y0c5eWRDQmNJaTR2YldsNGFXNXpMMmR5WVdScFpXNTBjMXdpTzF4eVhHNWNjbHh1THk4Z1RXbDRhVzRnVlhObFpDQm1iM0lnWW5KbFlXdHdiMmx1ZEhOY2NseHVRR2x0Y0c5eWRDQmNJaTR2YldsNGFXNXpMMkp5WldGcmNHOXBiblJ6WENJN1hISmNibHh5WEc0dkx5Qk5hWGhwYmlCVmMyVmtJSFJ2SUVkbGJtVnlZWFJsSUhKaGNHbGtJR05zWVhOelpYTmNjbHh1UUdsdGNHOXlkQ0JjSWk0dmJXbDRhVzV6TDJkbGJtVnlZWFJsTFhOMGVXeGxYQ0k3WEhKY2JseHlYRzR2THlCTmFYaHBiaUJWYzJWa0lHWnZjaUJsYkdWdFpXNTBJSE4wWVhSbGMxeHlYRzVBYVcxd2IzSjBJRndpTGk5dGFYaHBibk12YzNSaGRHVnpYQ0k3WEhKY2JseHlYRzR2THlCTmFYaHBiaUJWYzJWa0lHWnZjaUJ3YzJWMVpHOGdaV3hsYldWdWRITmNjbHh1UUdsdGNHOXlkQ0JjSWk0dmJXbDRhVzV6TDNCelpYVmtieTFsYkdWdFpXNTBjMXdpTzF4eVhHNWNjbHh1THk4Z1RXbDRhVzRnVlhObFpDQm1iM0lnZEhKaGJuTnBkR2x2Ym5OY2NseHVRR2x0Y0c5eWRDQmNJaTR2YldsNGFXNXpMM1J5WVc1emFYUnBiMjV6WENJN1hISmNibHh5WEc0dkwxeHlYRzR2THlCVGFHRndaWE5jY2x4dUx5OWNjbHh1WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMjFwZUdsdWN5OXphR0Z3WlhNdllXNXBiV0YwWldSY0lqdGNjbHh1UUdsdGNHOXlkQ0JjSWk0dmJXbDRhVzV6TDNOb1lYQmxjeTlpWVhOcFkxd2lPMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdRMjl0Y0c5dVpXNTBjMXh5WEc0dkwxeHlYRzVjY2x4dVFHbHRjRzl5ZENCY0lpNHZiV2w0YVc1ekwyTnZiWEJ2Ym1WdWRITXZZblYwZEc5dVhDSTdYSEpjYmtCcGJYQnZjblFnWENJdUwyMXBlR2x1Y3k5amIyMXdiMjVsYm5SekwybHVjSFYwWENJN1hISmNia0JwYlhCdmNuUWdYQ0l1TDIxcGVHbHVjeTlqYjIxd2IyNWxiblJ6TDNKaGJtZGxYQ0k3WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMjFwZUdsdWN5OWpiMjF3YjI1bGJuUnpMMjFsYm5WY0lqdGNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdjSEpsWm1sNFhISmNiaTh2SUZSeWFXMGdZVzVrSUhCeVpXWnBlQ0IwYUdVZ2RtRnNkV1VnZDJsMGFDQnplVzFpYjJ4Y2NseHVMeTljY2x4dUx5OGdVR0Z5WVcxbGRHVnljenBjY2x4dUx5OGdleXA5SUNSMllXeDFaU0F0SUhaaGJIVmxYSEpjYmk4dklIdFRkSEpwYm1kOUlDUnplVzFpYjJ3Z0xTQnplVzFpYjJ3Z2RHOGdjSEpsWm1sNFhISmNiaTh2WEhKY2JpOHZJRVY0WVcxd2JHVWdiMllnZFhObE9seHlYRzR2THlCd2NtVm1hWGdvSjIxaGJuUmhKeXdnWENKK1hDSXBPeUF2THlCK2JXRnVkR0ZjY2x4dUx5OWNjbHh1THk4Z1VtVjBkWEp1T2x4eVhHNHZMeUJ3Y21WbWFYaGxaQ0JXWVd4MVpTQnZjaUJsYlhCMGVTQnBaaUIyWVd4MVpTQnBjeUJsYlhCMGVTQnZjaUJ1ZFd4c1hISmNiaTh2WEhKY2JrQm1kVzVqZEdsdmJpQndjbVZtYVhnb0pIWmhiSFZsTENBa2MzbHRZbTlzS1NCN1hISmNiaUFnUUdsbUlDUjJZV3gxWlNBOVBTQW9LU0I3WEhKY2JpQWdJQ0JBY21WMGRYSnVJQ2dwTzF4eVhHNGdJSDBnUUdWc2MyVWdhV1lnSkhaaGJIVmxJRDA5SUc1MWJHd2diM0lnSkhaaGJIVmxJRDA5SUZ3aVhDSWdlMXh5WEc0Z0lDQWdRSEpsZEhWeWJpQmNJbHdpTzF4eVhHNGdJSDFjY2x4dUlDQkFjbVYwZFhKdUlDTjdKSE41YldKdmJIMGpleVIyWVd4MVpYMDdYSEpjYm4xY2NseHVJaXdLQ1FraUx5OWNjbHh1THk4Z2MzVm1abWw0WEhKY2JpOHZJRlJ5YVcwZ1lXNWtJSE4xWm1acGVDQjBhR1VnZG1Gc2RXVWdkMmwwYUNCemVXMWliMnhjY2x4dUx5OWNjbHh1THk4Z1VHRnlZVzFsZEdWeWN6cGNjbHh1THk4Z2V5cDlJQ1IyWVd4MVpTQXRJSFpoYkhWbFhISmNiaTh2SUh0VGRISnBibWQ5SUNSemVXMWliMndnTFNCemVXMWliMndnZEc4Z2MzVm1abWw0WEhKY2JpOHZYSEpjYmk4dklFVjRZVzF3YkdVZ2IyWWdkWE5sT2x4eVhHNHZMeUJ6ZFdabWFYZ29KMjFoYm5SaEp5d2dYQ0orWENJcE95QXZMeUJ0WVc1MFlYNWNjbHh1THk5Y2NseHVMeThnVW1WMGRYSnVPbHh5WEc0dkx5QnpkV1ptYVhobFpDQldZV3gxWlNCdmNpQmxiWEIwZVNCcFppQjJZV3gxWlNCcGN5QmxiWEIwZVNCdmNpQnVkV3hzWEhKY2JpOHZYSEpjYmtCbWRXNWpkR2x2YmlCemRXWm1hWGdvSkhaaGJIVmxMQ0FrYzNsdFltOXNLU0I3WEhKY2JpQWdRR2xtSUNSMllXeDFaU0E5UFNBb0tTQjdYSEpjYmlBZ0lDQkFjbVYwZFhKdUlDZ3BPMXh5WEc0Z0lIMGdRR1ZzYzJVZ2FXWWdKSFpoYkhWbElEMDlJRzUxYkd3Z2IzSWdKSFpoYkhWbElEMDlJRndpWENJZ2UxeHlYRzRnSUNBZ1FISmxkSFZ5YmlCY0lsd2lPMXh5WEc0Z0lIMWNjbHh1SUNCQWNtVjBkWEp1SUNON0pIWmhiSFZsZlNON0pITjViV0p2YkgwN1hISmNibjFjY2x4dUlpd0tDUWtpTHk5Y2NseHVMeThnVUc5M1pYSWdablZ1WTNScGIyNWNjbHh1THk5Y2NseHVYSEpjYmk4dlhISmNiaTh2SUNCd2IzZGNjbHh1THk4Z0lFWjFibU4wYVc5dWN5QmpZV3hqZFd4aGRHVWdiV0YwYUNCd2IzZGxjaUJ2WmlCaElHZHBkbVZ1SUhaaGJIVmxYSEpjYmk4dlhISmNiaTh2SUNCUVlYSmhiV1YwWlhKek9seHlYRzR2THlBZ2UwNTFiV0psY24wZ0pHSmhjMlVnTFNCMGFHVWdZbUZ6WlNCMllXeDFaU0IwYnlCallXeGpkV3hoZEdVZ2NHOTNaWEpjY2x4dUx5OGdJSHRPZFcxaVpYSjlJQ1JsZUhCdmJtVnVkQ0F0SUhSb1pTQmxlSEJ2Ym1WdWRDQjJZV3gxWlNCMGJ5QmpZV3hqZFd4aGRHVWdjRzkzWlhKY2NseHVMeTljY2x4dUx5OGdJRkpsZEhWeWJqcGNjbHh1THk4Z0lIdE9kVzFpWlhKOUlDUnlaWE4xYkhSY2NseHVMeTljY2x4dVFHWjFibU4wYVc5dUlIQnZkMlZ5S0NSaVlYTmxMQ0FrWlhod2IyNWxiblFwSUh0Y2NseHVJQ0FrY21WemRXeDBPaUF4TzF4eVhHNWNjbHh1SUNCQWFXWWdKR1Y0Y0c5dVpXNTBJRDRnTUNCN1hISmNiaUFnSUNCQVptOXlJQ1JwSUdaeWIyMGdNU0IwYUhKdmRXZG9JQ1JsZUhCdmJtVnVkQ0I3WEhKY2JpQWdJQ0FnSUNSeVpYTjFiSFE2SUNSeVpYTjFiSFFnS2lBa1ltRnpaVHRjY2x4dUlDQWdJSDFjY2x4dUlDQjlJRUJsYkhObElHbG1JQ1JsZUhCdmJtVnVkQ0E4SURBZ2UxeHlYRzRnSUNBZ1FHWnZjaUFrYVNCbWNtOXRJREVnZEdoeWIzVm5hQ0FvTFRFZ0tpQWtaWGh3YjI1bGJuUXBJSHRjY2x4dUlDQWdJQ0FnSkhKbGMzVnNkRG9nSkhKbGMzVnNkQ0F2SUNSaVlYTmxPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdRSEpsZEhWeWJpQWtjbVZ6ZFd4ME8xeHlYRzU5WEhKY2JpSXNDZ2tKSWk4dlhISmNiaTh2SUhSdkxXeHBjM1JjY2x4dUx5OGdWR0ZyWlhNZ1lTQnRZWEFnWVc1a0lHTnZiblpsY25RZ2FYUWdhVzUwYnlCc2FYTjBYSEpjYmk4dlhISmNiaTh2SUZCaGNtRnRaWFJsY25NNlhISmNiaTh2SUh0TllYQjlJQ1J0WVhBZ0xTQnRZWEFnZEc4Z1kyOXVkbVZ5ZEZ4eVhHNHZMeUJiYjNCMGFXOXVZV3hkSUh0VGRISnBibWQ5SUNSclpXVndJQzBnWTJobFkyc2dkRzhnYTJWbGNDQjJZV3gxWlNoektTQnZjaUJyWlhrb2N5a2diM0lnWW05MGFDQnBiaUJ5WlhOMWJIUWdiR2x6ZEZ4eVhHNHZMMXh5WEc0dkx5QkZlR0Z0Y0d4bElHOW1JSFZ6WlRwY2NseHVMeThnSkdFZ09pQW9ZVG94TEdJNk1peGpPak1zWkRvMEtUdGNjbHh1THk4Z0pISmxjM1ZzZERvZ2RHOHRiR2x6ZENna1lTd25hMlY1Y3ljcE95QTlQaUFrY21WemRXeDBJRG9nS0dFc1lpeGpMR1FwTzF4eVhHNHZMMXh5WEc0dkx5QlNaWFIxY200NlhISmNiaTh2SUh0TWFYTjBmU0J1WlhjZ2JHbHpkRnh5WEc0dkwxeHlYRzVBWm5WdVkzUnBiMjRnZEc4dGJHbHpkQ2drYldGd0xDQWthMlZsY0RvZ1hDSmliM1JvWENJcElIdGNjbHh1SUNCQWFXWWdKR3RsWlhBZ0lUMGdYQ0pyWlhselhDSWdZVzVrSUNSclpXVndJQ0U5SUZ3aWRtRnNkV1Z6WENJZ1lXNWtJQ1JyWldWd0lDRTlJRndpWW05MGFGd2lJSHRjY2x4dUlDQWdJRUJsY25KdmNpQmNJbFJvWlNCaGNtZDFiV1Z1ZENBa2EyVmxjQ0JvWVhabElHbHVZMjl5Y21WamRDQjJZV3gxWlRvZ1lDTjdKR3RsWlhCOVlDNGdkbUZzZFdVZ1lHdGxlWE5nSUdCMllXeDFaWE5nSUdCaWIzUm9ZQ0JwY3lCbGVIQmxZM1JsWkNGY0lqdGNjbHh1SUNCOVhISmNiaUFnUUdsbUlIUjVjR1V0YjJZb0pHMWhjQ2tnSVQwZ1hDSnRZWEJjSWlCN1hISmNiaUFnSUNCQVpYSnliM0lnWENKVWFHVWdZWEpuZFcxbGJuUWdKRzFoY0RvZ1lDTjdKRzFoY0gxZ0lHbHpJRzltSUdsdVkyOXljbVZqZENCMGVYQmxPaUJnSTN0MGVYQmxMVzltS0NSdFlYQXBmV0F1SUZSNWNHVWdiMllnWUUxaGNHQWdhWE1nY21WeGRXbHlaV1FoWENJN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNCQWFXWWdKR3RsWlhBZ1BUMGdYQ0pyWlhselhDSWdlMXh5WEc0Z0lDQWdRSEpsZEhWeWJpQnRZWEF0YTJWNWN5Z2tiV0Z3S1R0Y2NseHVJQ0I5SUVCbGJITmxJR2xtSUNSclpXVndJRDA5SUZ3aWRtRnNkV1Z6WENJZ2UxeHlYRzRnSUNBZ1FISmxkSFZ5YmlCdFlYQXRkbUZzZFdWektDUnRZWEFwTzF4eVhHNGdJSDBnUUdWc2MyVWdlMXh5WEc0Z0lDQWdKR3RsZVhNNklDZ3BPMXh5WEc0Z0lDQWdKSFpoYkhWbGN6b2dLQ2s3WEhKY2JseHlYRzRnSUNBZ1FHVmhZMmdnSkd0bGVTd2dKSFpoYkNCcGJpQWtiV0Z3SUh0Y2NseHVJQ0FnSUNBZ0pHdGxlWE02SUdGd2NHVnVaQ2drYTJWNWN5d2dKR3RsZVNrN1hISmNiaUFnSUNBZ0lDUjJZV3gxWlhNNklHRndjR1Z1WkNna2RtRnNkV1Z6TENBa2RtRnNLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJRUJ5WlhSMWNtNGdlbWx3S0NSclpYbHpMQ0FrZG1Gc2RXVnpLVHRjY2x4dUlDQjlYSEpjYm4xY2NseHVJaXdLQ1FraUx5OWNjbHh1THk4Z2JHbHpkQzF1WlhoMFhISmNiaTh2SUhKbGRIVnliaUIwYUdVZ2JtVjRkQ0IyWVd4MVpTQnBiaUJzYVhOMFhISmNiaTh2WEhKY2JpOHZJRkJoY21GdFpYUmxjbk02WEhKY2JpOHZJSHNxZlNBa2RtRnNkV1VnTFNCMllXeDFaU0IwYnlCbWFXNWtJRzVsZUhRZ2RHOWNjbHh1THk5Y2NseHVMeThnUlhoaGJYQnNaU0J2WmlCMWMyVTZYSEpjYmk4dklDUmhPaUFvWVNCaUlHTWdaQ2s3WEhKY2JpOHZJR3hwYzNRdGJtVjRkQ2hpS1NBOVBpQmpYSEpjYmk4dlhISmNiaTh2SUZKbGRIVnlianBjY2x4dUx5OGdleXA5SUc1bGVIUWdkbUZzZFdVZ2RHOGdKSFpoYkhWbExDQnVkV3hzSUdsbUlDUjJZV3gxWlNCcGN5QnNZWE4wTGx4eVhHNHZMMXh5WEc1QVpuVnVZM1JwYjI0Z2JHbHpkQzF1WlhoMEtDUnNhWE4wTENBa2RtRnNkV1VwSUh0Y2NseHVJQ0FrYVc1a1pYZzZJR2x1WkdWNEtDUnNhWE4wTENBa2RtRnNkV1VwTzF4eVhHNGdJRUJwWmlCdWIzUWdKR2x1WkdWNElIdGNjbHh1SUNBZ0lFQmxjbkp2Y2lCY0luWmhiSFZsSUdBamV5UjJZV3gxWlgxZ0lHNXZkQ0JtYjNWdVpDQnBiaUJnSTNza2JHbHpkSDFnWENJN1hISmNiaUFnZlZ4eVhHNGdJRUJ5WlhSMWNtNGdhV1lvSkdsdVpHVjRJRHdnYkdWdVozUm9LQ1JzYVhOMEtTd2diblJvS0NSc2FYTjBMQ0FrYVc1a1pYZ2dLeUF4S1N3Z2JuVnNiQ2s3WEhKY2JuMWNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdiR2x6ZEMxeVpXMXZkbVZjY2x4dUx5OGdjbVZ0YjNabElITndaV05wWm1sbFpDQjJZV3gxWlNCbWNtOXRJR0VnYkdsemRGeHlYRzR2TDF4eVhHNHZMeUJRWVhKaGJXVjBaWEp6T2x4eVhHNHZMeUI3VEdsemRIMGdKR3hwYzNRZ0xTQnNhWE4wSUhSdklISmxiVzkyWlNCbWNtOXRYSEpjYmk4dklIc3FmU0FrZG1Gc2RXVWdMU0IyWVd4MVpTQjBieUJ5WlcxdmRtVmNjbHh1THk4Z1cyOXdkR2x2Ym1Gc1hTQjdRbTl2YkdWaGJuMGdKSEpsWTNWeWMybDJaU0F0SUhWelpXUWdkRzhnWkdWc1pYUmxJSEpsWTNWeWMybDJaV3g1WEhKY2JpOHZYSEpjYmk4dklFVjRZVzF3YkdVZ2IyWWdkWE5sT2x4eVhHNHZMeUFrWVRvZ1cyWnZieUJpWVhJZ1ltRjZJSEYxZUYwN1hISmNiaTh2SUNSeVpYTjFiSFE2SUd4cGMzUXRjbVZ0YjNabEtDUmhMQ0JjSW1KaGNsd2lLU0E5UGlBZ1cyWnZieUJpWVhvZ2NYVjRYVnh5WEc0dkwxeHlYRzR2THlCU1pYUjFjbTQ2WEhKY2JpOHZJSHRNYVhOMGZTQnVaWGNnYkdsemRGeHlYRzR2TDF4eVhHNWNjbHh1UUdaMWJtTjBhVzl1SUd4cGMzUXRjbVZ0YjNabEtDUnNhWE4wTENBa2RtRnNkV1VzSUNSeVpXTjFjbk5wZG1VNklHWmhiSE5sS1NCN1hISmNiaUFnSkhKbGMzVnNkRG9nS0NrN1hISmNibHh5WEc0Z0lFQnBaaUJzWlc1bmRHZ29KR3hwYzNRcElEMDlJREFnZTF4eVhHNGdJQ0FnUUdWeWNtOXlJRndpUTJGdUlHNXZkQ0J5WlcxdmRtVWdZQ043SkhaaGJIVmxmV0FnWm5KdmJTQmdJM3NrYkdsemRIMWdMaUFrYkdsemRDQnBjeUJsYlhCMGVTQnZjaUJ1ZFd4c1hDSTdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQkFabTl5SUNScElHWnliMjBnTVNCMGFISnZkV2RvSUd4bGJtZDBhQ2drYkdsemRDa2dlMXh5WEc0Z0lDQWdRR2xtSUhSNWNHVXRiMllvYm5Sb0tDUnNhWE4wTENBa2FTa3BJRDA5SUd4cGMzUWdZVzVrSUNSeVpXTjFjbk5wZG1VZ2UxeHlYRzRnSUNBZ0lDQWtjbVZ6ZFd4ME9pQmhjSEJsYm1Rb0pISmxjM1ZzZEN3Z2JHbHpkQzF5WlcxdmRtVW9iblJvS0NSc2FYTjBMQ0FrYVNrc0lDUjJZV3gxWlN3Z0pISmxZM1Z5YzJsMlpTa3BPMXh5WEc0Z0lDQWdmU0JBWld4elpTQnBaaUJ1ZEdnb0pHeHBjM1FzSUNScEtTQWhQU0FrZG1Gc2RXVWdlMXh5WEc0Z0lDQWdJQ0FrY21WemRXeDBPaUJoY0hCbGJtUW9KSEpsYzNWc2RDd2diblJvS0NSc2FYTjBMQ0FrYVNrcE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ1FISmxkSFZ5YmlBa2NtVnpkV3gwTzF4eVhHNTlYSEpjYmlJc0Nna0pJaTh2WEhKY2JpOHZJR3hwYzNRdGNtVnRiM1psTFdGMFhISmNiaTh2SUhKbGJXOTJaU0IyWVd4MVpTQm1jbTl0SUdFZ2JHbHpkQ0JoZENCaElITndaV05wWm1sbFpDQnBibVJsZUZ4eVhHNHZMeUIzWlNCallXNGdZV3h6YnlCMWMyVWdibVZuWVhScGRtVWdhVzVrWlhnZ2RHOGdjbVZ0YjNabElHWnliMjBnWlc1a0lHOW1JR3hwYzNSY2NseHVMeTljY2x4dUx5OGdVR0Z5WVcxbGRHVnljenBjY2x4dUx5OGdlMHhwYzNSOUlDUnNhWE4wSUMwZ2JHbHpkQ0IwYnlCeVpXMXZkbVVnWm5KdmJWeHlYRzR2THlCN1RuVnRZbVZ5ZlNBa2FXNWtaWGdnTFNCcGJtUmxlQ0IwYnlCeVpXMXZkbVVnWVhSY2NseHVMeTljY2x4dUx5OGdSWGhoYlhCc1pTQnZaaUIxYzJVNlhISmNiaTh2SUNSaE9pQW9abTl2SUdKaGNpQmlZWG9nY1hWNEtUdGNjbHh1THk4Z0pHSTZJRnRtYjI4Z1ltRnlJR0poZWlCeGRYaGRPMXh5WEc0dkx5QWtjbVZ6ZFd4ME9pQnNhWE4wTFhKbGJXOTJaUzFoZENna1lTd2dNaWtnUFQ0Z0lHWnZieUJpWVhvZ2NYVjRYSEpjYmk4dklDUnlaWE4xYkhRNklHeHBjM1F0Y21WdGIzWmxMV0YwS0NSaUxDQXlLU0E5UGlBZ1cyWnZieUJpWVhvZ2NYVjRYVnh5WEc0dkwxeHlYRzR2THlCU1pYUjFjbTQ2WEhKY2JpOHZJSHRNYVhOMGZTQnVaWGNnYkdsemRGeHlYRzR2TDF4eVhHNUFablZ1WTNScGIyNGdjbVZ0YjNabExXRjBLQ1JzYVhOMExDQWthVzVrWlhncElIdGNjbHh1SUNBa2NtVnpkV3gwT2lCdWRXeHNPMXh5WEc0Z0lFQnBaaUIwZVhCbExXOW1LQ1JwYm1SbGVDa2dJVDBnYm5WdFltVnlJSHRjY2x4dUlDQWdJRUJsY25KdmNpQmNJbFJvWlNCaGNtZDFiV1Z1ZENBa2FXNWtaWGc2SUdBamV5UnBibVJsZUgxZ0lHbHpJRzltSUdsdVkyOXljbVZqZENCMGVYQmxPaUJnSTN0MGVYQmxMVzltS0NScGJtUmxlQ2w5WUM0Z1ZIbHdaU0J2WmlCZ1RuVnRZbVZ5WUNCcGN5QnlaWEYxYVhKbFpDRmNJanRjY2x4dUlDQjlJRUJsYkhObElHbG1JQ1JwYm1SbGVDQTlQU0F3SUh0Y2NseHVJQ0FnSUVCbGNuSnZjaUJjSWxSb1pTQmhjbWQxYldWdWRDQWthVzVrWlhnNklHQWpleVJwYm1SbGVIMWdJRzExYzNRZ1ltVWdZU0J1YjI0dGVtVnlieUJwYm5SbFoyVnlJVndpTzF4eVhHNGdJSDBnUUdWc2MyVWdhV1lnWVdKektDUnBibVJsZUNrZ1BpQnNaVzVuZEdnb0pHeHBjM1FwSUh0Y2NseHVJQ0FnSUVCbGNuSnZjaUJjSWxSb1pTQmhjbWQxYldWdWRDQWthVzVrWlhnNklHQWpleVJwYm1SbGVIMWdJR2x6SUdkeVpXRjBaWElnZEdoaGJpQWtiR2x6ZENCc1pXNW5kR2dnSTN0c1pXNW5kR2dvSkd4cGMzUXBmUzRnU1hRZ2MyaHZkV3hrSUdKbElHbHVjMmxrWlNBa2JHbHpkQ0JzWlc1bmRHaGNJanRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQ1J5WlhOMWJIUTZJQ2dwTzF4eVhHNGdJQ1JwYm1SbGVEb2dhV1lvSkdsdVpHVjRJRHdnTUN3Z2JHVnVaM1JvS0NSc2FYTjBLU0FySUNScGJtUmxlQ0FySURFc0lDUnBibVJsZUNrN1hISmNibHh5WEc0Z0lFQm1iM0lnSkdrZ1puSnZiU0F4SUhSb2NtOTFaMmdnYkdWdVozUm9LQ1JzYVhOMEtTQjdYSEpjYmlBZ0lDQkFhV1lnSkdrZ0lUMGdKR2x1WkdWNElIdGNjbHh1SUNBZ0lDQWdKSEpsYzNWc2REb2dZWEJ3Wlc1a0tDUnlaWE4xYkhRc0lHNTBhQ2drYkdsemRDd2dKR2twS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzRnSUVCeVpYUjFjbTRnSkhKbGMzVnNkRHRjY2x4dWZWeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5QjBieTF0WVhCY2NseHVMeThnVkdGclpYTWdkSGR2SUd4cGMzUnpMQ0IwYUdVZ1ptbHljM1FnWm05eUlHdGxlU2h6S1N3Z2MyVmpiMjVrSUdadmNpQjJZV3gxWlNoektTNWNjbHh1THk5Y2NseHVMeThnVUdGeVlXMWxkR1Z5Y3pwY2NseHVMeThnZTB4cGMzUWdiM0lnVTNSeWFXNW5mU0FrYTJWNWN5QXRJRXRsZVNoektTQm1iM0lnYm1WM0lHMWhjRnh5WEc0dkx5QmJiM0IwYVc5dVlXeGRJSHRNYVhOMElHOXlJRk4wY21sdVozMGdKSFpoYkhWbGN5QXRJRlpoYkhWbEtITXBJR1p2Y2lCdVpYY2diV0Z3WEhKY2JpOHZYSEpjYmk4dklFVjRZVzF3YkdVZ2IyWWdkWE5sT2x4eVhHNHZMeUFrWVRvZ1lTQmlJR01nWkR0Y2NseHVMeThnSkdJNklERWdNaUF6SURRN1hISmNiaTh2SUNSeVpYTjFiSFE2SUhSdkxXMWhjQ2drWVN3a1lpazdJRDArSUNSeVpYTjFiSFFnT2lBb1lUb3hMR0k2TWl4ak9qTXNaRG8wS1R0Y2NseHVMeTljY2x4dUx5OGdVbVYwZFhKdU9seHlYRzR2THlCN1RHbHpkSDBnYm1WM0lFMWhjRnh5WEc0dkwxeHlYRzVBWm5WdVkzUnBiMjRnZEc4dGJXRndLQ1JyWlhsekxDQWtkbUZzZFdWek9pQWthMlY1Y3lrZ2UxeHlYRzRnSUM4dklISmxkSFZ5YmlCcFppQnBkSE1nWVd4eVpXRmtlU0JoSUcxaGNGeHlYRzRnSUVCcFppQjBlWEJsTFc5bUtDUnJaWGx6S1NBOVBTQmNJbTFoY0Z3aUlHOXlJSFI1Y0dVdGIyWW9KSFpoYkhWbGN5a2dQVDBnWENKdFlYQmNJaUI3WEhKY2JpQWdJQ0JBY21WMGRYSnVJQ1JyWlhsek8xeHlYRzRnSUgxY2NseHVYSEpjYmlBZ1FHbG1JSFI1Y0dVdGIyWW9KR3RsZVhNcElEMDlJRndpYzNSeWFXNW5YQ0lnYjNJZ2RIbHdaUzF2WmlodWRHZ29KR3RsZVhNc0lERXBLU0FoUFNCY0lteHBjM1JjSWlCN1hISmNiaUFnSUNBa2JXRndPaUFvS1R0Y2NseHVJQ0FnSUNSc1pXNW5kR2d0YTJWNWN6b2diR1Z1WjNSb0tDUnJaWGx6S1R0Y2NseHVJQ0FnSUNSc1pXNW5kR2d0ZG1Gc2RXVnpPaUJzWlc1bmRHZ29KSFpoYkhWbGN5azdYSEpjYmlBZ0lDQWtiV2x1TFd4bGJtZDBhRG9nYldsdUtDUnNaVzVuZEdndGEyVjVjeXdnSkd4bGJtZDBhQzEyWVd4MVpYTXBPMXh5WEc1Y2NseHVJQ0FnSUM4dklGZGhjbTRnYVdZZ2RHaGxJRXhsYm1kMGFDQnZaaUJyWlhseklHRnVaQ0IyWVd4MVpYTWdZWEpsSUc1dmRDQjBhR1VnYzJGdFpWeHlYRzRnSUNBZ1FHbG1JQ1JzWlc1bmRHZ3RhMlY1Y3lBaFBTQWtiR1Z1WjNSb0xYWmhiSFZsY3lCN1hISmNiaUFnSUNBZ0lFQnBaaUFrWlc1aFlteGxMV1JsWW5WbloybHVaeUI3WEhKY2JpQWdJQ0FnSUNBZ1FIZGhjbTRnWENKVWFHVnlaU0JoY21VZ0kzc2tiR1Z1WjNSb0xXdGxlWE45SUd0bGVTaHpLU0JnSTNza2EyVjVjMzFnSUdadmNpQWpleVJzWlc1bmRHZ3RkbUZzZFdWemZTQjJZV3gxWlNoektTQmdJM3NrZG1Gc2RXVnpmV0F1SUZKbGMzVnNkR2x1WnlCdFlYQWdkMmxzYkNCdmJteDVJR2hoZG1VZ0kzc2tiV2x1TFd4bGJtZDBhSDBnY0dGcGNuTXVYQ0k3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQXZMeUJ5WlhSMWNtNGdhV1lnYTJWNWN5QmhjbVVnWlcxd2RIa2diR2x6ZEZ4eVhHNGdJQ0FnUUdsbUlDUnNaVzVuZEdndGEyVjVjeUE5UFNBd0lIdGNjbHh1SUNBZ0lDQWdRR1Z5Y205eUlGd2lWR2hsSUd4bGJtZDBhQ0J2WmlCclpYbHpJR0FqZXlSclpYbHpmV0FnYVhNZ1lDTjdKR3hsYm1kMGFDMXJaWGx6ZldBZ0xDQmpZVzV1YjNRZ2JXVnlaMlVnWlcxd2RIa2dhMlY1YzF3aU8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJRUJwWmlBa2JHVnVaM1JvTFhaaGJIVmxjeUE5UFNBd0lIdGNjbHh1SUNBZ0lDQWdRR1Z5Y205eUlGd2lWR2hsSUd4bGJtZDBhQ0J2WmlCMllXeDFaWE1nWUNON0pIWmhiSFZsYzMxZ0lHbHpJR0FqZXlSc1pXNW5kR2d0ZG1Gc2RXVnpmV0FnTENCallXNXViM1FnYldWeVoyVWdaVzF3ZEhrZ2RtRnNkV1Z6WENJN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdMeThnUTI5dWRtVnlkQ0IwYnlCdFlYQmNjbHh1SUNBZ0lFQm1iM0lnSkdrZ1puSnZiU0F4SUhSb2NtOTFaMmdnSkcxcGJpMXNaVzVuZEdnZ2UxeHlYRzRnSUNBZ0lDQWtiV0Z3T2lCdFlYQXRiV1Z5WjJVb1hISmNiaUFnSUNBZ0lDQWdKRzFoY0N4Y2NseHVJQ0FnSUNBZ0lDQW9YSEpjYmlBZ0lDQWdJQ0FnSUNCdWRHZ29KR3RsZVhNc0lDUnBLVG9nYm5Sb0tDUjJZV3gxWlhNc0lDUnBLVnh5WEc0Z0lDQWdJQ0FnSUNsY2NseHVJQ0FnSUNBZ0tUdGNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lFQnlaWFIxY200Z0pHMWhjRHRjY2x4dUlDQjlYSEpjYmlBZ1FHVnljbTl5SUZ3aVZXNWxlSEJsWTNSbFpDQkZjbkp2Y2x3aU8xeHlYRzU5WEhKY2JpSXNDZ2tKSWk4dlhISmNiaTh2SUhSeWFXMWNjbHh1THk4Z2NtVnRiM1psWkNCemNHRmpaWE11WEhKY2JpOHZYSEpjYmk4dklGQmhjbUZ0WlhSbGNuTTZYSEpjYmk4dklIc3FmU0FrZG1Gc2RXVWdMU0IyWVd4MVpTQjBieUIwY21sdFhISmNiaTh2WEhKY2JpOHZJRVY0WVcxd2JHVWdiMllnZFhObE9seHlYRzR2THlCMGNtbHRLQ2NnZEdVZ2MzUWdhVzVuSUNjcE95QTlQaUIwWlhOMGFXNW5YSEpjYmk4dlhISmNiaTh2SUZKbGRIVnlianBjY2x4dUx5OGdleXA5SUhSeWFXMXRaV1FnZG1Gc2RXVmNjbHh1THk5Y2NseHVRR1oxYm1OMGFXOXVJSFJ5YVcwb0pIWmhiSFZsS1NCN1hISmNiaUFnUUdsbUlIUjVjR1V0YjJZb0pIWmhiSFZsS1NBaFBTQmNJbk4wY21sdVoxd2lJSHRjY2x4dUlDQWdJRUJsY25KdmNpQmNJbFJvWlNCaGNtZDFiV1Z1ZENBa2RtRnNkV1U2SUdBamV5UjJZV3gxWlgxZ0lHbHpJRzltSUdsdVkyOXljbVZqZENCMGVYQmxPaUJnSTN0MGVYQmxMVzltS0NSMllXeDFaU2w5WUM0Z1ZIbHdaU0J2WmlCZ2MzUnlhVzVuWUNCcGN5QnlaWEYxYVhKbFpDRmNJanRjY2x4dUlDQjlYSEpjYmlBZ1FIZG9hV3hsSUNoemRISXRhVzVrWlhnb0pIWmhiSFZsTENCY0lpQmNJaWtnSVQwZ2JuVnNiQ2tnZTF4eVhHNGdJQ0FnSkdsdVpHVjRPaUJ6ZEhJdGFXNWtaWGdvSkhaaGJIVmxMQ0JjSWlCY0lpazdYSEpjYmlBZ0lDQWtkbUZzZFdVNklGd2lJM3R6ZEhJdGMyeHBZMlVvSkhaaGJIVmxMQ0F3TENBa2FXNWtaWGdnTFNBeEtYMGplM04wY2kxemJHbGpaU2drZG1Gc2RXVXNJQ1JwYm1SbGVDQXJJREVwZlZ3aU8xeHlYRzRnSUgxY2NseHVJQ0JBY21WMGRYSnVJQ1IyWVd4MVpUdGNjbHh1ZlZ4eVhHNGlMQW9KQ1NJdkwxeHlYRzR2THlCemRISXRZMkZ3YVhSaGJHbDZaVnh5WEc0dkx5Qk5ZV3RsSUhOMGNtbHVaeWR6SUdacGNuTjBJR05vWVhKaFkzUmxjaUIxY0hCbGNtTmhjMlZjY2x4dUx5OWNjbHh1THk4Z1VHRnlZVzFsZEdWeWN6cGNjbHh1THk4Z1lDUnpkSEpwYm1kZ0lGTjBjbWx1WjF4eVhHNHZMMXh5WEc0dkx5QkZlR0Z0Y0d4bElHOW1JSFZ6WlRwY2NseHVMeThnSkhKbGMzVnNkRG9nYzNSeUxXTmhjR2wwWVd4cGVtVW9KMkZpWTJRbktTQTlQaUFrY21WemRXeDBJRG9nUVdKalpGeHlYRzR2TDF4eVhHNHZMeUJRWVhKaGJXVjBaWEp6T2x4eVhHNHZMeUI3VTNSeWFXNW5mVnh5WEc0dkwxeHlYRzVBWm5WdVkzUnBiMjRnYzNSeUxXTmhjR2wwWVd4cGVtVW9KSE4wY21sdVp5a2dlMXh5WEc0Z0lFQnBaaUIwZVhCbExXOW1LQ1J6ZEhKcGJtY3BJQ0U5SUZ3aWMzUnlhVzVuWENJZ2UxeHlYRzRnSUNBZ1FHVnljbTl5SUZ3aVZHaGxJR0Z5WjNWdFpXNTBJQ1J6ZEhKcGJtYzZJR0FqZXlSemRISnBibWQ5WUNCcGN5QnZaaUJwYm1OdmNuSmxZM1FnZEhsd1pUb2dZQ043ZEhsd1pTMXZaaWdrYzNSeWFXNW5LWDFnTGlCVWVYQmxJRzltSUdCemRISnBibWRnSUdseklISmxjWFZwY21Wa0lWd2lPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdRSEpsZEhWeWJpQjBieTExY0hCbGNpMWpZWE5sS0hOMGNpMXpiR2xqWlNna2MzUnlhVzVuTENBeExDQXhLU2tnS3lCemRISXRjMnhwWTJVb0pITjBjbWx1Wnl3Z01pazdYSEpjYm4xY2NseHVJaXdLQ1FraUx5OWNjbHh1THk4Z2MzUnlMV1Y0Y0d4dlpHVmNjbHh1THk4Z1UzQnNhWFFnWVNCemRISnBibWNnWW5rZ1pHVnNhVzFwZEdWeVhISmNiaTh2WEhKY2JpOHZJRkJoY21GdFpYUmxjbk02WEhKY2JpOHZJSHRUZEhKcGJtZDlZQ1J6ZEhKcGJtZGdJRk4wY21sdVoxeHlYRzR2THlCYmIzQjBhVzl1WVd4ZElIdFRkSEpwYm1kOVlDUmtaV3hwYldsMFpYSmdJRk4wY21sdVoxeHlYRzR2TDF4eVhHNHZMeUJGZUdGdGNHeGxJRzltSUhWelpUcGNjbHh1THk4Z0pISmxjM1ZzZERvZ2MzUnlMV1Y0Y0d4dlpHVW9KM052YldVdGRHaHBibWR6TFhkcGJHd3RibVYyWlhJdFkyaGhibWRsSnl3Z0p5MG5LU0E5UGlBa2NtVnpkV3gwT2lCemIyMWxJSFJvYVc1bmN5QjNhV3hzSUc1bGRtVnlJR05vWVc1blpWeHlYRzR2TDF4eVhHNHZMeUJTWlhSMWNtNDZYSEpjYmk4dklIdE1hWE4wZlNCdlppQnpkSEpwYm1kY2NseHVMeTljY2x4dVFHWjFibU4wYVc5dUlITjBjaTFsZUhCc2IyUmxLQ1J6ZEhKcGJtY3NJQ1JrWld4cGJXbDBaWEk2SUZ3aUxsd2lLU0I3WEhKY2JpQWdRR2xtSUhSNWNHVXRiMllvSkhOMGNtbHVaeWtnSVQwZ1hDSnpkSEpwYm1kY0lpQjdYSEpjYmlBZ0lDQkFaWEp5YjNJZ1hDSlVhR1VnWVhKbmRXMWxiblFnSkhOMGNtbHVaem9nWUNON0pITjBjbWx1WjMxZ0lHbHpJRzltSUdsdVkyOXljbVZqZENCMGVYQmxPaUJnSTN0MGVYQmxMVzltS0NSemRISnBibWNwZldBdUlGUjVjR1VnYjJZZ1lITjBjbWx1WjJBZ2FYTWdjbVZ4ZFdseVpXUWhYQ0k3WEhKY2JpQWdmU0JBWld4elpTQnBaaUIwZVhCbExXOW1LQ1JrWld4cGJXbDBaWElwSUNFOUlGd2ljM1J5YVc1blhDSWdlMXh5WEc0Z0lDQWdRR1Z5Y205eUlGd2lWR2hsSUdGeVozVnRaVzUwSUNSemRISnBibWM2SUdBamV5UnpkSEpwYm1kOVlDQnBjeUJ2WmlCcGJtTnZjbkpsWTNRZ2RIbHdaVG9nWUNON2RIbHdaUzF2Wmlna2MzUnlhVzVuS1gxZ0xpQlVlWEJsSUc5bUlHQnpkSEpwYm1kZ0lHbHpJSEpsY1hWcGNtVmtJVndpTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnSkhKbGMzVnNkRG9nS0NrN1hISmNiaUFnSkhKMWJtNXBibWM2SUhSeWRXVTdYSEpjYmx4eVhHNGdJRUJwWmlCemRISXRiR1Z1WjNSb0tDUmtaV3hwYldsMFpYSXBJRDA5SURBZ2UxeHlYRzRnSUNBZ1FHWnZjaUFrYVNCbWNtOXRJREVnZEdoeWIzVm5hQ0J6ZEhJdGJHVnVaM1JvS0NSemRISnBibWNwSUh0Y2NseHVJQ0FnSUNBZ0pISmxjM1ZzZERvZ1lYQndaVzVrS0NSeVpYTjFiSFFzSUhOMGNpMXpiR2xqWlNna2MzUnlhVzVuTENBa2FTd2dKR2twS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQkFjbVYwZFhKdUlDUnlaWE4xYkhRN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNCQWQyaHBiR1VnSkhKMWJtNXBibWNnZTF4eVhHNGdJQ0FnSkdsdVpHVjRPaUJ6ZEhJdGFXNWtaWGdvSkhOMGNtbHVaeXdnSkdSbGJHbHRhWFJsY2lrN1hISmNibHh5WEc0Z0lDQWdRR2xtSUNScGJtUmxlQ0FoUFNCdWRXeHNJSHRjY2x4dUlDQWdJQ0FnSkdsMFpXMDZJSE4wY2kxemJHbGpaU2drYzNSeWFXNW5MQ0F4TENBb0pHbHVaR1Y0SUMwZ01Ta3BPMXh5WEc0Z0lDQWdJQ0FrY21WemRXeDBPaUJoY0hCbGJtUW9KSEpsYzNWc2RDd2dKR2wwWlcwcE8xeHlYRzRnSUNBZ0lDQWtjM1J5YVc1bk9pQnpkSEl0YzJ4cFkyVW9KSE4wY21sdVp5d2dLQ1JwYm1SbGVDQXJJSE4wY2kxc1pXNW5kR2dvSkdSbGJHbHRhWFJsY2lrcEtUdGNjbHh1SUNBZ0lIMGdRR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWtjblZ1Ym1sdVp6b2dabUZzYzJVN1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNWNjbHh1SUNCQWNtVjBkWEp1SUdGd2NHVnVaQ2drY21WemRXeDBMQ0FrYzNSeWFXNW5LVHRjY2x4dWZWeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5QnpkSEl0Y21Wd2JHRmpaVnh5WEc0dkx5QlNaWEJzWVdObElHOWpZM1Z5Y21WdVkyVWdiMllnWVNCemRISnBibWRjY2x4dUx5OWNjbHh1THk4Z1VHRnlZVzFsZEdWeWN6cGNjbHh1THk4Z2UxTjBjbWx1WjMwZ0pITjBjbWx1WnlBNklGTjBjbWx1WnlCamIyNTBZV2x1YVc1bklIUm9aU0IzYjNKa0lIUnZJSEpsY0d4aFkyVmNjbHh1THk4Z2UxTjBjbWx1Wnl3Z1RXRndmU0FrYzJWaGNtTm9JRG9nZDI5eVpDQjBieUJ5WlhCc1lXTmxJQ3dnYVdZZ2JXRndJR2x6SUhOMWNIQnNhV1ZrSUd0bGVTaHpLU0JqYjI1MFlXbHVJSE4wY21sdVp5QjBieUJ5WlhCc1lXTmxJR0Z1WkNCMllXeDFaU2h6S1NCamIyNTBZV2x1SUhOMGNtbHVaeUIwYnlCeVpYQnNZV05sSUhkcGRHaGNjbHh1THk4Z1cyOXdkR2x2Ym1Gc1hTQjdVM1J5YVc1bmZTQWtjbVZ3YkdGalpTQTZJRk4wY21sdVp5QjBieUJ5WlhCc1lXTmxJSGRwZEdnc0lHbG1JQ1J6WldGeVkyZ2dhWE1nWVNCemRISnBibWRjY2x4dUx5OWNjbHh1THk4Z1JYaGhiWEJzWlNCdlppQjFjMlU2WEhKY2JpOHZJQ1J5WlhOMWJIUTZJSE4wY2kxeVpYQnNZV05sS0NkVWFHbHpJR2x6SUdwMWMzUWdZVzRnWlhoaGJYQnNaU2NzSUNkcWRYTjBKeXdnSjI1dmRDY3BJRDArSUNSeVpYTjFiSFE2SUZSb2FYTWdhWE1nYm05MElHRnVJR1Y0WVcxd2JHVmNjbHh1THk4Z0pISmxjM1ZzZERvZ2MzUnlMWEpsY0d4aFkyVW9YQ0pVYUdseklHbHpJR3AxYzNRZ1lXNGdaWGhoYlhCc1pWd2lMQ0FvWENKcWRYTjBYQ0k2WENKdWIzUmNJaXdnWENKaGJsd2lPbHdpWVZ3aUxDQmNJbVY0WVcxd2JHVmNJanBjSW1wdmEyVmNJaWtwSUQwK0lDUnlaWE4xYkhRNklGUm9hWE1nYVhNZ2JtOTBJR0VnYW05clpWeHlYRzR2TDF4eVhHNHZMeUJTWlhSMWNtNDZYSEpjYmk4dklIdFRkSEpwYm1kOUlGTjBjbWx1WnlCM2FYUm9JSEpsY0d4aFkyVmtJSGR2Y21SelhISmNiaTh2WEhKY2JrQm1kVzVqZEdsdmJpQnpkSEl0Y21Wd2JHRmpaU2drYzNSeWFXNW5MQ0FrYzJWaGNtTm9MQ0FrY21Wd2JHRmpaVG9nWENJZ1hDSXBJSHRjY2x4dUlDQkFhV1lnZEhsd1pTMXZaaWdrYzNSeWFXNW5LU0FoUFNCY0luTjBjbWx1WjF3aUlIdGNjbHh1SUNBZ0lFQmxjbkp2Y2lCY0lsUm9aU0JoY21kMWJXVnVkQ0FrYzNSeWFXNW5PaUJnSTNza2MzUnlhVzVuZldBZ2FYTWdiMllnYVc1amIzSnlaV04wSUhSNWNHVTZJR0FqZTNSNWNHVXRiMllvSkhOMGNtbHVaeWw5WUM0Z1ZIbHdaU0J2WmlCZ2MzUnlhVzVuWUNCcGN5QnlaWEYxYVhKbFpDRmNJanRjY2x4dUlDQjlJRUJsYkhObElHbG1JSFI1Y0dVdGIyWW9KSE5sWVhKamFDa2dJVDBnWENKemRISnBibWRjSWlCaGJtUWdkSGx3WlMxdlppZ2tjMlZoY21Ob0tTQWhQU0JjSW0xaGNGd2lJSHRjY2x4dUlDQWdJRUJsY25KdmNpQmNJbFJvWlNCaGNtZDFiV1Z1ZENBa2MyVmhjbU5vT2lCZ0kzc2tjMlZoY21Ob2ZXQWdhWE1nYjJZZ2FXNWpiM0p5WldOMElIUjVjR1U2SUdBamUzUjVjR1V0YjJZb0pITmxZWEpqYUNsOVlDNGdWSGx3WlNCdlppQmdjM1J5YVc1bllDQnZjaUJnYldGd1lDQnBjeUJ5WlhGMWFYSmxaQ0ZjSWp0Y2NseHVJQ0I5SUVCbGJITmxJR2xtSUhSNWNHVXRiMllvSkhKbGNHeGhZMlVwSUNFOUlGd2ljM1J5YVc1blhDSWdZVzVrSUhSNWNHVXRiMllvSkhObFlYSmphQ2tnSVQwZ1hDSnRZWEJjSWlCN1hISmNiaUFnSUNCQVpYSnliM0lnWENKVWFHVWdZWEpuZFcxbGJuUWdKSEpsY0d4aFkyVTZJR0FqZXlSeVpYQnNZV05sZldBZ2FYTWdiMllnYVc1amIzSnlaV04wSUhSNWNHVTZJR0FqZTNSNWNHVXRiMllvSkhKbGNHeGhZMlVwZldBdUlGUjVjR1VnYjJZZ1lITjBjbWx1WjJBZ2FYTWdjbVZ4ZFdseVpXUWhYQ0k3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0JBYVdZZ2RIbHdaUzF2Wmlna2MyVmhjbU5vS1NBOVBTQmNJbTFoY0Z3aUlIdGNjbHh1SUNBZ0lDUnlaWE4xYkhRNklDUnpkSEpwYm1jN1hISmNiaUFnSUNCQVpXRmphQ0FrYTJWNUxDQWtkbUZzZFdVZ2FXNGdKSE5sWVhKamFDQjdYSEpjYmlBZ0lDQWdJQ1J5WlhOMWJIUTZJSE4wY2kxeVpYQnNZV05sS0NSeVpYTjFiSFFzSUNSclpYa3NJQ1IyWVd4MVpTazdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQkFjbVYwZFhKdUlDUnlaWE4xYkhRN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBa2FXNWtaWGc2SUhOMGNpMXBibVJsZUNna2MzUnlhVzVuTENBa2MyVmhjbU5vS1R0Y2NseHVYSEpjYmlBZ1FHbG1JQ1JwYm1SbGVDQjdYSEpjYmlBZ0lDQkFjbVYwZFhKdUlITjBjaTF6YkdsalpTZ2tjM1J5YVc1bkxDQXhMQ0FrYVc1a1pYZ2dMU0F4S1NBcklDUnlaWEJzWVdObElDc2djM1J5TFhKbGNHeGhZMlVvYzNSeUxYTnNhV05sS0NSemRISnBibWNzSUNScGJtUmxlQ0FySUhOMGNpMXNaVzVuZEdnb0pITmxZWEpqYUNrcExDQWtjMlZoY21Ob0xDQWtjbVZ3YkdGalpTazdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQkFjbVYwZFhKdUlDUnpkSEpwYm1jN1hISmNibjFjY2x4dUlpd0tDUWtpTHk5Y2NseHVMeThnYzNSeUxYSmxZV1JoWW14bFhISmNiaTh2SUdOdmJuWmxjblFnWVdKaWNtVjJhV0YwWlNBdklHRmpjbTl1ZVcwZ2RHOGdjbVZoWkdGaWJHVWdkMjl5WkhOY2NseHVMeTljY2x4dUx5OGdVR0Z5WVcxbGRHVnljenBjY2x4dUx5OGdlMU4wY21sdVozMGdKSE5vYjNKMElDMGdZV0ppY21WMmFXRjBaU0F2SUdGamNtOXVlVzFjY2x4dUx5OGdlMDFoY0gwZ0pHUnBZM1JwYjI1aGNua2dMU0J0WVhBZ1kyOXVkR0ZwYm1sdVp5QmhZbUp5WlhacFlYUmxJQzhnWVdOeWIyNTViU0FvYTJWNWN5a2dZVzVrSUhkdmNtUnpJQ2gyWVd4MVpYTXBYSEpjYmk4dlhISmNiaTh2SUZKbGRIVnlianBjY2x4dUx5OGdleXA5SUhKbFlXUmhZbXhsSUhkdmNtUnpJR0psYkc5dVoybHVaeUIwYnlCcGRITWdZV0ppY21WMmFXRjBaU0F2SUdGamNtOXVlVzB1WEhKY2JpOHZYSEpjYmk4dklFVjRZVzF3YkdVZ2IyWWdkWE5sT2x4eVhHNHZMeUFrWkdsamRHbHZibUZ5ZVRvZ0tITnRPaUJ0YjJKcGJHVXNJRzFrT2lCMFlXSnNaWFFzSUd4bk9pQmtaWE5yZEc5d0xDQjRiRG9nYkdGeVoyVXBPMXh5WEc0dkx5QnpkSEl0Y21WaFpHRmliR1VvYzIwc0lDUmthV04wYVc5dVlYSjVLU0E5UGlCdGIySnBiR1ZjY2x4dUx5OWNjbHh1WEhKY2JrQm1kVzVqZEdsdmJpQnpkSEl0Y21WaFpHRmliR1VvSkhOb2IzSjBMQ0FrWkdsamRHbHZibUZ5ZVNrZ2UxeHlYRzRnSUNSclpYazZJRzFoY0Mxb1lYTXRhMlY1S0NSa2FXTjBhVzl1WVhKNUxDQWtjMmh2Y25RcE8xeHlYRzRnSUVCcFppQnViM1FnSkd0bGVTQjdYSEpjYmlBZ0lDQkFaWEp5YjNJZ1hDSWtZV0ppY21WMmFXRjBaU0F2SUdGamNtOXVlVzBnWUNON0pITm9iM0owZldBZ2JtOTBJR1p2ZFc1a0lHbHVjMmxrWlNBa1pHbGpkR2x2Ym1GeWVTQmdJM3NrWkdsamRHbHZibUZ5ZVgxZ0xsd2lPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdRSEpsZEhWeWJpQnRZWEF0WjJWMEtDUmthV04wYVc5dVlYSjVMQ0FrYzJodmNuUXBPMXh5WEc1OVhISmNiaUlzQ2drSklpOHZYSEpjYmk4dklHNWxaMkYwWlZ4eVhHNHZMeUJ1WldkaGRHVWdkbUZzZFdVb2N5a2diM0lnYTJWNUtITXBJRzl5SUdKdmRHZ2dhVzRnWVNCc2FYTjBJRzl5SUcxaGNGeHlYRzR2TDF4eVhHNHZMeUJYWVhKdWFXNW5PbHh5WEc0dkx5QnBaaUJ6ZEhKcGJtY2dhWE1nYzNWd2NHeHBaV1FnWVhNZ2EyVjVJRzl5SUhaaGJIVmxJR2x1YzJsa1pTQWtiR2x6ZEMxdFlYQXVJR3AxYzNRZ1lDMWdJSGRwYkd3Z1ltVWdjSEpsWm1sNFpXUWdkRzhnYzNSeWFXNW5MbHh5WEc0dkwxeHlYRzR2THlCUVlYSmhiV1YwWlhKek9seHlYRzR2THlCN1RHbHpkSHhOWVhCOUlDUnNhWE4wTFcxaGNDQXRJR3hwYzNRZ2IzSWdiV0Z3WEhKY2JpOHZJRnR2Y0hScGIyNWhiRjBnZTFOMGNtbHVaMzBnSkc1bFoyRjBaU0F0SUdOb1pXTnJJSFJ2SUc1bFoyRjBaU0IyWVd4MVpTaHpLU0J2Y2lCclpYa29jeWtnYjNJZ1ltOTBhRnh5WEc0dkwxeHlYRzR2THlCRmVHRnRjR3hsSUc5bUlIVnpaVHBjY2x4dUx5OGdKR0U2SUNobWIyODZNU3dnWW1GeU9qSXNJR0poZWpvekxDQnhkWGc2TkNrN1hISmNiaTh2SUNSeVpYTjFiSFE2SUc1bFoyRjBaUzF0WVhBb0pHRXNJRndpWW05MGFGd2lLU0E5UGlBZ0tDMW1iMjg2TFRFc0lDMWlZWEk2TFRJc0lDMWlZWG82TFRNc0lDMXhkWGc2TFRRcFhISmNiaTh2WEhKY2JpOHZJRkpsZEhWeWJqcGNjbHh1THk4Z2UweHBjM1I4VFdGd2ZTQndjbTlqWlhOelpXUWdiR2x6ZENCdmNpQnRZWEJjY2x4dUx5OWNjbHh1UUdaMWJtTjBhVzl1SUc1bFoyRjBaUzF0WVhBb0pHeHBjM1F0YldGd0xDQWtibVZuWVhSbE9pQmNJblpoYkhWbFhDSXBJSHRjY2x4dUlDQWtjbVZ6ZFd4ME9pQW9LVHRjY2x4dVhISmNiaUFnUUdsbUlDUnVaV2RoZEdVZ0lUMGdYQ0ppYjNSb1hDSWdZVzVrSUNSdVpXZGhkR1VnSVQwZ1hDSnJaWGx6WENJZ1lXNWtJQ1J1WldkaGRHVWdJVDBnWENKMllXeDFaVndpSUh0Y2NseHVJQ0FnSUVCbGNuSnZjaUJjSW1sdWRtRnNhV1FnSkc1bFoyRjBaU0IyWVd4MVpTQmdJM3NrYm1WbllYUmxmV0FnTGlCMllXeDFaU0J0ZFhOMElHSmxJR0JpYjNSb1lDQnZjaUJnYTJWNWMyQWdiM0lnWUhaaGJIVmxZRndpTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnUUdsbUlIUjVjR1V0YjJZb0pHeHBjM1F0YldGd0tTQWhQU0JjSW0xaGNGd2lJR0Z1WkNCMGVYQmxMVzltS0NSc2FYTjBMVzFoY0NrZ0lUMGdYQ0pzYVhOMFhDSWdlMXh5WEc0Z0lDQWdRR1Z5Y205eUlGd2lhVzUyWVd4cFpDQjBlWEJsSUc5bUlDUnNhWE4wTFcxaGNDQmdJM3QwZVhCbExXOW1LQ1JzYVhOMExXMWhjQ2w5WUNBdUlGUjVjR1VnYlhWemRDQmlaU0JnYldGd1lDQnZjaUJnYkdsemRHQmNJanRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJRUJwWmlCMGVYQmxMVzltS0NSc2FYTjBMVzFoY0NrZ1BUMGdYQ0p0WVhCY0lpQjdYSEpjYmlBZ0lDQkFaV0ZqYUNBa2EyVjVMQ0FrZG1Gc2RXVWdhVzRnSkd4cGMzUXRiV0Z3SUh0Y2NseHVJQ0FnSUNBZ1FHbG1JQ1J1WldkaGRHVWdQVDBnWENKaWIzUm9YQ0lnZTF4eVhHNGdJQ0FnSUNBZ0lDUnlaWE4xYkhRNklHMWhjQzF0WlhKblpTZ2tjbVZ6ZFd4MExDQW9MU1JyWlhrNklDMGdKSFpoYkhWbEtTazdYSEpjYmlBZ0lDQWdJSDBnUUdWc2MyVWdhV1lnSkc1bFoyRjBaU0E5UFNCY0ltdGxlWE5jSWlCN1hISmNiaUFnSUNBZ0lDQWdKSEpsYzNWc2REb2diV0Z3TFcxbGNtZGxLQ1J5WlhOMWJIUXNJQ2d0Skd0bGVUb2dKSFpoYkhWbEtTazdYSEpjYmlBZ0lDQWdJSDBnUUdWc2MyVWdhV1lnSkc1bFoyRjBaU0E5UFNCY0luWmhiSFZsWENJZ2UxeHlYRzRnSUNBZ0lDQWdJQ1J5WlhOMWJIUTZJRzFoY0MxdFpYSm5aU2drY21WemRXeDBMQ0FvSkd0bGVUb2dMU0FrZG1Gc2RXVXBLVHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJSDBnUUdWc2MyVWdhV1lnZEhsd1pTMXZaaWdrYkdsemRDMXRZWEFwSUQwOUlGd2liR2x6ZEZ3aUlIdGNjbHh1SUNBZ0lFQmxZV05vSUNSMllXeDFaU0JwYmlBa2JHbHpkQzF0WVhBZ2UxeHlYRzRnSUNBZ0lDQWtjbVZ6ZFd4ME9pQnFiMmx1S0NSeVpYTjFiSFFzSUMwa2RtRnNkV1VwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dUlDQkFjbVYwZFhKdUlDUnlaWE4xYkhRN1hISmNibjFjY2x4dUlpd0tDUWtpTHk5Y2NseHVMeThnYzNSeWFYQXRkVzVwZEZ4eVhHNHZMeUJOWVd0bElHRWdiblZ0WW1WeUlIVnVhWFJzWlhOelhISmNiaTh2WEhKY2JpOHZJRkJoY21GdFpYUmxjbk02WEhKY2JpOHZJSHRPZFcxaVpYSjlJQ1J1ZFcxaVpYSWdMU0JPZFcxaVpYSWdkRzhnY21WdGIzWmxJSFZ1YVhRZ1puSnZiVnh5WEc0dkwxeHlYRzR2THlCRmVHRnRjR3hsSUc5bUlIVnpaVHBjY2x4dUx5OGdKSEpsYzNWc2REb2djM1J5YVhBdGRXNXBkQ2cwTW5CNEtTQTlQaUFnSkhKbGMzVnNkRG9nTkRKY2NseHVMeTljY2x4dUx5OGdVbVYwZFhKdU9seHlYRzR2THlCN1RuVnRZbVZ5ZlNCVmJtbDBiR1Z6Y3lCdWRXMWlaWEpjY2x4dUx5OWNjbHh1UUdaMWJtTjBhVzl1SUhOMGNtbHdMWFZ1YVhRb0pHNTFiV0psY2lrZ2UxeHlYRzRnSUVCcFppQjBlWEJsTFc5bUtDUnVkVzFpWlhJcElDRTlJRndpYm5WdFltVnlYQ0lnZTF4eVhHNGdJQ0FnUUdWeWNtOXlJRndpVkdobElHRnlaM1Z0Wlc1MElDUnVkVzFpWlhJNklHQWpleVJ1ZFcxaVpYSjlZQ0JwY3lCdlppQnBibU52Y25KbFkzUWdkSGx3WlRvZ1lDTjdkSGx3WlMxdlppZ2tiblZ0WW1WeUtYMWdMaUJVZVhCbElHOW1JR0JPZFcxaVpYSmdJR2x6SUhKbGNYVnBjbVZrSVZ3aU8xeHlYRzRnSUgwZ1FHVnNjMlVnYVdZZ2RXNXBkR3hsYzNNb0pHNTFiV0psY2lrZ2UxeHlYRzRnSUNBZ1FHbG1JQ1JsYm1GaWJHVXRaR1ZpZFdkbmFXNW5JSHRjY2x4dUlDQWdJQ0FnUUhkaGNtNGdYQ0pVYUdVZ1lYSm5kVzFsYm5RZ0pHNTFiV0psY2pvZ1lDTjdKRzUxYldKbGNuMWdJR2hoY3lCdWJ5QjFibWwwTGlCVmJtbDBJR2x6SUhKbGNYVnBjbVZrSVZ3aU8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ1FISmxkSFZ5YmlBa2JuVnRZbVZ5SUM4Z0tDUnVkVzFpWlhJZ0tpQXdJQ3NnTVNrN1hISmNibjFjY2x4dUlpd0tDUWtpTHk5Y2NseHVMeThnWTI5dWRtVnlkQzExYm1sMFhISmNiaTh2SUdOdmJuWmxjblFnWVNCdWRXMWlaWElnZG1Gc2RXVWdabkp2YlNCdmJtVWdkVzVwZENCMGJ5QmhibTkwYUdWeVhISmNiaTh2WEhKY2JpOHZJRTV2ZEdVNlhISmNiaTh2SUU5dWJIa2djbVZ0TENCbGJTd2djSGdnWVc1a0lDVWdkVzVwZENCaGNtVWdjM1Z3Y0c5eWRHVmtYSEpjYmk4dlhISmNiaTh2SUZCaGNtRnRaWFJsY25NNlhISmNiaTh2SUh0T2RXMWlaWEo5SUNSMllXeDFaU0F0SUhaaGJIVmxJSFJ2SUdOdmJuWmxjblJjY2x4dUx5OGdlMU4wY21sdVozMGdKSFJ2WDNWdWFYUWdMU0IxYm1sMElIUnZJR052Ym5abGNuUWdkbUZzZFdVZ2RHOWNjbHh1THk4Z1cyOXdkR2x2Ym1Gc1hTQjdVM1J5YVc1bmZTQWtZbUZ6WlY5bWIyNTBjMmw2WlNBdElHWnZiblFnYzJsNlpTQmhkQ0J5YjI5MEwySnZaSGt2Y0dGeVpXNTBYSEpjYmk4dlhISmNiaTh2SUVWNFlXMXdiR1VnYjJZZ2RYTmxPbHh5WEc0dkx5QWtjbVZ6ZFd4ME9pQmpiMjUyWlhKMExYVnVhWFFvTjNCNExDQnlaVzBnTERFMGNIZ3BJRDArSUNBa2NtVnpkV3gwT2lBd0xqVnlaVzFjY2x4dUx5OGdKSEpsYzNWc2REb2dZMjl1ZG1WeWRDMTFibWwwS0RBdU5XVnRMQ0J3ZUNBc01UUndlQ2tnUFQ0Z0lDUnlaWE4xYkhRNklEZHdlRnh5WEc0dkx5QWtjbVZ6ZFd4ME9pQmpiMjUyWlhKMExYVnVhWFFvTjNCNExDQWxJQ3d4TkhCNEtTQTlQaUFnSkhKbGMzVnNkRG9nTUM0MUpWeHlYRzR2TDF4eVhHNHZMeUJTWlhSMWNtNDZYSEpjYmk4dklIdE9kVzFpWlhKOUlFNTFiV0psY2lCM2FYUm9JR052Ym5abGNuUmxaQ0IxYm1sMFhISmNiaTh2WEhKY2JrQm1kVzVqZEdsdmJpQmpiMjUyWlhKMExYVnVhWFFvSkhaaGJIVmxMQ0FrZEc5ZmRXNXBkQ3dnSkdKaGMyVmZabTl1ZEhOcGVtVTZJQ1JrWldaaGRXeDBMV1p2Ym5SemFYcGxLU0I3WEhKY2JpQWdKR1p5YjIxZmRXNXBkRG9nZFc1cGRDZ2tkbUZzZFdVcE8xeHlYRzRnSUNSMGIxOTFibWwwT2lCMWJuRjFiM1JsS0NSMGIxOTFibWwwS1R0Y2NseHVJQ0FrYzNSeWFYQndaV1JmZG1Gc2RXVTZJSE4wY21sd0xYVnVhWFFvSkhaaGJIVmxLVHRjY2x4dUlDQWtZbUZ6WlY5MllXeDFaVG9nYzNSeWFYQXRkVzVwZENna1ltRnpaVjltYjI1MGMybDZaU2s3WEhKY2JseHlYRzRnSUVCcFppQWtabkp2YlY5MWJtbDBJRDA5SUNSMGIxOTFibWwwSUh0Y2NseHVJQ0FnSUVCcFppQWtaVzVoWW14bExXUmxZblZuWjJsdVp5QjdYSEpjYmlBZ0lDQWdJRUJrWldKMVp5QmNJa05oYm01dmRDQmpiMjUyWlhKMElITmhiV1VnZFc1cGRITWdZQ043SkdaeWIyMWZkVzVwZEgxZ1hDSTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQkFjbVYwZFhKdUlDUjJZV3gxWlR0Y2NseHVJQ0I5WEhKY2JpQWdRR2xtSUhWdWFYUW9KR0poYzJWZlptOXVkSE5wZW1VcElDRTlJSEI0SUh0Y2NseHVJQ0FnSUVCbGNuSnZjaUJjSWs1dmRDQnpkWEJ3YjNKMFpXUWdjbTl2ZENCbWIyNTBMWE5wZW1VZ1lDTjdkVzVwZENna1ltRnpaVjkyWVd4MVpTbDlZRndpTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnUUdsbUlDUm1jbTl0WDNWdWFYUWdQVDBnY0hnZ2UxeHlYRzRnSUNBZ1FHbG1JQ1IwYjE5MWJtbDBJRDA5SUZ3aVpXMWNJaUI3WEhKY2JpQWdJQ0FnSUVCeVpYUjFjbTRnS0NSemRISnBjSEJsWkY5MllXeDFaU0F2SUNSaVlYTmxYM1poYkhWbEtTQXFJREZsYlR0Y2NseHVJQ0FnSUgwZ1FHVnNjMlVnYVdZZ0pIUnZYM1Z1YVhRZ1BUMGdYQ0p5WlcxY0lpQjdYSEpjYmlBZ0lDQWdJRUJ5WlhSMWNtNGdLQ1J6ZEhKcGNIQmxaRjkyWVd4MVpTQXZJQ1JpWVhObFgzWmhiSFZsS1NBcUlERnlaVzA3WEhKY2JpQWdJQ0I5SUVCbGJITmxJR2xtSUNSMGIxOTFibWwwSUQwOUlGd2lKVndpSUh0Y2NseHVJQ0FnSUNBZ1FISmxkSFZ5YmlCd1pYSmpaVzUwWVdkbEtDUnpkSEpwY0hCbFpGOTJZV3gxWlNBdklDUmlZWE5sWDNaaGJIVmxLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQjlJRUJsYkhObElHbG1JQ1JtY205dFgzVnVhWFFnUFQwZ1pXMGdlMXh5WEc0Z0lDQWdRR2xtSUNSMGIxOTFibWwwSUQwOUlGd2ljSGhjSWlCN1hISmNiaUFnSUNBZ0lFQnlaWFIxY200Z0tDUnpkSEpwY0hCbFpGOTJZV3gxWlNBcUlDUmlZWE5sWDNaaGJIVmxLU0FxSURGd2VEdGNjbHh1SUNBZ0lIMGdRR1ZzYzJVZ2FXWWdKSFJ2WDNWdWFYUWdQVDBnWENKeVpXMWNJaUI3WEhKY2JpQWdJQ0FnSUVCeVpYUjFjbTRnSkhOMGNtbHdjR1ZrWDNaaGJIVmxJQ29nTVhKbGJUdGNjbHh1SUNBZ0lIMGdRR1ZzYzJVZ2FXWWdKSFJ2WDNWdWFYUWdQVDBnWENJbFhDSWdlMXh5WEc0Z0lDQWdJQ0JBY21WMGRYSnVJSEJsY21ObGJuUmhaMlVvSkhOMGNtbHdjR1ZrWDNaaGJIVmxLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQjlJRUJsYkhObElHbG1JQ1JtY205dFgzVnVhWFFnUFQwZ2NtVnRJSHRjY2x4dUlDQWdJRUJwWmlBa2RHOWZkVzVwZENBOVBTQmNJbkI0WENJZ2UxeHlYRzRnSUNBZ0lDQkFjbVYwZFhKdUlDZ2tjM1J5YVhCd1pXUmZkbUZzZFdVZ0tpQWtZbUZ6WlY5MllXeDFaU2tnS2lBeGNIZzdYSEpjYmlBZ0lDQjlJRUJsYkhObElHbG1JQ1IwYjE5MWJtbDBJRDA5SUZ3aVpXMWNJaUI3WEhKY2JpQWdJQ0FnSUVCeVpYUjFjbTRnSkhOMGNtbHdjR1ZrWDNaaGJIVmxJQ29nTVdWdE8xeHlYRzRnSUNBZ2ZTQkFaV3h6WlNCcFppQWtkRzlmZFc1cGRDQTlQU0JjSWlWY0lpQjdYSEpjYmlBZ0lDQWdJRUJ5WlhSMWNtNGdjR1Z5WTJWdWRHRm5aU2drYzNSeWFYQndaV1JmZG1Gc2RXVXBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMGdRR1ZzYzJVZ2FXWWdKR1p5YjIxZmRXNXBkQ0E5UFNCY0lpVmNJaUI3WEhKY2JpQWdJQ0JBYVdZZ0pIUnZYM1Z1YVhRZ1BUMGdYQ0p3ZUZ3aUlIdGNjbHh1SUNBZ0lDQWdRSEpsZEhWeWJpQW9KSE4wY21sd2NHVmtYM1poYkhWbElDb2dKR0poYzJWZmRtRnNkV1VnTHlBeE1EQXBJQ29nTVhCNE8xeHlYRzRnSUNBZ2ZTQkFaV3h6WlNCcFppQWtkRzlmZFc1cGRDQTlQU0JjSW1WdFhDSWdlMXh5WEc0Z0lDQWdJQ0JBY21WMGRYSnVJQ2drYzNSeWFYQndaV1JmZG1Gc2RXVWdMeUF4TURBcElDb2dNV1Z0TzF4eVhHNGdJQ0FnZlNCQVpXeHpaU0JwWmlBa2RHOWZkVzVwZENBOVBTQmNJbkpsYlZ3aUlIdGNjbHh1SUNBZ0lDQWdRSEpsZEhWeWJpQW9KSE4wY21sd2NHVmtYM1poYkhWbElDOGdNVEF3S1NBcUlERnlaVzA3WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0JBWlhKeWIzSWdYQ0pGY25KdmNpQjNhR1Z1SUdOdmJuWmxjblJwYm1jZ1puSnZiU0JnSTNza2RtRnNkV1Y5WUNCMGJ5QjFibWwwSUdBamV5UjBiMTkxYm1sMGZXQmNJanRjY2x4dWZWeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5QkRiMnh2Y2lCTWRXMXBibUZ1WTJWY2NseHVMeTljY2x4dVhISmNiaTh2WEhKY2JpOHZJR05zY2kxc2RXMXBibUZ1WTJWY2NseHVMeThnUm5WdVkzUnBiMjV6SUhWelpXUWdkRzhnWjJWMElHeDFiV2x1WVc1alpTQnZaaUJoSUdkcGRtVnVJQ1JqYjJ4dmNpNWNjbHh1THk4Z1JtOXlJRzF2Y21VZ2FXNW1ieUJ6WldVZ2FIUjBjSE02THk5M2QzY3Vkek11YjNKbkwxUlNMMWREUVVjeU1DMVVSVU5JVXk5SE1UY3VhSFJ0YkNOSE1UY3RkR1Z6ZEhOY2NseHVMeTljY2x4dUx5OGdVR0Z5WVcxbGRHVnljenBjY2x4dUx5OGdlME52Ykc5eWZTQWtZMjlzYjNJZ0xTQkRiMnh2Y2x4eVhHNHZMMXh5WEc0dkx5QlNaWFIxY200NlhISmNiaTh2SUh0T2RXMWlaWEo5SURFZ2FYTWdjSFZ5WlNCM2FHbDBaU3dnTUNCcGN5QndkWEpsSUdKc1lXTnJYSEpjYmk4dlhISmNia0JtZFc1amRHbHZiaUJqYkhJdGJIVnRhVzVoYm1ObEtDUmpiMnh2Y2lrZ2UxeHlYRzRnSUNSU1IwSTZJQ2hjY2x4dUlDQWdJRndpY21Wa1hDSTZJSEpsWkNna1kyOXNiM0lwTEZ4eVhHNGdJQ0FnWENKbmNtVmxibHdpT2lCbmNtVmxiaWdrWTI5c2IzSXBMRnh5WEc0Z0lDQWdYQ0ppYkhWbFhDSTZJR0pzZFdVb0pHTnZiRzl5S1Z4eVhHNGdJQ2s3WEhKY2JseHlYRzRnSUVCbFlXTm9JQ1J1WVcxbExDQWtkbUZzZFdVZ2FXNGdKRkpIUWlCN1hISmNiaUFnSUNBa2RtRnNkV1U2SUNSMllXeDFaU0F2SURJMU5UdGNjbHh1WEhKY2JpQWdJQ0JBYVdZZ0pIWmhiSFZsSUR3Z0xqQXpPVEk0SUh0Y2NseHVJQ0FnSUNBZ0pIWmhiSFZsT2lBa2RtRnNkV1VnTHlBeE1pNDVNanRjY2x4dUlDQWdJSDBnUUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FrZG1Gc2RXVTZJQ2drZG1Gc2RXVWdLeUF1TURVMUtTQXZJREV1TURVMU8xeHlYRzRnSUNBZ0lDQWtkbUZzZFdVNklIQnZkMlZ5S0NSMllXeDFaU3dnTWk0MEtUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FrVWtkQ09pQnRZWEF0YldWeVoyVW9KRkpIUWl3Z0tDUnVZVzFsT2lBa2RtRnNkV1VwS1R0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUVCeVpYUjFjbTRnS0cxaGNDMW5aWFFvSkZKSFFpd2dYQ0p5WldSY0lpa2dLaUF1TWpFeU5pa2dLeUFvYldGd0xXZGxkQ2drVWtkQ0xDQmNJbWR5WldWdVhDSXBJQ29nTGpjeE5USXBJQ3NnS0cxaGNDMW5aWFFvSkZKSFFpd2dYQ0ppYkhWbFhDSXBJQ29nTGpBM01qSXBPMXh5WEc1OVhISmNiaUlzQ2drSklpOHZYSEpjYmk4dklFTnZiRzl5SUVOdmJuUnlZWE4wWEhKY2JpOHZYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QmpiSEl0WTI5dWRISmhjM1JjY2x4dUx5OGdSblZ1WTNScGIyNXpJSFZ6WldRZ2RHOGdaMlYwSUdOdmJuUnlZWE4wSUc5bUlHRWdaMmwyWlc0Z0pHTnZiRzl5TGx4eVhHNHZMeUJEYjI1MGNtRnpkQ0JwY3lCMGFHVWdaR2xtWm1WeVpXNWpaU0JwYmlCc2RXMXBibUZ1WTJVZ2IzSWdZMjlzYjNWeUlIUm9ZWFFnYldGclpYTWdZVzRnYjJKcVpXTjBJR1JwYzNScGJtZDFhWE5vWVdKc1pTNWNjbHh1THk4Z1JtOXlJRzF2Y21VZ2FXNW1ieUJ6WldVZ2FIUjBjSE02THk5M2QzY3Vkek11YjNKbkwxUlNMMWREUVVjeU1DMVVSVU5JVXk5SE1UY3VhSFJ0YkNOSE1UY3RkR1Z6ZEhOY2NseHVMeTljY2x4dUx5OGdVR0Z5WVcxbGRHVnljenBjY2x4dUx5OGdlME52Ykc5eWZTQWtZMjlzYjNJZ0xTQkRiMnh2Y2x4eVhHNHZMeUI3UTI5c2IzSjlJQ1JpWVhObElDMGdRMjlzYjNJZ2RYTmxaQ0JoY3lBa1ltRnpaVnh5WEc0dkwxeHlYRzR2THlCU1pYUjFjbTQ2WEhKY2JpOHZJSHRPZFcxaVpYSjlJREVnYVhNZ1ptOXlJREFsSUdOdmJuUnlZWE4wTENBeU1TQnBjeUJtYjNJZ01UQXdKU0JqYjI1MGNtRnpkRnh5WEc0dkwxeHlYRzVBWm5WdVkzUnBiMjRnWTJ4eUxXTnZiblJ5WVhOMEtDUmpiMnh2Y2l3Z0pHSmhjMlVwSUh0Y2NseHVJQ0FrWTI5c2IzSXRiSFZ0YVc1aGJtTmxPaUJqYkhJdGJIVnRhVzVoYm1ObEtDUmpiMnh2Y2lrZ0t5QXVNRFU3WEhKY2JpQWdKR1p2Y21VdGJIVnRhVzVoYm1ObE9pQmpiSEl0YkhWdGFXNWhibU5sS0NSaVlYTmxLU0FySUM0d05UdGNjbHh1WEhKY2JpQWdKR052Ym5SeVlYTjBPaUJ0WVhnb0pHTnZiRzl5TFd4MWJXbHVZVzVqWlN3Z0pHWnZjbVV0YkhWdGFXNWhibU5sS1NBdklHMXBiaWdrWTI5c2IzSXRiSFZ0YVc1aGJtTmxMQ0FrWm05eVpTMXNkVzFwYm1GdVkyVXBPMXh5WEc1Y2NseHVJQ0JBY21WMGRYSnVJQ1JqYjI1MGNtRnpkRHRjY2x4dWZWeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5QkRiMnh2Y2lCemRHVndYSEpjYmk4dlhISmNibHh5WEc0dkwxeHlYRzR2THlCamJISXRjM1JsY0Z4eVhHNHZMeUJHZFc1amRHbHZibk1nZFhObFpDQjBieUJ5WlhSMWNtNGdjM1JsY0NCdlppQmhJR2RwZG1WdUlHTnZiRzl5TGx4eVhHNHZMMXh5WEc0dkx5QlFZWEpoYldWMFpYSnpPbHh5WEc0dkx5QjdRMjlzYjNKOUlDUmpiMnh2Y2lBdElFTnZiRzl5WEhKY2JpOHZJSHRPZFcxaVpYSjlJQ1J6ZEdWd0lDMGdZMjlzYjNJZ2MzUmxjQ0J1ZFcxaVpYSmNjbHh1THk4Z1cyOXdkR2x2Ym1Gc1hTQjdUblZ0WW1WeWZTQWtZMjlzYjNJdGMzUmxjQzFwYm5SbGNuWmhiQ0F0SUVodmR5QnRkV05vSUhSdklHMXBlQ0FrWW1GelpTMWpiMnh2Y2lCcGJuUnZJQ1JqYjJ4dmNpQnBiaUJsWVdOb0lITjBaWEJjY2x4dUx5OWNjbHh1THk4Z1VtVjBkWEp1T2x4eVhHNHZMeUI3UTI5c2IzSjlJSFpoYkhWbElHOW1JR052Ykc5eUlITjBaWEJjY2x4dUx5OWNjbHh1UUdaMWJtTjBhVzl1SUdOc2NpMXpkR1Z3S0NSamIyeHZjaXdnSkhOMFpYQXNJQ1JqYjJ4dmNpMXpkR1Z3TFdsdWRHVnlkbUZzT2lBeE1DVXBJSHRjY2x4dUlDQkFhV1lnZFc1cGRDZ2tZMjlzYjNJdGMzUmxjQzFwYm5SbGNuWmhiQ2tnSVQwZ1hDSWxYQ0lnZTF4eVhHNGdJQ0FnUUdWeWNtOXlJRndpYVc1MllXeHBaQ0IyWVd4MVpTQnZaaUFrWTI5c2IzSXRjM1JsY0MxcGJuUmxjblpoYkNCZ0kzc2tZMjlzYjNJdGMzUmxjQzFwYm5SbGNuWmhiSDFnSUN3Z1ZHaGxJSFpoYkhWbElIVnVhWFFnYlhWemRDQmlaU0JnSldCY0lqdGNjbHh1SUNCOVhISmNiaUFnUUdsbUlHNXZkQ0IxYm1sMGJHVnpjeWdrYzNSbGNDa2dlMXh5WEc0Z0lDQWdRR1Z5Y205eUlGd2lhVzUyWVd4cFpDQjJZV3gxWlNCdlppQWtjM1JsY0NCZ0kzc2tjM1JsY0gxZ0lDd2dWR2hsSUhaaGJIVmxJRzExYzNRZ2JtOTBJR2hoZG1VZ1lTQjFibWwwWENJN1hISmNiaUFnZlZ4eVhHNGdJRUJwWmlBa2MzUmxjQ0FxSUNSamIyeHZjaTF6ZEdWd0xXbHVkR1Z5ZG1Gc0lENGdNVEF3SUc5eUlDUnpkR1Z3SUNvZ0pHTnZiRzl5TFhOMFpYQXRhVzUwWlhKMllXd2dQQ0F0TVRBd0lIdGNjbHh1SUNBZ0lFQmxjbkp2Y2lCY0ltbHVkbUZzYVdRZ2RtRnNkV1VnYjJZZ0pITjBaWEFnWUNON0pITjBaWEI5WUNBc0lGUm9aU0IyWVd4MVpTQnRkWE4wSUdKbElHbHVMV0psZEhkbFpXNGdZQ043TVRBd0pTQXZJQ1JqYjJ4dmNpMXpkR1Z3TFdsdWRHVnlkbUZzZldBZ0xTQmdJM3N0TVNBcUlERXdNQ1VnTHlBa1kyOXNiM0l0YzNSbGNDMXBiblJsY25aaGJDQjlZRndpTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnTHk4Z2FXNTJaWEowSUdOc2NpMXpkR1Z3SUdaMWJtTjBhVzl1SUc5MWRIQjFkQ0JrWlhCbGJtUnBibWNnYjI0Z0pHUmxjMmxuYmkxMGFHVnRaVnh5WEc0Z0lDUjBhR1Z0WlMxamIyeHZjam9nYVdZb0pHUmxjMmxuYmkxMGFHVnRaU0E5UFNCc2FXZG9kQ3dnTVN3Z0xURXBPMXh5WEc0Z0lDUnpkR1Z3T2lBa2MzUmxjQ0FxSUNSMGFHVnRaUzFqYjJ4dmNqdGNjbHh1WEhKY2JpQWdKR0poYzJVdFkyOXNiM0k2SUdsbUtDUnpkR1Z3SUQ0Z01Dd2dKR0pzWVdOckxDQWtkMmhwZEdVcE8xeHlYRzRnSUNSemRHVndPaUJoWW5Nb0pITjBaWEFwTzF4eVhHNGdJRUJ5WlhSMWNtNGdiV2w0S0NSaVlYTmxMV052Ykc5eUxDQWtZMjlzYjNJc0lDUnpkR1Z3SUNvZ0pHTnZiRzl5TFhOMFpYQXRhVzUwWlhKMllXd3BPMXh5WEc1OVhISmNiaUlzQ2drSklpOHZYSEpjYmk4dklFTnZiRzl5SUVGMWRHOWNjbHh1THk5Y2NseHVYSEpjYmk4dlhISmNiaTh2SUdOc2NpMWhkWFJ2WEhKY2JpOHZJRVJsZEdWeWJXbHVaU0IzYUdWMGFHVnlJSFJ2SUhWelpTQmtZWEpySUc5eUlHeHBaMmgwSUhSbGVIUWdiMjRnZEc5d0lHOW1JR2RwZG1WdUlHTnZiRzl5WEhKY2JpOHZYSEpjYmk4dklGQmhjbUZ0WlhSbGNuTTZYSEpjYmk4dklIdERiMnh2Y24wZ0pHTnZiRzl5SUMwZ1EyOXNiM0pjY2x4dUx5OWNjbHh1THk4Z1VtVjBkWEp1T2x4eVhHNHZMeUI3UTI5c2IzSjlJRkpsZEhWeWJuTWdKR1JoY21zZ1ptOXlJR3hwWjJoMElHTnZiRzl5SUdGdVpDQWtiR2xuYUhRZ1ptOXlJR1JoY21zZ1kyOXNiM0pjY2x4dUx5OWNjbHh1UUdaMWJtTjBhVzl1SUdOc2NpMWhkWFJ2S0NSamIyeHZjaXdnSkd4cFoyaDBPaUFrZDJocGRHVXNJQ1JrWVhKck9pQWtaM0poZVMwNU1EQXBJSHRjY2x4dUlDQWtiR2xuYUhSRGIyNTBjbUZ6ZERvZ1kyeHlMV052Ym5SeVlYTjBLQ1JqYjJ4dmNpd2dKR3hwWjJoMEtUdGNjbHh1SUNBa1pHRnlhME52Ym5SeVlYTjBPaUJqYkhJdFkyOXVkSEpoYzNRb0pHTnZiRzl5TENBa1pHRnlheWs3WEhKY2JseHlYRzRnSUVCcFppQW9KR3hwWjJoMFEyOXVkSEpoYzNRZ1BpQWtaR0Z5YTBOdmJuUnlZWE4wS1NCN1hISmNiaUFnSUNCQWNtVjBkWEp1SUNSc2FXZG9kRHRjY2x4dUlDQjlJRUJsYkhObElIdGNjbHh1SUNBZ0lFQnlaWFIxY200Z0pHUmhjbXM3WEhKY2JpQWdmVnh5WEc1OVhISmNiaUlzQ2drSklpOHZYSEpjYmk4dklHNWhiV2x1WjF4eVhHNHZMeUJqYjI1MlpYSjBJR0ZpWW5KbGRtbGhkR1VnTHlCaFkzSnZibmx0SUhSdklISmxZV1JoWW14bElIZHZjbVJ6WEhKY2JpOHZYSEpjYmk4dklGQmhjbUZ0WlhSbGNuTTZYSEpjYmk4dklIdFRkSEpwYm1kOUlDUnphRzl5ZENBdElHRmlZbkpsZG1saGRHVWdMeUJoWTNKdmJubHRYSEpjYmk4dklIdE5ZWEI5SUNSemFHOXlkQzEzYjNKa2N5QXRJRzFoY0NCamIyNTBZV2x1YVc1bklHRmlZbkpsZG1saGRHVWdMeUJoWTNKdmJubHRJQ2hyWlhsektTQmhibVFnZDI5eVpITWdLSFpoYkhWbGN5bGNjbHh1THk4Z2UwSnZiMnhsWVc1OUlDUmpiMjUyWlhKMElDMGdkMlZoZEdobGNpQjBieUJqYjI1MlpYSjBJSFJvWlNCM2IzSmtJSFJ2SUhKbFlXUmhZbXhsSUhkdmNtUnpYSEpjYmk4dlhISmNiaTh2SUVWNFlXMXdiR1VnYjJZZ2RYTmxPbHh5WEc0dkx5QWtjMmh2Y25RdGQyOXlaSE02SUNoemJUb2diVzlpYVd4bExDQnRaRG9nZEdGaWJHVjBMQ0JzWnpvZ1pHVnphM1J2Y0N3Z2VHdzZJR3hoY21kbEtUdGNjbHh1THk4Z2JtRnRhVzVuS0hOdExDQWtjMmh2Y25RdGQyOXlaSE1zSUhSeWRXVXBJRDArSUcxdlltbHNaVnh5WEc0dkx5QnVZVzFwYm1jb2MyMHNJQ1J6YUc5eWRDMTNiM0prY3l3Z1ptRnNjMlVwSUQwK0lITnRYSEpjYmk4dlhISmNia0JtZFc1amRHbHZiaUJ1WVcxcGJtY29KSE5vYjNKMExDQWtjMmh2Y25RdGQyOXlaSE1zSUNSamIyNTJaWEowS1NCN1hISmNiaUFnUUdsbUlDUmpiMjUyWlhKMElIdGNjbHh1SUNBZ0lDOHZJR2xtSUhKbFlXUmhZbXhsSUhkdmNtUnpJR0Z5WlNCd2NtVm1aWEp5WldSY2NseHVYSEpjYmlBZ0lDQXZMeUJtYVd4MFpYSWdiM1YwSUdWdGNIUjVJSGR2Y21SeklHSmxZMkYxYzJVZ2MzUnlhVzVuSUdWNGNHeHZaR1VnWTJGdUlHNXZkQ0J6Y0d4cGRDQjBhR1Z0WEhKY2JpQWdJQ0JBYVdZZ0pITm9iM0owSUQwOUlHNTFiR3dnYjNJZ0pITm9iM0owSUQwOUlDZ3BJSHRjY2x4dUlDQWdJQ0FnUUhKbGRIVnliaUFrYzJodmNuUTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSkhOMVlpMXpkSEpwYm1jNklITjBjaTFsZUhCc2IyUmxLQ1J6YUc5eWRDd2dYQ0l0WENJcE8xeHlYRzVjY2x4dUlDQWdJQ1J6YUc5eWREb2diblZzYkR0Y2NseHVJQ0FnSUVCbFlXTm9JQ1J6ZEhKcGJtY2dhVzRnSkhOMVlpMXpkSEpwYm1jZ2UxeHlYRzRnSUNBZ0lDQXZMeUJtYVd4MFpYSWdiM1YwSUdWdGNIUjVJSGR2Y21SeklHbHVjMmxrWlNBa2MzVmlMWE4wY21sdVoxeHlYRzRnSUNBZ0lDQkFhV1lnSkhOMGNtbHVaeUE5UFNCdWRXeHNJRzl5SUNSemRISnBibWNnUFQwZ0tDa2dlMXh5WEc0Z0lDQWdJQ0FnSUVCeVpYUjFjbTRnSkhOb2IzSjBPMXh5WEc0Z0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWthMlY1T2lCdFlYQXRhR0Z6TFd0bGVTZ2tjMmh2Y25RdGQyOXlaSE1zSUNSemRISnBibWNwTzF4eVhHNGdJQ0FnSUNCQWFXWWdKR3RsZVNCN1hISmNiaUFnSUNBZ0lDQWdKSE4wY21sdVp6b2djM1J5TFhKbFlXUmhZbXhsS0NSemRISnBibWNzSUNSemFHOXlkQzEzYjNKa2N5azdYSEpjYmlBZ0lDQWdJSDBnUUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUVCcFppQWtaVzVoWW14bExXUmxZblZuWjJsdVp5QjdYSEpjYmlBZ0lDQWdJQ0FnSUNCQWQyRnliaUJjSW1GamNtOXVlVzBnTHlCaFltSnlaWFpwWVhSbElHQWpleVJ6ZEhKcGJtZDlZQ0J1YjNRZ1ptOTFibVFnYVc1emFXUmxJQ1J6YUc5eWRDMTNiM0prY3lCdFlYQWdZQ043SkhOb2IzSjBMWGR2Y21SemZXQXVYQ0k3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBa2MyaHZjblE2SUhOMVptWnBlQ2drYzJodmNuUXNJRndpTFZ3aUtTQXJJQ1J6ZEhKcGJtYzdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnUUhKbGRIVnliaUFrYzJodmNuUTdYSEpjYmlBZ2ZTQkFaV3h6WlNCN1hISmNiaUFnSUNBdkx5QnBaaUJoWTNKdmJubHRMMkZpWW5KbGRtbGhkR1VnWVhKbElIQnlaV1psY25KbFpGeHlYRzRnSUNBZ1FISmxkSFZ5YmlBa2MyaHZjblE3WEhKY2JpQWdmVnh5WEc1OVhISmNibHh5WEc0dkwxeHlYRzR2THlCdVlXMWxMV0p5WldGcmNHOXBiblJjY2x4dUx5OGdZMjl1ZG1WeWRDQmljbVZoYTNCdmFXNTBjeUJoWW1KeVpYWnBZWFJsSUM4Z1lXTnliMjU1YlNCMGJ5QnlaV0ZrWVdKc1pTQjNiM0prY3lCaVlYTmxaQ0J2YmlCelpYUjBhVzVuSUdBa1luSmxZV3R3YjJsdWRITXRjbVZoWkdGaWJHVXRaV3h6WlMxemFHOXlkR0JjY2x4dUx5OWNjbHh1THk4Z1VHRnlZVzFsZEdWeWN6cGNjbHh1THk4Z2UxTjBjbWx1WjMwZ0pITm9iM0owSUMwZ1lXSmljbVYyYVdGMFpTQXZJR0ZqY205dWVXMGdabTl5YlNCdlppQmljbVZoYTNCdmFXNTBYSEpjYmk4dklGdHZjSFJwYjI1aGJGMGdlMDFoY0gwZ0pITm9iM0owTFhkdmNtUnpJQzBnYldGd0lHTnZiblJoYVc1cGJtY2dZV0ppY21WMmFXRjBaU0F2SUdGamNtOXVlVzBnS0d0bGVYTXBJR0Z1WkNCM2IzSmtjeUFvZG1Gc2RXVnpLVnh5WEc0dkx5QmJiM0IwYVc5dVlXeGRJSHRDYjI5c1pXRnVmU0FrWTI5dWRtVnlkQ0F0SUhkbFlYUm9aWElnZEc4Z1kyOXVkbVZ5ZENCMGFHVWdkMjl5WkNCMGJ5QnlaV0ZrWVdKc1pTQmljbVZoYTNCdmFXNTBjMXh5WEc0dkwxeHlYRzR2THlCRmVHRnRjR3hsSUc5bUlIVnpaVHBjY2x4dUx5OGdKSE5vYjNKMExYZHZjbVJ6T2lBb2MyMDZJRzF2WW1sc1pTd2diV1E2SUhSaFlteGxkQ3dnYkdjNklHUmxjMnQwYjNBc0lIaHNPaUJzWVhKblpTazdYSEpjYmk4dklHNWhiV1V0WW5KbFlXdHdiMmx1ZENoemJTd2dKSE5vYjNKMExYZHZjbVJ6TENCMGNuVmxLU0E5UGlCdGIySnBiR1ZjY2x4dUx5OGdibUZ0WlMxaWNtVmhhM0J2YVc1MEtITnRMQ0FrYzJodmNuUXRkMjl5WkhNc0lHWmhiSE5sS1NBOVBpQnpiVnh5WEc0dkwxeHlYRzVBWm5WdVkzUnBiMjRnYm1GdFpTMWljbVZoYTNCdmFXNTBLQ1JpY21WaGEzQnZhVzUwTENBa2NtVmhaR0ZpYkdVNklDUmljbVZoYTNCdmFXNTBjeTF5WldGa1lXSnNaU3dnSkdOdmJuWmxjblE2SUNSaWNtVmhhM0J2YVc1MGN5MXlaV0ZrWVdKc1pTMWxiSE5sTFhOb2IzSjBLU0I3WEhKY2JpQWdRSEpsZEhWeWJpQnVZVzFwYm1jb0pHSnlaV0ZyY0c5cGJuUXNJQ1JpY21WaGEzQnZhVzUwY3kxeVpXRmtZV0pzWlN3Z0pHSnlaV0ZyY0c5cGJuUnpMWEpsWVdSaFlteGxMV1ZzYzJVdGMyaHZjblFwTzF4eVhHNTlYSEpjYmlJc0Nna0pJaTh2WEhKY2JpOHZJRUp5WldGcmNHOXBiblJ6SUVaMWJtTjBhVzl1YzF4eVhHNHZMMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdZbkpsWVd0d2IybHVkQzF1WlhoMFhISmNiaTh2SUhKbGRIVnliaUIwYUdVZ2JtRnRaU0J2WmlCMGFHVWdZbkpsWVd0d2IybHVkQ0J1WlhoMElHOW1JSE4xY0hCc2FXVmtJR0p5WldGcmNHOXBiblJjY2x4dUx5OWNjbHh1THk4Z1VHRnlZVzFsZEdWeWN6cGNjbHh1THk4Z2UxTjBjbWx1WjMwZ0pHSnlaV0ZyY0c5cGJuUWdMU0J1WVcxbElHOW1JSFJvWlNCaWNtVmhhM0J2YVc1MElIUnZJR1pwYm1RZ2JtVjRkQ0J2Wmx4eVhHNHZMeUI3VFdGd2ZTQWtZbkpsWVd0d2IybHVkSE1nTFNCaWNtVmhhM0J2YVc1MGN5QnRZWEFnZEc4Z2JHOXZheUJwYm5SdlhISmNiaTh2WEhKY2JpOHZJRVY0WVcxd2JHVWdiMllnZFhObE9seHlYRzR2THlBa1luSmxZV3R3YjJsdWRITTZJQ2h1ZFd4c09pQXdMQ0J6YlRvZ05UYzJjSGdzSUcxa09pQTNOamh3ZUN3Z2JHYzZJRGs1TW5CNExDQjRiRG9nTVRJd01IQjRLVHRjY2x4dUx5OGdZbkpsWVd0d2IybHVkQzF1WlhoMEtITnRLU0E5UGlCdFpGeHlYRzR2THlCaWNtVmhhM0J2YVc1MExXNWxlSFFvYzIwc0lDUmljbVZoYTNCdmFXNTBjeWtnUFQ0Z2JXUmNjbHh1THk4Z1luSmxZV3R3YjJsdWRDMXVaWGgwS0hOdExDQW9iblZzYkNCemJTQnRaQ0JzWnlCNGJDa3BJRDArSUcxa1hISmNiaTh2WEhKY2JpOHZJRkpsZEhWeWJqcGNjbHh1THk4Z2UxTjBjbWx1WjN4dWRXeHNmU0IwYUdVZ2JtRnRaU0J2WmlCMGFHVWdZbkpsWVd0d2IybHVkQ0J1WlhoMElHOW1JSE4xY0hCc2FXVmtJR0p5WldGcmNHOXBiblFnYjNJZ2JuVnNiQ0JtYjNJZ2RHaGxJR3hoYzNRZ1luSmxZV3R3YjJsdWRDNWNjbHh1THk5Y2NseHVRR1oxYm1OMGFXOXVJR0p5WldGcmNHOXBiblF0Ym1WNGRDZ2tibUZ0WlN3Z0pHSnlaV0ZyY0c5cGJuUnpPaUFrWW5KbFlXdHdiMmx1ZEhNcElIdGNjbHh1SUNBa1luSmxZV3R3YjJsdWRITTZJSFJ2TFd4cGMzUW9KR0p5WldGcmNHOXBiblJ6TENCY0ltdGxlWE5jSWlrN1hISmNiaUFnUUhKbGRIVnliaUJzYVhOMExXNWxlSFFvSkdKeVpXRnJjRzlwYm5SekxDQWtibUZ0WlNrN1hISmNibjFjY2x4dVhISmNiaTh2WEhKY2JpOHZJR0p5WldGcmNHOXBiblF0Ykc5M1pYSmNjbHh1THk4Z2NtVjBkWEp1SUhSb1pTQnNiM2RsY2lCMllXeDFaU0J2WmlCMGFHVWdZbkpsWVd0d2IybHVkRnh5WEc0dkwxeHlYRzR2THlCUVlYSmhiV1YwWlhKek9seHlYRzR2THlCN1UzUnlhVzVuZlNBa1luSmxZV3R3YjJsdWRDQXRJRzVoYldVZ2IyWWdkR2hsSUdKeVpXRnJjRzlwYm5SY2NseHVMeThnZTAxaGNIMGdKR0p5WldGcmNHOXBiblJ6SUMwZ1luSmxZV3R3YjJsdWRITWdiV0Z3SUhSdklHeHZiMnNnYVc1MGIxeHlYRzR2TDF4eVhHNHZMeUJGZUdGdGNHeGxJRzltSUhWelpUcGNjbHh1THk4Z0pHSnlaV0ZyY0c5cGJuUnpPaUFvYm5Wc2JEb2dNQ3dnYzIwNklEVTNObkI0TENCdFpEb2dOelk0Y0hnc0lHeG5PaUE1T1RKd2VDd2dlR3c2SURFeU1EQndlQ2s3WEhKY2JpOHZJR0p5WldGcmNHOXBiblF0Ykc5M1pYSW9iblZzYkNrZ1BUNGdiblZzYkZ4eVhHNHZMeUJpY21WaGEzQnZhVzUwTFd4dmQyVnlLSE50TENBa1luSmxZV3R3YjJsdWRITXBJRDArSURVM05uQjRYSEpjYmk4dlhISmNiaTh2SUZKbGRIVnlianBjY2x4dUx5OGdlMDUxYldKbGNpeHVkV3hzZlNCVGRHRnlkR2x1WnlCd2IybHVkQ0J2WmlCMGFHVWdZbkpsWVd0d2IybHVkQzRnVG5Wc2JDQm1iM0lnZEdobElHWnBjbk4wSUdKeVpXRnJjRzlwYm5RdVhISmNiaTh2WEhKY2JrQm1kVzVqZEdsdmJpQmljbVZoYTNCdmFXNTBMV3h2ZDJWeUtDUnVZVzFsTENBa1luSmxZV3R3YjJsdWREb2dKR0p5WldGcmNHOXBiblJ6S1NCN1hISmNiaUFnUUdsbUlHNXZkQ0J0WVhBdGFHRnpMV3RsZVNna1luSmxZV3R3YjJsdWRDd2dKRzVoYldVcElIdGNjbHh1SUNBZ0lFQmxjbkp2Y2lCY0lpUnVZVzFsSUdBamV5UnVZVzFsZldBZ2JtOTBJR1p2ZFc1a0lHbHVjMmxrWlNBa1luSmxZV3R3YjJsdWRDQmdJM3NrWW5KbFlXdHdiMmx1ZEgxZ0xsd2lPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdKR3h2ZDJWeU9pQnRZWEF0WjJWMEtDUmljbVZoYTNCdmFXNTBMQ0FrYm1GdFpTazdYSEpjYmlBZ1FISmxkSFZ5YmlCcFppZ2tiRzkzWlhJZ1BUMGdNQ3dnYm5Wc2JDd2dKR3h2ZDJWeUtUdGNjbHh1ZlZ4eVhHNWNjbHh1THk5Y2NseHVMeThnWW5KbFlXdHdiMmx1ZEMxMWNIQmxjbHh5WEc0dkx5QnlaWFIxY200Z2RHaGxJSFZ3Y0dWeUlIWmhiSFZsSUc5bUlIUm9aU0JpY21WaGEzQnZhVzUwWEhKY2JpOHZYSEpjYmk4dklGQmhjbUZ0WlhSbGNuTTZYSEpjYmk4dklIdFRkSEpwYm1kOUlDUmljbVZoYTNCdmFXNTBJQzBnYm1GdFpTQnZaaUIwYUdVZ1luSmxZV3R3YjJsdWRGeHlYRzR2THlCN1RXRndmU0FrWW5KbFlXdHdiMmx1ZEhNZ0xTQmljbVZoYTNCdmFXNTBjeUJ0WVhBZ2RHOGdiRzl2YXlCcGJuUnZYSEpjYmk4dlhISmNiaTh2SUVWNFlXMXdiR1VnYjJZZ2RYTmxPbHh5WEc0dkx5QWtZbkpsWVd0d2IybHVkSE02SUNodWRXeHNPaUF3TENCemJUb2dOVGMyY0hnc0lHMWtPaUEzTmpod2VDd2diR2M2SURrNU1uQjRMQ0I0YkRvZ01USXdNSEI0S1R0Y2NseHVMeThnWW5KbFlXdHdiMmx1ZEMxMWNIQmxjaWh1ZFd4c0tTQTlQaUExTnpVdU5YQjRYSEpjYmk4dklHSnlaV0ZyY0c5cGJuUXRkWEJ3WlhJb2MyMHNJQ1JpY21WaGEzQnZhVzUwY3lrZ1BUNGdOelkzTGpWd2VGeHlYRzR2TDF4eVhHNHZMeUJTWlhSMWNtNDZYSEpjYmk4dklIdE9kVzFpWlhKOUlFVnVaR2x1WnlCd2IybHVkQ0J2WmlCMGFHVWdZbkpsWVd0d2IybHVkQzRnVG5Wc2JDQm1iM0lnZEdobElHeGhjbWRsYzNRZ0tHeGhjM1FwSUdKeVpXRnJjRzlwYm5RdVhISmNiaTh2WEhKY2JrQm1kVzVqZEdsdmJpQmljbVZoYTNCdmFXNTBMWFZ3Y0dWeUtDUnVZVzFsTENBa1luSmxZV3R3YjJsdWREb2dKR0p5WldGcmNHOXBiblJ6S1NCN1hISmNiaUFnSkc1bGVIUTZJR0p5WldGcmNHOXBiblF0Ym1WNGRDZ2tibUZ0WlN3Z0pHSnlaV0ZyY0c5cGJuUXBPMXh5WEc0Z0lFQnBaaUJ1YjNRZ0pHNWxlSFFnZTF4eVhHNGdJQ0FnUUhKbGRIVnliaUJ1ZFd4c08xeHlYRzRnSUgxY2NseHVJQ0FrYm1WNGRDMXNiM2RsY2pvZ1luSmxZV3R3YjJsdWRDMXNiM2RsY2lna2JtVjRkQ3dnSkdKeVpXRnJjRzlwYm5RcE8xeHlYRzRnSUVCeVpYUjFjbTRnSkc1bGVIUXRiRzkzWlhJZ0xTQXVNRFU3WEhKY2JuMWNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdRbTk0TFZOb1lXUnZkeUJHZFc1amRHbHZibHh5WEc0dkwxeHlYRzVjY2x4dUx5OWNjbHh1THk4Z2RISmhibk5wZEdsdmJseHlYRzR2THlCR2RXNWpkR2x2YmlCMGJ5QnZjSFJwYldsNlpTd2dZMmhsWTJzZ1lXNWtJR052Ym5SeWIyd2dkSEpoYm5OcGRHbHZibHh5WEc0dkwxeHlYRzR2THlCUVlYSmhiV1YwWlhKek9seHlYRzR2THlCN1UzUnlhVzVuTEV4cGMzUjlJQ1IwY21GdWMybDBhVzl1Y3lBdElIUnlZVzV6YVhScGIyNXpJSE4wY21sdVozTmNjbHh1UUdaMWJtTjBhVzl1SUhSeVlXNXphWFJwYjI0b0pIUnlZVzV6YVhScGIyNXpMaTR1S1NCN1hISmNiaUFnSkhSeVlXNXphWFJwYjI0dFkyOXRZbWx1WldRNklDZ3BPMXh5WEc0Z0lDUm1hWEp6ZEMxMllXeDFaVG9nYm5Sb0tDUjBjbUZ1YzJsMGFXOXVjeXdnTVNrN1hISmNibHh5WEc0Z0lDOHZJR2xtSUc1dklHbHVjSFYwSUdGeVozVnRaVzUwSUdseklHZHBkbVZjY2x4dUlDQkFhV1lnYkdWdVozUm9LQ1IwY21GdWMybDBhVzl1Y3lrZ1BUMGdNQ0I3WEhKY2JpQWdJQ0FrZEhKaGJuTnBkR2x2YmkxamIyMWlhVzVsWkRvZ1lXeHNJQzR5Y3lCbFlYTmxMV2x1TFc5MWREc2dMeThnUkdWbVlYVnNkQ0IwY21GdWMybDBhVzl1WEhKY2JpQWdmU0JBWld4elpTQnBaaUJzWlc1bmRHZ29KSFJ5WVc1emFYUnBiMjV6S1NBOVBTQXhJR0Z1WkNBb0pHWnBjbk4wTFhaaGJIVmxJRDA5SUc1dmJtVWdiM0lnSkdacGNuTjBMWFpoYkhWbElEMDlJRzUxYkd3Z2IzSWdKR1pwY25OMExYWmhiSFZsSUQwOUlHRjFkRzhnYjNJZ0pHWnBjbk4wTFhaaGJIVmxJRDA5SUdsdWFHVnlhWFFwSUh0Y2NseHVJQ0FnSUNSMGNtRnVjMmwwYVc5dUxXTnZiV0pwYm1Wa09pQWtabWx5YzNRdGRtRnNkV1U3WEhKY2JpQWdmU0JBWld4elpTQjdYSEpjYmlBZ0lDQkFaV0ZqYUNBa2RISmhibk5wZEdsdmJpQnBiaUFrZEhKaGJuTnBkR2x2Ym5NZ2UxeHlYRzRnSUNBZ0lDQkFhV1lnYkdsemRDMXpaWEJoY21GMGIzSW9KSFJ5WVc1emFYUnBiMjRwSUQwOUlHTnZiVzFoSUh0Y2NseHVJQ0FnSUNBZ0lDQkFaV0ZqYUNBa2MzVmlMWFJ5WVc1emFYUnBiMjRnYVc0Z0pIUnlZVzV6YVhScGIyNGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0x5OGdjbVZqYkhWemFYWmxiSGtnWTJobFkyc2daV0ZqYUNCMllXeDFaU0JwYmlCc2FYTjBYSEpjYmlBZ0lDQWdJQ0FnSUNBa2RISmhibk5wZEdsdmJpMWpiMjFpYVc1bFpEb2djM1ZtWm1sNEtDUjBjbUZ1YzJsMGFXOXVMV052YldKcGJtVmtMQ0JjSWl4Y0lpa2dLeUIwY21GdWMybDBhVzl1S0NSemRXSXRkSEpoYm5OcGRHbHZiaWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJRUJ5WlhSMWNtNGdKSFJ5WVc1emFYUnBiMjR0WTI5dFltbHVaV1E3WEhKY2JpQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJRUJwWmlCc1pXNW5kR2dvSkhSeVlXNXphWFJwYjI0cElEMDlJREVnZTF4eVhHNGdJQ0FnSUNBZ0lDUjBjbUZ1YzJsMGFXOXVMV052YldKcGJtVmtPaUJ6ZFdabWFYZ29KSFJ5WVc1emFYUnBiMjR0WTI5dFltbHVaV1FzSUZ3aUxGd2lLU0FySUNSMGNtRnVjMmwwYVc5dUlDNHhOWE1nWldGelpTMXBiaTF2ZFhRN1hISmNiaUFnSUNBZ0lIMGdRR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJQ1IwY21GdWMybDBhVzl1TFdOdmJXSnBibVZrT2lCemRXWm1hWGdvSkhSeVlXNXphWFJwYjI0dFkyOXRZbWx1WldRc0lGd2lMRndpS1NBcklDUjBjbUZ1YzJsMGFXOXVPMXh5WEc0Z0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc0Z0lFQnlaWFIxY200Z0pIUnlZVzV6YVhScGIyNHRZMjl0WW1sdVpXUTdYSEpjYm4xY2NseHVJaXdLQ1FraUx5OWNjbHh1THk4Z1FtOTRMVk5vWVdSdmR5QkdkVzVqZEdsdmJseHlYRzR2TDF4eVhHNWNjbHh1THk5Y2NseHVMeThnWW05NExYTm9ZV1J2ZDF4eVhHNHZMeUJHZFc1amRHbHZiaUJ2Y0hScGJXbDZaU0JoYm1RZ1kyaGxZMnNnWW05NExYTm9ZV1J2ZDF4eVhHNHZMMXh5WEc0dkx5QlFZWEpoYldWMFpYSnpPbHh5WEc0dkx5QjdUR2x6ZEgwZ0pITm9ZV1J2ZDNNZ0xTQnphR0ZrYjNkeklITjBjbWx1WjNOY2NseHVRR1oxYm1OMGFXOXVJR0p2ZUMxemFHRmtiM2NvSkhOb1lXUnZkM011TGk0cElIdGNjbHh1SUNBa1ptbHljM1F0ZG1Gc2RXVTZJRzUwYUNna2MyaGhaRzkzY3l3Z01TazdYSEpjYmx4eVhHNGdJRUJwWmlCc1pXNW5kR2dvSkhOb1lXUnZkM01wSUQwOUlERWdZVzVrSUNna1ptbHljM1F0ZG1Gc2RXVWdQVDBnYm05dVpTQnZjaUFrWm1seWMzUXRkbUZzZFdVZ1BUMGdiblZzYkNrZ2UxeHlYRzRnSUNBZ1FISmxkSFZ5YmlBa2MyaGhaRzkzY3p0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4dklFWnBiSFJsY2lCcGJuWmhiR2xrSUhaaGJIVmxjMXh5WEc0Z0lDOHZJR1p2Y2lCbGVHRnRjR3hsSUdCQWFXWWdKR1JsYzJsbmJpMXphR0ZrYjNjdFpXeHpaUzFpYjNKa1pYSWdleUJpYjNndGMyaGhaRzkzT2lCdWIyNWxMQ0F3SURBZ1kzVnljbVZ1ZEVOdmJHOXlPMkJjY2x4dUlDQkFhV1lnYkdWdVozUm9LQ1J6YUdGa2IzZHpLU0ErSURFZ2IzSWdLQ1JtYVhKemRDMTJZV3gxWlNBaFBTQnViMjVsSUdGdVpDQWtabWx5YzNRdGRtRnNkV1VnSVQwZ2JuVnNiQ2tnZTF4eVhHNGdJQ0FnSkhKbGMzVnNkRG9nS0NrN1hISmNibHh5WEc0Z0lDQWdRR1ZoWTJnZ0pITm9ZV1J2ZHlCcGJpQWtjMmhoWkc5M2N5QjdYSEpjYmlBZ0lDQWdJQzh2SUdsbmJtOXlaU0J1YjI1bElHRnVaQ0J1ZFd4c0lIWmhiSFZsSUdsdUlHeHBjM1FnZDJsMGFDQjJZV3hwWkNCMllXeDFaWE5jY2x4dUlDQWdJQ0FnUUdsbUlDUnphR0ZrYjNjZ0lUMGdibTl1WlNCaGJtUWdKSE5vWVdSdmR5QWhQU0J1ZFd4c0lIdGNjbHh1SUNBZ0lDQWdJQ0F2THlCcFppQnNhWE4wSUdseklITjFjSEJzYVdWa0lHRnpJR0VnZG1GeWFXRmliR1VnZEc4Z2NHRnlZVzFsZEdWeUlDUnphR0ZrYjNkelhISmNiaUFnSUNBZ0lDQWdRR2xtSUd4cGMzUXRjMlZ3WVhKaGRHOXlLQ1J6YUdGa2IzY3BJRDA5SUdOdmJXMWhJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lFQmxZV05vSUNSemRXSXRjMmhoWkc5M0lHbHVJQ1J6YUdGa2IzY2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQXZMeUJ5WldOc2RYTnBkbVZzZVNCamFHVmpheUJsWVdOb0lIWmhiSFZsSUdsdUlHeHBjM1JjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdKSEpsYzNWc2REb2djM1ZtWm1sNEtDUnlaWE4xYkhRc0lGd2lMRndpS1NBcklHSnZlQzF6YUdGa2IzY29KSE4xWWkxemFHRmtiM2NwTzF4eVhHNGdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ1FISmxkSFZ5YmlBa2NtVnpkV3gwTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ1FHbG1JSFI1Y0dVdGIyWW9KSE5vWVdSdmR5a2dJVDBnWENKc2FYTjBYQ0lnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdRR1Z5Y205eUlGd2lhVzUyWVd4cFpDQjBlWEJsSUdBamUzUjVjR1V0YjJZb0pITm9ZV1J2ZHlsOVlDQnZjaUIyWVd4MVpTQmdJM3NrYzJoaFpHOTNmV0FnYjJZZ0pITm9ZV1J2ZHlCcGJuTnBaR1VnSkhOb1lXUnZkM01nWUNON2MyaGhaRzkzYzMxZ0lDNGdWSGx3WlNCdGRYTjBJR0psSUdCc2FYTjBZQ0J2Y2lCMllXeDFaU0J0ZFhOMElHSmxJSFpoYkdsa0lITm9ZV1J2ZHlCMllXeDFaVndpTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0pISmxjM1ZzZERvZ2MzVm1abWw0S0NSeVpYTjFiSFFzSUZ3aUxGd2lLU0FySUNSemFHRmtiM2M3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0FnSUM4dklHbG1JSFJvWlhKbElHRnlaU0J6YjIxbElIWmhiSFZsY3lCc1pXWjBJR0ZtZEdWeUlHTm9aV05yYVc1blhISmNiaUFnSUNCQWFXWWdiR1Z1WjNSb0tDUnlaWE4xYkhRcElENGdNQ0I3WEhKY2JpQWdJQ0FnSUVCeVpYUjFjbTRnSkhKbGMzVnNkRHRjY2x4dUlDQWdJSDBnUUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0F2THlCaFpuUmxjaUJqYUdWamEybHVaeUJoYm1RZ1ptbHNkR1Z5YVc1bklHVmhZMmdnYzJoaFpHOTNJR2xtSUhSb1pTQnVieUIyWVd4cFpDQjJZV3gxWlNCcGN5Qm1iM1Z1WkZ4eVhHNGdJQ0FnSUNCQVpYSnliM0lnWENKcGJuWmhiR2xrSUhaaGJIVmxJRzltSUNSemFHRmtiM2R6SUdBamV5UnphR0ZrYjNkemZXQmNJanRjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmlBZ0x5OGdhV1lnZEdobElIWmhiSFZsSUdseklHOTBhR1Z5SUhSb1lXNGdibTl1WlNCbExtY2dhVzVvWlhKcGRGeHlYRzRnSUVCbGNuSnZjaUJjSW1sdWRtRnNhV1FnZG1Gc2RXVWdiMllnSkhOb1lXUnZkM01nWUNON0pITm9ZV1J2ZDNOOVlGd2lPMXh5WEc1OVhISmNiaUlzQ2drSklpOHZYSEpjYmk4dklFSnZjbVJsY2lCR2RXNWpkR2x2Ymx4eVhHNHZMMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdZbTl5WkdWeVhISmNiaTh2SUVaMWJtTjBhVzl1SUZWelpXUWdkRzhnWTI5dWRISnZiQ0JoYm1RZ1oyVnVaWEpoZEdVZ1ltOXlaR1Z5WEhKY2JpOHZYSEpjYmk4dklGQmhjbUZ0WlhSbGNuTTZYSEpjYmk4dklIdFRkSEpwYm1kOUlDUmliM0prWlhJZ0xTQmliM0prWlhJZ2MzUnlhVzVuYzF4eVhHNUFablZ1WTNScGIyNGdZbTl5WkdWeUtDUmliM0prWlhJNklDUmliM0prWlhJdFpHVm1ZWFZzZEN3Z0pHWmhiR3hpWVdOckxYWmhiSFZsT2lCdWRXeHNLU0I3WEhKY2JpQWdRR2xtSUc1dmRDQWtaR1Z6YVdkdUxYTm9ZV1J2ZHkxbGJITmxMV0p2Y21SbGNpQjdYSEpjYmlBZ0lDQkFjbVYwZFhKdUlDUmliM0prWlhJN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNCQWNtVjBkWEp1SUNSbVlXeHNZbUZqYXkxMllXeDFaVHRjY2x4dWZWeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5QkNiM0prWlhJZ1VtRmthWFZ6SUVaMWJtTjBhVzl1WEhKY2JpOHZYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QmliM0prWlhJdGNtRmthWFZ6WEhKY2JpOHZJRVoxYm1OMGFXOXVJRlZ6WldRZ2RHOGdZMjl1ZEhKdmJDQmhibVFnWjJWdVpYSmhkR1VnWW05eVpHVnlMWEpoWkdsMWMxeHlYRzR2TDF4eVhHNHZMeUJRWVhKaGJXVjBaWEp6T2x4eVhHNHZMeUI3VG5WdFltVnlmU0FrY21Ga2FYVnpJQzBnWW05eVpHVnlMWEpoWkdsMWMxeHlYRzVBWm5WdVkzUnBiMjRnWW05eVpHVnlMWEpoWkdsMWN5Z2tjbUZrYVhWek9pQWtZbTl5WkdWeWNtRmthWFZ6TFdSbFptRjFiSFFzSUNSbVlXeHNZbUZqYXkxMllXeDFaVG9nYm5Wc2JDa2dlMXh5WEc0Z0lFQnBaaUFrWkdWemFXZHVMWEp2ZFc1a1pXUXRaV3h6WlMxaWIzZ2dlMXh5WEc0Z0lDQWdRSEpsZEhWeWJpQWtjbUZrYVhWek8xeHlYRzRnSUgxY2NseHVYSEpjYmlBZ1FISmxkSFZ5YmlBa1ptRnNiR0poWTJzdGRtRnNkV1U3WEhKY2JuMWNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdaM0poWkdsbGJuUmNjbHh1THk4Z2NtVjBkWEp1Y3lCMGFHVWdaM0poWkdsbGJuUWdZMjlzYjNJZ2FXWWdaM0poWkdsbGJuUWdjM1I1YkdVZ2FYTWdaVzVoWW14bFpDQnBiaUJUWlhSMGFXNW5jMXh5WEc0dkx5QmxiSE5sSUhKbGRIVnliaUJ6YjJ4cFpDQnpkSGxzWlNCamIyeHZjbHh5WEc0dkwxeHlYRzR2THlCUVlYSmhiV1YwWlhKek9seHlYRzR2THlCN1EyOXNiM0o5SUNSamIyeHZjaUE2SUdOdmJHOXlJSFZ6WldRZ2RHOGdaMlZ1WlhKaGRHVWdaM0poWkdsbGJuUmNjbHh1THk4Z2UxSnZkR0YwYVc5dWZTQWtZVzVuYkdVZ09pQmhibWRzWlNCaGRDQjNhR2xqYUNCbmNtRmthV1Z1ZENCM2FXeHNJR0psSUdkbGJtVnlZWFJsWkZ4eVhHNHZMMXh5WEc0dkx5QkZlR0Z0Y0d4bElHOW1JSFZ6WlRwY2NseHVMeThnWjNKaFpHbGxiblFvSXpnd05XRmtOU2tnUFQ0Z0l6Z3dOV0ZrTlNCc2FXNWxZWEl0WjNKaFpHbGxiblFvTVRnd1pHVm5MQ0J0YVhnb0kyWm1aaXdnSXpnd05XRmtOU3dnTVRVbEtTd2dJemd3TldGa05Ta2djbVZ3WldGMExYaGNjbHh1THk5Y2NseHVMeThnVW1WMGRYSnVPbHh5WEc0dkx5QjdRMjlzYjNKOUlFZHlZV1JwWlc1MElHOXlJR0poWTJ0bmNtOTFibVJjY2x4dUx5OWNjbHh1UUdaMWJtTjBhVzl1SUdkeVlXUnBaVzUwS0NSamIyeHZjaXdnSkdGdVoyeGxLU0I3WEhKY2JpQWdRR2xtSUc1dmRDQWtaR1Z6YVdkdUxYTnZiR2xrTFdWc2MyVXRaM0poWkdsbGJuUnpJSHRjY2x4dUlDQWdJQ1JrWVhKclpYSXRjMmhoWkdVNklHUmhjbXRsYmloellYUjFjbUYwWlNna1kyOXNiM0lzSURjdU5TVXBMQ0EzTGpVbEtUdGNjbHh1SUNBZ0lDUnNhV2RvZEdWeUxYTm9ZV1JsT2lCc2FXZG9kR1Z1S0hOaGRIVnlZWFJsS0NSamIyeHZjaXdnTnk0MUpTa3NJRGN1TlNVcE8xeHlYRzRnSUNBZ1FISmxkSFZ5YmlBa1kyOXNiM0lnYkdsdVpXRnlMV2R5WVdScFpXNTBLQ1JoYm1kc1pTd2dKR1JoY210bGNpMXphR0ZrWlNBd0pTd2dKR052Ykc5eUlEY3dKU3dnSkd4cFoyaDBaWEl0YzJoaFpHVWdNVEF3SlNrN1hISmNiaUFnZlNCQVpXeHpaU0I3WEhKY2JpQWdJQ0JBY21WMGRYSnVJQ1JqYjJ4dmNqdGNjbHh1SUNCOVhISmNibjFjY2x4dUlpd0tDUWtpTHk5Y2NseHVMeThnWjNKcFpDMWpiMnd0ZDJsa2RHaGNjbHh1THk4Z1kyRnNZM1ZzWVhSbGN5QndaWEpqWlc1MFlXZGxJRzltSUhSb1pTQmpiMngxYlc0b2N5bGNjbHh1THk5Y2NseHVMeThnVUdGeVlXMWxkR1Z5Y3pwY2NseHVMeThnZTA1MWJXSmxjbjBnSkdsdVpHVjRJRG9nSUdsdVpHVjRJRzltSUdOMWNuSmxiblFnWjNKcFpDQmpiMngxYlc1Y2NseHVMeThnVzI5d2RHbHZibUZzWFNCN1RuVnRZbVZ5ZlNBNklDUmpiMngxYlc1eklIUnZkR0ZzSUc1dklHOW1JR2R5YVdRZ1kyOXNkVzF1WEhKY2JpOHZYSEpjYmk4dklFVjRZVzF3YkdVZ2IyWWdkWE5sT2x4eVhHNHZMeUJuY21sa0xXTnZiQzEzYVdSMGFDZ3pMQ0F4TWlrZ1BUNGdNVEl1TlNWY2NseHVMeTljY2x4dUx5OGdVbVYwZFhKdU9seHlYRzR2THlCN1RuVnRZbVZ5ZlNCd1pYSmpaVzUwWVdkbElHOW1JSFJvWlNCbmFYWmxiaUJqYjJ4MWJXNWNjbHh1THk5Y2NseHVRR1oxYm1OMGFXOXVJR2R5YVdRdFkyOXNMWGRwWkhSb0tDUnBibVJsZUN3Z0pHTnZiSFZ0Ym5NNklDUm5jbWxrTFdOdmJIVnRibk1wSUh0Y2NseHVJQ0JBYVdZZ2RIbHdaUzF2Wmlna2FXNWtaWGdwSUNFOUlGd2liblZ0WW1WeVhDSWdlMXh5WEc0Z0lDQWdRR1Z5Y205eUlGd2lWR2hsSUdGeVozVnRaVzUwSUNScGJtUmxlRG9nWUNON0pHbHVaR1Y0ZldBZ2FYTWdiMllnYVc1amIzSnlaV04wSUhSNWNHVTZJR0FqZTNSNWNHVXRiMllvSkdsdVpHVjRLWDFnTGlCVWVYQmxJRzltSUdCT2RXMWlaWEpnSUdseklISmxjWFZwY21Wa0lWd2lPMXh5WEc0Z0lIMGdRR1ZzYzJVZ2FXWWdkSGx3WlMxdlppZ2tZMjlzZFcxdWN5a2dJVDBnWENKdWRXMWlaWEpjSWlCN1hISmNiaUFnSUNCQVpYSnliM0lnWENKVWFHVWdZWEpuZFcxbGJuUWdKR052YkhWdGJuTTZJR0FqZXlSamIyeDFiVzV6ZldBZ2FYTWdiMllnYVc1amIzSnlaV04wSUhSNWNHVTZJR0FqZTNSNWNHVXRiMllvSkdOdmJIVnRibk1wZldBdUlGUjVjR1VnYjJZZ1lFNTFiV0psY21BZ2FYTWdjbVZ4ZFdseVpXUWhYQ0k3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0JBY21WMGRYSnVJSEJsY21ObGJuUmhaMlVvSkdsdVpHVjRJQzhnSkdkeWFXUXRZMjlzZFcxdWN5azdYSEpjYm4xY2NseHVJaXdLQ1FraUx5OGdjM1I1YkdWc2FXNTBMV1JwYzJGaWJHVWdjSEp2Y0dWeWRIa3RZbXhoWTJ0c2FYTjBYSEpjYmk4dlhISmNiaTh2SUVKdmNtUmxjaUJTWVdScGRYTmNjbHh1THk5Y2NseHVYSEpjYmk4dklIUnZjQ0J6YVdSbElHSnZjbVJsY2lCeVlXUnBkWE5jY2x4dVFHMXBlR2x1SUdKdmNtUmxjaTF5WVdScGRYTXRkRzl3S0NSeVlXUnBkWE02SUNSaWIzSmtaWEp5WVdScGRYTXRaR1ZtWVhWc2RDd2dKR1poYkd4aVlXTnJMWFpoYkhWbE9pQnVkV3hzS1NCN1hISmNiaUFnWW05eVpHVnlMWFJ2Y0Mxc1pXWjBMWEpoWkdsMWN6b2dZbTl5WkdWeUxYSmhaR2wxY3lna2NtRmthWFZ6TENBa1ptRnNiR0poWTJzdGRtRnNkV1VwTzF4eVhHNGdJR0p2Y21SbGNpMTBiM0F0Y21sbmFIUXRjbUZrYVhWek9pQmliM0prWlhJdGNtRmthWFZ6S0NSeVlXUnBkWE1zSUNSbVlXeHNZbUZqYXkxMllXeDFaU2s3WEhKY2JuMWNjbHh1WEhKY2JpOHZJSEpwWjJoMElITnBaR1VnWW05eVpHVnlJSEpoWkdsMWMxeHlYRzVBYldsNGFXNGdZbTl5WkdWeUxYSmhaR2wxY3kxeWFXZG9kQ2drY21Ga2FYVnpPaUFrWW05eVpHVnljbUZrYVhWekxXUmxabUYxYkhRc0lDUm1ZV3hzWW1GamF5MTJZV3gxWlRvZ2JuVnNiQ2tnZTF4eVhHNGdJR0p2Y21SbGNpMTBiM0F0Y21sbmFIUXRjbUZrYVhWek9pQmliM0prWlhJdGNtRmthWFZ6S0NSeVlXUnBkWE1zSUNSbVlXeHNZbUZqYXkxMllXeDFaU2s3WEhKY2JpQWdZbTl5WkdWeUxXSnZkSFJ2YlMxeWFXZG9kQzF5WVdScGRYTTZJR0p2Y21SbGNpMXlZV1JwZFhNb0pISmhaR2wxY3l3Z0pHWmhiR3hpWVdOckxYWmhiSFZsS1R0Y2NseHVmVnh5WEc1Y2NseHVMeThnWW05MGRHOXRJSE5wWkdVZ1ltOXlaR1Z5SUhKaFpHbDFjMXh5WEc1QWJXbDRhVzRnWW05eVpHVnlMWEpoWkdsMWN5MWliM1IwYjIwb0pISmhaR2wxY3pvZ0pHSnZjbVJsY25KaFpHbDFjeTFrWldaaGRXeDBMQ0FrWm1Gc2JHSmhZMnN0ZG1Gc2RXVTZJRzUxYkd3cElIdGNjbHh1SUNCaWIzSmtaWEl0WW05MGRHOXRMWEpwWjJoMExYSmhaR2wxY3pvZ1ltOXlaR1Z5TFhKaFpHbDFjeWdrY21Ga2FYVnpMQ0FrWm1Gc2JHSmhZMnN0ZG1Gc2RXVXBPMXh5WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjB0YkdWbWRDMXlZV1JwZFhNNklHSnZjbVJsY2kxeVlXUnBkWE1vSkhKaFpHbDFjeXdnSkdaaGJHeGlZV05yTFhaaGJIVmxLVHRjY2x4dWZWeHlYRzVjY2x4dUx5OGdiR1ZtZENCemFXUmxJR0p2Y21SbGNpQnlZV1JwZFhOY2NseHVRRzFwZUdsdUlHSnZjbVJsY2kxeVlXUnBkWE10YkdWbWRDZ2tjbUZrYVhWek9pQWtZbTl5WkdWeWNtRmthWFZ6TFdSbFptRjFiSFFzSUNSbVlXeHNZbUZqYXkxMllXeDFaVG9nYm5Wc2JDa2dlMXh5WEc0Z0lHSnZjbVJsY2kxMGIzQXRiR1ZtZEMxeVlXUnBkWE02SUdKdmNtUmxjaTF5WVdScGRYTW9KSEpoWkdsMWN5d2dKR1poYkd4aVlXTnJMWFpoYkhWbEtUdGNjbHh1SUNCaWIzSmtaWEl0WW05MGRHOXRMV3hsWm5RdGNtRmthWFZ6T2lCaWIzSmtaWEl0Y21Ga2FYVnpLQ1J5WVdScGRYTXNJQ1JtWVd4c1ltRmpheTEyWVd4MVpTazdYSEpjYm4xY2NseHVJaXdLQ1FraUx5OGdjM1I1YkdWc2FXNTBMV1JwYzJGaWJHVWdjSEp2Y0dWeWRIa3RZbXhoWTJ0c2FYTjBYSEpjYmk4dlhISmNiaTh2SUVadmJuUWdVMmw2WlZ4eVhHNHZMMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdVbVZ6Y0c5dWMybDJaU0JtYjI1MElITnBlbVZjY2x4dUx5OGdSMlZ1WlhKaGRHVWdabTl1ZENCemFYcGxJR0poYzJWa0lHOXVJRzl1SUhObGRIUnBibWNnWUNSbGJtRmliR1V0Wm14MWFXUXRabTl1ZEhOcGVtVnpZRnh5WEc0dkwxeHlYRzR2THlCUVlYSmhiV1YwWlhKek9seHlYRzR2THlCYmIzQjBhVzl1WVd4ZElIdFRkSEpwYm1jc1RuVnRZbVZ5ZlNBa1ptOXVkSE5wZW1VZ0xTQm1iMjUwSUhOcGVtVWdhVzRnY21WdElHRnVaQ0J3YlNBc0lGSkdVeUJ2Ym14NUlITjFjSEJ2Y25RZ2NIZ2dZVzVrSUhKbGJWeHlYRzR2THlCYmIzQjBhVzl1WVd4ZElIdE5ZWEI5SUNScGJYQnZjblJoYm5RZ0xTQnpaWFFnYVcxd2IzSjBZVzUwSUdsdUlHTnpjeUJ6ZEhsc1pWeHlYRzR2TDF4eVhHNUFiV2w0YVc0Z1ptOXVkSE5wZW1Vb0pHWnZiblJ6YVhwbE9pQWtabTl1ZEhOcGVtVXRibTl5YldGc0xDQWthVzF3YjNKMFlXNTBPaUJtWVd4elpTa2dlMXh5WEc0Z0lFQnBaaUFrWlc1aFlteGxMV1pzZFdsa0xXWnZiblJ6YVhwbGN5QjdYSEpjYmlBZ0lDQWtabTl1ZEhOcGVtVXRkVzVwZERvZ2FXWW9kSGx3WlMxdlppZ2tabTl1ZEhOcGVtVXBJRDA5SUZ3aWJuVnRZbVZ5WENJc0lIVnVhWFFvSkdadmJuUnphWHBsS1N3Z1ptRnNjMlVwTzF4eVhHNWNjbHh1SUNBZ0lDOHZJRWxtSUNSbWIyNTBjMmw2WlNCcGN5QnViM1FnWVNCdWRXMWlaWElnS0d4cGEyVWdhVzVvWlhKcGRDa2diM0lnSkdadmJuUnphWHBsSUdoaGN5QmhJSFZ1YVhRZ2IzUm9aWElnZEdoaGJpQndlQ0J2Y2lCeVpXMGdiM0lnYVhSeklIWmhiSFZsSUdseklEQmNjbHh1SUNBZ0lFQnBaaUFvSkdadmJuUnphWHBsSUQwOUlEQXBJRzl5SUNodWIzUWdKR1p2Ym5SemFYcGxMWFZ1YVhRcElHOXlJQ2drWm05dWRITnBlbVV0ZFc1cGRDQWhQU0JjSWx3aUlHRnVaQ0FrWm05dWRITnBlbVV0ZFc1cGRDQWhQU0JjSW5CNFhDSWdZVzVrSUNSbWIyNTBjMmw2WlMxMWJtbDBJQ0U5SUZ3aWNtVnRYQ0lwSUh0Y2NseHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQWpleVJtYjI1MGMybDZaWDBqZTJsbUtDUnBiWEJ2Y25SaGJuUXNJQ0ZwYlhCdmNuUmhiblFzSUc1MWJHd3BmVHRjY2x4dUlDQWdJSDBnUUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0F2THlCRWJ5QkdiSFZwWkNCbWIyNTBJSE4wZFdabVhISmNiaUFnSUNCOVhISmNiaUFnZlNCQVpXeHpaU0I3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SUNON0pHWnZiblJ6YVhwbGZTTjdhV1lvSkdsdGNHOXlkR0Z1ZEN3Z0lXbHRjRzl5ZEdGdWRDd2diblZzYkNsOU8xeHlYRzRnSUgxY2NseHVmVnh5WEc0aUxBb0pDU0l2TDF4eVhHNHZMeUJIY21Ga2FXVnVkSE1nVFdsNGFXNWNjbHh1THk5Y2NseHVYSEpjYmk4dlhISmNiaTh2SUdkeVlXUnBaVzUwTFdKblhISmNiaTh2SUVkbGJtVnlZWFJsSUdkeVlXUnBaVzUwSUdKaFkydG5jbTkxYm1RZ2FXWWdaM0poWkdsbGJuUWdjM1I1YkdVZ2FYTWdaVzVoWW14bFpDQnBiaUJUWlhSMGFXNW5jMXh5WEc0dkx5QmxiSE5sSUhOdmJHbGtJR0poWTJ0bmNtOTFibVFnYVhNZ1oyVnVaWEpoZEdWa1hISmNiaTh2WEhKY2JpOHZJRkJoY21GdFpYUmxjbk02WEhKY2JpOHZJSHREYjJ4dmNuMGdKR052Ykc5eUlEb2dZMjlzYjNJZ2RYTmxaQ0IwYnlCblpXNWxjbUYwWlNCbmNtRmthV1Z1ZEZ4eVhHNHZMeUI3VW05MFlYUnBiMjU5SUNSaGJtZHNaU0E2SUdGdVoyeGxJR0YwSUhkb2FXTm9JR2R5WVdScFpXNTBJSGRwYkd3Z1ltVWdaMlZ1WlhKaGRHVmtYSEpjYmk4dlhISmNia0J0YVhocGJpQm5jbUZrYVdWdWRDMWlaeWdrWTI5c2IzSXRkbUZzZFdVc0lDUmhibWRzWlNrZ2UxeHlYRzRnSUNSbmNtRmthV1Z1ZERvZ1ozSmhaR2xsYm5Rb0pHTnZiRzl5TFhaaGJIVmxMQ0FrWVc1bmJHVXBPMXh5WEc1Y2NseHVJQ0JBYVdZZ0pHZHlZV1JwWlc1MElDRTlJQ1JqYjJ4dmNpMTJZV3gxWlNCN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQWtaM0poWkdsbGJuUTdYSEpjYmlBZ2ZTQkFaV3h6WlNCN1hISmNiaUFnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa1ozSmhaR2xsYm5RN1hISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNHZMMXh5WEc0dkx5Qm5jbUZrYVdWdWRDMXpkSEpwY0dWa0xXSm5YSEpjYmk4dklFZGxibVZ5WVhSbElITjBjbWx3WldRZ1ozSmhaR2xsYm5RZ1ltRmphMmR5YjNWdVpGeHlYRzR2TDF4eVhHNHZMeUJRWVhKaGJXVjBaWEp6T2x4eVhHNHZMeUI3UTI5c2IzSjlJQ1JqYjJ4dmNpQTZJR052Ykc5eUlIVnpaV1FnZEc4Z1oyVnVaWEpoZEdVZ1ozSmhaR2xsYm5SY2NseHVMeThnZTFKdmRHRjBhVzl1ZlNBa1lXNW5iR1VnT2lCaGJtZHNaU0JoZENCM2FHbGphQ0JuY21Ga2FXVnVkQ0IzYVd4c0lHSmxJR2RsYm1WeVlYUmxaRnh5WEc0dkwxeHlYRzVBYldsNGFXNGdaM0poWkdsbGJuUXRjM1J5YVhCbFpDMWlaeWdrWTI5c2IzSXNJQ1JoYm1kc1pTa2dlMXh5WEc0Z0lDUmpiMnh2Y2kxMGNtRnVjem9nY21kaVlTZ2tZMjlzYjNJc0lDNHhOU2s3WEhKY2JpQWdZbUZqYTJkeWIzVnVaRG9nYkdsdVpXRnlMV2R5WVdScFpXNTBLQ1JoYm1kc1pTd2dKR052Ykc5eUxYUnlZVzV6SURJMUpTd2dkSEpoYm5Od1lYSmxiblFnTWpVbExDQjBjbUZ1YzNCaGNtVnVkQ0ExTUNVc0lDUmpiMnh2Y2kxMGNtRnVjeUExTUNVc0lDUmpiMnh2Y2kxMGNtRnVjeUEzTlNVc0lIUnlZVzV6Y0dGeVpXNTBJRGMxSlN3Z2RISmhibk53WVhKbGJuUXBPMXh5WEc1OVhISmNiaUlzQ2drSklpOHZYSEpjYmk4dklFSnlaV0ZyY0c5cGJuUnpJRTFwZUdsdWMxeHlYRzR2TDF4eVhHNWNjbHh1THk5Y2NseHVMeThnYldWa2FXRXRZbkpsWVd0d2IybHVkQzFoWW05MlpWeHlYRzR2THlCSFpXNWxjbUYwWlNCaElHMWxaR2xoSUhGMVpYSjVJR1p2Y2lCbmFYWmxiaUJpY21WaGEzQnZhVzUwSUdGdVpDQmhZbTkyWlNCcGRGeHlYRzR2THlCT2J5QnRaV1JwWVNCeGRXVnllU0JtYjNJZ2RHaGxJSE50WVd4c1pYTjBJR0p5WldGcmNHOXBiblFnWVhNZ2FYUWdaRzlsYzI0bmRDQnlaWEYxYVhKbGN5QnRaV1JwWVNCeGRXVnllVnh5WEc0dkwxeHlYRzR2THlCUVlYSmhiV1YwWlhKek9seHlYRzR2THlCN1UzUnlhVzVuZlNBa1luSmxZV3R3YjJsdWRDQXRJRzVoYldVZ2IyWWdkR2hsSUdKeVpXRnJjRzlwYm5SY2NseHVMeThnVzI5d2RHbHZibUZzWFNCN1RXRndmU0FrWW5KbFlXdHdiMmx1ZEhNZ0xTQmljbVZoYTNCdmFXNTBjeUJ0WVhCY2NseHVMeTljY2x4dUx5OGdSWGhoYlhCc1pTQnZaaUIxYzJVNlhISmNiaTh2SUNSaWNtVmhhM0J2YVc1MGN6b2dLRzUxYkd3NklEQXNJSE50T2lBMU56WndlQ3dnYldRNklEYzJPSEI0TENCc1p6b2dPVGt5Y0hnc0lIaHNPaUF4TWpBd2NIZ3BPMXh5WEc0dkx5QnRaV1JwWVMxaWNtVmhhM0J2YVc1MExXRmliM1psS0hOdEtYdGNjbHh1THk4Z0lDQWdRR1JsWW5WbklDZFVhR2x6SUcxbFpHbGhJSEYxWlhKNUlIZHZjbXR6SUdsdUlITnRJR0Z1WkNCaFltOTJaU0JwZENjN1hISmNiaTh2SUgxY2NseHVMeTljY2x4dVFHMXBlR2x1SUcxbFpHbGhMV0p5WldGcmNHOXBiblF0WVdKdmRtVW9KR0p5WldGcmNHOXBiblFzSUNSaWNtVmhhM0J2YVc1MGN6b2dKR0p5WldGcmNHOXBiblJ6S1NCN1hISmNiaUFnSkcxcGJqb2dZbkpsWVd0d2IybHVkQzFzYjNkbGNpZ2tZbkpsWVd0d2IybHVkQ3dnSkdKeVpXRnJjRzlwYm5SektUdGNjbHh1SUNCQWFXWWdKRzFwYmlCN1hISmNiaUFnSUNCQWJXVmthV0VnS0cxcGJpMTNhV1IwYURvZ0pHMXBiaWtnZTF4eVhHNGdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5SUVCbGJITmxJSHRjY2x4dUlDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1THk5Y2NseHVMeThnYldWa2FXRXRZbkpsWVd0d2IybHVkQzFpWld4dmQxeHlYRzR2THlCSFpXNWxjbUYwWlNCaElHMWxaR2xoSUhGMVpYSjVJR1p2Y2lCbmFYWmxiaUJpY21WaGEzQnZhVzUwSUdGdVpDQmlaV3h2ZHlCcGRGeHlYRzR2THlCT2J5QnRaV1JwWVNCeGRXVnllU0JtYjNJZ2RHaGxJR3hoY21kbGMzUWdZbkpsWVd0d2IybHVkQ0JoY3lCcGRDQmtiMlZ6YmlkMElISmxjWFZwY21WeklHMWxaR2xoSUhGMVpYSjVYSEpjYmk4dlhISmNiaTh2SUZCaGNtRnRaWFJsY25NNlhISmNiaTh2SUh0VGRISnBibWQ5SUNSaWNtVmhhM0J2YVc1MElDMGdibUZ0WlNCdlppQjBhR1VnWW5KbFlXdHdiMmx1ZEZ4eVhHNHZMeUJiYjNCMGFXOXVZV3hkSUh0TllYQjlJQ1JpY21WaGEzQnZhVzUwY3lBdElHSnlaV0ZyY0c5cGJuUnpJRzFoY0Z4eVhHNHZMMXh5WEc0dkx5QkZlR0Z0Y0d4bElHOW1JSFZ6WlRwY2NseHVMeThnSkdKeVpXRnJjRzlwYm5Sek9pQW9iblZzYkRvZ01Dd2djMjA2SURVM05uQjRMQ0J0WkRvZ056WTRjSGdzSUd4bk9pQTVPVEp3ZUN3Z2VHdzZJREV5TURCd2VDazdYSEpjYmk4dklHMWxaR2xoTFdKeVpXRnJjRzlwYm5RdFltVnNiM2NvYldRcGUxeHlYRzR2THlBZ0lDQkFaR1ZpZFdjZ0oxUm9hWE1nYldWa2FXRWdjWFZsY25rZ2QyOXlhM01nYVc0Z2JXUWdZVzVrSUdKbGJHOTNJR2wwSnp0Y2NseHVMeThnZlZ4eVhHNHZMMXh5WEc1QWJXbDRhVzRnYldWa2FXRXRZbkpsWVd0d2IybHVkQzFpWld4dmR5Z2tZbkpsWVd0d2IybHVkQ3dnSkdKeVpXRnJjRzlwYm5Sek9pQWtZbkpsWVd0d2IybHVkSE1wSUh0Y2NseHVJQ0FrYldGNE9pQmljbVZoYTNCdmFXNTBMV3h2ZDJWeUtDUmljbVZoYTNCdmFXNTBMQ0FrWW5KbFlXdHdiMmx1ZEhNcE8xeHlYRzRnSUVCcFppQWtiV0Y0SUh0Y2NseHVJQ0FnSUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBa2JXRjRLU0I3WEhKY2JpQWdJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDBnUUdWc2MyVWdlMXh5WEc0Z0lDQWdRR052Ym5SbGJuUTdYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJ0WldScFlTMWljbVZoYTNCdmFXNTBMV0psZEhkbFpXNWNjbHh1THk4Z1IyVnVaWEpoZEdVZ1lTQnRaV1JwWVNCeGRXVnllU0JtYjNJZ1oybDJaVzRnYldsdWFXMTFiU0JpY21WaGEzQnZhVzUwSUdGdVpDQnRZWGhwYlhWdElHSnlaV0ZyY0c5cGJuUWdiMjVzZVZ4eVhHNHZMMXh5WEc0dkx5QlFZWEpoYldWMFpYSnpPbHh5WEc0dkx5QjdVM1J5YVc1bmZTQWtiV2x1YVcxMWJTQXRJRzVoYldVZ2IyWWdkR2hsSUcxcGJtbHRkVzBnWW5KbFlXdHdiMmx1ZEZ4eVhHNHZMeUI3VTNSeWFXNW5mU0FrYldGNGFXMTFiU0F0SUc1aGJXVWdiMllnZEdobElHMWhlR2x0ZFcwZ1luSmxZV3R3YjJsdWRGeHlYRzR2THlCYmIzQjBhVzl1WVd4ZElIdE5ZWEI5SUNSaWNtVmhhM0J2YVc1MGN5QXRJR0p5WldGcmNHOXBiblJ6SUcxaGNGeHlYRzR2TDF4eVhHNHZMeUJGZUdGdGNHeGxJRzltSUhWelpUcGNjbHh1THk4Z0pHSnlaV0ZyY0c5cGJuUnpPaUFvYm5Wc2JEb2dNQ3dnYzIwNklEVTNObkI0TENCdFpEb2dOelk0Y0hnc0lHeG5PaUE1T1RKd2VDd2dlR3c2SURFeU1EQndlQ2s3WEhKY2JpOHZJRzFsWkdsaExXSnlaV0ZyY0c5cGJuUXRZbVYwZDJWbGJpaHRaQ3dnYkdjcGUxeHlYRzR2THlBZ0lDQkFaR1ZpZFdjZ0oxUm9hWE1nYldWa2FXRWdjWFZsY25rZ2QyOXlhM01nYVc0Z1ltVjBkMlZsYmlCdFpDQmhibVFnYkdjZ2IyNXNlU2M3WEhKY2JpOHZJSDFjY2x4dUx5OWNjbHh1UUcxcGVHbHVJRzFsWkdsaExXSnlaV0ZyY0c5cGJuUXRZbVYwZDJWbGJpZ2tiV2x1YVcxMWJTd2dKRzFoZUdsdGRXMHNJQ1JpY21WaGEzQnZhVzUwY3pvZ0pHSnlaV0ZyY0c5cGJuUnpLU0I3WEhKY2JpQWdKRzFwYmpvZ1luSmxZV3R3YjJsdWRDMXNiM2RsY2lna2JXbHVhVzExYlN3Z0pHSnlaV0ZyY0c5cGJuUnpLVHRjY2x4dUlDQWtiV0Y0T2lCaWNtVmhhM0J2YVc1MExYVndjR1Z5S0NSdFlYaHBiWFZ0TENBa1luSmxZV3R3YjJsdWRITXBPMXh5WEc1Y2NseHVJQ0JBYVdZZ0pHMXBiaUFoUFNCdWRXeHNJR0Z1WkNBa2JXRjRJQ0U5SUc1MWJHd2dlMXh5WEc0Z0lDQWdRRzFsWkdsaElDaHRhVzR0ZDJsa2RHZzZJQ1J0YVc0cElHRnVaQ0FvYldGNExYZHBaSFJvT2lBa2JXRjRLU0I3WEhKY2JpQWdJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDBnUUdWc2MyVWdhV1lnSkcxaGVDQTlQU0J1ZFd4c0lIdGNjbHh1SUNBZ0lFQnBibU5zZFdSbElHMWxaR2xoTFdKeVpXRnJjRzlwYm5RdFlXSnZkbVVvSkcxcGJtbHRkVzBzSUNSaWNtVmhhM0J2YVc1MEtTQjdYSEpjYmlBZ0lDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMGdRR1ZzYzJVZ2FXWWdKRzFwYmlBOVBTQnVkV3hzSUh0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUcxbFpHbGhMV0p5WldGcmNHOXBiblF0WW1Wc2IzY29KRzFoZUdsdGRXMHNJQ1JpY21WaGEzQnZhVzUwS1NCN1hISmNiaUFnSUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVMeTljY2x4dUx5OGdiV1ZrYVdFdFluSmxZV3R3YjJsdWRDMXZibXg1WEhKY2JpOHZJRWRsYm1WeVlYUmxJR0VnYldWa2FXRWdjWFZsY25rZ2IyNXNlU0JtYjNJZ1oybDJaVzRnWW5KbFlXdHdiMmx1ZEZ4eVhHNHZMeUJPYnlCdFpXUnBZU0J4ZFdWeWVTQm1iM0lnZEdobElITnRZV3hzWlhOMElHRnVaQ0JzWVhKblpYTjBJR0p5WldGcmNHOXBiblFnWVhNZ2FYUWdaRzlsYzI0bmRDQnlaWEYxYVhKbGN5QnRaV1JwWVNCeGRXVnllVnh5WEc0dkwxeHlYRzR2THlCUVlYSmhiV1YwWlhKek9seHlYRzR2THlCN1UzUnlhVzVuZlNBa1luSmxZV3R3YjJsdWRDQXRJRzVoYldVZ2IyWWdkR2hsSUdKeVpXRnJjRzlwYm5SY2NseHVMeThnVzI5d2RHbHZibUZzWFNCN1RXRndmU0FrWW5KbFlXdHdiMmx1ZEhNZ0xTQmljbVZoYTNCdmFXNTBjeUJ0WVhCY2NseHVMeTljY2x4dUx5OGdSWGhoYlhCc1pTQnZaaUIxYzJVNlhISmNiaTh2SUNSaWNtVmhhM0J2YVc1MGN6b2dLRzUxYkd3NklEQXNJSE50T2lBMU56WndlQ3dnYldRNklEYzJPSEI0TENCc1p6b2dPVGt5Y0hnc0lIaHNPaUF4TWpBd2NIZ3BPMXh5WEc0dkx5QnRaV1JwWVMxaWNtVmhhM0J2YVc1MExXOXViSGtvYkdjcGUxeHlYRzR2THlBZ0lDQkFaR1ZpZFdjZ0oxUm9hWE1nYldWa2FXRWdjWFZsY25rZ2QyOXlhM01nYjI1c2VTQnBiaUJzWnljN1hISmNiaTh2SUgxY2NseHVMeTljY2x4dVFHMXBlR2x1SUcxbFpHbGhMV0p5WldGcmNHOXBiblF0YjI1c2VTZ2tZbkpsWVd0d2IybHVkQ3dnSkdKeVpXRnJjRzlwYm5Sek9pQWtZbkpsWVd0d2IybHVkSE1wSUh0Y2NseHVJQ0FrYldsdU9pQmljbVZoYTNCdmFXNTBMV3h2ZDJWeUtDUmljbVZoYTNCdmFXNTBMQ0FrWW5KbFlXdHdiMmx1ZEhNcE8xeHlYRzRnSUNSdFlYZzZJR0p5WldGcmNHOXBiblF0ZFhCd1pYSW9KR0p5WldGcmNHOXBiblFzSUNSaWNtVmhhM0J2YVc1MGN5azdYSEpjYmx4eVhHNGdJRUJwWmlBa2JXbHVJQ0U5SUc1MWJHd2dZVzVrSUNSdFlYZ2dJVDBnYm5Wc2JDQjdYSEpjYmlBZ0lDQkFiV1ZrYVdFZ0tHMXBiaTEzYVdSMGFEb2dKRzFwYmlrZ1lXNWtJQ2h0WVhndGQybGtkR2c2SUNSdFlYZ3BJSHRjY2x4dUlDQWdJQ0FnUUdOdmJuUmxiblE3WEhKY2JpQWdJQ0I5WEhKY2JpQWdmU0JBWld4elpTQnBaaUFrYldGNElEMDlJRzUxYkd3Z2UxeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ2JXVmthV0V0WW5KbFlXdHdiMmx1ZEMxaFltOTJaU2drWW5KbFlXdHdiMmx1ZEN3Z0pHSnlaV0ZyY0c5cGJuUnpLU0I3WEhKY2JpQWdJQ0FnSUVCamIyNTBaVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDBnUUdWc2MyVWdhV1lnSkcxcGJpQTlQU0J1ZFd4c0lIdGNjbHh1SUNBZ0lFQnBibU5zZFdSbElHMWxaR2xoTFdKeVpXRnJjRzlwYm5RdFltVnNiM2NvSkdKeVpXRnJjRzlwYm5Rc0lDUmljbVZoYTNCdmFXNTBjeWtnZTF4eVhHNGdJQ0FnSUNCQVkyOXVkR1Z1ZER0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JuMWNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdSMlZ1WlhKaGRHVWdVM1I1YkdWY2NseHVMeTljY2x4dVhISmNiaTh2WEhKY2JpOHZJR2RsYm1WeVlYUmxMWE4wZVd4bFhISmNiaTh2SUhWelpXUWdkRzhnY1hWcFkydHNlU0JqY21WaGRHVWdjM1I1YkdVZ1ltRnpaV1FnYjI0Z2IzQjBhVzl1Y3lCcGJuTnBaR1VnSkdOdmJtWnBaeTVjY2x4dUx5OWNjbHh1THk4Z1VHRnlZVzFsZEdWeWN6cGNjbHh1THk4Z2UwMWhjSDBnSkdOdmJtWnBaeUF0SUUxaGNDQmpiMjUwWVdsdWFXNW5JRzl3ZEdsdmJuTWdkRzhnWjJWdVpYSmhkR1VnYzNSNWJHVWdabkp2YlZ4eVhHNHZMMXh5WEc0dkx5QlBjSFJwYjI1ek9seHlYRzR2THlCVWFHVWdKR052Ym1acFp5QnRZWEFnWTI5dWRHRnBibk1nWm05c2JHOTNhVzVuSUc5d2RHbHZibk02WEhKY2JpOHZYSEpjYmk4dklIdFRkSEpwYm1jc1RHbHpkQ3hOWVhCOUlHQndjbTl3WlhKMGFXVnpZRHBjY2x4dUx5OGdjSEp2Y0dWeWRHbGxjeUIwYnlCblpXNWxjbUYwWlNCemRIbHNaU0JtYjNJdUlGZG9aVzRnYzI5dFpTQndjbTl3WlhKMGVTQnpkWEJ3YkdsbFpDQmhjeUJOWVhBZ2FYUnpJSFpoYkhWbElISmxiV0ZwYm5NZ1kyOXVjM1JoYm5RZ2FXNGdZV3hzSUhOMGVXeGxjMXh5WEc0dkx5QW9TMlY1Y3lrZ2NISnZjR1Z5ZEhrZ2JtRnRaUzVjY2x4dUx5OGdLSFpoYkhWbGN5a2djSEp2Y0dWeWRIa2dkbUZzZFdVdVhISmNiaTh2WEhKY2JpOHZJSHRUZEhKcGJtY3NUR2x6ZEN4TllYQjlJR0IyWVd4MVpYTmdPbHh5WEc0dkx5QW9TMlY1Y3lrZ1lYSmxJSFZ6WldRZ2FXNGdZMjl0WW1sdVlYUnBiMjRnZDJsMGFDQnpaV3hsWTNSdmNpQnZjSFJwYjI0Z2RHOGdaMlZ1WlhKaGRHVWdkVzVwY1hWbElITmxiR1ZqZEc5eUxpQnVkV3hzSUd0bGVYTWdZMkZ1SUdKbElIVnpaV1FnZEc4Z1lYWnZhV1FnZFc1cGNYVmxJSE5sYkdWamRHOXlMbHh5WEc0dkx5QW9kbUZzZFdWektTQjBieUJpWlNCVmMyVmtJR1p2Y2lCd2NtOXdaWEowYVdWekxseHlYRzR2TDF4eVhHNHZMeUI3VTNSeWFXNW5mU0JnYzJWc1pXTjBiM0pnT2x4eVhHNHZMeUJ6Wld4bFkzUnZjaUJtYjNJZ1oyVnVaWEpoZEdWa0lITjBlV3hsTGlCRmJYQjBlU0J6ZEhKcGJtY2dhVzRnWTI5dFltbHVZWFJwYjI0Z2QybDBhQ0JnWkdsellXSnNaUzF3Y21WbWFYZ3RkbUZzZFdWekxXdGxlWE5nSUc5d2RHbHZiaUJqWVc0Z1ltVWdkRzhnWjJWdVpYSmhkR1VnYzJWc1pXTjBiM0pjY2x4dUx5OGdkRzkwWVd4c2VTQmlZWE5sWkNCdmJpQjJZV3gxWlhNdVhISmNiaTh2WEhKY2JpOHZJRnR2Y0hScGIyNWhiRjBnZTFOMGNtbHVaeXhNYVhOMExFMWhjSDBnWUdsdVptbDRaWE5nT2x4eVhHNHZMeUFvZG1Gc2RXVnpLU0IxYzJWa0lIUnZJSE4xWm1acGVDQndjbTl3WlhKMGFXVnpYSEpjYmk4dklDaHJaWGx6S1NCMWMyVmtJSFJ2SUdsdVptbDRJSE5sYkdWamRHOXlJRzl3ZEdsdmJpQmhibVFnZG1Gc2RXVnpJRzl3ZEdsdmJseHlYRzR2TDF4eVhHNHZMeUJiYjNCMGFXOXVZV3hkSUh0Q2IyOXNaV0Z1ZlNCZ2NtVnpjRzl1YzJsMlpXQTZYSEpjYmk4dklHZGxibVZ5WVhSbElISmxjM0J2Ym5OcGRtVWdjM1I1YkdWeklHbHVjMmxrWlNCdFpXUnBZU0J4ZFdWeWVTNWNjbHh1THk5Y2NseHVMeThnVzI5d2RHbHZibUZzWFNCN1FtOXZiR1ZoYm4wZ1lHVnVZV0pzWlMxcGJYQnZjblJoYm5RdGRtRnNkV1Z6WURwY2NseHVMeThnVlhObElDRnBiWEJ2Y25SaGJuUWdabTl5SUhaaGJIVmxjeTVjY2x4dUx5OWNjbHh1THk4Z1cyOXdkR2x2Ym1Gc1hTQjdRbTl2YkdWaGJuMGdZR1JwYzJGaWJHVXRjSEpsWm1sNExYWmhiSFZsY3kxclpYbHpZRHBjY2x4dUx5OGdaR2x6WVdKc1pTQndjbVZtYVhocGJtY2dhMlY1Y3lCcGJuTnBaR1VnZG1Gc2RXVnpJRzl3ZEdsdmJuTXVYSEpjYmk4dklFMXZjM1JzZVNCMWMyVmtJSFJ2SUdScGMyRmliR1VnY0hKbFptbDRhVzVuSUhkb1pXNGdiblZzYkNCelpXeGxZM1J2Y2lCdmNIUnBiMjRnYVhNZ2RYTmxaQ0JpWldOaGRYTmxJSGRwZEdodmRYUWdkR2hwY3lCdmNIUnBiMjV6SUhKbGMzVnNkQ0J6Wld4bFkzUnZjaUJzWldGa2N5QjBiMXh5WEc0dkx5QmtZWE5vSUdBdFlDQnBiaUJ6Wld4bFkzUnZjaUJ6ZEdGeWRGeHlYRzR2TDF4eVhHNHZMeUJiYjNCMGFXOXVZV3hkSUh0Q2IyOXNaV0Z1ZlNCZ1pHbHpZV0pzWlMxd2NtVm1hWGd0YVc1bWFYaGxjeTFyWlhsellEcGNjbHh1THk4Z1pHbHpZV0pzWlNCd2NtVm1hWGhwYm1jZ2EyVjVjeUJwYm5OcFpHVWdhVzVtYVhobGN5QnZjSFJwYjI1ekxseHlYRzR2THlCTmIzTjBiSGtnZFhObFpDQjBieUJrYVhOaFlteGxJSEJ5WldacGVHbHVaeUIzYUdWdUlHbHVabWw0WlhNZ1lYSmxJRzFsY21kbFpDQjNhWFJvSUhObGJHVmpkRzl5SUdVdVp5QnRlQzBxTENCM2FHVnlaU0J0SUdseklITmxiR1ZqZEc5eUlIZ2dhWE1nYVc1bWFYZ2dZVzVrSUMwcUlHbHpJSFpoYkhWbGMxeHlYRzR2TDF4eVhHNHZMeUJiYjNCMGFXOXVZV3hkSUh0Q2IyOXNaV0Z1ZlNCZ1pHbHpZV0pzWlMxd2NtVm1hWGd0YVc1bWFYaGxjeTEyWVd4MVpYTmdPbHh5WEc0dkx5QmthWE5oWW14bElIQnlaV1pwZUdsdVp5QjJZV3gxWlhNZ2FXNXphV1JsSUdsdVptbDRaWE1nYjNCMGFXOXVjeTVjY2x4dUx5OGdUVzl6ZEd4NUlIVnpaV1FnZEc4Z1pHbHpZV0pzWlNCd2NtVm1hWGhwYm1jZ2QyaGxiaUJ2Ym14NUlHbHVabWw0WlhNZ2IzQjBhVzl1SUhaaGJIVmxjeUJoY21VZ2RYTmxaQ0JoY3lCaElIQnliM0JsY25SNUlIZHBkR2dnWlcxd2RIa2djSEp2Y0dWeWRHbGxjeUJ2Y0hScGIyNWNjbHh1THk5Y2NseHVMeTljY2x4dUx5OGdSWGhoYlhCc1pUcGNjbHh1THk5Y2NseHVMeThnSkdOdmJtWnBaem9nS0Z4eVhHNHZMeUFnSUhCeWIzQmxjblJwWlhNNklHSnZlQzF6YUdGa2IzY3NYSEpjYmk4dklDQWdjMlZzWldOMGIzSTZJSE5vWVdSdmR5eGNjbHh1THk4Z0lDQjJZV3gxWlhNNklDaGNjbHh1THk4Z0lDQWdJSE50T2lBeGNIZ2dNWEI0SUROd2VDQXdJSEpuWW1Fb0pHSnNZV05yTENBdU1EYzFLU3hjY2x4dUx5OGdJQ0FnSUc1MWJHdzZJREZ3ZUNBMGNIZ2dObkI0SURBZ2NtZGlZU2drWW14aFkyc3NJQzR4TlNrc1hISmNiaTh2SUNBZ0lDQnNaem9nTW5CNElERXdjSGdnTVRWd2VDQXdJSEpuWW1Fb0pHSnNZV05yTENBdU1UYzFLU3hjY2x4dUx5OGdJQ0FnSUhKdmRXNWtPaUF3SURWd2VDQXhOWEI0SUhKblltRW9KR0pzWVdOckxDQXVNVFVwTEZ4eVhHNHZMeUFnSUNBZ2JtOXVaVG9nYm05dVpWeHlYRzR2THlBZ0lDa3NYSEpjYmk4dklDQWdaVzVoWW14bExXbHRjRzl5ZEdGdWRDMTJZV3gxWlhNNklIUnlkV1ZjY2x4dUx5OGdLVHRjY2x4dUx5OWNjbHh1THk4Z1FHbHVZMngxWkdVZ1oyVnVaWEpoZEdVdGMzUjViR1VvSkdOdmJtWnBaeWs3WEhKY2JpOHZYSEpjYmk4dklFOTFkSEIxZERwY2NseHVMeTljY2x4dUx5OGdMbk5vWVdSdmR5MXpiU0I3SUdKdmVDMXphR0ZrYjNjNklERndlQ0F4Y0hnZ00zQjRJREFnY21kaVlTZ3dMQ0F3TENBd0xDQXVNRGMxS1NBaGFXMXdiM0owWVc1ME95QjlYSEpjYmk4dklDNXphR0ZrYjNjZ2V5QmliM2d0YzJoaFpHOTNPaUF4Y0hnZ05IQjRJRFp3ZUNBd0lISm5ZbUVvTUN3Z01Dd2dNQ3dnTGpFMUtTQWhhVzF3YjNKMFlXNTBPeUI5WEhKY2JpOHZJQzV6YUdGa2IzY3RiR2NnZXlCaWIzZ3RjMmhoWkc5M09pQXljSGdnTVRCd2VDQXhOWEI0SURBZ2NtZGlZU2d3TENBd0xDQXdMQ0F1TVRjMUtTQWhhVzF3YjNKMFlXNTBPeUI5WEhKY2JpOHZJQzV6YUdGa2IzY3RjbTkxYm1RZ2V5QmliM2d0YzJoaFpHOTNPaUF3SURWd2VDQXhOWEI0SUhKblltRW9NQ3dnTUN3Z01Dd2dMakUxS1NBaGFXMXdiM0owWVc1ME95QjlYSEpjYmk4dklDNXphR0ZrYjNjdGJtOXVaU0I3SUdKdmVDMXphR0ZrYjNjNklHNXZibVVnSVdsdGNHOXlkR0Z1ZERzZ2ZWeHlYRzR2TDF4eVhHNUFiV2w0YVc0Z1oyVnVaWEpoZEdVdGMzUjViR1VvSkdOdmJtWnBaeWtnZTF4eVhHNGdJQ1J3Y205d1pYSjBhV1Z6T2lCdFlYQXRaMlYwS0NSamIyNW1hV2NzSUZ3aWNISnZjR1Z5ZEdsbGMxd2lLVHRjY2x4dUlDQWtkbUZzZFdWek9pQjBieTF0WVhBb2JXRndMV2RsZENna1kyOXVabWxuTENCY0luWmhiSFZsYzF3aUtTazdYSEpjYmlBZ0pITmxiR1ZqZEc5eU9pQnRZWEF0WjJWMEtDUmpiMjVtYVdjc0lGd2ljMlZzWldOMGIzSmNJaWs3WEhKY2JpQWdKR2x1Wm1sNFpYTTZJRzFoY0Mxb1lYTXRhMlY1S0NSamIyNW1hV2NzSUZ3aWFXNW1hWGhsYzF3aUtTQmhibVFnYldGd0xXZGxkQ2drWTI5dVptbG5MQ0JjSW1sdVptbDRaWE5jSWlrN1hISmNiaUFnSkhKbGMzQnZibk5wZG1VNklHMWhjQzFvWVhNdGEyVjVLQ1JqYjI1bWFXY3NJSEpsYzNCdmJuTnBkbVVwSUdGdVpDQnRZWEF0WjJWMEtDUmpiMjVtYVdjc0lISmxjM0J2Ym5OcGRtVXBJRDA5SUhSeWRXVTdYSEpjYmlBZ0pHVnVZV0pzWlMxcGJYQnZjblJoYm5RdGRtRnNkV1Z6T2lCdFlYQXRhR0Z6TFd0bGVTZ2tZMjl1Wm1sbkxDQmNJbVZ1WVdKc1pTMXBiWEJ2Y25SaGJuUXRkbUZzZFdWelhDSXBJR0Z1WkNCdFlYQXRaMlYwS0NSamIyNW1hV2NzSUZ3aVpXNWhZbXhsTFdsdGNHOXlkR0Z1ZEMxMllXeDFaWE5jSWlrN1hISmNiaUFnSkdScGMyRmliR1V0Y0hKbFptbDRMWFpoYkhWbGN5MXJaWGx6T2lCdFlYQXRhR0Z6TFd0bGVTZ2tZMjl1Wm1sbkxDQmNJbVJwYzJGaWJHVXRjSEpsWm1sNExYWmhiSFZsY3kxclpYbHpYQ0lwSUdGdVpDQnRZWEF0WjJWMEtDUmpiMjVtYVdjc0lGd2laR2x6WVdKc1pTMXdjbVZtYVhndGRtRnNkV1Z6TFd0bGVYTmNJaWs3WEhKY2JpQWdKR1JwYzJGaWJHVXRjSEpsWm1sNExXbHVabWw0WlhNdGEyVjVjem9nYldGd0xXaGhjeTFyWlhrb0pHTnZibVpwWnl3Z1hDSmthWE5oWW14bExYQnlaV1pwZUMxcGJtWnBlR1Z6TFd0bGVYTmNJaWtnWVc1a0lHMWhjQzFuWlhRb0pHTnZibVpwWnl3Z1hDSmthWE5oWW14bExYQnlaV1pwZUMxcGJtWnBlR1Z6TFd0bGVYTmNJaWs3WEhKY2JpQWdKR1JwYzJGaWJHVXRjSEpsWm1sNExXbHVabWw0WlhNdGRtRnNkV1Z6T2lCdFlYQXRhR0Z6TFd0bGVTZ2tZMjl1Wm1sbkxDQmNJbVJwYzJGaWJHVXRjSEpsWm1sNExXbHVabWw0WlhNdGRtRnNkV1Z6WENJcElHRnVaQ0J0WVhBdFoyVjBLQ1JqYjI1bWFXY3NJRndpWkdsellXSnNaUzF3Y21WbWFYZ3RhVzVtYVhobGN5MTJZV3gxWlhOY0lpazdYSEpjYmx4eVhHNGdJRUJsWVdOb0lDUmljbVZoYTNCdmFXNTBJR2x1SUcxaGNDMXJaWGx6S0NCcFppZ2tjbVZ6Y0c5dWMybDJaU3dnSkdKeVpXRnJjRzlwYm5SekxDQW9iblZzYkRvZ2JuVnNiQ2twSUNrZ2UxeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ2JXVmthV0V0WW5KbFlXdHdiMmx1ZEMxaFltOTJaU2drWW5KbFlXdHdiMmx1ZENrZ2UxeHlYRzRnSUNBZ0lDQWtZbkpsWVd0d2IybHVkQzF6ZFdabWFYZzZJSEJ5WldacGVDaHVZVzFsTFdKeVpXRnJjRzlwYm5Rb0pHSnlaV0ZyY0c5cGJuUXBMQ0JjSWx4Y1hGeGNJaXNnSkdKeVpXRnJjRzlwYm5SekxYQnlaV1pwZUNrN1hISmNiaUFnSUNBZ0lDUnBibVpwZUdWek9pQjBieTF0WVhBb2FXWW9KR2x1Wm1sNFpYTXNJQ1JwYm1acGVHVnpMQ0J1ZFd4c0tTazdYSEpjYmlBZ0lDQWdJRUJsWVdOb0lDUnBibVpwZUMxclpYa3NJQ1JwYm1acGVDMTJZV3gxWlNCcGJpQWthVzVtYVhobGN5QjdYSEpjYmlBZ0lDQWdJQ0FnUUdsbUlHNXZkQ0FrWkdsellXSnNaUzF3Y21WbWFYZ3RhVzVtYVhobGN5MXJaWGx6SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ1JwYm1acGVDMXJaWGs2SUhCeVpXWnBlQ2drYVc1bWFYZ3RhMlY1TENCY0lpMWNJaWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNCQWFXWWdibTkwSUNSa2FYTmhZbXhsTFhCeVpXWnBlQzFwYm1acGVHVnpMWFpoYkhWbGN5QjdYSEpjYmlBZ0lDQWdJQ0FnSUNBa2FXNW1hWGd0ZG1Gc2RXVTZJSEJ5WldacGVDZ2thVzVtYVhndGRtRnNkV1VzSUZ3aUxWd2lLVHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUVCbFlXTm9JQ1JyWlhrc0lDUjJZV3gxWlNCcGJpQWtkbUZzZFdWeklIdGNjbHh1SUNBZ0lDQWdJQ0FnSUVCcFppQnViM1FnSkdScGMyRmliR1V0Y0hKbFptbDRMWFpoYkhWbGN5MXJaWGx6SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSkd0bGVUb2djSEpsWm1sNEtDUnJaWGtzSUZ3aUxWd2lLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQXVJM3NrYzJWc1pXTjBiM0o5STNza2FXNW1hWGd0YTJWNWZTTjdKR3RsZVgwamV5UmljbVZoYTNCdmFXNTBMWE4xWm1acGVIMGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQkFaV0ZqYUNBa2NISnZjR1Z5ZEhrZ2FXNGdKSEJ5YjNCbGNuUnBaWE1nZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUVCcFppQjBlWEJsTFc5bUtDUndjbTl3WlhKMGVTa2dJVDBnYzNSeWFXNW5JR0Z1WkNCMGVYQmxMVzltS0NSd2NtOXdaWEowZVNrZ0lUMGdiV0Z3SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lFQmxjbkp2Y2lCY0lsUm9aU0FrY0hKdmNHVnlkSGs2WUNON0pIQnliM0JsY25SNWZXQWdhVzV6YVdSbElDUndjbTl3WlhKMGFXVnpPaUJnSTNza2NISnZjR1Z5ZEdsbGMzMWdJR1p2Y2lBa2MyVnNaV04wYjNJNklHQWpleVJ6Wld4bFkzUnZjbjFnSUdseklHOW1JR2x1WTI5eWNtVmpkQ0IwZVhCbE9pQmdJM3QwZVhCbExXOW1LQ1J3Y205d1pYSjBlU2w5WUM0Z1ZIbHdaU0J2WmlCZ2MzUnlhVzVuWUNCdmNpQmdiV0Z3WUNCcGN5QnlaWEYxYVhKbFpDRmNJanRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDUmxibUZpYkdVdGFXMXdiM0owWVc1MExYWmhiSFZsY3pvZ2FXWW9KR1Z1WVdKc1pTMXBiWEJ2Y25SaGJuUXRkbUZzZFdWekxDQWhhVzF3YjNKMFlXNTBMQ0J1ZFd4c0tUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnUUdsbUlIUjVjR1V0YjJZb0pIQnliM0JsY25SNUtTQTlQU0J6ZEhKcGJtY2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSTNza2NISnZjR1Z5ZEhsOUkzc2thVzVtYVhndGRtRnNkV1Y5T2lBa2RtRnNkV1VnSkdWdVlXSnNaUzFwYlhCdmNuUmhiblF0ZG1Gc2RXVnpPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJSDBnUUdWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnUUdWaFkyZ2dKR3RsZVN3Z0pIWmhiSFZsSUdsdUlDUndjbTl3WlhKMGVTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNON0pHdGxlWDBqZXlScGJtWnBlQzEyWVd4MVpYMDZJQ1IyWVd4MVpTQWtaVzVoWW14bExXbHRjRzl5ZEdGdWRDMTJZV3gxWlhNN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc1OVhISmNiaUlzQ2drSklpOHZJSE4wZVd4bGJHbHVkQzFrYVhOaFlteGxJSE5sYkdWamRHOXlMWEJ6WlhWa2J5MWpiR0Z6Y3kxaWJHRmphMnhwYzNSY2NseHVMeTljY2x4dUx5OGdVM1JoZEdWelhISmNiaTh2WEhKY2JpOHZJRlJvWlhObElHMXBlR2x1Y3lCaGNtVWdkWE5sWkNCbWIzSWdkbUZ5YVc5MWN5QmxiR1Z0Wlc1MGN5QnpkR0YwWlhNdVhISmNiaTh2SUZSb1pYTmxJRzFwZUdsdWN5QmhiR3h2ZHlCMWN5QjBieUJ4ZFdsamEyeDVJRzF2WkdsbWVTQmphR0Z1WjJWekxseHlYRzVjY2x4dUx5OGdRV04wYVhabFhISmNiaTh2SUVkbGJtVnlZWFJsSUdGamRHbDJaU0J6ZEdGMFpWeHlYRzR2TDF4eVhHNHZMeUJRWVhKaGJXVjBaWEk2WEhKY2JpOHZJRnR2Y0hScGIyNWhiRjBnZTB4cGMzUjlJQ1JsZUhSeVlTMXpaV3hsWTNSdmNuTTZJR3hwYzNRZ2IyWWdjMlZzWldOMGIzSnpJR0ZzYjI1bklIZHBkR2dnWVdOMGFYWmxJSE4wWVhSbFhISmNia0J0YVhocGJpQmhZM1JwZG1Vb0pHVjRkSEpoTFhObGJHVmpkRzl5Y3k0dUxpa2dlMXh5WEc0Z0lDUnpaV3hsWTNSdmNuTTZJRzUxYkd3N1hISmNiaUFnUUdWaFkyZ2dKSE5sYkdWamRHOXlJR2x1SUNSbGVIUnlZUzF6Wld4bFkzUnZjbk1nZTF4eVhHNGdJQ0FnSkhObGJHVmpkRzl5Y3pvZ2NISmxabWw0S0NSelpXeGxZM1J2Y2l3Z1hDSW1YQ0lwTzF4eVhHNGdJQ0FnSkhObGJHVmpkRzl5Y3pvZ2MzVm1abWw0S0NSelpXeGxZM1J2Y25Nc0lGd2lMRndpS1R0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUNON0pITmxiR1ZqZEc5eWMzMGdKanB1YjNRb1cyUnBjMkZpYkdWa1hTazZibTkwS0Rwa2FYTmhZbXhsWkNrdVlXTjBhWFpsTEZ4eVhHNGdJQ1k2Ym05MEtGdGthWE5oWW14bFpGMHBPbTV2ZENnNlpHbHpZV0pzWldRcE9tRmpkR2wyWlNCN1hISmNiaUFnSUNCQVkyOXVkR1Z1ZER0Y2NseHVJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpOHZJRWh2ZG1WeVhISmNiaTh2SUVkbGJtVnlZWFJsSUdodmRtVnlJSE4wWVhSbFhISmNia0J0YVhocGJpQm9iM1psY2lncElIdGNjbHh1SUNBbUxtaHZkbVZ5TEZ4eVhHNGdJQ1k2YUc5MlpYSWdlMXh5WEc0Z0lDQWdRR052Ym5SbGJuUTdYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzR2THlCdWIzUXRTRzkyWlhKY2NseHVMeThnUjJWdVpYSmhkR1VnYm05MElHaHZkbVZ5YVc1bklITjBZWFJsWEhKY2JrQnRhWGhwYmlCdWIzUXRhRzkyWlhJb0tTQjdYSEpjYmlBZ0pqcHViM1FvTG1odmRtVnlLVHB1YjNRb09taHZkbVZ5S1NCN1hISmNiaUFnSUNCQVkyOXVkR1Z1ZER0Y2NseHVJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpOHZJRVp2WTNWelhISmNiaTh2SUVkbGJtVnlZWFJsSUdadlkzVnpJSE4wWVhSbFhISmNiaTh2WEhKY2JpOHZJRkJoY21GdFpYUmxjanBjY2x4dUx5OGdXMjl3ZEdsdmJtRnNYU0I3VEdsemRIMGdKR1Y0ZEhKaExYTmxiR1ZqZEc5eWN6b2diR2x6ZENCdlppQnpaV3hsWTNSdmNuTWdZV3h2Ym1jZ2QybDBhQ0JtYjJOMWN5QnpkR0YwWlZ4eVhHNUFiV2w0YVc0Z1ptOWpkWE1vSkdWNGRISmhMWE5sYkdWamRHOXljeTR1TGlrZ2UxeHlYRzRnSUNSelpXeGxZM1J2Y25NNklHNTFiR3c3WEhKY2JpQWdRR1ZoWTJnZ0pITmxiR1ZqZEc5eUlHbHVJQ1JsZUhSeVlTMXpaV3hsWTNSdmNuTWdlMXh5WEc0Z0lDQWdKSE5sYkdWamRHOXljem9nY0hKbFptbDRLQ1J6Wld4bFkzUnZjaXdnWENJbVhDSXBPMXh5WEc0Z0lDQWdKSE5sYkdWamRHOXljem9nYzNWbVptbDRLQ1J6Wld4bFkzUnZjbk1zSUZ3aUxGd2lLVHRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQ043SkhObGJHVmpkRzl5YzMwZ0ppNW1iMk4xY3l4Y2NseHVJQ0FtT21adlkzVnpJSHRjY2x4dUlDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1THk4Z1NHOTJaWEpjY2x4dUx5OGdSMlZ1WlhKaGRHVWdhRzkyWlhJZ2MzUmhkR1ZjY2x4dVFHMXBlR2x1SUdodmRtVnlMV1p2WTNWektDa2dlMXh5WEc0Z0lDWXVhRzkyWlhJc1hISmNiaUFnSmpwb2IzWmxjaXhjY2x4dUlDQW1MbVp2WTNWekxGeHlYRzRnSUNZNlptOWpkWE1nZTF4eVhHNGdJQ0FnUUdOdmJuUmxiblE3WEhKY2JpQWdmVnh5WEc1OVhISmNibHh5WEc0dkx5Qm1iMk4xY3kxaFkzUnBkbVZjY2x4dUx5OGdSMlZ1WlhKaGRHVWdabTlqZFhNZ1lXNWtJR0ZqZEdsMlpTQnpkR0YwWlZ4eVhHNUFiV2w0YVc0Z1ptOWpkWE10WVdOMGFYWmxLQ2tnZTF4eVhHNGdJQ1l1Wm05amRYTXNYSEpjYmlBZ0pqcG1iMk4xY3l4Y2NseHVJQ0FtT201dmRDaGJaR2x6WVdKc1pXUmRLVHB1YjNRb09tUnBjMkZpYkdWa0tTNWhZM1JwZG1Vc1hISmNiaUFnSmpwdWIzUW9XMlJwYzJGaWJHVmtYU2s2Ym05MEtEcGthWE5oWW14bFpDazZZV04wYVhabElIdGNjbHh1SUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVRRzFwZUdsdUlHaHZkbVZ5TFdadlkzVnpMV0ZqZEdsMlpTZ3BJSHRjY2x4dUlDQW1MbWh2ZG1WeUxGeHlYRzRnSUNZNmFHOTJaWElzWEhKY2JpQWdKaTVtYjJOMWN5eGNjbHh1SUNBbU9tWnZZM1Z6TEZ4eVhHNGdJQ1k2Ym05MEtGdGthWE5oWW14bFpGMHBPbTV2ZENnNlpHbHpZV0pzWldRcExtRmpkR2wyWlN4Y2NseHVJQ0FtT201dmRDaGJaR2x6WVdKc1pXUmRLVHB1YjNRb09tUnBjMkZpYkdWa0tUcGhZM1JwZG1VZ2UxeHlYRzRnSUNBZ1FHTnZiblJsYm5RN1hISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNHZMeUJFYVhOaFlteGxaRnh5WEc0dkx5QkhaVzVsY21GMFpTQmthWE5oWW14bFpDQnpkR0YwWlZ4eVhHNHZMMXh5WEc0dkx5QlFZWEpoYldWMFpYSTZYSEpjYmk4dklGdHZjSFJwYjI1aGJGMGdlMHhwYzNSOUlDUmxlSFJ5WVMxelpXeGxZM1J2Y25NNklHeHBjM1FnYjJZZ2MyVnNaV04wYjNKeklHRnNiMjVuSUhkcGRHZ2daR2x6WVdKc1pXUWdjM1JoZEdWY2NseHVRRzFwZUdsdUlHUnBjMkZpYkdWa0tDUmxlSFJ5WVMxelpXeGxZM1J2Y25NdUxpNHBJSHRjY2x4dUlDQWtjMlZzWldOMGIzSnpPaUJ1ZFd4c08xeHlYRzRnSUVCbFlXTm9JQ1J6Wld4bFkzUnZjaUJwYmlBa1pYaDBjbUV0YzJWc1pXTjBiM0p6SUh0Y2NseHVJQ0FnSUNSelpXeGxZM1J2Y25NNklIQnlaV1pwZUNna2MyVnNaV04wYjNJc0lGd2lKbHdpS1R0Y2NseHVJQ0FnSUNSelpXeGxZM1J2Y25NNklITjFabVpwZUNna2MyVnNaV04wYjNKekxDQmNJaXhjSWlrN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBamV5UnpaV3hsWTNSdmNuTjlJQ1piWkdsellXSnNaV1JkTEZ4eVhHNGdJQ1k2WkdsellXSnNaV1FnZTF4eVhHNGdJQ0FnUUdOdmJuUmxiblE3WEhKY2JpQWdmVnh5WEc1OVhISmNibHh5WEc0dkx5QkVhWE5oWW14bFpGeHlYRzR2THlCSFpXNWxjbUYwWlNCdWIzUWdaR2x6WVdKc1pXUWdjM1JoZEdWY2NseHVMeTljY2x4dUx5OGdVR0Z5WVcxbGRHVnlPbHh5WEc0dkx5QmJiM0IwYVc5dVlXeGRJSHRNYVhOMGZTQWtaWGgwY21FdGMyVnNaV04wYjNKek9pQnNhWE4wSUc5bUlITmxiR1ZqZEc5eWN5QmhiRzl1WnlCM2FYUm9JRzV2ZENCa2FYTmhZbXhsWkNCemRHRjBaVnh5WEc1QWJXbDRhVzRnYm05MExXUnBjMkZpYkdWa0tDUmxlSFJ5WVMxelpXeGxZM1J2Y25NdUxpNHBJSHRjY2x4dUlDQWtjMlZzWldOMGIzSnpPaUJ1ZFd4c08xeHlYRzRnSUVCbFlXTm9JQ1J6Wld4bFkzUnZjaUJwYmlBa1pYaDBjbUV0YzJWc1pXTjBiM0p6SUh0Y2NseHVJQ0FnSUNSelpXeGxZM1J2Y25NNklIQnlaV1pwZUNna2MyVnNaV04wYjNJc0lGd2lKbHdpS1R0Y2NseHVJQ0FnSUNSelpXeGxZM1J2Y25NNklITjFabVpwZUNna2MyVnNaV04wYjNKekxDQmNJaXhjSWlrN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBamV5UnpaV3hsWTNSdmNuTjlJQ1k2Ym05MEtGdGthWE5oWW14bFpGMHBPbTV2ZENnNlpHbHpZV0pzWldRcElIdGNjbHh1SUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUgxY2NseHVmVnh5WEc0aUxBb0pDU0l2THlCemRIbHNaV3hwYm5RdFpHbHpZV0pzWlNCelpXeGxZM1J2Y2kxd2MyVjFaRzh0Wld4bGJXVnVkQzFpYkdGamEyeHBjM1JjY2x4dUx5OWNjbHh1THk4Z1VITmxkV1J2SUdWc1pXMWxiblJ6SUUxcGVHbHVYSEpjYmk4dlhISmNiaTh2SUZSb1pYTmxJRzFwZUdsdWN5QmhjbVVnZFhObFpDQm1iM0lnY0hObGRXUnZMV1ZzWlcxbGJuUnpYSEpjYmx4eVhHNHZMeUJpWldadmNtVmNjbHh1THk4Z1IyVnVaWEpoZEdVZ1ltVm1iM0psSUZCelpYVmtieUJsYkdWdFpXNTBYSEpjYmtCdGFYaHBiaUJpWldadmNtVW9LU0I3WEhKY2JpQWdKam82WW1WbWIzSmxJSHRjY2x4dUlDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1THk4Z1lXWjBaWEpjY2x4dUx5OGdSMlZ1WlhKaGRHVWdZV1owWlhJZ1VITmxkV1J2SUdWc1pXMWxiblJjY2x4dVFHMXBlR2x1SUdGbWRHVnlLQ2tnZTF4eVhHNGdJQ1k2T21GbWRHVnlJSHRjY2x4dUlDQWdJRUJqYjI1MFpXNTBPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1THk4Z1ltVm1iM0psSUNzZ1lXWjBaWEpjY2x4dUx5OGdSMlZ1WlhKaGRHVWdZbVZtYjNKbElGQnpaWFZrYnlCbGJHVnRaVzUwWEhKY2JrQnRhWGhwYmlCaVpXWnZjbVV0WVdaMFpYSW9LU0I3WEhKY2JpQWdKam82WW1WbWIzSmxMRnh5WEc0Z0lDWTZPbUZtZEdWeUlIdGNjbHh1SUNBZ0lFQmpiMjUwWlc1ME8xeHlYRzRnSUgxY2NseHVmVnh5WEc0aUxBb0pDU0l2THlCemRIbHNaV3hwYm5RdFpHbHpZV0pzWlNCd2NtOXdaWEowZVMxaWJHRmphMnhwYzNSY2NseHVMeTljY2x4dUx5OGdWSEpoYm5OcGRHbHZiaUJOYVhocGJseHlYRzR2TDF4eVhHNWNjbHh1THk5Y2NseHVMeThnZEhKaGJuTnBkR2x2Ymx4eVhHNHZMeUJOYVhocGJpQjFjMmx1WnlCMGNtRnVjMmwwYVc5dUlHWjFibU4wYVc5dUlIUnZJRzl3ZEdsdGFYcGxJSFJ5WVc1emFYUnBiMjRnWVc1a1hISmNiaTh2SUdScGMyRmliR1VnZEhKaGJuTnBkR2x2YmlCaGRDQndjbVZtWlhKekxYSmxaSFZqWldRdGJXOTBhVzl1TFcxbFpHbGhMWEYxWlhKNVhISmNiaTh2WEhKY2JpOHZJRkJoY21GdFpYUmxjbk02WEhKY2JpOHZJSHRUZEhKcGJtY3NUR2x6ZEgwZ0pIUnlZVzV6YVhScGIyNXpJQzBnZEhKaGJuTnBkR2x2Ym5NZ2MzUnlhVzVuYzF4eVhHNUFiV2w0YVc0Z2RISmhibk5wZEdsdmJpZ2tkSEpoYm5OcGRHbHZibk11TGk0cElIdGNjbHh1SUNCQWFXWWdKR1Z1WVdKc1pTMTBjbUZ1YzJsMGFXOXVjeUI3WEhKY2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCMGNtRnVjMmwwYVc5dUtDUjBjbUZ1YzJsMGFXOXVjeWs3WEhKY2JseHlYRzRnSUNBZ1FHbG1JQ1JsYm1GaWJHVXRjSEpsWm1WeWN5MXlaV1IxWTJWa0xXMXZkR2x2YmkxdFpXUnBZUzF4ZFdWeWVTQjdYSEpjYmlBZ0lDQWdJRUJsZUhSbGJtUWdKWEJ5WldabGNuTXRjbVZrZFdObFpDMXRiM1JwYjI0N1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QmhibWx0WVhScGIyNWNjbHh1THk4Z1RXbDRhVzRnVlhObFpDQjBieUJuWlc1bGNtRjBaU0JoYm1sdFlYUnBiMjVjY2x4dUx5OWNjbHh1THk4Z1FYSm5kVzFsYm5Sek9seHlYRzR2THlCN1UzUnlhVzVuZlNBa2JtRnRaU0F0SUU1aGJXVWdiMllnZEdobElHRnVhVzFoZEdsdmJseHlYRzR2THlCYmIzQjBhVzl1WVd4ZElIdENiMjlzWldGdWZTQWthVzVtYVc1cGRHVWdMU0IxYzJWa0lIUnZJSE5sZENCaGJtbHRZWFJwYjI0Z2RHOGdhVzVtYVc1cGRHVmNjbHh1THk4Z1cyOXdkR2x2Ym1Gc1hTQjdWR2x0WlgwZ0pHUjFjbUYwYVc5dUlDMGdSSFZ5WVhScGIyNGdiMllnWVc1cGJXRjBhVzl1WEhKY2JpOHZJRnR2Y0hScGIyNWhiRjBnZTBGdWFXMWhkR2x2YmlCbWRXNWpkR2x2Ym4wZ0pHWjFibU4wYVc5dUlDMGdRVzVwYldGMGFXOXVJR1oxYm1OMGFXOXVYSEpjYmk4dlhISmNia0J0YVhocGJpQmhibWx0WVhScGIyNG9KRzVoYldVc0lDUmtkWEpoZEdsdmJqb2dNWE1zSUNSbWRXNWpkR2x2YmpvZ1pXRnpaUzF2ZFhRc0lDUnBibVpwYm1sMFpUb2dabUZzYzJVc0lDUm1hV3hzYlc5a1pUb2dZbTkwYUNrZ2UxeHlYRzRnSUVCcFppQWtaVzVoWW14bExYUnlZVzV6YVhScGIyNXpJSHRjY2x4dUlDQWdJRUJwWmlBb0pHNWhiV1VnUFQwZ2JtOXVaU2tnZTF4eVhHNGdJQ0FnSUNCaGJtbHRZWFJwYjI0NklHNXZibVU3WEhKY2JpQWdJQ0I5SUVCbGJITmxJSHRjY2x4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnYVc1amJIVmtaUzFyWlhsbWNtRnRaU2drYm1GdFpTazdYSEpjYmlBZ0lDQWdJQ1JwYm1acGJtbDBaVG9nYVdZb0pHbHVabWx1YVhSbExDQnBibVpwYm1sMFpTd2diblZzYkNrN1hISmNiaUFnSUNBZ0lHRnVhVzFoZEdsdmJqb2dKRzVoYldVZ0pHUjFjbUYwYVc5dUlDUm1kVzVqZEdsdmJpQWthVzVtYVc1cGRHVWdKR1pwYkd4dGIyUmxPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1Skd0bGVXWnlZVzFsY3pvZ0tGeHlYRzRnSUhKcGNIQnNaVG9nZEhKMVpTeGNjbHh1SUNCeWFYQndiR1V0WjNKaGVUb2dkSEoxWlN4Y2NseHVJQ0JtYkdGemFEb2dkSEoxWlN4Y2NseHVJQ0JtWVdSbGFXNDZJSFJ5ZFdVc1hISmNiaUFnYzNCcGJqb2dkSEoxWlZ4eVhHNHBJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVRRzFwZUdsdUlHbHVZMngxWkdVdGEyVjVabkpoYldVb0pHNWhiV1VwSUh0Y2NseHVJQ0JBYVdZZ2JXRndMV2hoY3kxclpYa29KR3RsZVdaeVlXMWxjeXdnSkc1aGJXVXBJSHRjY2x4dUlDQWdJRUJwWmlCdFlYQXRaMlYwS0NSclpYbG1jbUZ0WlhNc0lDUnVZVzFsS1NCN1hISmNiaUFnSUNBZ0lDUnJaWGxtY21GdFpYTTZJRzFoY0MxdFpYSm5aU2drYTJWNVpuSmhiV1Z6TENBb0pHNWhiV1VnT2lCbVlXeHpaU2twSUNGbmJHOWlZV3c3WEhKY2JpQWdJQ0FnSUVCcFppQWtibUZ0WlNBOVBTQnlhWEJ3YkdVZ2UxeHlYRzRnSUNBZ0lDQWdJRUJyWlhsbWNtRnRaWE1nY21sd2NHeGxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lHWnliMjBnZXlCaWIzZ3RjMmhoWkc5M09pQWplMkp2ZUMxemFHRmtiM2NvTUNBd0lEQWdNQ0JqZFhKeVpXNTBRMjlzYjNJcGZUc2dmVnh5WEc0Z0lDQWdJQ0FnSUNBZ056VWxJSHNnWW05NExYTm9ZV1J2ZHpvZ0kzdGliM2d0YzJoaFpHOTNLREFnTUNBd0lDZ2tZMjl1ZEhKdmJITXRabTlqZFhNdFltOTRjMmhoWkc5M0xYTnBlbVVnS2lBeExqVXBJSFJ5WVc1emNHRnlaVzUwS1gwN0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSURjMkpTQjdJR0p2ZUMxemFHRmtiM2M2SUNON1ltOTRMWE5vWVdSdmR5aHViMjVsS1gwN0lIMWNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUgwZ1FHVnNjMlVnYVdZZ0pHNWhiV1VnUFQwZ2NtbHdjR3hsTFdkeVlYa2dlMXh5WEc0Z0lDQWdJQ0FnSUVCclpYbG1jbUZ0WlhNZ2NtbHdjR3hsTFdkeVlYa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ1puSnZiU0I3SUdKdmVDMXphR0ZrYjNjNklDTjdZbTk0TFhOb1lXUnZkeWd3SURBZ01DQXdJQ1JuY21GNUxUVXdNQ2w5T3lCOVhISmNiaUFnSUNBZ0lDQWdJQ0EzTlNVZ2V5QmliM2d0YzJoaFpHOTNPaUFqZTJKdmVDMXphR0ZrYjNjb01DQXdJREFnS0NSamIyNTBjbTlzY3kxbWIyTjFjeTFpYjNoemFHRmtiM2N0YzJsNlpTQXFJREV1TlNrZ2RISmhibk53WVhKbGJuUXBmVHNnZlZ4eVhHNGdJQ0FnSUNBZ0lDQWdOellsSUhzZ1ltOTRMWE5vWVdSdmR6b2dJM3RpYjNndGMyaGhaRzkzS0c1dmJtVXBmVHNnZlZ4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdmU0JBWld4elpTQnBaaUFrYm1GdFpTQTlQU0JtYkdGemFDQjdYSEpjYmlBZ0lDQWdJQ0FnUUd0bGVXWnlZVzFsY3lCbWJHRnphQ0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQm1jbTl0TEZ4eVhHNGdJQ0FnSUNBZ0lDQWdOVEFsSUhzZ2IzQmhZMmwwZVRvZ01Uc2dmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJREkxSlN4Y2NseHVJQ0FnSUNBZ0lDQWdJRGMxSlNCN0lHOXdZV05wZEhrNklEQTdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lIMGdRR1ZzYzJVZ2FXWWdKRzVoYldVZ1BUMGdabUZrWldsdUlIdGNjbHh1SUNBZ0lDQWdJQ0JBYTJWNVpuSmhiV1Z6SUdaaFpHVnBiaUI3WEhKY2JpQWdJQ0FnSUNBZ0lDQm1jbTl0SUhzZ2IzQmhZMmwwZVRvZ01Ec2dmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ2ZTQkFaV3h6WlNCcFppQWtibUZ0WlNBOVBTQnpjR2x1SUh0Y2NseHVJQ0FnSUNBZ0lDQkFhMlY1Wm5KaGJXVnpJSE53YVc0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnTVRBd0pTQjdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLRE0yTUdSbFp5azdJSDFjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lIMGdRR1ZzYzJVZ2UxeHlYRzRnSUNBZ0lDQWdJRUJsY25KdmNpQmNJbXRsZVdaeVlXMWxJRzVoYldVZ1lDTjdKRzVoYldWOVlDQmxlR2x6ZENCcGJpQWthMlY1Wm5KaGJXVnpJR0oxZENCaFkzUjFZV3dnYTJWNVpuSmhiV1Z6SUdGeVpTQnViM1FnWm05MWJtUmNJanRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJSDBnUUdWc2MyVWdlMXh5WEc0Z0lDQWdRR1Z5Y205eUlGd2lZVzVwYldGMGFXOXVJR3RsZVdaeVlXMWxJR1p2Y2lCaGJtbHRZWFJwYjI0Z1lDTjdKRzVoYldWOVlDQnViM1FnWm05MWJtUXVYQ0k3WEhKY2JpQWdmVnh5WEc1OVhISmNiaUlzQ2drSklpOHZYSEpjYmk4dklFRnVhVzFoZEdWa0lGTm9ZWEJsYzF4eVhHNHZMMXh5WEc1Y2NseHVMeThnVEc5aFpHbHVaeUJUY0dsdWJtVnlJRk5vWVhCbElIUnZJR2x1WkdsallYUmxJR3h2WVdScGJtY2djSEp2WTJWemMxeHlYRzVBYldsNGFXNGdiRzloWkdsdVp5MXpjR2x1Ym1WeUtDUmpiMnh2Y2pvZ0pIQnlhVzFoY25rcElIdGNjbHh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hISmNiaUFnUUdsdVkyeDFaR1VnWW1WbWIzSmxJSHRjY2x4dUlDQWdJR052Ym5SbGJuUTZJRndpWENJN1hISmNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnSUNCMGIzQTZJR05oYkdNb05UQWxJQzBnS0RGbGJTQXZJRElwS1R0Y2NseHVJQ0FnSUhKcFoyaDBPaUF3TzF4eVhHNGdJQ0FnWW05MGRHOXRPaUF3TzF4eVhHNGdJQ0FnYkdWbWREb2dZMkZzWXlnMU1DVWdMU0FvTVdWdElDOGdNaWtwTzF4eVhHNGdJQ0FnZEhKaGJuTm1iM0p0T2lCcGJtaGxjbWwwT3lBdkx5QnlaWE5sZENCMGNtRnVjMlp2Y20wZ2MzUjViR1ZjY2x4dUlDQWdJSGRwWkhSb09pQXhaVzA3WEhKY2JpQWdJQ0JvWldsbmFIUTZJREZsYlR0Y2NseHVJQ0FnSUdKdmNtUmxjam9nTGpFMVpXMGdjMjlzYVdRZ1kzVnljbVZ1ZEVOdmJHOXlPMXh5WEc0Z0lDQWdZbTl5WkdWeUxYSnBaMmgwTFdOdmJHOXlPaUIwY21GdWMzQmhjbVZ1ZER0Y2NseHVJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJRFV3SlR0Y2NseHVJQ0FnSUM4dklITjBlV3hsYkdsdWRDMWthWE5oWW14bExXNWxlSFF0YkdsdVpTQndjbTl3WlhKMGVTMWliR0ZqYTJ4cGMzUmNjbHh1SUNBZ0lHRnVhVzFoZEdsdmJqb2djM0JwYmlBeGN5QnBibVpwYm1sMFpTQnNhVzVsWVhJN0lDOHZJR0YyYjJsa0lIVnphVzVuSUVCdGFYaHBiaUJoYm1sdFlYUnBiMjRnZEc4Z1oyVnVaWEpoZEdVZ2NtRmthWFZ6SUdsdVpHVndaVzVrWlc1MElHOW1JR0FrWlc1aFlteGxMWFJ5WVc1emFYUnBiMjV6WUNCdmNIUnBiMjVjY2x4dUlDQWdJR052Ykc5eU9pQWtZMjlzYjNJN1hISmNiaUFnSUNCQWFXNWpiSFZrWlNCcGJtTnNkV1JsTFd0bGVXWnlZVzFsS0hOd2FXNHBPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1THk4Z1RXbDRhVzRnZEc4Z2IzWmxjbkpwWkdVZ1RHOWhaR2x1WnlCemNHbHVibVZ5SUhOb1lYQmxJR052Ykc5eVhISmNia0J0YVhocGJpQnNiMkZrYVc1bkxYTndhVzV1WlhJdFkyOXNiM0lvSkdOdmJHOXlLU0I3WEhKY2JpQWdRR2x1WTJ4MVpHVWdZbVZtYjNKbElIdGNjbHh1SUNBZ0lHTnZiRzl5T2lBa1kyOXNiM0k3WEhKY2JpQWdmVnh5WEc1OVhISmNiaUlzQ2drSklpOHZYSEpjYmk4dklFSmhjMmxqSUZOb1lYQmxjMXh5WEc0dkwxeHlYRzVBYldsNGFXNGdkSEpwWVc1bmJHVW9KR1JwY21WamRHbHZiam9nWW05MGRHOXRMQ0FrYzJsNlpUb2dObkI0TENBa1kyOXNiM0k2SUdOMWNuSmxiblJEYjJ4dmNpa2dlMXh5WEc0Z0lDUmthWEpsWTNScGIyNHRhVzUyWlhKelpTMXRZWEE2SUNoY2NseHVJQ0FnSUhSdmNEb2dZbTkwZEc5dExGeHlYRzRnSUNBZ2NtbG5hSFE2SUd4bFpuUXNYSEpjYmlBZ0lDQmliM1IwYjIwNklIUnZjQ3hjY2x4dUlDQWdJR3hsWm5RNklISnBaMmgwWEhKY2JpQWdLVHRjY2x4dVhISmNiaUFnSkdScGNtVmpkR2x2YmkxcGJuWmxjbk5sT2lCdFlYQXRaMlYwS0NSa2FYSmxZM1JwYjI0dGFXNTJaWEp6WlMxdFlYQXNJQ1JrYVhKbFkzUnBiMjRwTzF4eVhHNWNjbHh1SUNCaWIzSmtaWEk2SUNSemFYcGxJSE52Ykdsa0lIUnlZVzV6Y0dGeVpXNTBPMXh5WEc0Z0lHSnZjbVJsY2kwamV5UmthWEpsWTNScGIyNHRhVzUyWlhKelpYMHRZMjlzYjNJNklDUmpiMnh2Y2p0Y2NseHVJQ0JpYjNKa1pYSXRJM3NrWkdseVpXTjBhVzl1ZlRvZ01EdGNjbHh1ZlZ4eVhHNGlMQW9KQ1NJdkwxeHlYRzR2THlCQ2RYUjBiMjV6SUUxcGVHbHVYSEpjYmk4dlhISmNibHh5WEc0dkwxeHlYRzR2THlCVWFHVnRaU0JXWVhKcFlXNTBjeUJOYVhocGJseHlYRzR2TDF4eVhHNWNjbHh1THk4Z1UyOXNhV1FnWkdWemFXZHVJSFpoY21saGJuUmNjbHh1UUcxcGVHbHVJR0oxZEhSdmJpMWtaWE5wWjI0dGMyOXNhV1F0ZG1GeWFXRnVkQ2drWTI5c2IzSXBJSHRjY2x4dUlDQWtabTlqZFhNdFltRmphMmR5YjNWdVpEb2dZMnh5TFhOMFpYQW9KR052Ykc5eUxDQXRNaWs3WEhKY2JpQWdKR0ZqZEdsMlpTMWlZV05yWjNKdmRXNWtPaUJqYkhJdGMzUmxjQ2drWTI5c2IzSXNJRFFwTzF4eVhHNWNjbHh1SUNBa1lXTjBhWFpsTFdSbFptRjFiSFE2SUdOc2NpMXpkR1Z3S0NSaWRYUjBiMjR0ZEdobGJXVXNJRFFwTzF4eVhHNWNjbHh1SUNBdkx5QjBieUJoZG05cFpDQmhaR1JwYm1jZ1pYaDBjbUVnWTI5c2IzSWdiM1psY25KcFpHVmNjbHh1SUNBdkx5QXRJR05zY2kxaGRYUnZLQ1JpZFhSMGIyNHRkR2hsYldVcElHbHpJR0ZzY21WaFpIa2dhVzV6YVdSbElHUmxabUYxYkhRZ2FYTXRjMjlzYVdRZ1luVjBkRzl1WEhKY2JpQWdZMjlzYjNJNklHbG1LR05zY2kxaGRYUnZLQ1JqYjJ4dmNpa2dJVDBnWTJ4eUxXRjFkRzhvSkdKMWRIUnZiaTEwYUdWdFpTa3NJR05zY2kxaGRYUnZLQ1JqYjJ4dmNpa3NJRzUxYkd3cE8xeHlYRzRnSUVCcGJtTnNkV1JsSUdkeVlXUnBaVzUwTFdKbktDUmpiMnh2Y2l3Z01UZ3daR1ZuS1R0Y2NseHVYSEpjYmlBZ1FHbHVZMngxWkdVZ2FHOTJaWElnZTF4eVhHNGdJQ0FnWW05NExYTm9ZV1J2ZHpvZ1ltOTRMWE5vWVdSdmR5Z2tZblYwZEc5dUxXWnZZM1Z6TFdKdmVITm9ZV1J2ZHlCeVoySmhLQ1JqYjJ4dmNpd2dMalVwS1R0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUVCcGJtTnNkV1JsSUdadlkzVnpJSHRjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJR2R5WVdScFpXNTBMV0puS0NSbWIyTjFjeTFpWVdOclozSnZkVzVrTENBeE9EQmtaV2NwTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnUUdsdVkyeDFaR1VnWVdOMGFYWmxJSHRjY2x4dUlDQWdJQzh2SUhSdklHRjJiMmxrSUdGa1pHbHVaeUJsZUhSeVlTQmpiMnh2Y2lCdmRtVnljbWxrWlZ4eVhHNGdJQ0FnTHk4Z0xTQmpiSEl0WVhWMGJ5aGpiSEl0YzNSbGNDZ2tZblYwZEc5dUxYUm9aVzFsTENBMEtTa2dhWE1nWVd4eVpXRmtlU0JwYm5OcFpHVWdaR1ZtWVhWc2RDQnBjeTF6YjJ4cFpDQmlkWFIwYjI1Y2NseHVJQ0FnSUdOdmJHOXlPaUJwWmloamJISXRZWFYwYnlna1kyOXNiM0lwSUNFOUlHTnNjaTFoZFhSdktDUmhZM1JwZG1VdFpHVm1ZWFZzZENrc0lHTnNjaTFoZFhSdktDUmhZM1JwZG1VdFltRmphMmR5YjNWdVpDa3NJRzUxYkd3cE8xeHlYRzRnSUNBZ1FHbG1JQ1JrWlhOcFoyNHRjMjlzYVdRdFpXeHpaUzFuY21Ga2FXVnVkSE1nZTF4eVhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa1lXTjBhWFpsTFdKaFkydG5jbTkxYm1RN1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNWNjbHh1SUNBbUxtbHpMV3h2WVdScGJtY2dlMXh5WEc0Z0lDQWdMeThnZEc4Z1lYWnZhV1FnWVdSa2FXNW5JR1Y0ZEhKaElHTnZiRzl5SUc5MlpYSnlhV1JsWEhKY2JpQWdJQ0F2THlBdElHTnNjaTFoZFhSdktDUmlkWFIwYjI0dGRHaGxiV1VwSUdseklHRnNjbVZoWkhrZ2FXNXphV1JsSUdSbFptRjFiSFFnYVhNdGMyOXNhV1FnWW5WMGRHOXVYSEpjYmlBZ0lDQkFhV1lnWTJ4eUxXRjFkRzhvSkdOdmJHOXlLU0FoUFNCamJISXRZWFYwYnlna1luVjBkRzl1TFhSb1pXMWxLU0I3WEhKY2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUd4dllXUnBibWN0YzNCcGJtNWxjaTFqYjJ4dmNpaGpiSEl0WVhWMGJ5Z2tZMjlzYjNJcEtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaTh2SUc5MWRHeHBibVVnWkdWemFXZHVJSFpoY21saGJuUmNjbHh1UUcxcGVHbHVJR0oxZEhSdmJpMWtaWE5wWjI0dGIzVjBiR2x1WlMxMllYSnBZVzUwS0NSamIyeHZjaWtnZTF4eVhHNGdJQ1JoWTNScGRtVXRZbTl5WkdWeU9pQmpiSEl0YzNSbGNDZ2tZMjlzYjNJc0lEUXBPMXh5WEc1Y2NseHVJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYSEpjYmlBZ0lDQmliM0prWlhJdFkyOXNiM0k2SUNSamIyeHZjanRjY2x4dUlDQWdJR0p2ZUMxemFHRmtiM2M2SUdKdmVDMXphR0ZrYjNjb0pHSjFkSFJ2YmkxbWIyTjFjeTFpYjNoemFHRmtiM2NnY21kaVlTZ2tZMjlzYjNJc0lDNDFLU2s3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0JBYVc1amJIVmtaU0JtYjJOMWN5QjdYSEpjYmlBZ0lDQmliM0prWlhJdFkyOXNiM0k2SUNSamIyeHZjanRjY2x4dUlDQWdJR052Ykc5eU9pQWtZMjlzYjNJN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNCQWFXNWpiSFZrWlNCaFkzUnBkbVVnZTF4eVhHNGdJQ0FnWW05eVpHVnlMV052Ykc5eU9pQWtZV04wYVhabExXSnZjbVJsY2p0Y2NseHVJQ0FnSUdOdmJHOXlPaUFrWVdOMGFYWmxMV0p2Y21SbGNqdGNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaTh2SUcxcGJtbHRZV3dnWkdWemFXZHVJSFpoY21saGJuUmNjbHh1UUcxcGVHbHVJR0oxZEhSdmJpMWtaWE5wWjI0dGJXbHVhVzFoYkMxMllYSnBZVzUwS0NSamIyeHZjaWtnZTF4eVhHNGdJQ1JoWTNScGRtVXRZbTl5WkdWeU9pQmpiSEl0YzNSbGNDZ2tZMjlzYjNJc0lEUXBPMXh5WEc1Y2NseHVJQ0JBYVc1amJIVmtaU0JvYjNabGNpMW1iMk4xY3lCN1hISmNiaUFnSUNCamIyeHZjam9nSkdOdmJHOXlPMXh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZbVZtYjNKbElIdGNjbHh1SUNBZ0lDQWdZbTl5WkdWeUxXSnZkSFJ2YlMxamIyeHZjam9nSkdOdmJHOXlPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdRR2x1WTJ4MVpHVWdZV04wYVhabElIdGNjbHh1SUNBZ0lHTnZiRzl5T2lBa1lXTjBhWFpsTFdKdmNtUmxjanRjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJR0psWm05eVpTQjdYSEpjYmlBZ0lDQWdJR0p2Y21SbGNpMWliM1IwYjIwdFkyOXNiM0k2SUNSaFkzUnBkbVV0WW05eVpHVnlPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdKaTVwY3kxc2IyRmthVzVuSUh0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUd4dllXUnBibWN0YzNCcGJtNWxjaTFqYjJ4dmNpZ2tZMjlzYjNJcE8xeHlYRzRnSUgxY2NseHVmVnh5WEc0aUxBb0pDU0l2TDF4eVhHNHZMeUJwYm5CMWRITWdUV2w0YVc1Y2NseHVMeTljY2x4dVhISmNiaTh2WEhKY2JpOHZJRlJvWlcxbElGWmhjbWxoYm5SeklFMXBlR2x1WEhKY2JpOHZYSEpjYmx4eVhHNUFiV2w0YVc0Z2FXNXdkWFF0ZG1GeWFXRnVkQ2drYm1GdFpTd2dKR052Ykc5eUtTQjdYSEpjYmlBZ1ltOXlaR1Z5TFdOdmJHOXlPaUJ5WjJKaEtDUmpiMnh2Y2l3Z0xqVXBPMXh5WEc0Z0lHTnZiRzl5T2lBa1kyOXNiM0k3WEhKY2JseHlYRzRnSUVCcGJtTnNkV1JsSUdodmRtVnlJSHRjY2x4dUlDQWdJR0p2ZUMxemFHRmtiM2M2SUdKdmVDMXphR0ZrYjNjb0pHbHVjSFYwTFdKdmVITm9ZV1J2ZHkxcGJtNWxjaXdnSkdOdmJuUnliMnh6TFdadlkzVnpMV0p2ZUhOb1lXUnZkeUJ5WjJKaEtDUmpiMnh2Y2l3Z0xqVXBLVHRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJRUJwWmlBa2JtRnRaU0E5UFNCY0luWmhiR2xrWENJZ2IzSWdKRzVoYldVZ1BUMGdYQ0pwYm1adlhDSWdiM0lnSkc1aGJXVWdQVDBnWENKM1lYSnVYQ0lnYjNJZ0pHNWhiV1VnUFQwZ1hDSmxjbkp2Y2x3aUlIdGNjbHh1SUNBZ0lDWXVhR0Z6TFdsamIyNGdlMXh5WEc0Z0lDQWdJQ0JBWlhoMFpXNWtJQ1ZqYjI1MGNtOXNjeTEyWVd4cFpHRjBhVzl1TFdsamIyNDdYSEpjYmlBZ0lDQWdJRUJwWmlBa2JtRnRaU0E5UFNCY0luWmhiR2xrWENJZ2UxeHlYRzRnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0YVcxaFoyVTZJQ1JwWTI5dUxXTm9aV05yTzF4eVhHNGdJQ0FnSUNCOUlFQmxiSE5sSUdsbUlDUnVZVzFsSUQwOUlGd2lhVzVtYjF3aUlIdGNjbHh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUFrYVdOdmJpMXBibVp2TzF4eVhHNGdJQ0FnSUNCOUlFQmxiSE5sSUdsbUlDUnVZVzFsSUQwOUlGd2lkMkZ5Ymx3aUlIdGNjbHh1SUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrTFdsdFlXZGxPaUFrYVdOdmJpMTNZWEp1YVc1bk8xeHlYRzRnSUNBZ0lDQjlJRUJsYkhObElHbG1JQ1J1WVcxbElEMDlJRndpWlhKeWIzSmNJaUI3WEhKY2JpQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ0pHbGpiMjR0WTNKdmMzTTdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzVqYjI1MGNtOXNJRDRnSmlCK0lDNXBZMjl1SUh0Y2NseHVJQ0FnSUdOdmJHOXlPaUFrWTI5c2IzSTdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQXVZMjl1ZEhKdmJDNW9ZWE10Wm14dllYUnBibWN0YkdGaVpXd2dQaUFtSUg0Z0xteGhZbVZzSUh0Y2NseHVJQ0FnSUdOdmJHOXlPaUFrWTI5c2IzSTdYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JpSXNDZ2tKSWtCdGFYaHBiaUJ5WVc1blpTMTBjbUZqYXlncElIdGNjbHh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh5WEc0Z0lHRnNhV2R1TFdsMFpXMXpPaUJqWlc1MFpYSTdYSEpjYmlBZ2QybGtkR2c2SURFd01DVTdYSEpjYmlBZ2FHVnBaMmgwT2lBa2NtRnVaMlV0ZEhKaFkyc3RhR1ZwWjJoME8xeHlYRzRnSUcxaGNtZHBiam9nTUR0Y2NseHVJQ0JpYjNKa1pYSTZJREE3WEhKY2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ1ltOXlaR1Z5TFhKaFpHbDFjeWdrWW05eVpHVnljbUZrYVhWekxYQnBiR3dzSURBcE8xeHlYRzRnSUdKaFkydG5jbTkxYm1RdFkyOXNiM0k2SUNSeVlXNW5aUzEwY21GamF5MWlZV05yWjNKdmRXNWtPMXh5WEc0Z0lHSnZlQzF6YUdGa2IzYzZJR0p2ZUMxemFHRmtiM2NvSkhKaGJtZGxMWFJ5WVdOckxXSnZlSE5vWVdSdmR5azdYSEpjYmlBZ1FHbHVZMngxWkdVZ2RISmhibk5wZEdsdmJpZ2tjbUZ1WjJVdGRISmhZMnN0ZEhKaGJuTnBkR2x2YmlrN1hISmNibjFjY2x4dVhISmNia0J0YVhocGJpQnlZVzVuWlMxMGFIVnRZaWdwSUh0Y2NseHVJQ0IzYVdSMGFEb2dKSEpoYm1kbExYUm9kVzFpTFhkcFpIUm9PMXh5WEc0Z0lHaGxhV2RvZERvZ0pISmhibWRsTFhSb2RXMWlMV2hsYVdkb2REdGNjbHh1SUNCaWIzSmtaWEk2SUNSeVlXNW5aUzEwYUhWdFlpMWliM0prWlhJN1hISmNiaUFnWW05eVpHVnlMWEpoWkdsMWN6b2dZbTl5WkdWeUxYSmhaR2wxY3lna1ltOXlaR1Z5Y21Ga2FYVnpMV05wY21Oc1pTd2dNQ2s3WEhKY2JpQWdMeThnYzNSNWJHVnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUhCeWIzQmxjblI1TFc1dkxYWmxibVJ2Y2kxd2NtVm1hWGhjY2x4dUlDQXRiVzk2TFdGd2NHVmhjbUZ1WTJVNklHNXZibVU3WEhKY2JpQWdMeThnYzNSNWJHVnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUhCeWIzQmxjblI1TFc1dkxYWmxibVJ2Y2kxd2NtVm1hWGhjY2x4dUlDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJRzV2Ym1VN1hISmNiaUFnWVhCd1pXRnlZVzVqWlRvZ2JtOXVaVHRjY2x4dUlDQmlZV05yWjNKdmRXNWtPaUFrY21GdVoyVXRkR2gxYldJdFltRmphMmR5YjNWdVpEdGNjbHh1SUNCaWIzZ3RjMmhoWkc5M09pQmliM2d0YzJoaFpHOTNLQ1J5WVc1blpTMTBhSFZ0WWkxaWIzaHphR0ZrYjNjcE8xeHlYRzRnSUVCcGJtTnNkV1JsSUhSeVlXNXphWFJwYjI0b0pISmhibWRsTFhSb2RXMWlMWFJ5WVc1emFYUnBiMjRwTzF4eVhHNTlYSEpjYmlJc0Nna0pJaTh2WEhKY2JpOHZJRTFsYm5VZ1RXbDRhVzVjY2x4dUx5OWNjbHh1WEhKY2JpOHZYSEpjYmk4dklGUm9aVzFsSUZaaGNtbGhiblFnVFdsNGFXNWNjbHh1THk5Y2NseHVRRzFwZUdsdUlHMWxiblV0ZG1GeWFXRnVkQ2drWTI5c2IzSXBJSHRjY2x4dUlDQXViV1Z1ZFMxcGRHVnRJSHRjY2x4dUlDQWdJQzh2SUZOMGVXeGxJR1p2WTNWeklITjBZWFJsSUhSdklITm9iM2NnWld4bGJXVnVkSE1nYVhNZ2FXNGdabTlqZFhNZ2MzUmhkR1VnZFhOcGJtY2dkR0ZpWEhKY2JpQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpMW1iMk4xY3lCN1hISmNiaUFnSUNBZ0lHSnZjbVJsY2kxamIyeHZjam9nSkdOdmJHOXlPMXh5WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUJqYkhJdGMzUmxjQ2drWTI5c2IzSXNJQzA0S1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQW1MbUZqZEdsMlpTQjdYSEpjYmlBZ0lDQWdJR052Ykc5eU9pQmpiSEl0WVhWMGJ5Z2tZMjlzYjNJcE8xeHlYRzRnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtZMjlzYjNJN1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNTlYSEpjYmlJc0Nna0pJaTh2WEhKY2JpOHZJRk5sZEhScGJtZHpYSEpjYmk4dlhISmNibHh5WEc0dkx5QlBjSFJwYjI1ek9pQlJkV2xqYTJ4NUlHMXZaR2xtZVNCbmJHOWlZV3dnYzNSNWJHbHVaeUJpZVNCbGJtRmliR2x1WnlCdmNpQmthWE5oWW14cGJtY2diM0IwYVc5dVlXd2dabVZoZEhWeVpYTXVYSEpjYmlSa1pXWmhkV3gwTFdadmJuUnphWHBsT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeE5IQjRJQ0ZrWldaaGRXeDBPeUFnSUNBdkx5QkVaV1poZFd4MElHWnZiblF0YzJsNlpTQjFjMlZjY2x4dUpHUmxabUYxYkhRdGMyMWhiR3d0Y1hWaGJuUnBkSGs2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNDNOU0FoWkdWbVlYVnNkRHNnSUNBZ0lDOHZJRVJsWm1GMWJIUWdiWFZzZEdsd2JHbGpZWFJwZG1VZ2RtRnNkV1VnZEc4Z1oyVnVaWEpoZEdVZ2MyMWhiR3dnYzNSNWJHVnpYSEpjYmlSa1pXWmhkV3gwTFd4aGNtZGxMWEYxWVc1MGFYUjVPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeExqSTFJQ0ZrWldaaGRXeDBPeUFnSUNBdkx5QkVaV1poZFd4MElHMTFiSFJwY0d4cFkyRjBhWFpsSUhaaGJIVmxJSFJ2SUdkbGJtVnlZWFJsSUd4aGNtZGxJSE4wZVd4bGMxeHlYRzRrWkdWemFXZHVMWFJvWlcxbE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENKc2FXZG9kRndpSUNGa1pXWmhkV3gwT3lBdkx5QXFJRXhsZENCNWIzVWdZMmh2YzJVZ1ltVjBkMlZsYmlCa1pXWmhkV3gwSUd4cFoyaDBJSFJvWlcxbElHRnVaQ0JrWVhKcklIUm9aVzFsWEhKY2JpUmtaWE5wWjI0dGMyOXNhV1F0Wld4elpTMW5jbUZrYVdWdWRITTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBjblZsSUNGa1pXWmhkV3gwT3lBZ0lDQXZMeUFxSUV4bGRDQjViM1VnWTJodmMyVWdZbVYwZDJWbGJpQm5jbUZrYVdWdWRDQjJjeUJ6YjJ4cFpDQmtaWE5wWjI0Z1ZVbGNjbHh1SkdSbGMybG5iaTF6YUdGa2IzY3RaV3h6WlMxaWIzSmtaWEk2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSeWRXVWdJV1JsWm1GMWJIUTdJQ0FnSUM4dklDb2dUR1YwSUhsdmRTQmphRzl6WlNCaVpYUjNaV1Z1SUhOb1lXUnZkeUIyY3lCaWIzZ2dZbTl5WkdWeUlHUmxjMmxuYmlCVlNWeHlYRzRrWkdWemFXZHVMWEp2ZFc1a1pXUXRaV3h6WlMxaWIzZzZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKMVpTQWhaR1ZtWVhWc2REc2dJQ0FnTHk4Z0tpQk1aWFFnZVc5MUlHTm9iM05sSUdKbGRIZGxaVzRnY205MWJtUmxaQ0IyY3lCaWIzZ2dZMjl5Ym1WeWN5QmtaWE5wWjI0Z1ZVbGNjbHh1SkdKeVpXRnJjRzlwYm5SekxYSmxZV1JoWW14bExXVnNjMlV0YzJodmNuUTZJQ0FnSUNBZ0lDQWdJQ0FnSUdaaGJITmxJQ0ZrWldaaGRXeDBPeUFnSUM4dklFeGxkQ0I1YjNVZ1kyaHZjMlVnWW1WMGQyVmxiaUJ6YUc5eWRHVnlJSGR2Y21SeklHeHBhMlVnWUhOdFlDQjJjeUIxYm1SbGNuTjBZVzVrWVdKc1pTQjNiM0prY3lCc2FXdGxJR0J0YjJKcGJHVmdYSEpjYmlSaWNtVmhhM0J2YVc1MGN5MXdjbVZtYVhnNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lrQmNJaUFoWkdWbVlYVnNkRHNnSUNBZ0lDOHZJRk41YldKdmJDQjFjMlZrSUhSdklIQnlaV1pwZUNCQ2NtVmhhM0J2YVc1MGMxeHlYRzRrWlc1aFlteGxMV2R5YVdRdFoyRndPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKMVpTQWhaR1ZtWVhWc2REc2dJQ0FnTHk4Z1JXNWhZbXhsSUZOd1lXTnBibWN2UjNWMGRHVnlJR0psZEhkbFpXNGdSM0pwWkNCbGJHVnRaVzUwYzF4eVhHNGtaVzVoWW14bExXRnNiQzFqYjJ4dmNpMTJZWEpwWVc1ME9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabUZzYzJVZ0lXUmxabUYxYkhRN0lDQWdMeThnUjJWdVpYSmhkR1VnUlhabGNua2dRMjlzYjNJZ2MzUjViR1Z6WEhKY2JpUmxibUZpYkdVdGRISmhibk5wZEdsdmJuTTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQjBjblZsSUNGa1pXWmhkV3gwT3lBZ0lDQXZMeUJGYm1GaWJHVWdkSEpoYm5OcGRHbHZibk1nWVc1a0lHRnVhVzFoZEdsdmJuTmNjbHh1SkdWdVlXSnNaUzF3Y21WbVpYSnpMWEpsWkhWalpXUXRiVzkwYVc5dUxXMWxaR2xoTFhGMVpYSjVPaUFnSUhSeWRXVWdJV1JsWm1GMWJIUTdJQ0FnSUM4dklFUnBjMkZpYkdVZ2RISmhibk5wZEdsdmJuTWdhVzRnVW1Wa2RXTmxaQ0JOYjNScGIyNGdUV1ZrYVdFZ1VYVmxjbmxjY2x4dUpHVnVZV0pzWlMxbWJIVnBaQzFtYjI1MGMybDZaWE02SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWmhiSE5sSUNGa1pXWmhkV3gwT3lBZ0lDOHZJQ29nUlc1aFlteGxJRVpzZFdsa0lIUjVjRzluY21Gd2FIbGNjbHh1SkdkbGJtVnlZWFJsTFhOd1lXTnBibWN0WTJ4aGMzTmxjem9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSeWRXVWdJV1JsWm1GMWJIUTdJQ0FnSUM4dklFVnVZV0pzWlNCVGNHRmphVzVuSUVOc1lYTnpaWE5jY2x4dUpHZGxibVZ5WVhSbExXZHlhV1F0WTJ4aGMzTmxjem9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnlkV1VnSVdSbFptRjFiSFE3SUNBZ0lDOHZJRVZ1WVdKc1pTQkhjbWxrSUVOc1lYTnpaWE5jY2x4dUpHZGxibVZ5WVhSbExXOWlhbVZqZEMxamJHRnpjMlZ6T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lIUnlkV1VnSVdSbFptRjFiSFE3SUNBZ0lDOHZJRVZ1WVdKc1pTQnZZbXBsWTNRZ1EyeGhjM05sYzF4eVhHNGtaMlZ1WlhKaGRHVXRkWFJwYkdsMGVTMWpiR0Z6YzJWek9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSEoxWlNBaFpHVm1ZWFZzZERzZ0lDQWdMeThnUlc1aFlteGxJSFYwYVd4cGRHbGxjeUJEYkdGemMyVnpYSEpjYmlSblpXNWxjbUYwWlMxamIyMXdiMjVsYm5RdFkyeGhjM05sY3pvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMGNuVmxJQ0ZrWldaaGRXeDBPeUFnSUNBdkx5QkZibUZpYkdVZ1kyOXRjRzl1Wlc1MElFTnNZWE56WlhOY2NseHVKR1Z1WVdKc1pTMWtaV0oxWjJkcGJtYzZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR1poYkhObElDRmtaV1poZFd4ME95QWdJQzh2SUVWdVlXSnNaU0JFWldKMVoyZHBibWNnVTNSbGNITmNjbHh1WEhKY2JpOHZJQ29nUm1WaGRIVnlaU0J1YjNRZ1puVnNiSGtnYVcxd2JHVnRaVzUwWldRZ2VXVjBYSEpjYmx4eVhHNHZMMXh5WEc0dkx5Qk9ZVzFwYm1jZ1JHbGpkR2x2Ym1GeWVWeHlYRzR2TDF4eVhHNWNjbHh1UUdsdGNHOXlkQ0JjSWk0dmJtRnRhVzVuTDJScFkzUnBiMjVoY25sY0lqdGNjbHh1WEhKY2JpOHZYSEpjYmk4dklFSnlaV0ZyY0c5cGJuUnpYSEpjYmk4dlhISmNibHh5WEc1QWFXMXdiM0owSUZ3aUxpOWljbVZoYTNCdmFXNTBjeTlpY21WaGEzQnZhVzUwYzF3aU8xeHlYRzVjY2x4dUx5OWNjbHh1THk4Z1IzSnBaRnh5WEc0dkwxeHlYRzVjY2x4dVFHbHRjRzl5ZENCY0lpNHZaM0pwWkM5bmNtbGtYQ0k3WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJEYjI1MFlXbHVaWEp6WEhKY2JpOHZYSEpjYmx4eVhHNUFhVzF3YjNKMElGd2lMaTlqYjI1MFlXbHVaWEp6TDJOdmJuUmhhVzVsY25OY0lqdGNjbHh1WEhKY2JpOHZYSEpjYmk4dklGTndZV05wYm1kY2NseHVMeTljY2x4dVhISmNia0JwYlhCdmNuUWdYQ0l1TDNOd1lXTmxMM053WVdObFhDSTdYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QlVhR1Z0WlZ4eVhHNHZMMXh5WEc1Y2NseHVRR2x0Y0c5eWRDQmNJaTR2ZEdobGJXVXZZMjlzYjNKY0lqdGNjbHh1WEhKY2JpOHZYSEpjYmk4dklFUmxjMmxuYmx4eVhHNHZMMXh5WEc1Y2NseHVRR2x0Y0c5eWRDQmNJaTR2WkdWemFXZHVMMkp2Y21SbGNsd2lPMXh5WEc1QWFXMXdiM0owSUZ3aUxpOWtaWE5wWjI0dmMyaGhaRzkzWENJN1hISmNia0JwYlhCdmNuUWdYQ0l1TDJSbGMybG5iaTlzWVhsdmRYUmNJanRjY2x4dVFHbHRjRzl5ZENCY0lpNHZaR1Z6YVdkdUwyeHBibXRjSWp0Y2NseHVRR2x0Y0c5eWRDQmNJaTR2WkdWemFXZHVMM1JoWW14bFhDSTdYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QlVlWEJ2WjNKaGNHaDVYSEpjYmk4dlhISmNibHh5WEc1QWFXMXdiM0owSUZ3aUxpOTBlWEJ2WjNKaGNHaDVMM1JsZUhSY0lqdGNjbHh1UUdsdGNHOXlkQ0JjSWk0dmRIbHdiMmR5WVhCb2VTOW1iMjUwWENJN1hISmNia0JwYlhCdmNuUWdYQ0l1TDNSNWNHOW5jbUZ3YUhrdmFHVmhaR2x1WjF3aU8xeHlYRzVBYVcxd2IzSjBJRndpTGk5MGVYQnZaM0poY0doNUwzUnBkR3hsWENJN1hISmNia0JwYlhCdmNuUWdYQ0l1TDNSNWNHOW5jbUZ3YUhrdlkyOWtaVndpTzF4eVhHNUFhVzF3YjNKMElGd2lMaTkwZVhCdlozSmhjR2g1TDJ0aVpGd2lPMXh5WEc1QWFXMXdiM0owSUZ3aUxpOTBlWEJ2WjNKaGNHaDVMMmh5WENJN1hISmNibHh5WEc0dkwxeHlYRzR2THlCTmFYTmpaV3hzWVc1bGIzVnpYSEpjYmk4dlhISmNibHh5WEc1QWFXMXdiM0owSUZ3aUxpOXRhWE5qTDIxcGMyTmNJanRjY2x4dVhISmNiaTh2WEhKY2JpOHZJRU52YlhCdmJtVnVkSE5jY2x4dUx5OWNjbHh1WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMk52YlhCdmJtVnVkSE12WTI5dWRISnZiSE5jSWp0Y2NseHVRR2x0Y0c5eWRDQmNJaTR2WTI5dGNHOXVaVzUwY3k5cGJuQjFkRndpTzF4eVhHNUFhVzF3YjNKMElGd2lMaTlqYjIxd2IyNWxiblJ6TDJKMWRIUnZibHdpTzF4eVhHNUFhVzF3YjNKMElGd2lMaTlqYjIxd2IyNWxiblJ6TDNKaFpHbHZYQ0k3WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMk52YlhCdmJtVnVkSE12WTJobFkydGliM2hjSWp0Y2NseHVRR2x0Y0c5eWRDQmNJaTR2WTI5dGNHOXVaVzUwY3k5eVlXNW5aVndpTzF4eVhHNUFhVzF3YjNKMElGd2lMaTlqYjIxd2IyNWxiblJ6TDNOM2FYUmphRndpTzF4eVhHNUFhVzF3YjNKMElGd2lMaTlqYjIxd2IyNWxiblJ6TDJ4cGMzUmNJanRjY2x4dVFHbHRjRzl5ZENCY0lpNHZZMjl0Y0c5dVpXNTBjeTlqYjI1MGNtOXNYQ0k3WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMk52YlhCdmJtVnVkSE12YldWdWRWd2lPMXh5WEc1QWFXMXdiM0owSUZ3aUxpOWpiMjF3YjI1bGJuUnpMMlJ5YjNCa2IzZHVYQ0k3WEhKY2JrQnBiWEJ2Y25RZ1hDSXVMMk52YlhCdmJtVnVkSE12WjNKdmRYQmNJanRjY2x4dVFHbHRjRzl5ZENCY0lpNHZZMjl0Y0c5dVpXNTBjeTlsYldKbFpGd2lPMXh5WEc1QWFXMXdiM0owSUZ3aUxpOWpiMjF3YjI1bGJuUnpMMkp5WldGa1kzSjFiV0pjSWp0Y2NseHVYSEpjYmk4dlhISmNiaTh2SUdsamIyNXpYSEpjYmk4dlhISmNibHh5WEc1QWFXMXdiM0owSUZ3aUxpOXBZMjl1TDJsamIyNWNJanRjY2x4dUlpd0tDUWtpTHk5Y2NseHVMeThnVW1WaFpHRmliR1VnZDI5eVpITmNjbHh1THk5Y2NseHVYSEpjYmk4dlhISmNiaTh2SUZObGRIUnBibWRjY2x4dUx5OWNjbHh1THk4Z1RXRndJR052Ym5SaGFXNXBibWNnY21WaFpHRmliR1VnWW5KbFlXdHdiMmx1ZEhOY2NseHVKR0p5WldGcmNHOXBiblJ6TFhKbFlXUmhZbXhsT2lBb1hISmNiaUFnYzIwNklHMXZZbWxzWlN4Y2NseHVJQ0J0WkRvZ2RHRmliR1YwTEZ4eVhHNGdJR3huT2lCa1pYTnJkRzl3TEZ4eVhHNGdJSGhzT2lCc1lYSm5aVnh5WEc0cElDRmtaV1poZFd4ME8xeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5QkNjbVZoYTNCdmFXNTBjeUJUWlhSMGFXNW5jMXh5WEc0dkwxeHlYRzVjY2x4dUx5OWNjbHh1THk4Z1UyVjBkR2x1WjF4eVhHNHZMMXh5WEc0dkx5QkVaV1pwYm1VZ2RHaGxJRzFwYm1sdGRXMGdaR2x0Wlc1emFXOXVjeUJoZENCM2FHbGphQ0I1YjNWeUlHeGhlVzkxZENCM2FXeHNJR05vWVc1blpTeGNjbHh1THk4Z1lXUmhjSFJwYm1jZ2RHOGdaR2xtWm1WeVpXNTBJSE5qY21WbGJpQnphWHBsY3l3Z1ptOXlJSFZ6WlNCcGJpQnRaV1JwWVNCeGRXVnlhV1Z6TGx4eVhHNGtZbkpsWVd0d2IybHVkSE02SUNoY2NseHVJQ0J1ZFd4c09pQXdMRnh5WEc0Z0lITnRPaUExTnpad2VDeGNjbHh1SUNCdFpEb2dOelk0Y0hnc1hISmNiaUFnYkdjNklEazVNbkI0TEZ4eVhHNGdJSGhzT2lBeE1qQXdjSGhjY2x4dUtTQWhaR1ZtWVhWc2REdGNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdSM0pwWkNCVFpYUjBhVzVuYzF4eVhHNHZMMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdVMlYwZEdsdVoxeHlYRzR2TDF4eVhHNGtaM0pwWkMxamIyeDFiVzV6T2lBZ0lDQWdJQ0F5TkNBaFpHVm1ZWFZzZERzZ0x5OGdVMlYwSUhSb1pTQnVkVzFpWlhJZ2IyWWdZMjlzZFcxdWMxeHlYRzRrWjNKcFpDMW5ZWEE2SUNBZ0lDQWdJQ0FnSUNBNGNIZ2dJV1JsWm1GMWJIUTdJQzh2SUhOd1pXTnBabmtnZEdobElIZHBaSFJvSUc5bUlIUm9aU0JuWVhBZ0x5OGdWWE5wYm1jZ2RXNXBkQ0JnY0hoZ0lHWnZjaUJqYjI1emFYTjBaVzUwSUdGdVpDQnBibVJsY0dWdVpHVnVkQ0JUY0dGamFXNW5JR0psZEhkbFpXNGdZMjlzZFcxdWMxeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5QkRiMjUwWVdsdVpYSnpJRk5sZEhScGJtZHpYSEpjYmk4dlhISmNibHh5WEc0dkwxeHlYRzR2THlCSmJtaGxjbWwwWEhKY2JpOHZYSEpjYmlSamIyNTBZV2x1WlhJdGNHRmtaR2x1WnkxNE9pQWdJQ0FnSUNBZ0lDQWdJQ1JuY21sa0xXZGhjQ0F2SURJZ0lXUmxabUYxYkhRN0lDOHZJRU52Ym5SaGFXNWxjaUJ3WVdSa2FXNW5JR3hsWm5RZ1lXNWtJSEpwWjJoMFhISmNibHh5WEc0dkwxeHlYRzR2THlCVFpYUjBhVzVuWEhKY2JpOHZYSEpjYmlSamIyNTBZV2x1WlhJdGJXRjRkMmxrZEdnNklDQWdJQ0FnSUNBZ0lDQWdJRGt3SlNBaFpHVm1ZWFZzZER0Y2NseHVJaXdLQ1FraUx5OWNjbHh1THk4Z1UzQmhZMlVnVTJWMGRHbHVaM05jY2x4dUx5OWNjbHh1WEhKY2JpOHZYSEpjYmk4dklGTmxkSFJwYm1kY2NseHVMeTljY2x4dUpITndZV05sTFhSNWNHOW5jbUZ3YUhrNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnTGpWbGJTQWhaR1ZtWVhWc2REc2dMeThnUkdWbVlYVnNkQ0JUY0dGalpTQm1iM0lnZEhsd2IyZHlZWEJvZVZ4eVhHNWNjbHh1THk4Z1JHVm1ZWFZzZENCVGFYcGxjeUJ2WmlCemNHRmpaWE5jY2x4dUpITndZV05sTFhOcGVtVnpPaUFvWEhKY2JpQWdZWFYwYnpvZ1lYVjBieXhjY2x4dUlDQXdPaUF3TEZ4eVhHNGdJREk2SURJbExGeHlYRzRnSURRNklEUWxMRnh5WEc0Z0lEWTZJRFlsTEZ4eVhHNGdJRGc2SURnbExGeHlYRzRnSURFd09pQXhNQ1VzWEhKY2Jpa2dJV1JsWm1GMWJIUTdYSEpjYmlJc0Nna0pJaTh2WEhKY2JpOHZJRUpoYzJsaklFTnZiRzl5Y3lCVFpYUjBhVzVuYzF4eVhHNHZMMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdVMlYwZEdsdVoxeHlYRzR2TDF4eVhHNGtZbXgxWlRvZ0lDQWdJQ0FnSUNBZ0l6RTRPVEJtWmlBaFpHVm1ZWFZzZER0Y2NseHVKR2x1WkdsbmJ6b2dJQ0FnSUNBZ0lDTTFOREF3Wm1ZZ0lXUmxabUYxYkhRN1hISmNiaVJ3ZFhKd2JHVTZJQ0FnSUNBZ0lDQWpPREExWVdRMUlDRmtaV1poZFd4ME8xeHlYRzRrY0dsdWF6b2dJQ0FnSUNBZ0lDQWdJMlZpTW1ZNU5pQWhaR1ZtWVhWc2REdGNjbHh1SkhKbFpEb2dJQ0FnSUNBZ0lDQWdJQ05tTlRJeU1tUWdJV1JsWm1GMWJIUTdYSEpjYmlSdmNtRnVaMlU2SUNBZ0lDQWdJQ0FqWm1FNFl6RTJJQ0ZrWldaaGRXeDBPMXh5WEc0a2VXVnNiRzkzT2lBZ0lDQWdJQ0FnSTJaaFpHSXhOQ0FoWkdWbVlYVnNkRHRjY2x4dUpHZHlaV1Z1T2lBZ0lDQWdJQ0FnSUNNMU1tTTBNV0VnSVdSbFptRjFiSFE3WEhKY2JpUjBaV0ZzT2lBZ0lDQWdJQ0FnSUNBak1qQmpPVGszSUNGa1pXWmhkV3gwTzF4eVhHNGtZM2xoYmpvZ0lDQWdJQ0FnSUNBZ0l6RXpZekpqTWlBaFpHVm1ZWFZzZER0Y2NseHVKR0p5YjNkdU9pQWdJQ0FnSUNBZ0lDTTJaRFJqTkRFZ0lXUmxabUYxYkhRN1hISmNiaVJzYVcxbE9pQWdJQ0FnSUNBZ0lDQWpZVEJrT1RFeElDRmtaV1poZFd4ME8xeHlYRzRrWjI5c1pEb2dJQ0FnSUNBZ0lDQWdJMlpoWVdReE5DQWhaR1ZtWVhWc2REdGNjbHh1SkhadmJHTmhibTg2SUNBZ0lDQWdJQ05tWVRVME1XTWdJV1JsWm1GMWJIUTdYSEpjYmlSblpXVnJZbXgxWlRvZ0lDQWdJQ0FqTW1ZMU5HVmlJQ0ZrWldaaGRXeDBPMXh5WEc0a2RtbDJhV1IyYjJsc1pYUTZJQ0FnSTJJM01qRm1aaUFoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJqYjJ4dmNuTTZJQ2hjY2x4dUlDQmNJbUpzZFdWY0lqb2dJQ0FnSUNBZ0lDQWtZbXgxWlN4Y2NseHVJQ0JjSW1sdVpHbG5iMXdpT2lBZ0lDQWdJQ0FrYVc1a2FXZHZMRnh5WEc0Z0lGd2ljSFZ5Y0d4bFhDSTZJQ0FnSUNBZ0lDUndkWEp3YkdVc1hISmNiaUFnWENKd2FXNXJYQ0k2SUNBZ0lDQWdJQ0FnSkhCcGJtc3NYSEpjYmlBZ1hDSnlaV1JjSWpvZ0lDQWdJQ0FnSUNBZ0pISmxaQ3hjY2x4dUlDQmNJbTl5WVc1blpWd2lPaUFnSUNBZ0lDQWtiM0poYm1kbExGeHlYRzRnSUZ3aWVXVnNiRzkzWENJNklDQWdJQ0FnSUNSNVpXeHNiM2NzWEhKY2JpQWdYQ0puY21WbGJsd2lPaUFnSUNBZ0lDQWdKR2R5WldWdUxGeHlYRzRnSUZ3aWRHVmhiRndpT2lBZ0lDQWdJQ0FnSUNSMFpXRnNMRnh5WEc0Z0lGd2lZM2xoYmx3aU9pQWdJQ0FnSUNBZ0lDUmplV0Z1TEZ4eVhHNGdJRndpWW5KdmQyNWNJam9nSUNBZ0lDQWdJQ1JpY205M2JpeGNjbHh1SUNCY0lteHBiV1ZjSWpvZ0lDQWdJQ0FnSUNBa2JHbHRaU3hjY2x4dUlDQmNJbWR2YkdSY0lqb2dJQ0FnSUNBZ0lDQWtaMjlzWkN4Y2NseHVJQ0JjSW5admJHTmhibTljSWpvZ0lDQWdJQ0FrZG05c1kyRnVieXhjY2x4dUlDQmNJbWRsWld0aWJIVmxYQ0k2SUNBZ0lDQWtaMlZsYTJKc2RXVXNYSEpjYmlBZ1hDSjJhWFpwWkhadmFXeGxkRndpT2lBZ0pIWnBkbWxrZG05cGJHVjBMRnh5WEc0cElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OWNjbHh1THk4Z1IzSmhlWE5qWVd4bElFTnZiRzl5YzF4eVhHNHZMMXh5WEc1Y2NseHVKSGRvYVhSbE9pQWdJQ0FnSUNBZ0lDQWpabVptSUNGa1pXWmhkV3gwTzF4eVhHNGtaM0poZVMweE1EQTZJQ0FnSUNBZ0lHaHpiQ2d3TENBd0pTd2dPVFFsS1NBaFpHVm1ZWFZzZER0Y2NseHVKR2R5WVhrdE1qQXdPaUFnSUNBZ0lDQm9jMndvTUN3Z01DVXNJRGd6SlNrZ0lXUmxabUYxYkhRN1hISmNiaVJuY21GNUxUTXdNRG9nSUNBZ0lDQWdhSE5zS0RBc0lEQWxMQ0EzTWlVcElDRmtaV1poZFd4ME8xeHlYRzRrWjNKaGVTMDFNREE2SUNBZ0lDQWdJR2h6YkNnd0xDQXdKU3dnTlRBbEtTQWhaR1ZtWVhWc2REdGNjbHh1SkdkeVlYa3ROakF3T2lBZ0lDQWdJQ0JvYzJ3b01Dd2dNQ1VzSURNNUpTa2dJV1JsWm1GMWJIUTdYSEpjYmlSbmNtRjVMVGN3TURvZ0lDQWdJQ0FnYUhOc0tEQXNJREFsTENBeU9DVXBJQ0ZrWldaaGRXeDBPMXh5WEc0a1ozSmhlUzA0TURBNklDQWdJQ0FnSUdoemJDZ3dMQ0F3SlN3Z01UY2xLU0FoWkdWbVlYVnNkRHRjY2x4dUpHZHlZWGt0T1RBd09pQWdJQ0FnSUNCb2Myd29NQ3dnTUNVc0lEWWxLU0FoWkdWbVlYVnNkRHRjY2x4dUpHSnNZV05yT2lBZ0lDQWdJQ0FnSUNBak1EQXdJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdSR1Z5YVhabFpGeHlYRzR2TDF4eVhHNWNjbHh1THk5Y2NseHVMeThnVkdobGJXVWdRMjlzYjNKelhISmNiaTh2WEhKY2JseHlYRzRrWkdsellXSnNaV1E2SUNBZ0lDQWdJQ0FrWjNKaGVTMDJNREFnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrY0hKcGJXRnllVG9nSUNBZ0lDQWdJQ0FrY0hWeWNHeGxJQ0ZrWldaaGRXeDBPMXh5WEc0a2MyVmpiMjVrWVhKNU9pQWdJQ0FnSUNBa1ozSmhlUzAxTURBZ0lXUmxabUYxYkhRN1hISmNiaVIyWVd4cFpEb2dJQ0FnSUNBZ0lDQWdJQ1JuY21WbGJpQWhaR1ZtWVhWc2REdGNjbHh1SkdsdVptODZJQ0FnSUNBZ0lDQWdJQ0FnSkdONVlXNGdJV1JsWm1GMWJIUTdYSEpjYmlSM1lYSnVPaUFnSUNBZ0lDQWdJQ0FnSUNSNVpXeHNiM2NnSVdSbFptRjFiSFE3WEhKY2JpUmxjbkp2Y2pvZ0lDQWdJQ0FnSUNBZ0lDUnlaV1FnSVdSbFptRjFiSFE3WEhKY2JpUnNhV2RvZERvZ0lDQWdJQ0FnSUNBZ0lDUm5jbUY1TFRFd01DQWhaR1ZtWVhWc2REdGNjbHh1SkdSaGNtczZJQ0FnSUNBZ0lDQWdJQ0FnSkdkeVlYa3ROekF3SUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkhSb1pXMWxMV052Ykc5eWN6b2dLRnh5WEc0Z0lGd2liR2xuYUhSY0lqb2dJQ0FnSUNBZ0lDQWdJQ1JzYVdkb2RDeGNjbHh1SUNCY0ltUmhjbXRjSWpvZ0lDQWdJQ0FnSUNBZ0lDQWtaR0Z5YXl4Y2NseHVJQ0JjSW5CeWFXMWhjbmxjSWpvZ0lDQWdJQ0FnSUNBa2NISnBiV0Z5ZVN4Y2NseHVJQ0JjSW5ObFkyOXVaR0Z5ZVZ3aU9pQWdJQ0FnSUNBa2MyVmpiMjVrWVhKNUxGeHlYRzRnSUZ3aWFXNW1iMXdpT2lBZ0lDQWdJQ0FnSUNBZ0lDUnBibVp2TEZ4eVhHNGdJRndpZDJGeWJsd2lPaUFnSUNBZ0lDQWdJQ0FnSUNSM1lYSnVMRnh5WEc0Z0lGd2lkbUZzYVdSY0lqb2dJQ0FnSUNBZ0lDQWdJQ1IyWVd4cFpDeGNjbHh1SUNCY0ltVnljbTl5WENJNklDQWdJQ0FnSUNBZ0lDQWtaWEp5YjNJc1hISmNiaWtnSVdSbFptRjFiSFE3WEhKY2JseHlYRzR2THlCRGIyMWlhVzVsSUVGc2JDQmpiMnh2Y25NZ2FXWWdKR1Z1WVdKc1pTMWhiR3d0WTI5c2IzSXRkbUZ5YVdGdWRDQnZjSFJwYjI0Z2FYTWdaVzVoWW14bFpGeHlYRzVBYVdZZ0pHVnVZV0pzWlMxaGJHd3RZMjlzYjNJdGRtRnlhV0Z1ZENCN1hISmNiaUFnSkhSb1pXMWxMV052Ykc5eWN6b2diV0Z3TFcxbGNtZGxLQ1JqYjJ4dmNuTXNJQ1IwYUdWdFpTMWpiMnh2Y25NcE8xeHlYRzU5WEhKY2JpSXNDZ2tKSWk4dlhISmNiaTh2SUVKdmNtUmxjbk1nVTJWMGRHbHVaM05jY2x4dUx5OWNjbHh1WEhKY2JpOHZYSEpjYmk4dklGTmxkSFJwYm1kY2NseHVMeTljY2x4dUpHSnZjbVJsY2kxamIyeHZjam9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSbmNtRjVMVEl3TUNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmlSaWIzSmtaWEozYVdSMGFDMXViM0p0WVd3NklDQWdJQ0FnSUNBZ0lDQWdJQ0F4Y0hnZ0lXUmxabUYxYkhRN1hISmNiaVJpYjNKa1pYSjNhV1IwYUMxM2FXUmxPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXpjSGdnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrWW05eVpHVnljbUZrYVhWekxYTnRZV3hzT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdMakkxWlcwZ0lXUmxabUYxYkhRN1hISmNiaVJpYjNKa1pYSnlZV1JwZFhNdGJtOXliV0ZzT2lBZ0lDQWdJQ0FnSUNBZ0lDQXVOV1Z0SUNGa1pXWmhkV3gwTzF4eVhHNGtZbTl5WkdWeWNtRmthWFZ6TFd4aGNtZGxPaUFnSUNBZ0lDQWdJQ0FnSUNBZ01XVnRJQ0ZrWldaaGRXeDBPMXh5WEc0a1ltOXlaR1Z5Y21Ga2FYVnpMWEJwYkd3NklDQWdJQ0FnSUNBZ0lDQWdJQ0FnTlRCbGJTQWhaR1ZtWVhWc2REdGNjbHh1SkdKdmNtUmxjbkpoWkdsMWN5MWphWEpqYkdVNklDQWdJQ0FnSUNBZ0lDQWdJRFV3SlNBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dlhISmNiaTh2SUVSbGNtbDJaV1JjY2x4dUx5OWNjbHh1SkdKdmNtUmxjbmRwWkhSb0xXUmxabUYxYkhRNklDQWdJQ0FnSUNBZ0lDQWdJQ1JpYjNKa1pYSjNhV1IwYUMxdWIzSnRZV3dnSVdSbFptRjFiSFE3WEhKY2JpUmliM0prWlhKeVlXUnBkWE10WkdWbVlYVnNkRG9nSUNBZ0lDQWdJQ0FnSUNBa1ltOXlaR1Z5Y21Ga2FYVnpMWE50WVd4c0lDRmtaV1poZFd4ME8xeHlYRzRrWW05eVpHVnlMV1JsWm1GMWJIUTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKR0p2Y21SbGNuZHBaSFJvTFdSbFptRjFiSFFnYzI5c2FXUWdKR0p2Y21SbGNpMWpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2NseHVJaXdLQ1FraUx5OWNjbHh1THk4Z1UyaGhaRzkzY3lCVFpYUjBhVzVuYzF4eVhHNHZMMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdVMlYwZEdsdVoxeHlYRzR2TDF4eVhHNGtZbTk0YzJoaFpHOTNMWE50WVd4c09pQWdJQ0FnSUNBZ0lDQWdJQ0F4Y0hnZ01YQjRJRE53ZUNBd0lISm5ZbUVvSkdKc1lXTnJMQ0F1TURjMUtTQWhaR1ZtWVhWc2REdGNjbHh1SkdKdmVITm9ZV1J2ZHkxdWIzSnRZV3c2SUNBZ0lDQWdJQ0FnSUNBZ01YQjRJRFJ3ZUNBMmNIZ2dNQ0J5WjJKaEtDUmliR0ZqYXl3Z0xqRTFLU0FoWkdWbVlYVnNkRHRjY2x4dUpHSnZlSE5vWVdSdmR5MXNZWEpuWlRvZ0lDQWdJQ0FnSUNBZ0lDQWdNbkI0SURFd2NIZ2dNVFZ3ZUNBd0lISm5ZbUVvSkdKc1lXTnJMQ0F1TVRjMUtTQWhaR1ZtWVhWc2REdGNjbHh1SkdKdmVITm9ZV1J2ZHkxeWIzVnVaRG9nSUNBZ0lDQWdJQ0FnSUNBZ01DQTFjSGdnTVRWd2VDQnlaMkpoS0NSaWJHRmpheXdnTGpFMUtTQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpOHZYSEpjYmk4dklFUmxjbWwyWldSY2NseHVMeTljY2x4dUpHSnZlSE5vWVdSdmR5MWtaV1poZFd4ME9pQWdJQ0FnSUNBZ0lDQWdKR0p2ZUhOb1lXUnZkeTF1YjNKdFlXd2dJV1JsWm1GMWJIUTdYSEpjYmlJc0Nna0pJaTh2WEhKY2JpOHZJRXhoZVc5MWRDQlRaWFIwYVc1bmMxeHlYRzR2TDF4eVhHNHZMeUJWYzJsdVp5QndlQ0IxYm1sMElIUnZJR3RsWlhBZ2MzQmhZMmx1WnlCamIyNXpkR0Z1ZENCeVpXZGhjbVJzWlhOeklHOW1JR1p2Ym5RdGMybDZaVnh5WEc1Y2NseHVMeTljY2x4dUx5OGdVMlYwZEdsdVoxeHlYRzR2TDF4eVhHNHZMeUJJWldGa1pYSmNjbHh1SkdobFlXUmxjaTFpWVdOclozSnZkVzVrT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsbUtDUmtaWE5wWjI0dGRHaGxiV1VnUFQwZ2JHbG5hSFFzSUNSM2FHbDBaU3dnSkdkeVlYa3RPREF3S1NBaFpHVm1ZWFZzZER0Y2NseHVKR2hsWVdSbGNpMWpiMnh2Y2pvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05zY2kxaGRYUnZLQ1JvWldGa1pYSXRZbUZqYTJkeWIzVnVaQ2tnSVdSbFptRjFiSFE3WEhKY2JpUm9aV0ZrWlhJdFltOXlaR1Z5ZEc5d09pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtZbTl5WkdWeWQybGtkR2d0ZDJsa1pTQnpiMnhwWkNBa2NISnBiV0Z5ZVNBaFpHVm1ZWFZzZER0Y2NseHVKR2hsWVdSbGNpMW9aV2xuYUhRNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRFkwY0hnZ0lXUmxabUYxYkhRN1hISmNiaVJvWldGa1pYSXRjR0ZrWkdsdVp5MTRPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F5TkhCNElDRmtaV1poZFd4ME8xeHlYRzRrYUdWaFpHVnlMWHBwYm1SbGVEb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVRVZ0lXUmxabUYxYkhRN1hISmNiaVJvWldGa1pYSXRkSEpoYm5OcGRHbHZiam9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J0YVc0dGFHVnBaMmgwSUM0ek5YTWdaV0Z6WlMxcGJpMXZkWFFzSUd4cGJtVXRhR1ZwWjJoMElDNHpOWE1nWldGelpTMXBiaTF2ZFhRZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0dkx5QnRZV2x1SUdGdVpDQmliMlI1SUd4aGVXOTFkRnh5WEc0a1ltOWtlUzFpWVdOclozSnZkVzVrT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2FXWW9KR1JsYzJsbmJpMTBhR1Z0WlNBOVBTQnNhV2RvZEN3Z2FITnNLREFzSURBbExDQTVPQ1VwTENBa1pHRnlheWtnSVdSbFptRjFiSFE3WEhKY2JpUmliMlI1TFdOdmJHOXlPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiSEl0WVhWMGJ5Z2tZbTlrZVMxaVlXTnJaM0p2ZFc1a0xDQWtkMmhwZEdVc0lDUmtZWEpyS1NBaFpHVm1ZWFZzZER0Y2NseHVKRzFoYVc0dFltRmphMmR5YjNWdVpEb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JpYjJSNUxXSmhZMnRuY205MWJtUWdJV1JsWm1GMWJIUTdYSEpjYmlSdFlXbHVMWHBwYm1SbGVEb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OGdSbTl2ZEdWeVhISmNiaVJtYjI5MFpYSXRZbUZqYTJkeWIzVnVaRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrWjNKaGVTMDVNREFnSVdSbFptRjFiSFE3WEhKY2JpUm1iMjkwWlhJdFkyOXNiM0k2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiSEl0WVhWMGJ5Z2tabTl2ZEdWeUxXSmhZMnRuY205MWJtUXNJQ1IzYUdsMFpTd2dKR1JoY21zcElDRmtaV1poZFd4ME8xeHlYRzRrWm05dmRHVnlMWEJoWkdScGJtY3RlRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTWpSd2VDQWhaR1ZtWVhWc2REdGNjbHh1SkdadmIzUmxjaTF3WVdSa2FXNW5MWGs2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSURRNGNIZ2dJV1JsWm1GMWJIUTdYSEpjYmlSbWIyOTBaWEl0ZW1sdVpHVjRPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0lDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OGdVMmxrWldKaGNseHlYRzRrYzJsa1pXSmhjaTFpWVdOclozSnZkVzVrT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYVdZb0pHUmxjMmxuYmkxMGFHVnRaU0E5UFNCc2FXZG9kQ3dnSkhkb2FYUmxMQ0FrWjNKaGVTMDRNREFwSUNGa1pXWmhkV3gwTzF4eVhHNGtjMmxrWldKaGNpMWpiMnh2Y2pvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZMnh5TFdGMWRHOG9KSE5wWkdWaVlYSXRZbUZqYTJkeWIzVnVaQ3dnSkhkb2FYUmxMQ0FrWkdGeWF5a2dJV1JsWm1GMWJIUTdYSEpjYmlSemFXUmxZbUZ5TFhwcGJtUmxlRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBeU1DQWhaR1ZtWVhWc2REdGNjbHh1SkhOcFpHVmlZWEl0ZEhKaGJuTnBkR2x2YmpvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUd4bFpuUWdMalZ6SUdWaGMyVXRhVzR0YjNWMElDRmtaV1poZFd4ME8xeHlYRzRrYzJsa1pXSmhjaTF0YVc1M2FXUjBhRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTWpVd2NIZ2dJV1JsWm1GMWJIUTdYSEpjYmlSemFXUmxZbUZ5TFcxaGVIZHBaSFJvT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBMk1IWjNJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVKRzkyWlhKc1lYa3RZbUZqYTJkeWIzVnVaRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSEpuWW1Fb0pHSnNZV05yTENBdU56VXBJQ0ZrWldaaGRXeDBPMXh5WEc0a2IzWmxjbXhoZVMxNmFXNWtaWGc2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ01Ua2dJV1JsWm1GMWJIUTdYSEpjYmlSdmRtVnliR0Y1TFhSeVlXNXphWFJwYjI0NklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdmNHRmphWFI1SUM0ek5YTWdaV0Z6WlMxcGJpMXZkWFFzSUhacGMybGlhV3hwZEhrZ0xqTTFjeUJsWVhObExXbHVMVzkxZENBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dlhISmNiaTh2SUVSbGNtbDJaV1JjY2x4dUx5OWNjbHh1THk4Z1NHVmhaR1Z5WEhKY2JpUm9aV0ZrWlhJdGFHVnBaMmgwTFdOdmJHeGhjSE5sWkRvZ0lDQWdJQ0FnSUNBZ0lDQWthR1ZoWkdWeUxXaGxhV2RvZENBcUlDUmtaV1poZFd4MExYTnRZV3hzTFhGMVlXNTBhWFI1SUNGa1pXWmhkV3gwTzF4eVhHNGlMQW9KQ1NJdkwxeHlYRzR2THlCQmJtTm9iM0lnWld4bGJXVnVkSE1nVTJWMGRHbHVaM05jY2x4dUx5OWNjbHh1WEhKY2JpOHZYSEpjYmk4dklGTmxkSFJwYm1kY2NseHVMeTljY2x4dUpHeHBibXN0WTI5c2IzSTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSd2NtbHRZWEo1SUNGa1pXWmhkV3gwTzF4eVhHNGtiR2x1YXkxa1pXTnZjbUYwYVc5dU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JtOXVaU0FoWkdWbVlYVnNkRHRjY2x4dUpHeHBibXN0YUc5MlpYSXRaR1ZqYjNKaGRHbHZiam9nSUNBZ0lDQWdJQ0FnSUhWdVpHVnliR2x1WlNBaFpHVm1ZWFZzZER0Y2NseHVKR3hwYm1zdGFHOTJaWEl0WkdGeWF5MXpkR1Z3T2lBZ0lDQWdJQ0FnSUNBZ0lETWdJV1JsWm1GMWJIUTdYSEpjYmlJc0Nna0pJaTh2WEhKY2JpOHZJRlJoWW14bGMxeHlYRzR2TDF4eVhHNWNjbHh1THk5Y2NseHVMeThnVTJWMGRHbHVaMXh5WEc0dkwxeHlYRzRrZEdGaWJHVXRZMlZzYkMxd1lXUmthVzVuT2lBZ0lDQWdJQ0FnSUNBdU56VnlaVzBnSVdSbFptRjFiSFE3WEhKY2JpUjBZV0pzWlMxallYQjBhVzl1TFdOdmJHOXlPaUFnSUNBZ0lDQWdJQ1JrYVhOaFlteGxaQ0FoWkdWbVlYVnNkRHRjY2x4dUlpd0tDUWtpTHk5Y2NseHVMeThnVkdWNGRDQlRaWFIwYVc1bmMxeHlYRzR2TDF4eVhHNWNjbHh1THk5Y2NseHVMeThnVTJWMGRHbHVaMXh5WEc0dkwxeHlYRzRrZEdWNGRDMWthWE5oWW14bFpEb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pHUnBjMkZpYkdWa0lDRmtaV1poZFd4ME8xeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5QkdiMjUwSUZObGRIUnBibWR6WEhKY2JpOHZYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QlRaWFIwYVc1blhISmNiaTh2WEhKY2JpUm1iMjUwYzJsNlpTMXViM0p0WVd3NklDQWdJQ0FnSUNBZ0lDQWdJREZ5WlcwZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a1ptOXVkR1poYldsc2VTMXpZVzV6TFhObGNtbG1PaUFnSUNBZ0lDQXRZWEJ3YkdVdGMzbHpkR1Z0TENBdkx5QlRZV1poY21rZ1ptOXlJRTlUSUZnZ1lXNWtJR2xQVXlBb1UyRnVJRVp5WVc1amFYTmpieWxjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdZbXhwYm10dFlXTnplWE4wWlcxbWIyNTBMQ0F2THlCRGFISnZiV1VnUENBMU5pQm1iM0lnVDFNZ1dDQW9VMkZ1SUVaeVlXNWphWE5qYnlsY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENKVFpXZHZaU0JWU1Z3aUxDQXZMeUJYYVc1a2IzZHpJRFlyWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJRndpVUdsdVowWmhibWNnVTBOY0lpd2dMeThnUldGemRDQkJjMmxoYmlCc1lXNW5kV0ZuWlhNZ0x5OGdVMmx0Y0d4cFptbGxaQ0JEYUdsdVpYTmxYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lTR2x5WVdkcGJtOGdVMkZ1Y3lCSFFsd2lMQ0F2THlCRllYTjBJRUZ6YVdGdUlHeGhibWQxWVdkbGN5QXZMeUJLWVhCaGJtVnpaVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbFZpZFc1MGRWd2lMQ0F2THlCVlluVnVkSFVnTVRBdU1UQXJYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lRMkZ1ZEdGeVpXeHNYQ0lzSUM4dklFZHViMjFsSURNclhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUZ3aVRtOTBieUJUWVc1elhDSXNJQzh2SUV0RVJTQlFiR0Z6YldFZ05TdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSklaV3gyWlhScFkyRWdUbVYxWlZ3aUxDQXZMeUJtWVd4c1ltRmphMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmhjbWxoYkN3Z0x5OGdabUZzYkdKaFkydGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MyRnVjeTF6WlhKcFppd2dMeThnWm1Gc2JHSmhZMnRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0pCY0hCc1pTQkRiMnh2Y2lCRmJXOXFhVndpTENBdkx5QnRZV05QVXlCbGJXOXFhVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmNJbE5sWjI5bElGVkpJRVZ0YjJwcFhDSXNJQzh2SUZkcGJtUnZkM01nWlcxdmFtbGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1hDSlRaV2R2WlNCVlNTQlRlVzFpYjJ4Y0lpd2dMeThnVjJsdVpHOTNjeUJsYlc5cWFWeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lrNXZkRzhnUTI5c2IzSWdSVzF2YW1sY0lpQWhaR1ZtWVhWc2REc2dMeThnVEdsdWRYZ2daVzF2YW1sY2NseHVKR1p2Ym5SbVlXMXBiSGt0YzJWeWFXWTZJQ0FnSUNBZ0lDQWdJQ0FnWjJWdmNtZHBZU3dnWTJGdFluSnBZU3dnWENKVWFXMWxjeUJPWlhjZ1VtOXRZVzVjSWl3Z2RHbHRaWE1zSUhObGNtbG1JQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXVkR1poYldsc2VTMXRiMjV2YzNCaFkyVTZJQ0FnSUNBZ0lDQmNJazFsYm14dlhDSXNJQzh2SUcxaFkwOVRJREV3TGpFd0sxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lsVmlkVzUwZFNCdGIyNXZjM0JoWTJWY0lpd2dMeThnVldKMWJuUjFJREV3TGpFd0sxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lrNXZkRzhnVFc5dWIxd2lMQ0F2THlCTFJFVWdVR3hoYzIxaElEVXJYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lGd2lUM2g1WjJWdUlFMXZibTljSWl3Z0x5OGdTMFJGSUZCc1lYTnRZU0EwSzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JjSWt4cFltVnlZWFJwYjI0Z1RXOXViMXdpTENBdkx5Qk1hVzUxZUM5UGNHVnVUMlptYVdObFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdOdmJuTnZiR0Z6TENBdkx5Qm1ZV3hzWW1GamExeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCdGIyNXZjM0JoWTJVZ0lXUmxabUYxYkhRN0lDOHZJR1poYkd4aVlXTnJYSEpjYmx4eVhHNGtabTl1ZEhkbGFXZG9kQzFzYVdkb2RHVnlPaUFnSUNBZ0lDQWdJQ0JzYVdkb2RHVnlJQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXVkSGRsYVdkb2RDMXNhV2RvZERvZ0lDQWdJQ0FnSUNBZ0lDQXpNREFnSVdSbFptRjFiSFE3WEhKY2JpUm1iMjUwZDJWcFoyaDBMVzV2Y20xaGJEb2dJQ0FnSUNBZ0lDQWdJRFF3TUNBaFpHVm1ZWFZzZER0Y2NseHVKR1p2Ym5SM1pXbG5hSFF0WW05c1pEb2dJQ0FnSUNBZ0lDQWdJQ0FnTnpBd0lDRmtaV1poZFd4ME8xeHlYRzRrWm05dWRIZGxhV2RvZEMxaWIyeGtaWEk2SUNBZ0lDQWdJQ0FnSUNCaWIyeGtaWElnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrYkdsdVpXaGxhV2RvZEMxa1pXWmhkV3gwT2lBZ0lDQWdJQ0FnSUNBeExqVWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QkVaWEpwZG1Wa1hISmNiaTh2WEhKY2JpUm1iMjUwYzJsNlpTMXpiV0ZzYkRvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JrWldaaGRXeDBMWE50WVd4c0xYRjFZVzUwYVhSNUlDb2dNWEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKR1p2Ym5SemFYcGxMV3hoY21kbE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdSbFptRjFiSFF0YkdGeVoyVXRjWFZoYm5ScGRIa2dLaUF4Y21WdElDRmtaV1poZFd4ME8xeHlYRzRrWm05dWRHWmhiV2xzZVMxa1pXWmhkV3gwT2lBZ0lDQWdJQ0FnSUNBa1ptOXVkR1poYldsc2VTMXpZVzV6TFhObGNtbG1JQ0ZrWldaaGRXeDBPMXh5WEc0a1ptOXVkSGRsYVdkb2RDMWtaV1poZFd4ME9pQWdJQ0FnSUNBZ0lDQWtabTl1ZEhkbGFXZG9kQzF1YjNKdFlXd2dJV1JsWm1GMWJIUTdYSEpjYmlJc0Nna0pJaTh2WEhKY2JpOHZJRWhsWVdScGJtY2dVMlYwZEdsdVozTmNjbHh1THk5Y2NseHVYSEpjYmk4dlhISmNiaTh2SUVsdWFHVnlhWFJjY2x4dUx5OWNjbHh1SkdobFlXUnBibWR6TFcxaGNtZHBibUp2ZEhSdmJUb2dJQ0FnSUNBZ0lDUnpjR0ZqWlMxMGVYQnZaM0poY0doNUlDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHZ3hMV1p2Ym5SemFYcGxPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JtYjI1MGMybDZaUzF1YjNKdFlXd2dLaUF5TGpVZ0lXUmxabUYxYkhRN1hISmNiaVJvTWkxbWIyNTBjMmw2WlRvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa1ptOXVkSE5wZW1VdGJtOXliV0ZzSUNvZ01pQWhaR1ZtWVhWc2REdGNjbHh1SkdnekxXWnZiblJ6YVhwbE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUm1iMjUwYzJsNlpTMXViM0p0WVd3Z0tpQXhMamMxSUNGa1pXWmhkV3gwTzF4eVhHNGthRFF0Wm05dWRITnBlbVU2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdadmJuUnphWHBsTFc1dmNtMWhiQ0FxSURFdU5TQWhaR1ZtWVhWc2REdGNjbHh1SkdnMUxXWnZiblJ6YVhwbE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDUm1iMjUwYzJsNlpTMXViM0p0WVd3Z0tpQXhMakkxSUNGa1pXWmhkV3gwTzF4eVhHNGthRFl0Wm05dWRITnBlbVU2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdadmJuUnphWHBsTFc1dmNtMWhiQ0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaTh2WEhKY2JpOHZJRk5sZEhScGJtZGNjbHh1THk5Y2NseHVKR2hsWVdScGJtZHpMV052Ykc5eU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSbmNtRjVMVGt3TUNBaFpHVm1ZWFZzZER0Y2NseHVKR2hsWVdScGJtZHpMV1p2Ym5SbVlXMXBiSGs2SUNBZ0lDQWdJQ0FnSUc1MWJHd2dJV1JsWm1GMWJIUTdYSEpjYmlSb1pXRmthVzVuY3kxbWIyNTBkMlZwWjJoME9pQWdJQ0FnSUNBZ0lDQTFNREFnSVdSbFptRjFiSFE3WEhKY2JpUm9aV0ZrYVc1bmN5MW1iMjUwYzNSNWJHVTZJQ0FnSUNBZ0lDQWdJQ0J1ZFd4c0lDRmtaV1poZFd4ME8xeHlYRzRrYUdWaFpHbHVaM010YkdsdVpXaGxhV2RvZERvZ0lDQWdJQ0FnSUNBZ01TNHlJQ0ZrWldaaGRXeDBPMXh5WEc0aUxBb0pDU0l2TDF4eVhHNHZMeUJVYVhSc1pTQlRaWFIwYVc1bmMxeHlYRzR2TDF4eVhHNWNjbHh1THk5Y2NseHVMeThnU1c1b1pYSnBkRnh5WEc0dkwxeHlYRzRrZEdsMGJHVXRiR2x1WldobGFXZG9kRG9nSUNBZ0lDQWdJQ0FnSUNBZ0pHaGxZV1JwYm1kekxXeHBibVZvWldsbmFIUWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QlRaWFIwYVc1blhISmNiaTh2WEhKY2JpUjBhWFJzWlMxamIyeHZjam9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrYUdWaFpHbHVaM010WTI5c2IzSWdJV1JsWm1GMWJIUTdYSEpjYmlSMGFYUnNaUzF6YVhwbE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQTFjbVZ0SUNGa1pXWmhkV3gwTzF4eVhHNGlMQW9KQ1NJdkwxeHlYRzR2THlCRGIyUmxJRk5sZEhScGJtZHpYSEpjYmk4dlhISmNibHh5WEc0dkwxeHlYRzR2THlCSmJtaGxjbWwwWEhKY2JpOHZYSEpjYmlSd2NtVXRZMjlrWlMxc1lXNW5ZbUZrWjJVdFptOXVkSGRsYVdkb2REb2dJQ0FnSUNBZ0lDUm1iMjUwZDJWcFoyaDBMV0p2YkdRZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0dkwxeHlYRzR2THlCVFpYUjBhVzVuWEhKY2JpOHZYSEpjYmlSamIyUmxMV1p2Ym5SemFYcGxPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDNDROV1Z0SUNGa1pXWmhkV3gwTzF4eVhHNGtZMjlrWlMxaVlXTnJaM0p2ZFc1a09pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrWjNKaGVTMHlNREFnSVdSbFptRjFiSFE3WEhKY2JpUmpiMlJsTFcxaGNtZHBiaTE0T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQzR5WlcwZ0lXUmxabUYxYkhRN1hISmNiaVJqYjJSbExYQmhaR1JwYm1jNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM0eVpXMGdMalJsYlNBdU1XVnRJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVKSEJ5WlMxamIyUmxMWEJoWkdScGJtYzZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVdWdElDRmtaV1poZFd4ME8xeHlYRzRrY0hKbExXTnZaR1V0WW05eVpHVnliR1ZtZERvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa1ltOXlaR1Z5ZDJsa2RHZ3RkMmxrWlNCemIyeHBaQ0FrY0hKcGJXRnllU0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJ3Y21VdFkyOWtaUzFzWVc1blltRmtaMlV0WW1GamEyZHliM1Z1WkRvZ0lDQWdJQ0FnSUNSd2NtbHRZWEo1SUNGa1pXWmhkV3gwTzF4eVhHNGtjSEpsTFdOdlpHVXRiR0Z1WjJKaFpHZGxMV052Ykc5eU9pQWdJQ0FnSUNBZ0lDQWdJQ0JqYkhJdFlYVjBieWdrY0hKbExXTnZaR1V0YkdGdVoySmhaR2RsTFdKaFkydG5jbTkxYm1Rc0lDUmliR0ZqYXl3Z0pIZG9hWFJsS1NBaFpHVm1ZWFZzZER0Y2NseHVKSEJ5WlMxamIyUmxMV3hoYm1kaVlXUm5aUzEwWlhoMGRISmhibk5tYjNKdE9pQWdJQ0FnZFhCd1pYSmpZWE5sSUNGa1pXWmhkV3gwTzF4eVhHNGtjSEpsTFdOdlpHVXRiR0Z1WjJKaFpHZGxMWEJoWkdScGJtYzZJQ0FnSUNBZ0lDQWdJQ0F5Y0hnZ01UWndlQ0F5Y0hnZ09IQjRJQ0ZrWldaaGRXeDBPMXh5WEc0aUxBb0pDU0l2TDF4eVhHNHZMeUJyWW1RZ2MyVjBkR2x1WjNOY2NseHVMeTljY2x4dVhISmNiaTh2WEhKY2JpOHZJRWx1YUdWeWFYUmNjbHh1THk5Y2NseHVYSEpjYmlSclltUXRjR0ZrWkdsdVp6b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSamIyUmxMWEJoWkdScGJtY2dJV1JsWm1GMWJIUTdYSEpjYmlSclltUXRabTl1ZEhOcGVtVTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSamIyUmxMV1p2Ym5SemFYcGxJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdVMlYwZEdsdVozTmNjbHh1THk5Y2NseHVKR3RpWkMxaVlXTnJaM0p2ZFc1a09pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKR2R5WVhrdE9UQXdJQ0ZrWldaaGRXeDBPMXh5WEc0a2EySmtMV052Ykc5eU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamJISXRZWFYwYnlna2EySmtMV0poWTJ0bmNtOTFibVFzSUNSM2FHbDBaU3dnSkdKc1lXTnJLU0FoWkdWbVlYVnNkRHRjY2x4dUpHdGlaQzFtYjI1MGQyVnBaMmgwT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pHWnZiblIzWldsbmFIUXRiR2xuYUhRZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a2JtVnpkR1ZrTFd0aVpDMW1iMjUwZDJWcFoyaDBPaUFnSUNBZ0lDQWdJQ0FnSUNBa1ptOXVkSGRsYVdkb2RDMWliMnhrSUNGa1pXWmhkV3gwTzF4eVhHNGlMQW9KQ1NJdkwxeHlYRzR2THlCSWIzSnBlbTl1ZEdGc0lISjFiR1VnVTJWMGRHbHVaM05jY2x4dUx5OWNjbHh1WEhKY2JpOHZYSEpjYmk4dklFbHVhR1Z5YVhSY2NseHVMeTljY2x4dUpHaHlMVzFoY21kcGJpMTVPaUFnSUNBZ0lDQWdKSE53WVdObExYUjVjRzluY21Gd2FIa2dLaUF5SUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1THk5Y2NseHVMeThnVTJWMGRHbHVaMXh5WEc0dkwxeHlYRzRrYUhJdFkyOXNiM0k2SUNBZ0lDQWdJQ0FnSUNCcGJtaGxjbWwwSUNGa1pXWmhkV3gwTzF4eVhHNGthSEl0YUdWcFoyaDBPaUFnSUNBZ0lDQWdJQ0F4Y0hnZ0lXUmxabUYxYkhRN1hISmNiaVJvY2kxdmNHRmphWFI1T2lBZ0lDQWdJQ0FnSUM0eU5TQWhaR1ZtWVhWc2REdGNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdUV2x6WTJWc2JHRnVaVzkxY3lCVFpYUjBhVzVuYzF4eVhHNHZMMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdVMlYwZEdsdVoxeHlYRzR2TDF4eVhHNHZMeUJFYVhKbFkzUnBiMjV6WEhKY2JpUmthWEpsWTNScGIyNXpPaUFvWEhKY2JpQWdkRG9nSUNBZ2RHOXdMRnh5WEc0Z0lHSTZJQ0FnSUdKdmRIUnZiU3hjY2x4dUlDQnlPaUFnSUNCeWFXZG9kQ3hjY2x4dUlDQnNPaUFnSUNCc1pXWjBYSEpjYmlrZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0dkx5QlRhWHBsYzF4eVhHNGtjMmw2WlhNNklDaGNjbHh1SUNBd09seDBJQ0F3TEZ4eVhHNGdJREkxT2x4MElDQXlOU1VzWEhKY2JpQWdOVEE2WEhRZ0lEVXdKU3hjY2x4dUlDQTNOVHBjZENBZ056VWxMRnh5WEc0Z0lERXdNRG9nSURFd01DVmNjbHh1S1NBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmk4dklGSnZkR0YwYVc5dWMxeHlYRzRrY205MFlYUnBiMjV6T2lBb1hISmNiaUFnTURwY2RDQWdJREJrWldjc1hISmNiaUFnTkRVNlhIUWdJQ0EwTldSbFp5eGNjbHh1SUNBNU1EcGNkQ0FnSURrd1pHVm5MRnh5WEc0Z0lERXpOVG9nSUNBeE16VmtaV2NzWEhKY2JpQWdNVGd3T2lBZ0lERTRNR1JsWnl4Y2NseHVJQ0F5TWpVNklDQWdNakkxWkdWbkxGeHlYRzRnSURJM01Eb2dJQ0F5TnpCa1pXZGNjbHh1S1NBaFpHVm1ZWFZzZER0Y2NseHVJaXdLQ1FraUx5OWNjbHh1THk4Z1kyOXVkSEp2YkNCVFpYUjBhVzVuYzF4eVhHNHZMMXh5WEc0dkx5QlRhR0Z5WldRZ1UyVjBkR2x1WjNNZ1ltVjBkMlZsYmlCMllYSnBiM1Z6SUdOdmJuUnliMnh6WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJKYm1obGNtbDBYSEpjYmk4dlhISmNiaVJqYjI1MGNtOXNjeTFpYjNKa1pYSjNhV1IwYURvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pHSnZjbVJsY25kcFpIUm9MV1JsWm1GMWJIUWdJV1JsWm1GMWJIUTdYSEpjYmlSamIyNTBjbTlzY3kxaWIzSmtaWEp5WVdScGRYTTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKR0p2Y21SbGNuSmhaR2wxY3kxa1pXWmhkV3gwSUNGa1pXWmhkV3gwTzF4eVhHNGtZMjl1ZEhKdmJITXRiR2x1WldobGFXZG9kRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSc2FXNWxhR1ZwWjJoMExXUmxabUYxYkhRZ0lXUmxabUYxYkhRN1hISmNiaVJqYjI1MGNtOXNjeTFtYjI1MGQyVnBaMmgwT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pHWnZiblIzWldsbmFIUXRibTl5YldGc0lDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUx5OWNjbHh1THk4Z1UyVjBkR2x1WjF4eVhHNHZMMXh5WEc0a1kyOXVkSEp2YkhNdGRHaGxiV1U2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JuY21GNUxUWXdNQ0FoWkdWbVlYVnNkRHRjY2x4dUpHTnZiblJ5YjJ4ekxYUm9aVzFsTFd4cFoyaDBPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrWjNKaGVTMHpNREFnSVdSbFptRjFiSFE3WEhKY2JpUmpiMjUwY205c2N5MWpiMnh2Y2pvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdKdlpIa3RZMjlzYjNJZ0lXUmxabUYxYkhRN1hISmNiaVJqYjI1MGNtOXNjeTFpWVdOclozSnZkVzVrT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RISmhibk53WVhKbGJuUWdJV1JsWm1GMWJIUTdYSEpjYmlSamIyNTBjbTlzY3kxaWIzSmtaWEpqYjJ4dmNqb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkSEpoYm5Od1lYSmxiblFnSVdSbFptRjFiSFE3WEhKY2JpUmpiMjUwY205c2N5MXdZV1JrYVc1bkxYZzZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTGpjMVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSamIyNTBjbTlzY3kxbWIyNTBabUZ0YVd4NU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiblZzYkNBaFpHVm1ZWFZzZER0Y2NseHVKR052Ym5SeWIyeHpMWFJ5WVc1emFYUnBiMjQ2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjaXdnWW1GamEyZHliM1Z1WkMxamIyeHZjaXdnWW05eVpHVnlMQ0JpYjNndGMyaGhaRzkzSUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkdOdmJuUnliMnh6TFdadlkzVnpMV0p2ZUhOb1lXUnZkeTF6YVhwbE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVNbkpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKR052Ym5SeWIyeHpMV1p2WTNWekxXSnZlSE5vWVdSdmR6b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBd0lEQWdNQ0FrWTI5dWRISnZiSE10Wm05amRYTXRZbTk0YzJoaFpHOTNMWE5wZW1VZ0lXUmxabUYxYkhRN0lDOHZJR052Ykc5eUlHbHpJR1Y0Y0d4cFkybDBiSGtnWkdWbWFXNWxaQ0J2YmlCMWMyRm5aVnh5WEc1Y2NseHVKR052Ym5SeWIyeHpMV1JwYzJGaWJHVmtMV0poWTJ0bmNtOTFibVE2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa1kyOXVkSEp2YkhNdGRHaGxiV1VnSVdSbFptRjFiSFE3WEhKY2JpUmpiMjUwY205c2N5MWthWE5oWW14bFpDMXZjR0ZqYVhSNU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTGpVZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a1kyOXVkSEp2YkhNdGJHRmlaV3d0WW1GamEyZHliM1Z1WkRvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1IzYUdsMFpTQWhaR1ZtWVhWc2REdGNjbHh1SkdOdmJuUnliMnh6TFd4aFltVnNMV0p2Y21SbGNtTnZiRzl5T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWtZMjl1ZEhKdmJITXRkR2hsYldVdGJHbG5hSFFnSVdSbFptRjFiSFE3WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJFWlhKcGRtVmtYSEpjYmk4dlhISmNibHh5WEc0a1kyOXVkSEp2YkhNdGNHRmtaR2x1WnkxNU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JqYjI1MGNtOXNjeTF3WVdSa2FXNW5MWGdnTHlBeUlDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHTnZiblJ5YjJ4ekxXeGhZbVZzTFdKbFptOXlaUzF6YVhwbE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MlpYSjBMWFZ1YVhRb01UWndlQ3dnWlcwcElDRmtaV1poZFd4ME95QXZMeUIxYzJVZ01UWndlQ0JqYjI1MGNtOXNjMXh5WEc0a1kyOXVkSEp2YkhNdGJHRmlaV3d0Y0dGa1pHbHVaMnhsWm5RNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JqYjI1MGNtOXNjeTFzWVdKbGJDMWlaV1p2Y21VdGMybDZaU0FxSURFdU5TQWhaR1ZtWVhWc2REdGNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdTVzV3ZFhRZ1UyVjBkR2x1WjNOY2NseHVMeTljY2x4dVhISmNiaTh2WEhKY2JpOHZJRWx1YUdWeWFYUmNjbHh1THk5Y2NseHVKR3hoWW1Wc0xXMWhjbWRwYm1KdmRIUnZiVG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSemNHRmpaUzEwZVhCdlozSmhjR2g1SUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1THk5Y2NseHVMeThnVTJWMGRHbHVaM05jY2x4dUx5OWNjbHh1SkdsdWNIVjBMVzFwYm1obGFXZG9kRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDZ2tZMjl1ZEhKdmJITXRiR2x1WldobGFXZG9kQ0FxSURGbGJTa2dLeUFvSkdOdmJuUnliMnh6TFhCaFpHUnBibWN0ZVNBcUlESXVOQ2tnSVdSbFptRjFiSFE3WEhKY2JpUnBibkIxZEMxaVlXTnJaM0p2ZFc1a09pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrWTI5dWRISnZiSE10YkdGaVpXd3RZbUZqYTJkeWIzVnVaQ0FoWkdWbVlYVnNkRHRjY2x4dUpHbHVjSFYwTFdKdmNtUmxjbU52Ykc5eU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JqYjI1MGNtOXNjeTFzWVdKbGJDMWliM0prWlhKamIyeHZjaUFoWkdWbVlYVnNkRHRjY2x4dUpHbHVjSFYwTFdKdmVITm9ZV1J2ZHkxcGJtNWxjam9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR2x1YzJWMElEQWdNWEI0SURKd2VDQnlaMkpoS0dOc2NpMWhkWFJ2S0NScGJuQjFkQzFpWVdOclozSnZkVzVrS1N3Z0xqRXBJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVKR2x1Y0hWMExYQnNZV05sYUc5c1pHVnlMV052Ykc5eU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSamIyNTBjbTlzY3kxc1lXSmxiQzFpYjNKa1pYSmpiMnh2Y2lBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmlScGJuQjFkQzFwWTI5dUxYTnBlbVU2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXhjbVZ0SUNvZ01TNHpJQ0ZrWldaaGRXeDBPMXh5WEc0a2FXNXdkWFF0YVdOdmJpMXdZV1JrYVc1bk9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNU0FySUdOdmJuWmxjblF0ZFc1cGRDZ2tZMjl1ZEhKdmJITXRjR0ZrWkdsdVp5MTRMQ0J5WlcwcElDb2dNaUFoWkdWbVlYVnNkRHRjY2x4dUpHbHVjSFYwTFdsamIyNHRjRzl6YVhScGIyNHRjbWxuYUhRNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5abGNuUXRkVzVwZENna1kyOXVkSEp2YkhNdGNHRmtaR2x1WnkxNExDQnlaVzBwSUNGa1pXWmhkV3gwTzF4eVhHNGlMQW9KQ1NJdkwxeHlYRzR2THlCQ2RYUjBiMjRnVTJWMGRHbHVaM05jY2x4dUx5OWNjbHh1WEhKY2JpOHZYSEpjYmk4dklFbHVhR1Z5YVhSY2NseHVMeTljY2x4dUpHSjFkSFJ2YmkxbWIyTjFjeTFpYjNoemFHRmtiM2M2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ1JqYjI1MGNtOXNjeTFtYjJOMWN5MWliM2h6YUdGa2IzY2dJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtZblYwZEc5dUxXbHpZMmx5WTJ4bExYTnBlbVU2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTWk0ek5XVnRJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdVMlYwZEdsdVoxeHlYRzR2TDF4eVhHNGtZblYwZEc5dUxYUm9aVzFsT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdOdmJuUnliMnh6TFhSb1pXMWxJQ0ZrWldaaGRXeDBPMXh5WEc0a1luVjBkRzl1TFhSb1pXMWxMV3hwWjJoME9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKR052Ym5SeWIyeHpMWFJvWlcxbExXeHBaMmgwSUNGa1pXWmhkV3gwTzF4eVhHNGtZblYwZEc5dUxYUnlZVzV6YVhScGIyNHRiV2x1YVcxaGJDMWlaV1p2Y21VNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZ3NJR0p2Y21SbGNpMWliM1IwYjIwdFkyOXNiM0lnSVdSbFptRjFiSFE3WEhKY2JseHlYRzRrWW5WMGRHOXVMV1JwYzJGaWJHVmtMV0poWTJ0bmNtOTFibVE2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0pHTnZiblJ5YjJ4ekxXUnBjMkZpYkdWa0xXSmhZMnRuY205MWJtUWdJV1JsWm1GMWJIUTdYSEpjYmlJc0Nna0pJaTh2WEhKY2JpOHZJRkpoWkdsdlhISmNiaTh2WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJUWlhSMGFXNW5YSEpjYmk4dlhISmNiaVJ5WVdScGJ5MWphR1ZqYTJWa0xXSnZjbVJsY25kcFpIUm9PaUFnSUNBZ0lDQWdJQ0FnSUNBZ0xqTTFaVzBnSVdSbFptRjFiSFE3WEhKY2JpSXNDZ2tKSWk4dlhISmNiaTh2SUVOb1pXTnJZbTk0WEhKY2JpOHZYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QlRaWFIwYVc1blhISmNiaTh2WEhKY2JpUmphR1ZqYTJKdmVDMWphR1ZqYTJWa0xXRnljbTkzTFhOcGVtVTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrWTI5dWRISnZiSE10YkdGaVpXd3RZbVZtYjNKbExYTnBlbVVnTHlBeUlDRmtaV1poZFd4ME8xeHlYRzRrWTJobFkydGliM2d0WTJobFkydGxaQzFoY25KdmR5MTBiM0E2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ05EVWxJQ0ZrWldaaGRXeDBPeUF2THlCemJHbG5hSFJzZVNCc1pYTnpaWElnZEdoaGJpQTFNQ1VnZEc4Z1lXeHBaMjRnWVhKeWIzY2dhVzRnWTJWdWRHVnlJR0o1SUhOb1lYQmxYSEpjYmlSamFHVmphMkp2ZUMxamFHVmphMlZrTFdGeWNtOTNMV0p2Y21SbGNuZHBaSFJvT2lBZ0lDQWdJQ0FnSUNBZ0lDQXVNVEpsYlNBaFpHVm1ZWFZzZER0Y2NseHVKR05vWldOclltOTRMV05vWldOclpXUXRZWEp5YjNjdFkyOXNiM0k2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSM2FHbDBaU0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJqYUdWamEySnZlQzFwYm1SbGRHVnliV2x1WVhSbExYZHBaSFJvT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa1kyOXVkSEp2YkhNdGJHRmlaV3d0WW1WbWIzSmxMWE5wZW1VZ0x5QXlJQ0ZrWldaaGRXeDBPMXh5WEc0a1kyaGxZMnRpYjNndGFXNWtaWFJsY20xcGJtRjBaUzFvWldsbmFIUTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNbkI0SUNGa1pXWmhkV3gwTzF4eVhHNGtZMmhsWTJ0aWIzZ3RhVzVrWlhSbGNtMXBibUYwWlMxaVlXTnJaM0p2ZFc1a09pQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdOb1pXTnJZbTk0TFdOb1pXTnJaV1F0WVhKeWIzY3RZMjlzYjNJZ0lXUmxabUYxYkhRN1hISmNiaUlzQ2drSklpOHZYSEpjYmk4dklGSmhibWRsWEhKY2JpOHZYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QkpibWhsY21sMFhISmNiaTh2WEhKY2JpUnlZVzVuWlMxMGFIVnRZaTFvYjNabGNpMW1iMk4xY3kxaWIzSmtaWEozYVdSMGFEb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKR0p2Y21SbGNuZHBaSFJvTFhkcFpHVWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QlRaWFIwYVc1blhISmNiaTh2WEhKY2JpUnlZVzVuWlMxMGNtRmpheTFvWldsbmFIUTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdMakl5Y21WdElDRmtaV1poZFd4ME8xeHlYRzRrY21GdVoyVXRkSEpoWTJzdFltRmphMmR5YjNWdVpEb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSamIyNTBjbTlzY3kxMGFHVnRaUzFzYVdkb2RDQWhaR1ZtWVhWc2REdGNjbHh1SkhKaGJtZGxMWFJ5WVdOckxXSnZlSE5vWVdSdmR6b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCcGJuTmxkQ0F3SURGd2VDQXljSGdnY21kaVlTaGpiSEl0WVhWMGJ5Z2tjbUZ1WjJVdGRISmhZMnN0WW1GamEyZHliM1Z1WkNrc0lDNHlLU0FoWkdWbVlYVnNkRHRjY2x4dUpISmhibWRsTFhSeVlXTnJMWFJ5WVc1emFYUnBiMjQ2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVKSEpoYm1kbExYUm9kVzFpTFhkcFpIUm9PaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F4WlcwZ0lXUmxabUYxYkhRN1hISmNiaVJ5WVc1blpTMTBhSFZ0WWkxaVlXTnJaM0p2ZFc1a09pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkhkb2FYUmxJQ0ZrWldaaGRXeDBPMXh5WEc0a2NtRnVaMlV0ZEdoMWJXSXRZbTl5WkdWeU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lERndlQ0J6YjJ4cFpDQmpkWEp5Wlc1MFEyOXNiM0lnSVdSbFptRjFiSFE3WEhKY2JpUnlZVzVuWlMxMGFIVnRZaTFpYjNoemFHRmtiM2M2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNWEI0SURGd2VDQXljSGdnTUNCeVoySmhLREFzSURBc0lEQXNJQzR4TlNrZ0lXUmxabUYxYkhRN1hISmNiaVJ5WVc1blpTMTBhSFZ0WWkxMGNtRnVjMmwwYVc5dU9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZEhKaGJuTm1iM0p0TENCaWIzSmtaWElnSVdSbFptRjFiSFE3WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJFWlhKcGRtVmtYSEpjYmk4dlhISmNiaVJ5WVc1blpTMTBhSFZ0WWkxb2IzWmxjaTFtYjJOMWN5MXpZMkZzWlRvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTVM0eElDRmtaV1poZFd4ME8xeHlYRzRrY21GdVoyVXRkR2gxYldJdGFHVnBaMmgwT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSeVlXNW5aUzEwYUhWdFlpMTNhV1IwYUNBaFpHVm1ZWFZzZER0Y2NseHVJaXdLQ1FraUx5OWNjbHh1THk4Z1UzZHBkR05vWEhKY2JpOHZYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QlRaWFIwYVc1blhISmNiaTh2WEhKY2JpUnpkMmwwWTJndGQybGtkR2c2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FrWTI5dWRISnZiSE10YkdGaVpXd3RZbVZtYjNKbExYTnBlbVVnS2lBeUlDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpITjNhWFJqYUMxamFYSmpiR1V0YzJsNlpUb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR052Ym5abGNuUXRkVzVwZENneE5uQjRMQ0JsYlNrZ0lXUmxabUYxYkhRN1hISmNiaVJ6ZDJsMFkyZ3RZMmx5WTJ4bExYUnlZVzVtYjNKdExYTmpZV3hsT2lBZ0lDQWdJQ0FnSUNBdU55QWhaR1ZtWVhWc2REdGNjbHh1SkhOM2FYUmphQzFqYVhKamJHVXRkSEpoYm5OcGRHbHZiam9nSUNBZ0lDQWdJQ0FnSUNBZ0lHeGxablFnTGpKeklHVmhjMlV0YVc0dGIzVjBMQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlJQzR5Y3lCbFlYTmxMV2x1TFc5MWRDQWhaR1ZtWVhWc2REdGNjbHh1SkhOM2FYUmphQzFqYVhKamJHVXRZbTl5WkdWeVkyOXNiM0k2SUNBZ0lDQWdJQ0FnSUNBZ0lDUmpiMjUwY205c2N5MXNZV0psYkMxaWIzSmtaWEpqYjJ4dmNpQWhaR1ZtWVhWc2REdGNjbHh1WEhKY2JpUnpkMmwwWTJndFlXTjBhWFpsTFdOcGNtTnNaUzFpWVdOclozSnZkVzVrT2lBZ0lDQWdJQ0FrWTI5dWRISnZiSE10YkdGaVpXd3RZbUZqYTJkeWIzVnVaQ0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaTh2WEhKY2JpOHZJRVJsY21sMlpXUmNjbHh1THk5Y2NseHVKSE4zYVhSamFDMXNZV0psYkMxd1lXUmthVzVuYkdWbWREb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNSamIyNTBjbTlzY3kxc1lXSmxiQzF3WVdSa2FXNW5iR1ZtZENBcklDUnpkMmwwWTJndGQybGtkR2dnTHlBeUlDRmtaV1poZFd4ME8xeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5Qk1hWE4wSUZObGRIUnBibWR6WEhKY2JpOHZYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QlRaWFIwYVc1blhISmNiaTh2WEhKY2JpUnNhWE4wTFdsdWJHbHVaUzF3WVdSa2FXNW5PaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnTGpWbGJTQWhaR1ZtWVhWc2REdGNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdRMjl1ZEhKdmJGeHlYRzR2TDF4eVhHNWNjbHh1THk5Y2NseHVMeThnVTJWMGRHbHVaMXh5WEc0dkwxeHlYRzRrWTI5dWRISnZiQzFwYm5CMWRDMXBZMjl1TFc5d1lXTnBkSGs2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQXVOU0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJqYjI1MGNtOXNMV1psWldSaVlXTnJMWEJoWkdScGJtYzZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lETndlQ0EyY0hnZ0lXUmxabUYxYkhRN1hISmNiaVJqYjI1MGNtOXNMV1psWldSaVlXTnJMVzltWm5ObGRDMWliM1IwYjIwNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lERndlQ0FoWkdWbVlYVnNkRHRjY2x4dUpHTnZiblJ5YjJ3dFptVmxaR0poWTJzdFltRmphMmR5YjNWdVpEb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdSaGNtc2dJV1JsWm1GMWJIUTdYSEpjYmlSamIyNTBjbTlzTFdabFpXUmlZV05yTFdOdmJHOXlPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR05zY2kxaGRYUnZLQ1JqYjI1MGNtOXNMV1psWldSaVlXTnJMV0poWTJ0bmNtOTFibVFwSUNGa1pXWmhkV3gwTzF4eVhHNGtZMjl1ZEhKdmJDMW1aV1ZrWW1GamF5MXphR0ZrYjNjNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBa1ltOTRjMmhoWkc5M0xXUmxabUYxYkhRZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a1kyOXVkSEp2YkMxbVpXVmtZbUZqYXkxaGNuSnZkeTF6YVhwbE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0EyY0hnZ0lXUmxabUYxYkhRN1hISmNiaVJqYjI1MGNtOXNMV1psWldSaVlXTnJMV0Z5Y205M0xXOW1abk5sZEMxeWFXZG9kRG9nSUNBZ0lDQWdJQ0FnSUNBZ0lERXdjSGdnSVdSbFptRjFiSFE3WEhKY2JpSXNDZ2tKSWk4dlhISmNiaTh2SUUxbGJuVmNjbHh1THk5Y2NseHVYSEpjYmk4dlhISmNiaTh2SUdsdWFHVnlhWFJjY2x4dUx5OWNjbHh1WEhKY2JpUnRaVzUxTFhSeWFXZG5aWEl0WTJGeVpYUXRjMmw2WlRvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSamIyNTBjbTlzTFdabFpXUmlZV05yTFdGeWNtOTNMWE5wZW1VZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a2JXVnVkUzFwZEdWdExXSmxabTl5WlMxaWIzSmtaWEozYVdSMGFEb2dJQ0FnSUNBZ0lDQWdJQ0FrWW05eVpHVnlkMmxrZEdndGQybGtaU0FoWkdWbVlYVnNkRHRjY2x4dVhISmNiaTh2WEhKY2JpOHZJRk5sZEhScGJtZGNjbHh1THk5Y2NseHVKRzFsYm5VdGRISnBaMmRsY2kxallYSmxkQzFqYjJ4dmNqb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1kzVnljbVZ1ZEVOdmJHOXlJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVKRzFsYm5VdGFYUmxiUzFpWldadmNtVXRkSEpoYm5OcGRHbHZiam9nSUNBZ0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhkcFpIUm9JQzR4TlhNZ2JHbHVaV0Z5SUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1Skc1bGMzUmxaRTFsYm5VdGFXNWtaVzUwT2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdKR052Ym5SeWIyeHpMWEJoWkdScGJtY3RlQ0FxSURJZ0lXUmxabUYxYkhRN1hISmNiaVJ1WlhOMFpXUk5aVzUxTFdGdWFXMWhkR2x2Ym01aGJXVTZJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHWmhaR1ZwYmlBaFpHVm1ZWFZzZER0Y2NseHVKRzVsYzNSbFpFMWxiblV0WVc1cGJXRjBhVzl1WkhWeVlYUnBiMjQ2SUNBZ0lDQWdJQ0FnSUNBZ0xqTnpJQ0ZrWldaaGRXeDBPMXh5WEc0aUxBb0pDU0l2TDF4eVhHNHZMeUJFY205d1pHOTNibk5jY2x4dUx5OWNjbHh1WEhKY2JpOHZYSEpjYmk4dklFbHVhR1Z5YVhSY2NseHVMeTljY2x4dUpHUnliM0JrYjNkdUxXMWxiblV0WW05eVpHVnljbUZrYVhWek9pQWdJQ0FnSUNBZ0pHSnZjbVJsY25KaFpHbDFjeTFrWldaaGRXeDBJQ0ZrWldaaGRXeDBPMXh5WEc0a1pISnZjR1J2ZDI0dGJXVnVkUzFpYjNoemFHRmtiM2M2SUNBZ0lDQWdJQ0FnSUNBa1ltOTRjMmhoWkc5M0xYSnZkVzVrSUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkdSeWIzQmtiM2R1TFhSeWFXZG5aWEl0WTJGeVpYUXRjMmw2WlRvZ0lDQWdJQ0FnSkcxbGJuVXRkSEpwWjJkbGNpMWpZWEpsZEMxemFYcGxJQ0ZrWldaaGRXeDBPMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdVMlYwZEdsdVoxeHlYRzR2TDF4eVhHNGtaSEp2Y0dSdmQyNHRiV1Z1ZFMxaVlXTnJaM0p2ZFc1a09pQWdJQ0FnSUNBZ0lDQWtkMmhwZEdVZ0lXUmxabUYxYkhRN1hISmNiaVJrY205d1pHOTNiaTF0Wlc1MUxYQmhaR1JwYm1jdGVUb2dJQ0FnSUNBZ0lDQWdJQzR6TldWdElDRmtaV1poZFd4ME8xeHlYRzRrWkhKdmNHUnZkMjR0YldWdWRTMXRZWEpuYVc0NklDQWdJQ0FnSUNBZ0lDQWdJQ0F1TWpWbGJTQWhaR1ZtWVhWc2REdGNjbHh1SkdSeWIzQmtiM2R1TFcxbGJuVXRiV2x1ZDJsa2RHZzZJQ0FnSUNBZ0lDQWdJQ0FnTVRBd0pTQWhaR1ZtWVhWc2REdGNjbHh1SkdSeWIzQmtiM2R1TFcxbGJuVXRlbWx1WkdWNE9pQWdJQ0FnSUNBZ0lDQWdJQ0FnTVRRZ0lXUmxabUYxYkhRN1hISmNibHh5WEc0a1pISnZjR1J2ZDI0dGRISnBaMmRsY2kxallYSmxkQzFqYjJ4dmNqb2dJQ0FnSUNCamRYSnlaVzUwUTI5c2IzSWdJV1JsWm1GMWJIUTdYSEpjYmlJc0Nna0pJaTh2WEhKY2JpOHZJRWR5YjNWd0lGTmxkSFJwYm1kelhISmNiaTh2WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJUWlhSMGFXNW5YSEpjYmk4dlhISmNiaVJuY205MWNDMXBkR1Z0Y3kxb2IzWmxjaTFtYjJOMWN5MTZhVzVrWlhnNklDQWdJQ0FnSUNBZ01UQWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtaM0p2ZFhBdFlXUmtiMjR0WW1GamEyZHliM1Z1WkRvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNSaWIyUjVMV0poWTJ0bmNtOTFibVFnSVdSbFptRjFiSFE3WEhKY2JpUm5jbTkxY0MxaFpHUnZiaTFpYjNKa1pYSmpiMnh2Y2pvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSkdOdmJuUnliMnh6TFhSb1pXMWxMV3hwWjJoMElDRmtaV1poZFd4ME8xeHlYRzVjY2x4dUpHZHliM1Z3TFd4bkxYQmhaR1JwYm1jdGVUb2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0F1TnpWeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSbmNtOTFjQzFzWnkxd1lXUmthVzVuTFhnNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNUzR5TlhKbGJTQWhaR1ZtWVhWc2REdGNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdSVzFpWldRZ1UyVjBkR2x1WjNOY2NseHVMeTljY2x4dVhISmNiaTh2WEhKY2JpOHZJRk5sZEhScGJtZGNjbHh1THk5Y2NseHVMeThnUVhOd1pXTjBJRkpoZEdsdmMxeHlYRzRrWVhOd1pXTjBMWEpoZEdsdmN6b2dLRnh5WEc0Z0lGd2lNUzB4WENJNklDQWdLQ0I0T2lBeExDQWdlVG9nTVNBZ0tTeGNjbHh1SUNCY0lqUXRNMXdpT2lBZ0lDZ2dlRG9nTkN3Z0lIazZJRE1nSUNrc1hISmNiaUFnWENJeE5pMHhNRndpT2lBb0lIZzZJREUyTENCNU9pQXhNQ0FwTEZ4eVhHNGdJRndpT1MweE5sd2lPaUFnS0NCNE9pQTVMQ0FnZVRvZ01UWWdLU3hjY2x4dUlDQmNJakl4TFRsY0lqb2dJQ2dnZURvZ01qRXNJSGs2SURrZ0tWeHlYRzRwSUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkdWdFltVmtMWEpoZEdsdkxXUmxabUYxYkhRNklDQWdJQ0FnSUZ3aU9TMHhObHdpSUNGa1pXWmhkV3gwTzF4eVhHNGlMQW9KQ1NJdkwxeHlYRzR2THlCQ2NtVmhaR055ZFcxaWN5QnpaWFIwYVc1bmMxeHlYRzR2TDF4eVhHNWNjbHh1THk5Y2NseHVMeThnVTJWMGRHbHVaMXh5WEc0dkwxeHlYRzRrWW5KbFlXUmpjblZ0WWkxd1lXUmthVzVuTFhrNklDQWdJQ0FnSUNBZ0lDQWdJQ0F1TnpWeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSaWNtVmhaR055ZFcxaUxYQmhaR1JwYm1jdGVEb2dJQ0FnSUNBZ0lDQWdJQ0FnSURGeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSaWNtVmhaR055ZFcxaUxXbDBaVzB0Y0dGa1pHbHVaeTE0T2lBZ0lDQWdJQ0FnSUM0MVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSaWNtVmhaR055ZFcxaUxXMWhjbWRwYm1KdmRIUnZiVG9nSUNBZ0lDQWdJQ0FnSURGeVpXMGdJV1JsWm1GMWJIUTdYSEpjYmlSaWNtVmhaR055ZFcxaUxXUnBkbWxrWlhJdFkyOXNiM0k2SUNBZ0lDQWdJQ0FnSUNSa2FYTmhZbXhsWkNBaFpHVm1ZWFZzZER0Y2NseHVKR0p5WldGa1kzSjFiV0l0WkdsMmFXUmxjam9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdYQ0x3bjZDYVhDSWdJV1JsWm1GMWJIUTdYSEpjYmx4eVhHNGtZbkpsWVdSamNuVnRZaTFoWTNScGRtVXRZMjlzYjNJNklDQWdJQ0FnSUNBZ0lDQWtZbkpsWVdSamNuVnRZaTFrYVhacFpHVnlMV052Ykc5eUlDRmtaV1poZFd4ME8xeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5QkpZMjl1Y3lCelpYUjBhVzVuYzF4eVhHNHZMMXh5WEc1Y2NseHVMeTljY2x4dUx5OGdVMlYwZEdsdVoxeHlYRzR2TDF4eVhHNGthV052YmkxaGNtVmhPaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNV1Z0SUNGa1pXWmhkV3gwTzF4eVhHNGthV052YmkxdlptWnpaWFE2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdNV1Z0SUNGa1pXWmhkV3gwTzF4eVhHNWNjbHh1SkhOMlp5MWxibU52WkdVNklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNoY0lqeGNJanBjSWlVelExd2lMQ0JjSWo1Y0lqcGNJaVV6UlZ3aUxDQmNJaU5jSWpwY0lpVXlNMXdpS1NBaFpHVm1ZWFZzZER0Y2NseHVYSEpjYmlSd1lYUm9MV2x1Wm04NklDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lqeG5QanhqYVhKamJHVWdZM2c5SnprbklHTjVQU2M1SnlCeVBTYzRKeTgrUEhCaGRHZ2daRDBuYlRrZ01UTXVOamQyTFRVdU5EZ25MejQ4WTJseVkyeGxJR040UFNjNUp5QmplVDBuTlM0MEp5QnlQU2N1TkRNbklITjBjbTlyWlMxM2FXUjBhRDBuSTNzb01TNDNJQzhnTWlsOUp5OCtQQzluUGx3aUlDRmtaV1poZFd4ME8xeHlYRzRrY0dGMGFDMTNZWEp1YVc1bk9pQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOFp6NDhjR0YwYUNCa1BTZHRPU0EzZGpRdU1pY3ZQanhqYVhKamJHVWdZM2c5SnprbklHTjVQU2N4TXk0Mk55Y2djajBuTGpRekp5QnpkSEp2YTJVdGQybGtkR2c5SnlON0tERXVOeUF2SURJcGZTY3ZQanh3WVhSb0lHUTlKMjB4TUM0ME5TQXlMalV5TFRndU9ETWdNVFV1TXpkb01UY3VOamQ2SnlCemRISnZhMlV0ZDJsa2RHZzlKekluSUhSeVlXNXpabTl5YlQwbmJXRjBjbWw0S0M0NE55QXdJREFnTGpnM0lDMHVNRFlnTGpFcEp5OCtQQzluUGx3aUlDRmtaV1poZFd4ME8xeHlYRzRrY0dGMGFDMWphR1ZqYXpvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWENJOGNHRjBhQ0JrUFNkdE1UVXVOekVnTkM0MU5TMDVJRGt0TkM0eE15MDBMakV6Snk4K1hDSWdJV1JsWm1GMWJIUTdYSEpjYmlSd1lYUm9MV055YjNOek9pQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCY0lqeG5Qanh3WVhSb0lHUTlKMjB6TGpnNElETXVPRGdnTVRBdU5ESWdNVEF1TkRJbkx6NDhjR0YwYUNCa1BTZHRNVFF1TXlBekxqZzRMVEV3TGpReUlERXdMalF5Snk4K1BDOW5QbHdpSUNGa1pXWmhkV3gwTzF4eVhHNGtjR0YwYUMxallYSmxkQzFrYjNkdU9pQWdJQ0FnSUNBZ0lDQWdYQ0k4Y0dGMGFDQmtQU2R0TkM0M05TQTNMakV5SURRdU56VWdOQzQzTlNBMExqYzFMVFF1TnpVbkx6NWNJaUFoWkdWbVlYVnNkRHRjY2x4dVhISmNiaVJwWTI5dUxXbHVabTg2SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEhJdGNtVndiR0ZqWlNoMWNtd29YQ0prWVhSaE9tbHRZV2RsTDNOMlp5dDRiV3dzUEhOMlp5QnpkSGxzWlQwbmMzUnliMnRsT2lON0pHbHVabTk5T3lON2FXWW9KR1JsYzJsbmJpMXliM1Z1WkdWa0xXVnNjMlV0WW05NExDZHpkSEp2YTJVdGJHbHVaV05oY0RweWIzVnVaRHR6ZEhKdmEyVXRiR2x1WldwdmFXNDZjbTkxYm1RN0p5eHVkV3hzS1gxbWFXeHNPbTV2Ym1VN2MzUnliMnRsTFhkcFpIUm9PaU43TVM0M2ZUdG1hV3hzTFhKMWJHVTZaWFpsYm05a1pDY2dkbWxsZDJKdmVEMG5NQ0F3SURJeElESXhKeUI0Yld4dWN6MG5hSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY25QaU43SkhCaGRHZ3RhVzVtYjMwOEwzTjJaejVjSWlrc0lDUnpkbWN0Wlc1amIyUmxLU0FoWkdWbVlYVnNkRHRjY2x4dUpHbGpiMjR0ZDJGeWJtbHVaem9nSUNBZ0lDQWdJQ0FnSUNBZ0lITjBjaTF5WlhCc1lXTmxLSFZ5YkNoY0ltUmhkR0U2YVcxaFoyVXZjM1puSzNodGJDdzhjM1puSUhOMGVXeGxQU2R6ZEhKdmEyVTZJM3NrZDJGeWJuMDdJM3RwWmlna1pHVnphV2R1TFhKdmRXNWtaV1F0Wld4elpTMWliM2dzSjNOMGNtOXJaUzFzYVc1bFkyRndPbkp2ZFc1a08zTjBjbTlyWlMxc2FXNWxhbTlwYmpweWIzVnVaRHNuTEc1MWJHd3BmV1pwYkd3NmJtOXVaVHR6ZEhKdmEyVXRkMmxrZEdnNkkzc3hMamQ5TzJacGJHd3RjblZzWlRwbGRtVnViMlJrSnlCMmFXVjNZbTk0UFNjd0lEQWdNakVnTWpFbklIaHRiRzV6UFNkb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnljK0kzc2tjR0YwYUMxM1lYSnVhVzVuZlR3dmMzWm5QbHdpS1N3Z0pITjJaeTFsYm1OdlpHVXBJQ0ZrWldaaGRXeDBPMXh5WEc0a2FXTnZiaTFqYUdWamF6b2dJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2MzUnlMWEpsY0d4aFkyVW9kWEpzS0Z3aVpHRjBZVHBwYldGblpTOXpkbWNyZUcxc0xEeHpkbWNnYzNSNWJHVTlKM04wY205clpUb2pleVIyWVd4cFpIMDdJM3RwWmlna1pHVnphV2R1TFhKdmRXNWtaV1F0Wld4elpTMWliM2dzSjNOMGNtOXJaUzFzYVc1bFkyRndPbkp2ZFc1a08zTjBjbTlyWlMxc2FXNWxhbTlwYmpweWIzVnVaRHNuTEc1MWJHd3BmV1pwYkd3NmJtOXVaVHR6ZEhKdmEyVXRkMmxrZEdnNkkzc3lmVHRtYVd4c0xYSjFiR1U2WlhabGJtOWtaQ2NnZG1sbGQySnZlRDBuTUNBd0lESXhJREl4SnlCNGJXeHVjejBuYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNuUGlON0pIQmhkR2d0WTJobFkydDlQQzl6ZG1jK1hDSXBMQ0FrYzNabkxXVnVZMjlrWlNrZ0lXUmxabUYxYkhRN1hISmNiaVJwWTI5dUxXTnliM056T2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0J6ZEhJdGNtVndiR0ZqWlNoMWNtd29YQ0prWVhSaE9tbHRZV2RsTDNOMlp5dDRiV3dzUEhOMlp5QnpkSGxzWlQwbmMzUnliMnRsT2lON0pHVnljbTl5ZlRzamUybG1LQ1JrWlhOcFoyNHRjbTkxYm1SbFpDMWxiSE5sTFdKdmVDd25jM1J5YjJ0bExXeHBibVZqWVhBNmNtOTFibVE3YzNSeWIydGxMV3hwYm1WcWIybHVPbkp2ZFc1a095Y3NiblZzYkNsOVptbHNiRHB1YjI1bE8zTjBjbTlyWlMxM2FXUjBhRG9qZXpKOU8yWnBiR3d0Y25Wc1pUcGxkbVZ1YjJSa0p5QjJhV1YzWW05NFBTY3dJREFnTWpFZ01qRW5JSGh0Ykc1elBTZG9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5YytJM3NrY0dGMGFDMWpjbTl6YzMwOEwzTjJaejVjSWlrc0lDUnpkbWN0Wlc1amIyUmxLU0FoWkdWbVlYVnNkRHRjY2x4dUpHbGpiMjR0WTJGeVpYUXRaRzkzYmpvZ0lDQWdJQ0FnSUNBZ0lITjBjaTF5WlhCc1lXTmxLSFZ5YkNoY0ltUmhkR0U2YVcxaFoyVXZjM1puSzNodGJDdzhjM1puSUhOMGVXeGxQU2R6ZEhKdmEyVTZJM3NrWTI5dWRISnZiSE10ZEdobGJXVjlPeU43YVdZb0pHUmxjMmxuYmkxeWIzVnVaR1ZrTFdWc2MyVXRZbTk0TENkemRISnZhMlV0YkdsdVpXTmhjRHB5YjNWdVpEdHpkSEp2YTJVdGJHbHVaV3B2YVc0NmNtOTFibVE3Snl4dWRXeHNLWDFtYVd4c09tNXZibVU3YzNSeWIydGxMWGRwWkhSb09pTjdNUzQzZlR0bWFXeHNMWEoxYkdVNlpYWmxibTlrWkNjZ2RtbGxkMkp2ZUQwbk1DQXdJREl4SURJeEp5QjRiV3h1Y3owbmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jblBpTjdKSEJoZEdndFkyRnlaWFF0Wkc5M2JuMDhMM04yWno1Y0lpa3NJQ1J6ZG1jdFpXNWpiMlJsS1NBaFpHVm1ZWFZzZER0Y2NseHVJaXdLQ1FraUpXUnBjM0JzWVhrdFlteHZZMnNnZTF4eVhHNGdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHlYRzU5WEhKY2JseHlYRzRsWkdsemNHeGhlUzFwYm14cGJtVmliRzlqYXlCN1hISmNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV0pzYjJOck8xeHlYRzU5WEhKY2JseHlYRzRsZG1WeWRHbGpZV3hoYkdsbmJpMWlZWE5sYkdsdVpTQjdYSEpjYmlBZ2RtVnlkR2xqWVd3dFlXeHBaMjQ2SUdKaGMyVnNhVzVsTzF4eVhHNTlYSEpjYmx4eVhHNGxMWGRsWW10cGRHRndjR1ZoY21GdVkyVXRibTl1WlNCN1hISmNiaUFnTHk4Z2MzUjViR1ZzYVc1MExXUnBjMkZpYkdVdGJtVjRkQzFzYVc1bElIQnliM0JsY25SNUxXNXZMWFpsYm1SdmNpMXdjbVZtYVhoY2NseHVJQ0F0ZDJWaWEybDBMV0Z3Y0dWaGNtRnVZMlU2SUc1dmJtVTdYSEpjYm4xY2NseHVYSEpjYmlVdGQyVmlhMmwwWVhCd1pXRnlZVzVqWlMxaWRYUjBiMjRnZTF4eVhHNGdJQzh2SUhOMGVXeGxiR2x1ZEMxa2FYTmhZbXhsTFc1bGVIUXRiR2x1WlNCd2NtOXdaWEowZVMxdWJ5MTJaVzVrYjNJdGNISmxabWw0WEhKY2JpQWdMWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPaUJpZFhSMGIyNDdYSEpjYm4xY2NseHVYSEpjYmlVdGQyVmlhMmwwWVhCd1pXRnlZVzVqWlMxMFpYaDBabWxsYkdRZ2UxeHlYRzRnSUM4dklITjBlV3hsYkdsdWRDMWthWE5oWW14bExXNWxlSFF0YkdsdVpTQndjbTl3WlhKMGVTMXVieTEyWlc1a2IzSXRjSEpsWm1sNFhISmNiaUFnTFhkbFltdHBkQzFoY0hCbFlYSmhibU5sT2lCMFpYaDBabWxsYkdRN1hISmNibjFjY2x4dVhISmNiaVZqYjJ4dmNpMXBibWhsY21sMElIdGNjbHh1SUNCamIyeHZjam9nYVc1b1pYSnBkRHRjY2x4dWZWeHlYRzVjY2x4dUpXeHBibVZvWldsbmFIUXRhVzVvWlhKcGRDQjdYSEpjYmlBZ2JHbHVaUzFvWldsbmFIUTZJR2x1YUdWeWFYUTdYSEpjYm4xY2NseHVYSEpjYmlWd1lXUmthVzVuTFRBZ2UxeHlYRzRnSUhCaFpHUnBibWM2SURBN1hISmNibjFjY2x4dVhISmNiaVZpYjNKa1pYSXRNQ0I3WEhKY2JpQWdZbTl5WkdWeU9pQXdPMXh5WEc1OVhISmNibHh5WEc0bFltOXlaR1Z5YzNSNWJHVXRibTl1WlNCN1hISmNiaUFnWW05eVpHVnlMWE4wZVd4bE9pQnViMjVsTzF4eVhHNTlYSEpjYmx4eVhHNGxiV0Z5WjJsdWRHOXdMVEFnZTF4eVhHNGdJRzFoY21kcGJpMTBiM0E2SURBN1hISmNibjFjY2x4dVhISmNiaVZ0WVhKbmFXNHRNQ0I3WEhKY2JpQWdiV0Z5WjJsdU9pQXdPMXh5WEc1OVhISmNibHh5WEc0bGIzWmxjbVpzYjNjdFlYVjBieUI3WEhKY2JpQWdiM1psY21ac2IzYzZJR0YxZEc4N1hISmNibjFjY2x4dVhISmNiaVZ3YjNOcGRHbHZiaTF5Wld4aGRHbDJaU0I3WEhKY2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh5WEc1OVhISmNibHh5WEc0bGNHOXphWFJwYjI0dFptbDRaV1FnZTF4eVhHNGdJSEJ2YzJsMGFXOXVPaUJtYVhobFpEdGNjbHh1ZlZ4eVhHNWNjbHh1SldOMWNuTnZjaTF3YjJsdWRHVnlJSHRjY2x4dUlDQmpkWEp6YjNJNklIQnZhVzUwWlhJN1hISmNibjFjY2x4dUlpd0tDUWtpTHk4Z1VHeGhZMlZvYjJ4a1pYSWdabTl5SUhCeVpXWmxjbk10Y21Wa2RXTmxaQzF0YjNScGIyNGdjWFZsY25sY2NseHVKWEJ5WldabGNuTXRjbVZrZFdObFpDMXRiM1JwYjI0Z2UxeHlYRzRnSUVCdFpXUnBZU0FvY0hKbFptVnljeTF5WldSMVkyVmtMVzF2ZEdsdmJqb2djbVZrZFdObEtTQjdYSEpjYmlBZ0lDQXZMeUJ6ZEhsc1pXeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnY0hKdmNHVnlkSGt0WW14aFkydHNhWE4wWEhKY2JpQWdJQ0IwY21GdWMybDBhVzl1T2lCdWIyNWxPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNGlMQW9KQ1NJdkwxeHlYRzR2THlCUWJHRmpaV2h2YkdSbGNuTWdWWE5sWkNCbWIzSWdkbUZ5YVc5MWN5QmpiMjUwY205c2MxeHlYRzR2TDF4eVhHNWNjbHh1THk4Z1FtRnphV01nYzNSNWJHVnpJR1p2Y2lCdWIzSnRZV3dnWTI5dWRISnZiSE1nZDJobGNtVWdjM1I1YkdVZ1lYSmxJR1JwY21WamRHeDVJR0Z3Y0d4cFpXUWdiMjRnWld4bGJXVnVkSE5jY2x4dUx5OGdaUzVuSUVKMWRIUnZiaXdnUjNKdmRYQWdRV1JrYjI0c0lFbHVjSFYwTENCVVpYaDBZWEpsWVN3Z1UyVnNaV04wTENCTlpXNTFMQ0JTWVc1blpTQmhibVFnSldOdmJuUnliMnh6TFd4aFltVnNLSE1wSUd4aFltVnNYSEpjYmlWamIyNTBjbTlzY3lCN1hISmNiaUFnY0c5emFYUnBiMjQ2SUhKbGJHRjBhWFpsTzF4eVhHNGdJR1JwYzNCc1lYazZJR2x1YkdsdVpTMWliRzlqYXp0Y2NseHVJQ0IxYzJWeUxYTmxiR1ZqZERvZ2JtOXVaVHRjY2x4dUlDQndZV1JrYVc1bk9pQWtZMjl1ZEhKdmJITXRjR0ZrWkdsdVp5MTVJQ1JqYjI1MGNtOXNjeTF3WVdSa2FXNW5MWGc3WEhKY2JpQWdZbTl5WkdWeU9pQWtZMjl1ZEhKdmJITXRZbTl5WkdWeWQybGtkR2dnYzI5c2FXUWdKR052Ym5SeWIyeHpMV0p2Y21SbGNtTnZiRzl5TzF4eVhHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklHSnZjbVJsY2kxeVlXUnBkWE1vSkdOdmJuUnliMnh6TFdKdmNtUmxjbkpoWkdsMWN5d2dNQ2s3WEhKY2JpQWdZMjlzYjNJNklDUmpiMjUwY205c2N5MWpiMnh2Y2p0Y2NseHVJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrWTI5dWRISnZiSE10WW1GamEyZHliM1Z1WkR0Y2NseHVJQ0IyWlhKMGFXTmhiQzFoYkdsbmJqb2diV2xrWkd4bE8xeHlYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNjbHh1SUNCbWIyNTBMV1poYldsc2VUb2dKR052Ym5SeWIyeHpMV1p2Ym5SbVlXMXBiSGs3WEhKY2JpQWdabTl1ZEMxM1pXbG5hSFE2SUNSamIyNTBjbTlzY3kxbWIyNTBkMlZwWjJoME8xeHlYRzRnSUd4cGJtVXRhR1ZwWjJoME9pQWtZMjl1ZEhKdmJITXRiR2x1WldobGFXZG9kRHRjY2x4dUlDQkFhVzVqYkhWa1pTQm1iMjUwYzJsNlpTZ3BPMXh5WEc0Z0lFQnBibU5zZFdSbElIUnlZVzV6YVhScGIyNG9KR052Ym5SeWIyeHpMWFJ5WVc1emFYUnBiMjRwTzF4eVhHNTlYSEpjYmx4eVhHNHZMeUJDWVhOcFl5QmhZM1JwZG1VZ2MzUmhkR1VnYzNSNWJHVnpJR1p2Y2lCdWIzSnRZV3dnWTI5dWRISnZiSE1nZDJobGNtVWdjM1I1YkdVZ1lYSmxJR1JwY21WamRHeDVJR0Z3Y0d4cFpXUWdiMjRnWld4bGJXVnVkSE5jY2x4dUx5OGdaUzVuSUVKMWRIUnZiaXdnUjNKdmRYQWdRV1JrYjI0c0lFbHVjSFYwTENCVVpYaDBZWEpsWVN3Z1UyVnNaV04wSUdGdVpDQWxZMjl1ZEhKdmJITXRiR0ZpWld3b2N5a2diR0ZpWld4Y2NseHVKV052Ym5SeWIyeHpMV0ZqZEdsMlpTQjdYSEpjYmlBZ1FHbHVZMngxWkdVZ1lXTjBhWFpsSUh0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUdGdWFXMWhkR2x2YmlodWIyNWxLVHNnTHk4Z1pHbHpZV0pzWlNCaGJtbHRZWFJwYjI1eklHOXVJR05zYVdOcklHVjJaVzUwSUdGdVpDQndiR0Y1SUdGbllXbHVJRzl1SUdadlkzVnpMMk5zYVdOcmRYQWdaWFpsYm5SY2NseHVJQ0FnSUdKdmVDMXphR0ZrYjNjNklHSnZlQzF6YUdGa2IzY29ibTl1WlNrN0lDOHZJRzV2SUhOb1lXUnZkeUJwYmlCamJHbGphMlZrSUhOMFlYUmxYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzR2THlCQ1lYTnBZeUJvYjNabGNpQnpkR0YwWlNCemRIbHNaWE1nWm05eUlHNXZjbTFoYkNCamIyNTBjbTlzY3lCM2FHVnlaU0J6ZEhsc1pTQmhjbVVnWkdseVpXTjBiSGtnWVhCd2JHbGxaQ0J2YmlCbGJHVnRaVzUwYzF4eVhHNHZMeUJsTG1jZ1FuVjBkRzl1TENCSGNtOTFjQ0JCWkdSdmJpd2dWR1Y0ZEdGeVpXRXNJRk5sYkdWamRDQmhibVFnSldOdmJuUnliMnh6TFd4aFltVnNLSE1wSUd4aFltVnNYSEpjYmlWamIyNTBjbTlzY3kxb2IzWmxjaUI3WEhKY2JpQWdRR2x1WTJ4MVpHVWdhRzkyWlhJZ2UxeHlYRzRnSUNBZ1ltOTRMWE5vWVdSdmR6b2dZbTk0TFhOb1lXUnZkeWdrWTI5dWRISnZiSE10Wm05amRYTXRZbTk0YzJoaFpHOTNJSEpuWW1Fb0pHTnZiblJ5YjJ4ekxYUm9aVzFsTENBdU5Ta3BPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1THk4Z1FtRnphV01nWm05amRYTWdjM1JoZEdVZ2MzUjViR1Z6SUdadmNpQnViM0p0WVd3Z1kyOXVkSEp2YkhNZ2QyaGxjbVVnYzNSNWJHVWdZWEpsSUdScGNtVmpkR3g1SUdGd2NHeHBaV1FnYjI0Z1pXeGxiV1Z1ZEhOY2NseHVMeThnWlM1bklFSjFkSFJ2Yml3Z1IzSnZkWEFnUVdSa2IyNHNJRWx1Y0hWMExDQlVaWGgwWVhKbFlTd2dVMlZzWldOMElHRnVaQ0FsWTI5dWRISnZiSE10YkdGaVpXd29jeWtnYkdGaVpXeGNjbHh1SldOdmJuUnliMnh6TFdadlkzVnpJSHRjY2x4dUlDQkFhVzVqYkhWa1pTQm1iMk4xY3lCN1hISmNiaUFnSUNCQWFXNWpiSFZrWlNCaGJtbHRZWFJwYjI0b2NtbHdjR3hsS1RzZ0x5OGdjbWx3Y0d4bElHRnVhVzFoZEdsdmJpQnZiaUJqYkdsamF5QmxkbVZ1ZEZ4eVhHNGdJQ0FnYjNWMGJHbHVaVG9nTUR0Y2NseHVJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpOHZJRUpoYzJsaklITjBlV3hsY3lCbWIzSWdZMjl1ZEhKdmJITWdkMmhsY21VZ2MzUjViR1VnWVhKbElHNXZkQ0JrYVhKbFkzUnNlU0JoY0hCc2FXVmtJRzl1SUdWc1pXMWxiblJ6SUdKMWRDQnZiaUIwYUdWcGNpQnNZV0psYkNCcGJuTjBaV0ZrWEhKY2JpOHZJR1V1WnlCRGFHVmphMkp2ZUN3Z1VtRmthVzhnWVc1a0lGTjNhWFJqYUZ4eVhHNGxZMjl1ZEhKdmJITXRiR0ZpWld3Z2UxeHlYRzRnSUVCcGJtTnNkV1JsSUdGamRHbDJaU0I3WEhKY2JpQWdJQ0IrSUM1c1lXSmxiQ0I3WEhKY2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUdKbFptOXlaU0I3WEhKY2JpQWdJQ0FnSUNBZ2IzQmhZMmwwZVRvZ0xqVTdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQ1k2WTJobFkydGxaQ0I3WEhKY2JpQWdJQ0IrSUM1c1lXSmxiQ0I3WEhKY2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUdKbFptOXlaU0I3WEhKY2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFdOdmJHOXlPaUJqZFhKeVpXNTBRMjlzYjNJN1hISmNiaUFnSUNBZ0lDQWdZbUZqYTJkeWIzVnVaRG9nWTNWeWNtVnVkRU52Ykc5eU8xeHlYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJR0Z1YVcxaGRHbHZiaWh1YjI1bEtUc2dMeThnWkdsellXSnNaU0JoYm1sdFlYUnBiMjV6SUc5dUlHTnNhV05ySUdWMlpXNTBJR0Z1WkNCd2JHRjVJR0ZuWVdsdUlHOXVJR1p2WTNWekwyTnNhV05yZFhBZ1pYWmxiblJjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dVhISmNiaUFnUUdsdVkyeDFaR1VnWm05amRYTWdlMXh5WEc0Z0lDQWdmaUF1YkdGaVpXd2dlMXh5WEc0Z0lDQWdJQ0JBYVc1amJIVmtaU0JpWldadmNtVWdlMXh5WEc0Z0lDQWdJQ0FnSUVCcGJtTnNkV1JsSUdGdWFXMWhkR2x2YmloeWFYQndiR1VwT3lBdkx5QnlhWEJ3YkdVZ1lXNXBiV0YwYVc5dUlHOXVJR05zYVdOcklHVjJaVzUwWEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzRnSUg0Z0xteGhZbVZzSUh0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCeVpXeGhkR2wyWlR0Y2NseHVJQ0FnSUdOMWNuTnZjam9nY0c5cGJuUmxjanRjY2x4dUlDQWdJSEJoWkdScGJtY3RiR1ZtZERvZ0pHTnZiblJ5YjJ4ekxXeGhZbVZzTFhCaFpHUnBibWRzWldaME8xeHlYRzRnSUNBZ2JXRnlaMmx1TFdKdmRIUnZiVG9nTURzZ0x5OGdiM1psY25KcFpHVWdiR0ZpWld3Z2MzUjViR1VnYVc1emFXUmxJR052Ym5SeWIyeGNjbHh1WEhKY2JpQWdJQ0E2Ym05MEtEcGxiWEIwZVNrZ2UxeHlYRzRnSUNBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBdU5YSmxiVHRjY2x4dUlDQWdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQWtZMjl1ZEhKdmJITXRiR0ZpWld3dGNHRmtaR2x1WjJ4bFpuUTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnWW1WbWIzSmxJSHRjY2x4dUlDQWdJQ0FnUUdWNGRHVnVaQ0FsWTI5dWRISnZiSE03WEhKY2JpQWdJQ0FnSUVCbGVIUmxibVFnSldOdmJuUnliMnh6TFdGamRHbDJaVHRjY2x4dUlDQWdJQ0FnUUdWNGRHVnVaQ0FsWTI5dWRISnZiSE10YUc5MlpYSTdYSEpjYmlBZ0lDQWdJRUJsZUhSbGJtUWdKV052Ym5SeWIyeHpMV1p2WTNWek8xeHlYRzVjY2x4dUlDQWdJQ0FnWTI5dWRHVnVkRG9nWENKY0lqdGNjbHh1SUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxPMXh5WEc0Z0lDQWdJQ0IwYjNBNklEVXdKVHRjY2x4dUlDQWdJQ0FnYkdWbWREb2dNRHRjY2x4dUlDQWdJQ0FnZEhKaGJuTm1iM0p0T2lCMGNtRnVjMnhoZEdWWktDMDFNQ1VwTzF4eVhHNGdJQ0FnSUNCM2FXUjBhRG9nSkdOdmJuUnliMnh6TFd4aFltVnNMV0psWm05eVpTMXphWHBsTzF4eVhHNGdJQ0FnSUNCb1pXbG5hSFE2SUNSamIyNTBjbTlzY3kxc1lXSmxiQzFpWldadmNtVXRjMmw2WlR0Y2NseHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01Ec2dMeThnYjNabGNuSnBaR1VnSldOdmJuUnliMnh6SUhCaFpHUnBibWRjY2x4dUlDQWdJQ0FnWW05eVpHVnlMV052Ykc5eU9pQWtZMjl1ZEhKdmJITXRiR0ZpWld3dFltOXlaR1Z5WTI5c2IzSTdYSEpjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1JqYjI1MGNtOXNjeTFzWVdKbGJDMWlZV05yWjNKdmRXNWtPMXh5WEc0Z0lDQWdJQ0JBYVc1amJIVmtaU0JtYjI1MGMybDZaU2hwYm1obGNtbDBLVHNnTHk4Z2IzWmxjbkpwWkdVZ0pXTnZiblJ5YjJ4eklHWnZiblF0YzJsNlpWeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0x5OWNjbHh1SUNBdkx5QkRiMnh2Y2lCMllYSnBZVzUwYzF4eVhHNGdJQzh2WEhKY2JpQWdRR1ZoWTJnZ0pHTnZiRzl5TENBa2RtRnNkV1VnYVc0Z0pIUm9aVzFsTFdOdmJHOXljeUI3WEhKY2JpQWdJQ0FtTG1sekxTTjdKR052Ykc5eWZTQjdYSEpjYmlBZ0lDQWdJSDRnTG14aFltVnNJSHRjY2x4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCaVpXWnZjbVVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdZMjlzYjNJNklDUjJZV3gxWlR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmx4eVhHNGdJRUJwYm1Oc2RXUmxJR1JwYzJGaWJHVmtJSHRjY2x4dUlDQWdJSDRnTG14aFltVnNJSHRjY2x4dUlDQWdJQ0FnTHk4Z1UyVndZWEpoZEdVZ2MzUjViR1VnWm5KdmJTQWxZMjl1ZEhKdmJITXRaR2x6WVdKc1pXUWdjR3hoWTJWb2IyeGtaWElnZEc4Z1JtbDRJRG9nWkdsellXSnNaV1FnYjNCaFkybDBlU0J2YmlBbFkyOXVkSEp2YkhNdGJHRmlaV3dnYVc0Z1NVVmNjbHh1SUNBZ0lDQWdjRzlwYm5SbGNpMWxkbVZ1ZEhNNklHNXZibVU3WEhKY2JpQWdJQ0FnSUc5d1lXTnBkSGs2SUNSamIyNTBjbTlzY3kxa2FYTmhZbXhsWkMxdmNHRmphWFI1TzF4eVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCaVpXWnZjbVVnZTF4eVhHNGdJQ0FnSUNBZ0lDOHZJSE4wZVd4bGJHbHVkQzFrYVhOaFlteGxMVzVsZUhRdGJHbHVaU0JrWldOc1lYSmhkR2x2YmkxdWJ5MXBiWEJ2Y25SaGJuUmNjbHh1SUNBZ0lDQWdJQ0JqYjJ4dmNqb2dKR052Ym5SeWIyeHpMWFJvWlcxbExXeHBaMmgwSUNGcGJYQnZjblJoYm5RN1hISmNiaUFnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaTh2SUVKaGMybGpJSE4wZVd4bGN5QjBieUJvYVdSbElHTnZiblJ5YjJ4eklHWnliMjBnZG1semRXRnNJR0Z3Y0dWaGNtRnVZMlZjY2x4dUx5OGdaUzVuSUVOb1pXTnJZbTk0TENCU1lXUnBieXdnVTNkcGRHTm9JR0Z1WkNCR2FXeGxYSEpjYmlWamIyNTBjbTlzY3kxb2FXUmxJSHRjY2x4dUlDQXZMeUJYWlNCelpYUWdjRzl6YVhScGIyNHNJSG90YVc1a1pYZ2dZVzVrSUc5d1lXTnBkSGtnYVc1emRHVmhaQ0J2WmlCelpYUjBhVzVuSUdScGMzQnNZWGtnWVc1a0lIWnBjMmxpYVd4cGRIa2djSEp2Y0dWeWRHbGxjMXh5WEc0Z0lDOHZJR0psWTJGMWMyVWdkR2hsZVNCM2IzVnNaQ0JzWldGa0lIUnZJR052Ym5SeWIyd2dZbVZwYm1jZ2FHbGtaR1Z1SUdaeWIyMGdjMk55WldWdUlISmxZV1JsY25NZ1lXNWtJRzkwYUdWeUlHRnpjMmx6ZEdsMlpTQjBaV05vYm05c2IyZHBaWE5jY2x4dUlDQXZMMXh5WEc0Z0lDOHZJRkpsWVdRZ2JXOXlaU0E2SUdoMGRIQnpPaTh2WVd4cGMzUmhjR0Z5ZEM1amIyMHZZWEowYVdOc1pTOXViM2N0ZVc5MUxYTmxaUzF0WlM5Y2NseHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdlaTFwYm1SbGVEb2dMVEU3WEhKY2JpQWdiM0JoWTJsMGVUb2dNRHRjY2x4dWZWeHlYRzVjY2x4dUx5OGdRbUZ6YVdNZ2MzUjViR1Z6SUdadmNpQmthWE5oWW14bFpDQmpiMjUwY205c2MxeHlYRzR2THlCbExtY2dRblYwZEc5dUxDQkpibkIxZEN3Z1ZHVjRkR0Z5WldFc0lGTmxiR1ZqZEN3Z1RXVnVkU3dnVW1GdVoyVWdZVzVrSUNWamIyNTBjbTlzY3kxc1lXSmxiQ2h6S1NCc1lXSmxiRnh5WEc0bFkyOXVkSEp2YkhNdFpHbHpZV0pzWldRZ2UxeHlYRzRnSUhCdmFXNTBaWEl0WlhabGJuUnpPaUJ1YjI1bE8xeHlYRzRnSUc5d1lXTnBkSGs2SUNSamIyNTBjbTlzY3kxa2FYTmhZbXhsWkMxdmNHRmphWFI1TzF4eVhHNTlYSEpjYmx4eVhHNHZMeUJDWVhOcFl5QnpkSGxzWlhNZ1ptOXlJSE5vYjNkcGJtY2dkbUZzYVdSaGRHbHZiaUJwWTI5dUlHOXVJR052Ym5SeWIyeHpJSFZ6YVc1bklHSmhZMnRuY205MWJtUWdhVzFoWjJWY2NseHVMeThnWlM1bklFbHVjSFYwTENCVVpYaDBZWEpsWVNCaGJtUWdVMlZzWldOMFhISmNiaVZqYjI1MGNtOXNjeTEyWVd4cFpHRjBhVzl1TFdsamIyNGdlMXh5WEc0Z0lIQmhaR1JwYm1jdGNtbG5hSFE2SUNScGJuQjFkQzFwWTI5dUxYQmhaR1JwYm1jN1hISmNiaUFnWW1GamEyZHliM1Z1WkMxeVpYQmxZWFE2SUc1dkxYSmxjR1ZoZER0Y2NseHVJQ0JpWVdOclozSnZkVzVrTFhCdmMybDBhVzl1T2lCeWFXZG9kQ0FrYVc1d2RYUXRhV052Ymkxd2IzTnBkR2x2YmkxeWFXZG9kQ0JqWlc1MFpYSTdYSEpjYmlBZ1ltRmphMmR5YjNWdVpDMXphWHBsT2lBa2FXNXdkWFF0YVdOdmJpMXphWHBsSUNScGJuQjFkQzFwWTI5dUxYTnBlbVU3WEhKY2JuMWNjbHh1SWl3S0NRa2lKV2R5YjNWd0xXMWhjbWRwYmkxNElIdGNjbHh1SUNCdFlYSm5hVzR0Y21sbmFIUTZJQzBrWTI5dWRISnZiSE10WW05eVpHVnlkMmxrZEdnZ0x5QXlPMXh5WEc0Z0lHMWhjbWRwYmkxc1pXWjBPaUF0SkdOdmJuUnliMnh6TFdKdmNtUmxjbmRwWkhSb0lDOGdNanRjY2x4dWZWeHlYRzVjY2x4dUpXZHliM1Z3TFcxaGNtZHBiaTE1SUh0Y2NseHVJQ0J0WVhKbmFXNHRkRzl3T2lBdEpHTnZiblJ5YjJ4ekxXSnZjbVJsY25kcFpIUm9JQzhnTWp0Y2NseHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXRKR052Ym5SeWIyeHpMV0p2Y21SbGNuZHBaSFJvSUM4Z01qdGNjbHh1ZlZ4eVhHNWNjbHh1SldkeWIzVndMV0p2Y21SbGNpMTRMVEFnZTF4eVhHNGdJR0p2Y21SbGNpMXlhV2RvZERvZ01Ec2dMeThnWVhadmFXUWdkWE5wYm1jZ1FHWjFibU4wYVc5dUlHSnZjbVJsY2l3Z2RHOGdjbVZ0YjNabElHSnZjbVJsY25NZ2FXNWtaWEJsYm1SbGJuUWdiMllnWUNSa1pYTnBaMjR0YzJoaFpHOTNMV1ZzYzJVdFltOXlaR1Z5WUNCdmNIUnBiMjVjY2x4dUlDQmliM0prWlhJdGJHVm1kRG9nTURzZ0x5OGdZWFp2YVdRZ2RYTnBibWNnUUdaMWJtTjBhVzl1SUdKdmNtUmxjaXdnZEc4Z2NtVnRiM1psSUdKdmNtUmxjbk1nYVc1a1pYQmxibVJsYm5RZ2IyWWdZQ1JrWlhOcFoyNHRjMmhoWkc5M0xXVnNjMlV0WW05eVpHVnlZQ0J2Y0hScGIyNWNjbHh1ZlZ4eVhHNWNjbHh1SldkeWIzVndMV0p2Y21SbGNpMTVMVEFnZTF4eVhHNGdJR0p2Y21SbGNpMTBiM0E2SURBN0lDOHZJR0YyYjJsa0lIVnphVzVuSUVCbWRXNWpkR2x2YmlCaWIzSmtaWElzSUhSdklISmxiVzkyWlNCaWIzSmtaWEp6SUdsdVpHVndaVzVrWlc1MElHOW1JR0FrWkdWemFXZHVMWE5vWVdSdmR5MWxiSE5sTFdKdmNtUmxjbUFnYjNCMGFXOXVYSEpjYmlBZ1ltOXlaR1Z5TFdKdmRIUnZiVG9nTURzZ0x5OGdZWFp2YVdRZ2RYTnBibWNnUUdaMWJtTjBhVzl1SUdKdmNtUmxjaXdnZEc4Z2NtVnRiM1psSUdKdmNtUmxjbk1nYVc1a1pYQmxibVJsYm5RZ2IyWWdZQ1JrWlhOcFoyNHRjMmhoWkc5M0xXVnNjMlV0WW05eVpHVnlZQ0J2Y0hScGIyNWNjbHh1ZlZ4eVhHNWNjbHh1SldkeWIzVndMV0p2Y21SbGNpMTBiM0F0TUNCN1hISmNiaUFnWW05eVpHVnlMWFJ2Y0RvZ01Ec2dMeThnWVhadmFXUWdkWE5wYm1jZ1FHWjFibU4wYVc5dUlHSnZjbVJsY2l3Z2RHOGdjbVZ0YjNabElHSnZjbVJsY25NZ2FXNWtaWEJsYm1SbGJuUWdiMllnWUNSa1pYTnBaMjR0YzJoaFpHOTNMV1ZzYzJVdFltOXlaR1Z5WUNCdmNIUnBiMjVjY2x4dWZWeHlYRzVjY2x4dUpXZHliM1Z3TFdKdmNtUmxjaTF5YVdkb2RDMHdJSHRjY2x4dUlDQmliM0prWlhJdGNtbG5hSFE2SURBN0lDOHZJR0YyYjJsa0lIVnphVzVuSUVCbWRXNWpkR2x2YmlCaWIzSmtaWElzSUhSdklISmxiVzkyWlNCaWIzSmtaWEp6SUdsdVpHVndaVzVrWlc1MElHOW1JR0FrWkdWemFXZHVMWE5vWVdSdmR5MWxiSE5sTFdKdmNtUmxjbUFnYjNCMGFXOXVYSEpjYm4xY2NseHVYSEpjYmlWbmNtOTFjQzFpYjNKa1pYSXRZbTkwZEc5dExUQWdlMXh5WEc0Z0lHSnZjbVJsY2kxaWIzUjBiMjA2SURBN0lDOHZJR0YyYjJsa0lIVnphVzVuSUVCbWRXNWpkR2x2YmlCaWIzSmtaWElzSUhSdklISmxiVzkyWlNCaWIzSmtaWEp6SUdsdVpHVndaVzVrWlc1MElHOW1JR0FrWkdWemFXZHVMWE5vWVdSdmR5MWxiSE5sTFdKdmNtUmxjbUFnYjNCMGFXOXVYSEpjYm4xY2NseHVYSEpjYmlWbmNtOTFjQzFpYjNKa1pYSXRiR1ZtZEMwd0lIdGNjbHh1SUNCaWIzSmtaWEl0YkdWbWREb2dNRHNnTHk4Z1lYWnZhV1FnZFhOcGJtY2dRR1oxYm1OMGFXOXVJR0p2Y21SbGNpd2dkRzhnY21WdGIzWmxJR0p2Y21SbGNuTWdhVzVrWlhCbGJtUmxiblFnYjJZZ1lDUmtaWE5wWjI0dGMyaGhaRzkzTFdWc2MyVXRZbTl5WkdWeVlDQnZjSFJwYjI1Y2NseHVmVnh5WEc1Y2NseHVKV2R5YjNWd0xXSnZjbVJsY25KaFpHbDFjeTB3SUh0Y2NseHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQmliM0prWlhJdGNtRmthWFZ6S0RBcE8xeHlYRzU5WEhKY2JseHlYRzRsWjNKdmRYQXRZbTl5WkdWeWNtRmthWFZ6TFhSdmNDQjdYSEpjYmlBZ1FHbHVZMngxWkdVZ1ltOXlaR1Z5TFhKaFpHbDFjeTEwYjNBb0pHTnZiblJ5YjJ4ekxXSnZjbVJsY25KaFpHbDFjeWs3WEhKY2JuMWNjbHh1WEhKY2JpVm5jbTkxY0MxaWIzSmtaWEp5WVdScGRYTXRjbWxuYUhRZ2UxeHlYRzRnSUVCcGJtTnNkV1JsSUdKdmNtUmxjaTF5WVdScGRYTXRjbWxuYUhRb0pHTnZiblJ5YjJ4ekxXSnZjbVJsY25KaFpHbDFjeWs3WEhKY2JuMWNjbHh1WEhKY2JpVm5jbTkxY0MxaWIzSmtaWEp5WVdScGRYTXRZbTkwZEc5dElIdGNjbHh1SUNCQWFXNWpiSFZrWlNCaWIzSmtaWEl0Y21Ga2FYVnpMV0p2ZEhSdmJTZ2tZMjl1ZEhKdmJITXRZbTl5WkdWeWNtRmthWFZ6S1R0Y2NseHVmVnh5WEc1Y2NseHVKV2R5YjNWd0xXSnZjbVJsY25KaFpHbDFjeTFzWldaMElIdGNjbHh1SUNCQWFXNWpiSFZrWlNCaWIzSmtaWEl0Y21Ga2FYVnpMV3hsWm5Rb0pHTnZiblJ5YjJ4ekxXSnZjbVJsY25KaFpHbDFjeWs3WEhKY2JuMWNjbHh1SWl3S0NRa2lKV1J5YjNCa2IzZHVMV1pwYkd3dFoyRndjeUI3WEhKY2JpQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2NseHVJQ0J3YjNOcGRHbHZiam9nWVdKemIyeDFkR1U3WEhKY2JpQWdkRzl3T2lBdEpHUnliM0JrYjNkdUxXMWxiblV0YldGeVoybHVPMXh5WEc0Z0lISnBaMmgwT2lBdEpHUnliM0JrYjNkdUxXMWxiblV0YldGeVoybHVPMXh5WEc0Z0lHSnZkSFJ2YlRvZ0xTUmtjbTl3Wkc5M2JpMXRaVzUxTFcxaGNtZHBianRjY2x4dUlDQnNaV1owT2lBdEpHUnliM0JrYjNkdUxXMWxiblV0YldGeVoybHVPMXh5WEc0Z0lIb3RhVzVrWlhnNklDMHhPeUF2THlCd2NtVjJaVzUwSUdaeWIyMGdiM1psY25KcFpHbHVaeUJwYm01bGNpQmxiR1Z0Wlc1MGMxeHlYRzVjY2x4dUlDQkFhV1lnSkdWdVlXSnNaUzFrWldKMVoyZHBibWNnZTF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ2NtZGlZU2drY21Wa0xDQXVOU2s3WEhKY2JpQWdmVnh5WEc1OVhISmNiaUlzQ2drSklpOHZYSEpjYmk4dklHbHVjSFYwSUdOdmJuUnliMnh6WEhKY2JpOHZYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QkNZWE5sSUZOMGVXeGxYSEpjYmk4dlhISmNiaTVwYm5CMWRDQjdYSEpjYmlBZ1FHVjRkR1Z1WkNBbFkyOXVkSEp2YkhNN1hISmNiaUFnUUdWNGRHVnVaQ0FsWTI5dWRISnZiSE10WVdOMGFYWmxPMXh5WEc0Z0lFQmxlSFJsYm1RZ0pXTnZiblJ5YjJ4ekxXWnZZM1Z6TzF4eVhHNWNjbHh1SUNCM2FXUjBhRG9nTVRBd0pUdGNjbHh1SUNCaWIzSmtaWEl0WTI5c2IzSTZJQ1JwYm5CMWRDMWliM0prWlhKamIyeHZjanRjY2x4dUlDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWthVzV3ZFhRdFltRmphMmR5YjNWdVpEdGNjbHh1SUNCaWIzZ3RjMmhoWkc5M09pQmliM2d0YzJoaFpHOTNLQ1JwYm5CMWRDMWliM2h6YUdGa2IzY3RhVzV1WlhJcE8xeHlYRzVjY2x4dUlDQkFhVzVqYkhWa1pTQm9iM1psY2lCN1hISmNiaUFnSUNCaWIzZ3RjMmhoWkc5M09pQmliM2d0YzJoaFpHOTNLQ1JwYm5CMWRDMWliM2h6YUdGa2IzY3RhVzV1WlhJc0lDUmpiMjUwY205c2N5MW1iMk4xY3kxaWIzaHphR0ZrYjNjZ2NtZGlZU2drWTI5dWRISnZiSE10ZEdobGJXVXNJQzQxS1NrN0lDOHZJRVpwZURvZ2FHOTJaWElnYzNSaGRHVWdZbTk0TFhOb1lXUnZkeUIwY21GdWMybDBhVzl1WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0JBYVc1amJIVmtaU0JtYjJOMWN5QjdYSEpjYmlBZ0lDQmliM0prWlhJdFkyOXNiM0k2SUdOMWNuSmxiblJEYjJ4dmNqdGNjbHh1SUNBZ0lHSnZlQzF6YUdGa2IzYzZJR0p2ZUMxemFHRmtiM2NvYm05dVpTazdYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJVYUdWdFpTQldZWEpwWVc1MGMxeHlYRzR2TDF4eVhHNWNjbHh1THk4Z2JXbHVhVzFoYkNCa1pYTnBaMjRnZG1GeWFXRnVkRnh5WEc0dWFXNXdkWFF1YVhNdGJXbHVJSHRjY2x4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ0pHTnZiblJ5YjJ4ekxYQmhaR1JwYm1jdGVTQXRJR052Ym5abGNuUXRkVzVwZENna1ltOXlaR1Z5ZDJsa2RHZ3RkMmxrWlNBdElESXNJR1Z0S1RzZ0x5OGdaR1ZqY21WaGMyVWdjR0ZrWkdsdVp5QmliM1IwYjIwZ1lua2dkR2hsSUhOaGJXVWdkMmxrZEdnZ2QyVWdZWEpsSUdsdVkzSmxZWE5wYm1jZ1ltOXlaR1Z5TFdKdmRIUnZiU0IwYnlCdFlXdGxJR3hoZVc5MWRDQjFibUZtWm1WamRHVmtJR0o1SUdSbGMybG5iaUJqYUdGdVoyVmNjbHh1SUNCaWIzSmtaWEl0ZDJsa2RHZzZJREE3WEhKY2JpQWdZbTl5WkdWeUxXSnZkSFJ2YlMxM2FXUjBhRG9nSkdKdmNtUmxjbmRwWkhSb0xYZHBaR1U3WEhKY2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ1ltOXlaR1Z5TFhKaFpHbDFjeWd3S1R0Y2NseHVYSEpjYmlBZ1FHbHVZMngxWkdVZ2JtOTBMV2h2ZG1WeUlIdGNjbHh1SUNBZ0lHSnZlQzF6YUdGa2IzYzZJR0p2ZUMxemFHRmtiM2NvYm05dVpTazdJQzh2SUhKbGJXOTJaU0JwYm01bGNpQnphR0ZrYjNjZ2QybDBhRzkxZENCdmRtVnljbWxrYVc1bklHaHZkbVZ5SUhOb1lXUnZkMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1THk4Z1pHbHpZV0pzWldRZ1luVjBkRzl1SUc1bFpXUWdkRzhnWW1VZ1lYUWdaVzVrSUhSdklHOTJaWEp5YVdSbElIQnlaWFpwYjNWeklITmxiR1ZqZEc5eWMxeHlYRzR2THlCemRIbHNaV3hwYm5RdFpHbHpZV0pzWlMxdVpYaDBMV3hwYm1VZ2JtOHRaSFZ3YkdsallYUmxMWE5sYkdWamRHOXljMXh5WEc0dWFXNXdkWFFnZTF4eVhHNGdJRUJwYm1Oc2RXUmxJR1JwYzJGaWJHVmtJSHRjY2x4dUlDQWdJRUJsZUhSbGJtUWdKV052Ym5SeWIyeHpMV1JwYzJGaWJHVmtPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1ZEdWNGRHRnlaV0V1YVc1d2RYUTZjbVZoWkMxdmJteDVMRnh5WEc1cGJuQjFkQzVwYm5CMWREcHlaV0ZrTFc5dWJIa2dlMXh5WEc0Z0lFQmxlSFJsYm1RZ0pXTnZiblJ5YjJ4ekxXUnBjMkZpYkdWa08xeHlYRzU5WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJEYjJ4dmNpQjJZWEpwWVc1MGMxeHlYRzR2TDF4eVhHNUFaV0ZqYUNBa1kyOXNiM0lzSUNSMllXeDFaU0JwYmlBa2RHaGxiV1V0WTI5c2IzSnpJSHRjY2x4dUlDQXVhVzV3ZFhRdWFYTXRJM3NrWTI5c2IzSjlJSHRjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJR2x1Y0hWMExYWmhjbWxoYm5Rb0pHTnZiRzl5TENBa2RtRnNkV1VwTzF4eVhHNGdJSDFjY2x4dWZWeHlYRzVjY2x4dUx5OGdabTl5YlNCMllXeHBaR0YwYVc5dUlITjBlV3hsWEhKY2JpNXBjeTEyWVd4cFpHRjBaV1FnTG1sdWNIVjBPbkpsY1hWcGNtVmtJSHRjY2x4dUlDQW1PblpoYkdsa0lIdGNjbHh1SUNBZ0lFQmxlSFJsYm1RZ0xtbHVjSFYwTG1sekxYWmhiR2xrTzF4eVhHNGdJQ0FnUUdWNGRHVnVaQ0F1YVc1d2RYUXVhWE10ZG1Gc2FXUXVhR0Z6TFdsamIyNDdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQW1PbWx1ZG1Gc2FXUWdlMXh5WEc0Z0lDQWdRR1Y0ZEdWdVpDQXVhVzV3ZFhRdWFYTXRaWEp5YjNJN1hISmNiaUFnSUNCQVpYaDBaVzVrSUM1cGJuQjFkQzVwY3kxbGNuSnZjaTVvWVhNdGFXTnZianRjY2x4dUlDQjlYSEpjYm4xY2NseHVYSEpjYm5ObGJHVmpkQzVwYm5CMWRDQjdYSEpjYmlBZ0x5OGdjM1I1YkdWc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJSEJ5YjNCbGNuUjVMVzV2TFhabGJtUnZjaTF3Y21WbWFYaGNjbHh1SUNBdGJXOTZMV0Z3Y0dWaGNtRnVZMlU2SUc1dmJtVTdYSEpjYmlBZ0x5OGdjM1I1YkdWc2FXNTBMV1JwYzJGaWJHVXRibVY0ZEMxc2FXNWxJSEJ5YjNCbGNuUjVMVzV2TFhabGJtUnZjaTF3Y21WbWFYaGNjbHh1SUNBdGQyVmlhMmwwTFdGd2NHVmhjbUZ1WTJVNklHNXZibVU3WEhKY2JpQWdZWEJ3WldGeVlXNWpaVG9nYm05dVpUdGNjbHh1SUNCaVlXTnJaM0p2ZFc1a0xXbHRZV2RsT2lBa2FXTnZiaTFqWVhKbGRDMWtiM2R1TzF4eVhHNGdJRUJsZUhSbGJtUWdKV052Ym5SeWIyeHpMWFpoYkdsa1lYUnBiMjR0YVdOdmJqdGNjbHh1WEhKY2JpQWdKbHR0ZFd4MGFYQnNaVjBzWEhKY2JpQWdKbHR6YVhwbFhUcHViM1FvVzNOcGVtVTlYQ0l4WENKZEtTQjdYSEpjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBa1kyOXVkSEp2YkhNdGNHRmtaR2x1WnkxNU8xeHlYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMXBiV0ZuWlRvZ2JtOXVaVHRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQ1k2T2kxdGN5MWxlSEJoYm1RZ2UxeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ2JtOXVaVHNnTHk4Z1NHbGtaU0JqWVhKbGRDQnZiaUJnUEhObGJHVmpkRDVnY3lCcGJpQkpSVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMeThnVW1WdGIzWmxJR0pzZFdVZ1ltRmphMmR5YjNWdVpDQnBiaUJKUlZ4eVhHNGdJQ1k2T2kxdGN5MTJZV3gxWlNCN1hISmNiaUFnSUNCamIyeHZjam9nSkdOdmJuUnliMnh6TFdOdmJHOXlPMXh5WEc0Z0lDQWdZbUZqYTJkeWIzVnVaRG9nSkdsdWNIVjBMV0poWTJ0bmNtOTFibVE3WEhKY2JpQWdmVnh5WEc1OVhISmNibHh5WEc0dWFXNXdkWFE2T2kxdGN5MWpiR1ZoY2lCN1hISmNiaUFnWTI5c2IzSTZJQ1JqYjI1MGNtOXNjeTEwYUdWdFpUc2dMeThnVTJWMElFbEZJR05zWldGeUlHWnBaV3hrSUdKMWRIUnZiaUJqYjJ4dmNpQnpieUIwYUdGMElHbDBJR2x6SUc1dmRDQmhabVpsWTNSbFpDQmllU0F1YVc1d2RYUWdZMjlzYjNKY2NseHVmVnh5WEc1Y2NseHVMbWx1Y0hWME9qcHdiR0ZqWldodmJHUmxjaUI3WEhKY2JpQWdiM0JoWTJsMGVUb2dNVHNnTHk4Z2IzWmxjbkpwWkdVZ1JtbHlaV1p2ZUNkeklHOXdZV05wZEhsY2NseHVJQ0JqYjJ4dmNqb2dKR2x1Y0hWMExYQnNZV05sYUc5c1pHVnlMV052Ykc5eU8xeHlYRzU5WEhKY2JseHlYRzUwWlhoMFlYSmxZUzVwYm5CMWRDQjdYSEpjYmlBZ2FHVnBaMmgwT2lCaGRYUnZPeUF2THlCeVpYWmxjblFnZEdWNGRHRnlaV0VnYUdWcFoyaDBYSEpjYmlBZ2JXbHVMV2hsYVdkb2REb2dKR2x1Y0hWMExXMXBibWhsYVdkb2REc2dMeThnY0hKbGRtVnVkQ0IxYzJWeUlHWnliMjBnWkdWamNtVmhjMmx1WnlCemFYcGxJR3h2ZDJWeUlIUm9ZVzRnYjI1bElISnZkMXh5WEc1OVhISmNibHh5WEc0dkwxeHlYRzR2THlCSmJuQjFkQ0JEYjI1MGNtOXNYSEpjYmk4dlhISmNiaTVqYjI1MGNtOXNJSHRjY2x4dUlDQStJQzVwYm5CMWRDQjdYSEpjYmlBZ0lDQkFhVzVqYkhWa1pTQm1iMjUwYzJsNlpTaHBibWhsY21sMEtUdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHWnNaWGc3SUM4dklHRnNhV2R1SUdOdmJuUmxiblFnYVc0Z1kyVnVkR1Z5SUdKaGMyVmtJRzl1SUdobGFXZG9kRnh5WEc0Z0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanNnTHk4Z1lXeHBaMjRnWTI5dWRHVnVkQ0JwYmlCalpXNTBaWElnWW1GelpXUWdiMjRnYUdWcFoyaDBYSEpjYmlBZ0lDQm9aV2xuYUhRNklERXdNQ1U3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0FtTG1oaGN5MXBZMjl1TFd4bFpuUWdlMXh5WEc0Z0lDQWdQaUF1YVc1d2RYUWdlMXh5WEc0Z0lDQWdJQ0IrSUM1cFkyOXVJSHRjY2x4dUlDQWdJQ0FnSUNCNkxXbHVaR1Y0T2lBa1ozSnZkWEF0YVhSbGJYTXRhRzkyWlhJdFptOWpkWE10ZW1sdVpHVjRJQ3NnTVR0Y2NseHVJQ0FnSUNBZ0lDQndiMmx1ZEdWeUxXVjJaVzUwY3pvZ2JtOXVaVHRjY2x4dUlDQWdJQ0FnSUNCdmNHRmphWFI1T2lBa1kyOXVkSEp2YkMxcGJuQjFkQzFwWTI5dUxXOXdZV05wZEhrN1hISmNiaUFnSUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUdadlkzVnpJSHRjY2x4dUlDQWdJQ0FnSUNCK0lDNXBZMjl1SUh0Y2NseHVJQ0FnSUNBZ0lDQWdJRzl3WVdOcGRIazZJREU3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQW1MbWhoY3kxbWJHOWhkR2x1Wnkxc1lXSmxiQ0ErSUM1cGJuQjFkRnR3YkdGalpXaHZiR1JsY2oxY0lpQmNJbDBnZTF4eVhHNGdJQ0FnZmlBdWJHRmlaV3dnZTF4eVhHNGdJQ0FnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnSUNBZ0lIUnZjRG9nTlRBbE8xeHlYRzRnSUNBZ0lDQnNaV1owT2lCamIyNTJaWEowTFhWdWFYUW9KR052Ym5SeWIyeHpMWEJoWkdScGJtY3RlQ3dnY21WdEtUdGNjbHh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUIwY21GdWMyeGhkR1ZaS0MwMU1DVXBPMXh5WEc0Z0lDQWdJQ0J3YjJsdWRHVnlMV1YyWlc1MGN6b2dibTl1WlR0Y2NseHVJQ0FnSUNBZ2NHRmtaR2x1WnpvZ01uQjRPMXh5WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrTFdOdmJHOXlPaUFrYVc1d2RYUXRZbUZqYTJkeWIzVnVaRHRjY2x4dUlDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERTdYSEpjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJSFJ5WVc1emFYUnBiMjRvZEc5d0xDQm1iMjUwTFhOcGVtVXBPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUdadlkzVnpLRndpT201dmRDZzZjR3hoWTJWb2IyeGtaWEl0YzJodmQyNHBYQ0lwSUh0Y2NseHVJQ0FnSUNBZ2ZpQXViR0ZpWld3Z2UxeHlYRzRnSUNBZ0lDQWdJSFJ2Y0RvZ01DVTdYSEpjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnWm05dWRITnBlbVVvSkdSbFptRjFiSFF0YzIxaGJHd3RjWFZoYm5ScGRIa2dLaUF4WlcwcE8xeHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQXZMeUJ6ZEhsc1pXeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnYzJWc1pXTjBiM0l0Ym04dGRtVnVaRzl5TFhCeVpXWnBlRnh5WEc0Z0lDQWdKanB1YjNRb09pMXRjeTFwYm5CMWRDMXdiR0ZqWldodmJHUmxjaWtnZTF4eVhHNGdJQ0FnSUNCK0lDNXNZV0psYkNCN1hISmNiaUFnSUNBZ0lDQWdkRzl3T2lBd0pUdGNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JtYjI1MGMybDZaU2drWkdWbVlYVnNkQzF6YldGc2JDMXhkV0Z1ZEdsMGVTQXFJREZsYlNrN1hISmNiaUFnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibjFjY2x4dUlpd0tDUWtpTHk5Y2NseHVMeThnUW5WMGRHOXVjMXh5WEc0dkwxeHlYRzVjY2x4dVFHbG1JQ1JuWlc1bGNtRjBaUzFqYjIxd2IyNWxiblF0WTJ4aGMzTmxjeUI3WEhKY2JpQWdMeTljY2x4dUlDQXZMeUJDWVhObElITjBlV3hsYzF4eVhHNGdJQzh2WEhKY2JseHlYRzRnSUM1aWRHNGdlMXh5WEc0Z0lDQWdRR1Y0ZEdWdVpDQWxZMjl1ZEhKdmJITTdYSEpjYmlBZ0lDQkFaWGgwWlc1a0lDVmpiMjUwY205c2N5MWhZM1JwZG1VN1hISmNiaUFnSUNCQVpYaDBaVzVrSUNWamIyNTBjbTlzY3kxb2IzWmxjanRjY2x4dUlDQWdJRUJsZUhSbGJtUWdKV052Ym5SeWIyeHpMV1p2WTNWek8xeHlYRzVjY2x4dUlDQWdJSFJsZUhRdFlXeHBaMjQ2SUdObGJuUmxjanRjY2x4dVhISmNiaUFnSUNCQWFXNWpiSFZrWlNCdWIzUXRaR2x6WVdKc1pXUWdlMXh5WEc0Z0lDQWdJQ0JBWlhoMFpXNWtJQ1ZqZFhKemIzSXRjRzlwYm5SbGNqc2dMeThnWVdSa0lGd2lhR0Z1WkZ3aUlHTjFjbk52Y2lCMGJ5QnViMjR0WkdsellXSnNaV1FnWW5WMGRHOXVJR1ZzWlcxbGJuUnpMbHh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMeTljY2x4dUlDQXZMeUJVYUdWdFpTQldZWEpwWVc1MGMxeHlYRzRnSUM4dlhISmNibHh5WEc0Z0lDOHZJRk52Ykdsa0lGUm9aVzFsWEhKY2JpQWdMbUowYmk1cGN5MXpiR1FnZTF4eVhHNGdJQ0FnTHk5Y2NseHVJQ0FnSUM4dklFUmxabUYxYkhRZ1UyOXNhV1FnVTNSNWJHVnpYSEpjYmlBZ0lDQXZMMXh5WEc0Z0lDQWdKR1p2WTNWekxXSmhZMnRuY205MWJtUTZJR05zY2kxemRHVndLQ1JpZFhSMGIyNHRkR2hsYldVc0lDMHlLVHRjY2x4dUlDQWdJQ1JoWTNScGRtVXRZbUZqYTJkeWIzVnVaRG9nWTJ4eUxYTjBaWEFvSkdKMWRIUnZiaTEwYUdWdFpTd2dOQ2s3WEhKY2JseHlYRzRnSUNBZ1kyOXNiM0k2SUdOc2NpMWhkWFJ2S0NSaWRYUjBiMjR0ZEdobGJXVXBPMXh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdaM0poWkdsbGJuUXRZbWNvSkdKMWRIUnZiaTEwYUdWdFpTd2dNVGd3WkdWbktUdGNjbHh1WEhKY2JpQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYSEpjYmlBZ0lDQWdJQzh2SUhSdklHRjJiMmxrSUdGa1pHbHVaeUJsZUhSeVlTQmliM2d0YzJoaFpHOTNJRzkyWlhKeWFXUmxYSEpjYmlBZ0lDQWdJQzh2SUMwZ1ltOTRMWE5vWVdSdmR5Z2tZblYwZEc5dUxXWnZZM1Z6TFdKdmVITm9ZV1J2ZHlCeVoySmhLQ1JpZFhSMGIyNHRkR2hsYldVc0lEQXVOU2twSUdseklHRnNjbVZoWkhrZ2FXNXphV1JsSUdSbFptRjFiSFFnWTI5dWRISnZiSE5jY2x4dUlDQWdJQ0FnUUdsbUlDUmlkWFIwYjI0dFptOWpkWE10WW05NGMyaGhaRzkzSUNFOUlDUmpiMjUwY205c2N5MW1iMk4xY3kxaWIzaHphR0ZrYjNjZ1lXNWtJQ1JpZFhSMGIyNHRkR2hsYldVZ0lUMGdKR052Ym5SeWIyeHpMWFJvWlcxbElIdGNjbHh1SUNBZ0lDQWdJQ0JpYjNndGMyaGhaRzkzT2lCaWIzZ3RjMmhoWkc5M0tDUmlkWFIwYjI0dFptOWpkWE10WW05NGMyaGhaRzkzSUhKblltRW9KR0oxZEhSdmJpMTBhR1Z0WlN3Z0xqVXBLVHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lFQnBibU5zZFdSbElHWnZZM1Z6SUh0Y2NseHVJQ0FnSUNBZ1FHbHVZMngxWkdVZ1ozSmhaR2xsYm5RdFltY29KR1p2WTNWekxXSmhZMnRuY205MWJtUXNJREU0TUdSbFp5azdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnWVdOMGFYWmxJSHRjY2x4dUlDQWdJQ0FnWTI5c2IzSTZJR05zY2kxaGRYUnZLQ1JoWTNScGRtVXRZbUZqYTJkeWIzVnVaQ2s3WEhKY2JpQWdJQ0FnSUVCcFppQWtaR1Z6YVdkdUxYTnZiR2xrTFdWc2MyVXRaM0poWkdsbGJuUnpJSHRjY2x4dUlDQWdJQ0FnSUNCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lBa1lXTjBhWFpsTFdKaFkydG5jbTkxYm1RN1hISmNiaUFnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FtTG1sekxXeHZZV1JwYm1jZ2UxeHlYRzRnSUNBZ0lDQkFhVzVqYkhWa1pTQnNiMkZrYVc1bkxYTndhVzV1WlhJdFkyOXNiM0lvWTJ4eUxXRjFkRzhvSkdKMWRIUnZiaTEwYUdWdFpTa3BPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUM4dlhISmNiaUFnSUNBdkx5QkRiMnh2Y2lCMllYSnBZVzUwYzF4eVhHNGdJQ0FnTHk5Y2NseHVJQ0FnSUVCbFlXTm9JQ1JqYjJ4dmNpd2dKSFpoYkhWbElHbHVJQ1IwYUdWdFpTMWpiMnh2Y25NZ2UxeHlYRzRnSUNBZ0lDQW1MbWx6TFNON0pHTnZiRzl5ZlNCN1hISmNiaUFnSUNBZ0lDQWdRR2x1WTJ4MVpHVWdZblYwZEc5dUxXUmxjMmxuYmkxemIyeHBaQzEyWVhKcFlXNTBLQ1IyWVd4MVpTazdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdkwxeHlYRzRnSUNBZ0x5OGdVM1JoZEdWelhISmNiaUFnSUNBdkwxeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ1ptOWpkWE1nZTF4eVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCaGJtbHRZWFJwYjI0b2NtbHdjR3hsTFdkeVlYa3BPeUF2THlCeWFYQndiR1VnWVc1cGJXRjBhVzl1SUc5dUlHTnNhV05ySUdWMlpXNTBYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnWVdOMGFYWmxJSHRjY2x4dUlDQWdJQ0FnUUdsbUlHNXZkQ0FrWkdWemFXZHVMWE52Ykdsa0xXVnNjMlV0WjNKaFpHbGxiblJ6SUh0Y2NseHVJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV2x0WVdkbE9pQnViMjVsT3lBdkx5QlNaVzF2ZG1VZ2RHaGxJR2R5WVdScFpXNTBJR1p2Y2lCMGFHVWdjSEpsYzNObFpDOWhZM1JwZG1VZ2MzUmhkR1ZjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lFQnBibU5zZFdSbElHUnBjMkZpYkdWa0lIdGNjbHh1SUNBZ0lDQWdZMjlzYjNJNklDUjNhR2wwWlR0Y2NseHVJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dKR0oxZEhSdmJpMWthWE5oWW14bFpDMWlZV05yWjNKdmRXNWtPMXh5WEc0Z0lDQWdJQ0JBYVdZZ2JtOTBJQ1JrWlhOcFoyNHRjMjlzYVdRdFpXeHpaUzFuY21Ga2FXVnVkSE1nZTF4eVhHNGdJQ0FnSUNBZ0lHSmhZMnRuY205MWJtUXRhVzFoWjJVNklHNXZibVU3SUM4dklGSmxiVzkyWlNCRFUxTWdaM0poWkdsbGJuUnpJR2xtSUhSb1pYa25jbVVnWlc1aFlteGxaRnh5WEc0Z0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0F2THlCUGRYUnNhVzVsSUhSb1pXMWxYSEpjYmlBZ0xtSjBiaTVwY3kxdmRYUWdlMXh5WEc0Z0lDQWdMeTljY2x4dUlDQWdJQzh2SUVSbFptRjFiSFFnVDNWMGJHbHVaU0JUZEhsc1pYTmNjbHh1SUNBZ0lDOHZYSEpjYmlBZ0lDQmliM0prWlhJdFkyOXNiM0k2SUNSaWRYUjBiMjR0ZEdobGJXVXRiR2xuYUhRN1hISmNiaUFnSUNCamIyeHZjam9nSkdKMWRIUnZiaTEwYUdWdFpUdGNjbHh1WEhKY2JpQWdJQ0JBYVc1amJIVmtaU0JpZFhSMGIyNHRaR1Z6YVdkdUxXOTFkR3hwYm1VdGRtRnlhV0Z1ZENna1luVjBkRzl1TFhSb1pXMWxLVHNnTHk4Z1JHVm1ZWFZzZENCaWRYUjBiMjRnZEdobGJXVmNjbHh1WEhKY2JpQWdJQ0F2THlCRGIyeHZjaUIyWVhKcFlXNTBjMXh5WEc0Z0lDQWdRR1ZoWTJnZ0pHTnZiRzl5TENBa2RtRnNkV1VnYVc0Z0pIUm9aVzFsTFdOdmJHOXljeUI3WEhKY2JpQWdJQ0FnSUNZdWFYTXRJM3NrWTI5c2IzSjlJSHRjY2x4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCaWRYUjBiMjR0WkdWemFXZHVMVzkxZEd4cGJtVXRkbUZ5YVdGdWRDZ2tkbUZzZFdVcE8xeHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnWkdsellXSnNaV1FnZTF4eVhHNGdJQ0FnSUNCaWIzSmtaWEl0WTI5c2IzSTZJQ1JpZFhSMGIyNHRaR2x6WVdKc1pXUXRZbUZqYTJkeWIzVnVaRHRjY2x4dUlDQWdJQ0FnWTI5c2IzSTZJQ1JpZFhSMGIyNHRkR2hsYldVN1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNWNjbHh1SUNBdkx5Qk5hVzVwYldGc0lIUm9aVzFsWEhKY2JpQWdMbUowYmk1cGN5MXRhVzRnZTF4eVhHNGdJQ0FnTHk5Y2NseHVJQ0FnSUM4dklFUmxabUYxYkhRZ1RXbHVhVzFoYkNCVGRIbHNaWE5jY2x4dUlDQWdJQzh2WEhKY2JpQWdJQ0JpYjNKa1pYSXRjbWxuYUhRNklEQTdJQzh2SUhKbGJXOTJaU0JpYjNKa1pYSWdkRzhnY21WdGIzWmxJR0p2Y21SbGNpQnpjR0ZqYVc1bklHSmxkSGRsWlc0Z2JXbHVhVzFoYkNCaWRYUjBiMjRnWjNKdmRYQnpYSEpjYmlBZ0lDQmliM0prWlhJdFltOTBkRzl0TFdOdmJHOXlPaUFrWTI5dWRISnZiSE10ZEdobGJXVXRiR2xuYUhRN1hISmNiaUFnSUNCaWIzSmtaWEl0YkdWbWREb2dNRHNnTHk4Z2NtVnRiM1psSUdKdmNtUmxjaUIwYnlCeVpXMXZkbVVnWW05eVpHVnlJSE53WVdOcGJtY2dZbVYwZDJWbGJpQnRhVzVwYldGc0lHSjFkSFJ2YmlCbmNtOTFjSE5jY2x4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklHSnZjbVJsY2kxeVlXUnBkWE1vTUNrN1hISmNiaUFnSUNCaWIzZ3RjMmhoWkc5M09pQmliM2d0YzJoaFpHOTNLRzV2Ym1VcE95QXZMeUJ5WlcxdmRtVWdabTlqZFhNZ1ltOTRJSE5vWVdSdmQxeHlYRzVjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJR0psWm05eVpTQjdYSEpjYmlBZ0lDQWdJR052Ym5SbGJuUTZJRndpWENJN1hISmNiaUFnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNBZ0lDQWdjbWxuYUhRNklEQTdYSEpjYmlBZ0lDQWdJR0p2ZEhSdmJUb2dMVEZ3ZUR0Y2NseHVJQ0FnSUNBZ2JHVm1kRG9nTlRBbE8xeHlYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaVmdvTFRVd0pTazdYSEpjYmlBZ0lDQWdJSGRwWkhSb09pQXdPMXh5WEc0Z0lDQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQWtZbTl5WkdWeWQybGtkR2d0WkdWbVlYVnNkQ0FxSURJZ2MyOXNhV1E3WEhKY2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUhSeVlXNXphWFJwYjI0b0pHSjFkSFJ2YmkxMGNtRnVjMmwwYVc5dUxXMXBibWx0WVd3dFltVm1iM0psS1R0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQkFhVzVqYkhWa1pTQmlkWFIwYjI0dFpHVnphV2R1TFcxcGJtbHRZV3d0ZG1GeWFXRnVkQ2drWW5WMGRHOXVMWFJvWlcxbEtUc2dMeThnUkdWbVlYVnNkQ0JpZFhSMGIyNGdkR2hsYldWY2NseHVYSEpjYmlBZ0lDQXZMeUJEYjJ4dmNpQjJZWEpwWVc1MGMxeHlYRzRnSUNBZ1FHVmhZMmdnSkdOdmJHOXlMQ0FrZG1Gc2RXVWdhVzRnSkhSb1pXMWxMV052Ykc5eWN5QjdYSEpjYmlBZ0lDQWdJQ1l1YVhNdEkzc2tZMjlzYjNKOUlIdGNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JpZFhSMGIyNHRaR1Z6YVdkdUxXMXBibWx0WVd3dGRtRnlhV0Z1ZENna2RtRnNkV1VwTzF4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdZV04wYVhabElIdGNjbHh1SUNBZ0lDQWdRR2x1WTJ4MVpHVWdZbVZtYjNKbElIdGNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JoYm1sdFlYUnBiMjRvYm05dVpTazdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCQWFXNWpiSFZrWlNCb2IzWmxjaTFtYjJOMWN5MWhZM1JwZG1VZ2UxeHlYRzRnSUNBZ0lDQkFhVzVqYkhWa1pTQmlaV1p2Y21VZ2UxeHlYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXhNREFsTzF4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdabTlqZFhNZ2UxeHlYRzRnSUNBZ0lDQkFhVzVqYkhWa1pTQmhibWx0WVhScGIyNG9ibTl1WlNrN0lDOHZJR1JwYzJGaWJHVWdZVzVwYldGMGFXOXVjeUJoYm1RZ2NHeGhlU0JoWjJGcGJpQnZiaUJqYkdsamF5QmxkbVZ1ZEZ4eVhHNGdJQ0FnSUNCaWIzSmtaWEl0WW05MGRHOXRMV052Ykc5eU9pQjBjbUZ1YzNCaGNtVnVkRHRjY2x4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnWW1WbWIzSmxJSHRjY2x4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCaGJtbHRZWFJwYjI0b1pteGhjMmdwTzF4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdaR2x6WVdKc1pXUWdlMXh5WEc0Z0lDQWdJQ0JqYjJ4dmNqb2dKR0oxZEhSdmJpMTBhR1Z0WlR0Y2NseHVJQ0FnSUNBZ1FHbHVZMngxWkdVZ1ltVm1iM0psSUh0Y2NseHVJQ0FnSUNBZ0lDQmliM0prWlhJdFltOTBkRzl0TFdOdmJHOXlPaUFrWW5WMGRHOXVMV1JwYzJGaWJHVmtMV0poWTJ0bmNtOTFibVE3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4dklHUnBjMkZpYkdWa0lHSjFkSFJ2YmlCdVpXVmtJSFJ2SUdKbElHRjBJR1Z1WkNCMGJ5QnZkbVZ5Y21sa1pTQndjbVYyYVc5MWN5QnpaV3hsWTNSdmNuTmNjbHh1SUNBdkx5QnpkSGxzWld4cGJuUXRaR2x6WVdKc1pTMXVaWGgwTFd4cGJtVWdibTh0WkhWd2JHbGpZWFJsTFhObGJHVmpkRzl5YzF4eVhHNGdJQzVpZEc0Z2UxeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ1pHbHpZV0pzWldRZ2UxeHlYRzRnSUNBZ0lDQkFaWGgwWlc1a0lDVmpiMjUwY205c2N5MWthWE5oWW14bFpEdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibHh5WEc0Z0lDOHZYSEpjYmlBZ0x5OGdURzloWkdsdVp5QkJibWx0WVhScGIyNWNjbHh1SUNBdkwxeHlYRzVjY2x4dUlDQXVZblJ1TG1sekxXeHZZV1JwYm1jZ2UxeHlYRzRnSUNBZ2NHOXBiblJsY2kxbGRtVnVkSE02SUc1dmJtVTdYSEpjYmlBZ0lDQXZMeUJ6ZEhsc1pXeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnWkdWamJHRnlZWFJwYjI0dGJtOHRhVzF3YjNKMFlXNTBYSEpjYmlBZ0lDQmpiMnh2Y2pvZ2RISmhibk53WVhKbGJuUWdJV2x0Y0c5eWRHRnVkRHRjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJR3h2WVdScGJtY3RjM0JwYm01bGNpZ2tZblYwZEc5dUxYUm9aVzFsS1R0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUM4dlhISmNiaUFnTHk4Z1FteHZZMnRjY2x4dUlDQXZMMXh5WEc1Y2NseHVJQ0F1WW5SdUxtbHpMV0pzYjJOcklIdGNjbHh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMeTljY2x4dUlDQXZMeUJTYjNWdVpDQkRhWEpqYkdWY2NseHVJQ0F2TDF4eVhHNWNjbHh1SUNBdkx5QjFjMlZtZFd3Z1ptOXlJR0oxZEhSdmJpQjNhWFJvSUc5dWJIa2dhV052Ym5OY2NseHVJQ0F1WW5SdUxtbHpMV05wY21Oc1pTQjdYSEpjYmlBZ0lDQjNhV1IwYURvZ0pHSjFkSFJ2YmkxcGMyTnBjbU5zWlMxemFYcGxPMXh5WEc0Z0lDQWdhR1ZwWjJoME9pQWtZblYwZEc5dUxXbHpZMmx5WTJ4bExYTnBlbVU3WEhKY2JpQWdJQ0J3WVdSa2FXNW5PaUF3TzF4eVhHNGdJSDFjY2x4dWZWeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5QkdhV3hsSUVOdmJuUnliMnhjY2x4dUx5OWNjbHh1TG1OdmJuUnliMndnZTF4eVhHNGdJRDRnTG1acGJHVWdlMXh5WEc0Z0lDQWdRR1Y0ZEdWdVpDQWxZMjl1ZEhKdmJITXRhR2xrWlR0Y2NseHVYSEpjYmlBZ0lDQitJQzVzWVdKbGJDQjdYSEpjYmlBZ0lDQWdJRzFoY21kcGJpMWliM1IwYjIwNklEQTdJQzh2SUc5MlpYSnlhV1JsSUd4aFltVnNJSE4wZVd4bElHbHVjMmxrWlNCamIyNTBjbTlzWEhKY2JpQWdJQ0I5WEhKY2JseHlYRzRnSUNBZ0x5OGdkMlVnWkc5dUozUWdjM1I1YkdVZ1ptbHNaU0JwYm5CMWRITWdiR0ZpWld3Z2FXNTBaVzUwYVc5dVlXeHNlU0IwYnlCaGJHeHZkeUIxYzJWeWN5QjBieUJ6ZEhsc1pTQjBhR1Z0SUdGeklIUm9aWGtnZDJGdWRGeHlYRzRnSUNBZ0x5OWNjbHh1SUNBZ0lDOHZJRVV1WnlCMGFHVjVJR05oYmlCemRIbHNaU0IwYUdWdElIVnphVzVuSUM1cGJuQjFkQ0JqYkdGemN5QjBieUJ0WVd0bElHbDBJR3h2YjJzZ2JHbHJaU0JwYm5CMWRDQjNhWFJvSUhSbGVIUWdhVzV6YVdSbElHOXlYSEpjYmlBZ0lDQXZMeUJ0WVd0bElIUm9aVzBnYkc5dmF5QnNhV3RsSUdKMWRIUnZiaUIzYVhSb0lDNWlkRzRnWTJ4aGMzTWdZVzVrSUdsMGN5QnRiMlJwWm1sbGNuTmNjbHh1WEhKY2JpQWdJQ0F2THlCVGJtbHdjR1YwT2lCbWFXeGxJSFZ3Ykc5aFpDQmhjeUJDZFhSMGIyNWNjbHh1SUNBZ0lDOHZYSEpjYmlBZ0lDQXZMeUE4WkdsMklHTnNZWE56UFZ3aVkyOXVkSEp2YkZ3aVBseHlYRzRnSUNBZ0x5OGdJQ0E4YVc1d2RYUWdZMnhoYzNNOVhDSm1hV3hsWENJZ2FXUTlYQ0ptYVd4bFhDSWdkSGx3WlQxY0ltWnBiR1ZjSWo1Y2NseHVJQ0FnSUM4dklDQWdQR3hoWW1Wc0lHTnNZWE56UFZ3aWJHRmlaV3dnWW5SdUlHbHpMWE5zWkNCcGN5MXdjbWx0WVhKNVhDSWdabTl5UFZ3aVptbHNaVndpUGx4eVhHNGdJQ0FnTHk4Z0lDQWdJRHhrYVhZZ1kyeGhjM005WENKcFkyOXVJR2x6TFd4bFpuUmNJajQ4YVNCamJHRnpjejFjSW1aaGN5Qm1ZUzFtYVd4bExYVndiRzloWkZ3aVBqd3ZhVDQ4TDJScGRqNWNjbHh1SUNBZ0lDOHZJQ0FnSUNCVmNHeHZZV1JjY2x4dUlDQWdJQzh2SUNBZ1BDOXNZV0psYkQ1Y2NseHVJQ0FnSUM4dklEd3ZaR2wyUGx4eVhHNWNjbHh1SUNBZ0lDOHZJRk51YVhCd1pYUTZJR1pwYkdVZ2RYQnNiMkZrSUdGeklFbHVjSFYwSUhkcGRHZ2dZblYwZEc5dVhISmNiaUFnSUNBdkx5Qm9kSFJ3Y3pvdkwycHpabWxrWkd4bExtNWxkQzloYzJobVlXaGhiaTlxWTI5bE1tNTVaeTljY2x4dUlDQWdJQzh2WEhKY2JpQWdJQ0F2THlCSVZFMU1PbHh5WEc0Z0lDQWdMeThnUEdScGRpQmpiR0Z6Y3oxY0ltZHliM1Z3WENJK1hISmNiaUFnSUNBdkx5QWdJRHhrYVhZZ1kyeGhjM005WENKamIyNTBjbTlzWENJK1hISmNiaUFnSUNBdkx5QWdJQ0FnUEdsdWNIVjBJR05zWVhOelBWd2labWxzWlZ3aUlHbGtQVndpWm1sc1pWd2lJSFI1Y0dVOVhDSm1hV3hsWENJK1hISmNiaUFnSUNBdkx5QWdJQ0FnUEd4aFltVnNJR05zWVhOelBWd2liR0ZpWld3Z2FXNXdkWFJjSWlCbWIzSTlYQ0ptYVd4bFhDSStYSEpjYmlBZ0lDQXZMeUFnSUNBZ0lDQlZjR3h2WVdRZ1JtbHNaVnh5WEc0Z0lDQWdMeThnSUNBZ0lEd3ZiR0ZpWld3K1hISmNiaUFnSUNBdkx5QWdJRHd2WkdsMlBseHlYRzRnSUNBZ0x5OGdJQ0E4WW5WMGRHOXVJR05zWVhOelBWd2lZblJ1SUdsekxXOTFkQ0JwY3kxd2NtbHRZWEo1WENJK1hISmNiaUFnSUNBdkx5QWdJQ0FnUEdScGRpQmpiR0Z6Y3oxY0ltbGpiMjRnYVhNdGJHVm1kRndpUGp4cElHTnNZWE56UFZ3aVptRnpJR1poTFdacGJHVXRkWEJzYjJGa1hDSStQQzlwUGp3dlpHbDJQbHh5WEc0Z0lDQWdMeThnSUNBZ0lGVndiRzloWkZ4eVhHNGdJQ0FnTHk4Z0lDQThMMkoxZEhSdmJqNWNjbHh1SUNBZ0lDOHZJRHd2WkdsMlBseHlYRzRnSUNBZ0x5OWNjbHh1SUNBZ0lDOHZJRXBoZG1FZ1UyTnlhWEIwSURvZ0tHOXdkR2x2Ym1Gc0tTQjBieUIxY0dSaGRHVWdiR0ZpWld3Z2RHVjRkQ0JtY205dElITmxiR1ZqZEdWa0lHWnBiR1VnZEc4Z2RYQnNiMkZrWEhKY2JpQWdJQ0F2THlBa0tGd2lhVzV3ZFhSYmRIbHdaVDFtYVd4bFhWd2lLUzV2Ym1Ob1lXNW5aU0E5SUNncElEMCtJSHRjY2x4dUlDQWdJQzh2SUNBZ2FXWWdLR1ZzWlcxbGJuUXVabWxzWlhNdWJHVnVaM1JvSUQ0Z01Da2dlMXh5WEc0Z0lDQWdMeThnSUNBZ0lHTnZibk4wSUd4aFltVnNJRDBnSkNnbmJHRmlaV3hiWm05eVBWd2lKeUFySUNRb2RHaHBjeWt1WVhSMGNpaGNJbWxrWENJcElDc2dKMXdpWFNjcE8xeHlYRzRnSUNBZ0x5OGdJQ0FnSUNRb2JHRmlaV3dwTG5SbGVIUW9aV3hsYldWdWRDNW1hV3hsYzFzd1hTNXVZVzFsS1R0Y2NseHVJQ0FnSUM4dklDQWdmVnh5WEc0Z0lDQWdMeThnZlR0Y2NseHVYSEpjYmlBZ0lDQXZMeUJUYm1sd2NHVjBPaUJtYVd4bElIVndiRzloWkNCaGN5QmlkWFIwYjI0Z2QybDBhQ0JKYm5CMWRDQnBibk5wWkdVZ2FYUmNjbHh1SUNBZ0lDOHZYSEpjYmlBZ0lDQXZMeUE4WkdsMklHTnNZWE56UFZ3aVkyOXVkSEp2YkZ3aVBseHlYRzRnSUNBZ0x5OGdJQ0E4YVc1d2RYUWdZMnhoYzNNOVhDSm1hV3hsWENJZ2FXUTlYQ0ptYVd4bFhDSWdkSGx3WlQxY0ltWnBiR1ZjSWlCeVpYRjFhWEpsWkQ1Y2NseHVJQ0FnSUM4dklDQWdQR3hoWW1Wc0lHTnNZWE56UFZ3aWJHRmlaV3dnWW5SdUlHbHpMWE5zWkNCcGN5MXdjbWx0WVhKNVhDSWdabTl5UFZ3aVptbHNaVndpUGx4eVhHNGdJQ0FnTHk4Z0lDQWdJRHhrYVhZZ1kyeGhjM005WENKdFlpMDFYQ0krWEhKY2JpQWdJQ0F2THlBZ0lDQWdJQ0E4WkdsMklHTnNZWE56UFZ3aWFXTnZiaUJwY3kxc1pXWjBYQ0krUEdrZ1kyeGhjM005WENKbVlYSWdabUV0WTI5bVptVmxYQ0krUEM5cFBqd3ZaR2wyUGx4eVhHNGdJQ0FnTHk4Z0lDQWdJQ0FnVlhCc2IyRmtYSEpjYmlBZ0lDQXZMeUFnSUNBZ1BDOWthWFkrWEhKY2JpQWdJQ0F2THlBZ0lDQWdQR1JwZGlCamJHRnpjejFjSW1acGJHVnVZVzFsSUdsdWNIVjBYQ0krWEhKY2JpQWdJQ0F2THlBZ0lDQWdJQ0JHYVd4bElFNWhiV1ZjY2x4dUlDQWdJQzh2SUNBZ0lDQThMMlJwZGo1Y2NseHVJQ0FnSUM4dklDQWdQQzlzWVdKbGJENWNjbHh1SUNBZ0lDOHZJRHd2WkdsMlBseHlYRzRnSUNBZ0x5OWNjbHh1SUNBZ0lDOHZJRXBoZG1FZ1UyTnlhWEIwSURvZ0tHOXdkR2x2Ym1Gc0tTQjBieUIxY0dSaGRHVWdiR0ZpWld3Z2RHVjRkQ0JtY205dElITmxiR1ZqZEdWa0lHWnBiR1VnZEc4Z2RYQnNiMkZrWEhKY2JpQWdJQ0F2THlBa0tGd2lhVzV3ZFhSYmRIbHdaVDFtYVd4bFhWd2lLUzV2Ym1Ob1lXNW5aU0E5SUNncElEMCtJSHRjY2x4dUlDQWdJQzh2SUNBZ0lDQnBaaUFvWld4bGJXVnVkQzVtYVd4bGN5NXNaVzVuZEdnZ1BpQXdLU0I3WEhKY2JpQWdJQ0F2THlBZ0lDQWdJQ0JqYjI1emRDQnNZV0psYkNBOUlDUW9KeTVtYVd4bGJtRnRaU2NwTzF4eVhHNGdJQ0FnTHk4Z0lDQWdJQ0FnSkNoc1lXSmxiQ2t1ZEdWNGRDaGxiR1Z0Wlc1MExtWnBiR1Z6V3pCZExtNWhiV1VwTzF4eVhHNGdJQ0FnTHk4Z0lDQjlPMXh5WEc0Z0lDQWdMeThnZlR0Y2NseHVJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpOHZJR1p2Y20wZ2RtRnNhV1JoZEdsdmJpQnpkSGxzWlZ4eVhHNHVhWE10ZG1Gc2FXUmhkR1ZrSUM1bWFXeGxPbkpsY1hWcGNtVmtJSHRjY2x4dUlDQW1PblpoYkdsa0lINGdMbWx1Y0hWMExteGhZbVZzSUh0Y2NseHVJQ0FnSUVCbGVIUmxibVFnTG1sdWNIVjBMbWx6TFhaaGJHbGtPMXh5WEc0Z0lDQWdRR1Y0ZEdWdVpDQXVhVzV3ZFhRdWFYTXRkbUZzYVdRdWFHRnpMV2xqYjI0N1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBbU9tbHVkbUZzYVdRZ2ZpQXVhVzV3ZFhRdWJHRmlaV3dnZTF4eVhHNGdJQ0FnUUdWNGRHVnVaQ0F1YVc1d2RYUXVhWE10WlhKeWIzSTdYSEpjYmlBZ0lDQkFaWGgwWlc1a0lDNXBibkIxZEM1cGN5MWxjbkp2Y2k1b1lYTXRhV052Ymp0Y2NseHVJQ0I5WEhKY2JuMWNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdVbUZrYVc4Z1EyOXVkSEp2YkZ4eVhHNHZMMXh5WEc0dVkyOXVkSEp2YkNCN1hISmNiaUFnUGlBdWNtRmthVzhnZTF4eVhHNGdJQ0FnUUdWNGRHVnVaQ0FsWTI5dWRISnZiSE10YUdsa1pUdGNjbHh1SUNBZ0lFQmxlSFJsYm1RZ0pXTnZiblJ5YjJ4ekxXeGhZbVZzTzF4eVhHNWNjbHh1SUNBZ0lDWTZZMmhsWTJ0bFpDQjdYSEpjYmlBZ0lDQWdJSDRnTG14aFltVnNJSHRjY2x4dUlDQWdJQ0FnSUNCQWFXNWpiSFZrWlNCaVpXWnZjbVVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdZbTl5WkdWeUxYZHBaSFJvT2lBa2NtRmthVzh0WTJobFkydGxaQzFpYjNKa1pYSjNhV1IwYUR0Y2NseHVJQ0FnSUNBZ0lDQWdJR0poWTJ0bmNtOTFibVF0WTI5c2IzSTZJQ1JqYjI1MGNtOXNjeTFzWVdKbGJDMWlZV05yWjNKdmRXNWtPeUF2THlCdmRtVnljbWxrWlNCamIyNTBjbTlzY3kxc1lXSmxiQ0JoWTNScGRtVWdZVzVrSUdOb1pXTnJaV1FnYzNSaGRHVWdjSEp2Y0dWeWRIbGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQitJQzVzWVdKbGJDQjdYSEpjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJR0psWm05eVpTQjdYSEpjYmlBZ0lDQWdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dZbTl5WkdWeUxYSmhaR2wxY3lna1ltOXlaR1Z5Y21Ga2FYVnpMV05wY21Oc1pTd2dNQ2s3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JuMWNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdRMmhsWTJ0aWIzZ2dRMjl1ZEhKdmJGeHlYRzR2TDF4eVhHNHVZMjl1ZEhKdmJDQjdYSEpjYmlBZ1BpQXVZMmhsWTJ0aWIzZ2dlMXh5WEc0Z0lDQWdRR1Y0ZEdWdVpDQWxZMjl1ZEhKdmJITXRhR2xrWlR0Y2NseHVJQ0FnSUVCbGVIUmxibVFnSldOdmJuUnliMnh6TFd4aFltVnNPMXh5WEc1Y2NseHVJQ0FnSUNZNlkyaGxZMnRsWkNCN1hISmNiaUFnSUNBZ0lINGdMbXhoWW1Wc0lIdGNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JoWm5SbGNpQjdYSEpjYmlBZ0lDQWdJQ0FnSUNCMGIzQTZJQ1JqYUdWamEySnZlQzFqYUdWamEyVmtMV0Z5Y205M0xYUnZjRHRjY2x4dUlDQWdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxLQzAxTUNVc0lDMDFNQ1VwSUhKdmRHRjBaU2cwTldSbFp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNCM2FXUjBhRG9nSkdOb1pXTnJZbTk0TFdOb1pXTnJaV1F0WVhKeWIzY3RjMmw2WlNBdklESTdYSEpjYmlBZ0lDQWdJQ0FnSUNCb1pXbG5hSFE2SUNSamFHVmphMkp2ZUMxamFHVmphMlZrTFdGeWNtOTNMWE5wZW1VN1hISmNiaUFnSUNBZ0lDQWdJQ0JpYjNKa1pYSTZJQ1JqYUdWamEySnZlQzFqYUdWamEyVmtMV0Z5Y205M0xXSnZjbVJsY25kcFpIUm9JSE52Ykdsa0lDUmphR1ZqYTJKdmVDMWphR1ZqYTJWa0xXRnljbTkzTFdOdmJHOXlPMXh5WEc0Z0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhSdmNDMTNhV1IwYURvZ01EdGNjbHh1SUNBZ0lDQWdJQ0FnSUdKdmNtUmxjaTFzWldaMExYZHBaSFJvT2lBd08xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDWTZhVzVrWlhSbGNtMXBibUYwWlNCN1hISmNiaUFnSUNBZ0lINGdMbXhoWW1Wc0lIdGNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JpWldadmNtVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ1ltOXlaR1Z5TFdOdmJHOXlPaUJqZFhKeVpXNTBRMjlzYjNJN1hISmNiaUFnSUNBZ0lDQWdJQ0JpWVdOclozSnZkVzVrT2lCamRYSnlaVzUwUTI5c2IzSTdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0JBYVc1amJIVmtaU0JoWm5SbGNpQjdYSEpjYmlBZ0lDQWdJQ0FnSUNCamIyNTBaVzUwT2lCY0lsd2lPMXh5WEc0Z0lDQWdJQ0FnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHlYRzRnSUNBZ0lDQWdJQ0FnZEc5d09pQTFNQ1U3WEhKY2JpQWdJQ0FnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSFJ5WVc1emJHRjBaU2d0TlRBbExDQXROVEFsS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJSGRwWkhSb09pQWtZMmhsWTJ0aWIzZ3RhVzVrWlhSbGNtMXBibUYwWlMxM2FXUjBhRHRjY2x4dUlDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ0pHTm9aV05yWW05NExXbHVaR1YwWlhKdGFXNWhkR1V0YUdWcFoyaDBPMXh5WEc0Z0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpEb2dKR05vWldOclltOTRMV2x1WkdWMFpYSnRhVzVoZEdVdFltRmphMmR5YjNWdVpEdGNjbHh1SUNBZ0lDQWdJQ0I5WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQitJQzVzWVdKbGJDQjdYSEpjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJR0ZtZEdWeUlIdGNjbHh1SUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHlYRzRnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJoWW5OdmJIVjBaVHRjY2x4dUlDQWdJQ0FnSUNCc1pXWjBPaUFrWTI5dWRISnZiSE10YkdGaVpXd3RZbVZtYjNKbExYTnBlbVVnTHlBeU8xeHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JpSXNDZ2tKSWk4dlhISmNiaTh2SUZKaGJtZGxJRU52Ym5SeWIyeGNjbHh1THk5Y2NseHVYSEpjYmk1eVlXNW5aU0I3WEhKY2JpQWdRR1Y0ZEdWdVpDQWxZMjl1ZEhKdmJITTdYSEpjYmx4eVhHNGdJR1JwYzNCc1lYazZJR0pzYjJOck95QXZMeUJ2ZG1WeWNtbGtaU0FsWTI5dWRISnZiSE1nYzNSNWJHVmNjbHh1SUNCM2FXUjBhRG9nTVRBd0pUdGNjbHh1SUNCb1pXbG5hSFE2SURFdU5XVnRPeUF2THlCdFlYUmphQ0JvWldsbmFIUWdkMmwwYUNCdmRHaGxjaUJqYjI1MGNtOXNjeUJzYVd0bElHTm9aV05yWW05NExDQnpkMmwwWTJnc0lISmhibWRsWEhKY2JpQWdjR0ZrWkdsdVp6b2dNRHNnTHk4Z2IzWmxjbkpwWkdVZ0pXTnZiblJ5YjJ4eklITjBlV3hsWEhKY2JpQWdMeThnYzNSNWJHVnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUhCeWIzQmxjblI1TFc1dkxYWmxibVJ2Y2kxd2NtVm1hWGhjY2x4dUlDQXRiVzk2TFdGd2NHVmhjbUZ1WTJVNklHNXZibVU3WEhKY2JpQWdMeThnYzNSNWJHVnNhVzUwTFdScGMyRmliR1V0Ym1WNGRDMXNhVzVsSUhCeWIzQmxjblI1TFc1dkxYWmxibVJ2Y2kxd2NtVm1hWGhjY2x4dUlDQXRkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZJRzV2Ym1VN1hISmNiaUFnWVhCd1pXRnlZVzVqWlRvZ2JtOXVaVHRjY2x4dVhISmNiaUFnUUdsdVkyeDFaR1VnWm05amRYTWdlMXh5WEc0Z0lDQWdiM1YwYkdsdVpUb2dNRHRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzh2SUU1dmRHVWdPaUJWYzJsdVp5Qk5hWGhwYmlCcGJuTjBaV0ZrSUc5bUlIQnNZV05sYUc5c1pHVnlJSFJ2SUhOd2JHbDBJSE4wZVd4bGN5QmhZM0p2YzNNZ2JYVnNkR2x3YkdVZ2NuVnNaWE5sZEhNZ2RHOGdhR0YyWlNCaGJpQmxabVpsWTNRdVhISmNibHh5WEc0Z0lDOHZJRlJvZFcxaVhISmNiaUFnSmpvNkxYZGxZbXRwZEMxemJHbGtaWEl0ZEdoMWJXSWdlMXh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdjbUZ1WjJVdGRHaDFiV0k3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0FtT2pvdGJXOTZMWEpoYm1kbExYUm9kVzFpSUh0Y2NseHVJQ0FnSUVCcGJtTnNkV1JsSUhKaGJtZGxMWFJvZFcxaU8xeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0pqbzZMVzF6TFhSb2RXMWlJSHRjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJSEpoYm1kbExYUm9kVzFpTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnUUdsdVkyeDFaR1VnYUc5MlpYSWdlMXh5WEc0Z0lDQWdKam82TFhkbFltdHBkQzF6Ykdsa1pYSXRkR2gxYldJZ2UxeHlYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSE5qWVd4bEtDUnlZVzVuWlMxMGFIVnRZaTFvYjNabGNpMW1iMk4xY3kxelkyRnNaU2s3WEhKY2JpQWdJQ0FnSUdKdmNtUmxjaTEzYVdSMGFEb2dKSEpoYm1kbExYUm9kVzFpTFdodmRtVnlMV1p2WTNWekxXSnZjbVJsY25kcFpIUm9PMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNZNk9pMXRiM290Y21GdVoyVXRkR2gxYldJZ2UxeHlYRzRnSUNBZ0lDQjBjbUZ1YzJadmNtMDZJSE5qWVd4bEtDUnlZVzVuWlMxMGFIVnRZaTFvYjNabGNpMW1iMk4xY3kxelkyRnNaU2s3WEhKY2JpQWdJQ0FnSUdKdmNtUmxjaTEzYVdSMGFEb2dKSEpoYm1kbExYUm9kVzFpTFdodmRtVnlMV1p2WTNWekxXSnZjbVJsY25kcFpIUm9PMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNZNk9pMXRjeTEwYUhWdFlpQjdYSEpjYmlBZ0lDQWdJSFJ5WVc1elptOXliVG9nYzJOaGJHVW9KSEpoYm1kbExYUm9kVzFpTFdodmRtVnlMV1p2WTNWekxYTmpZV3hsS1R0Y2NseHVJQ0FnSUNBZ1ltOXlaR1Z5TFhkcFpIUm9PaUFrY21GdVoyVXRkR2gxYldJdGFHOTJaWEl0Wm05amRYTXRZbTl5WkdWeWQybGtkR2c3WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0F2THlCVWNtRmphMXh5WEc0Z0lDWTZPaTF0YjNvdGNtRnVaMlV0ZEhKaFkyc2dlMXh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdjbUZ1WjJVdGRISmhZMnM3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0FtT2pvdGQyVmlhMmwwTFhOc2FXUmxjaTF5ZFc1dVlXSnNaUzEwY21GamF5QjdYSEpjYmlBZ0lDQkFhVzVqYkhWa1pTQnlZVzVuWlMxMGNtRmphenRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQ1k2T2kxdGN5MTBjbUZqYXlCN1hISmNiaUFnSUNCamIyeHZjam9nZEhKaGJuTndZWEpsYm5RN0lDOHZJSEpsYlc5MlpTQnpkSEpwY0hCbFpDQnNhVzVsWEhKY2JpQWdJQ0JBYVc1amJIVmtaU0J5WVc1blpTMTBjbUZqYXp0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUNZNk9pMXRjeTFtYVd4c0xXeHZkMlZ5SUh0Y2NseHVJQ0FnSUdKaFkydG5jbTkxYm1RNklDUmpiMjUwY205c2N5MTBhR1Z0WlR0Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUVCcGJtTnNkV1JsSUdadlkzVnpMV0ZqZEdsMlpTQjdYSEpjYmlBZ0lDQW1Pam90Ylc5NkxYSmhibWRsTFhSeVlXTnJJSHRjY2x4dUlDQWdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nWTNWeWNtVnVkRU52Ykc5eU8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ1k2T2kxM1pXSnJhWFF0YzJ4cFpHVnlMWEoxYm01aFlteGxMWFJ5WVdOcklIdGNjbHh1SUNBZ0lDQWdZbUZqYTJkeWIzVnVaQzFqYjJ4dmNqb2dZM1Z5Y21WdWRFTnZiRzl5TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDWTZPaTF0Y3kxbWFXeHNMV3h2ZDJWeUlIdGNjbHh1SUNBZ0lDQWdZMjlzYjNJNklHbHVhR1Z5YVhRN1hISmNiaUFnSUNBZ0lHSmhZMnRuY205MWJtUTZJR04xY25KbGJuUkRiMnh2Y2p0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzRnSUVCcGJtTnNkV1JsSUdScGMyRmliR1ZrSUh0Y2NseHVJQ0FnSUVCbGVIUmxibVFnSldOdmJuUnliMnh6TFdScGMyRmliR1ZrTzF4eVhHNGdJSDFjY2x4dWZWeHlYRzVjY2x4dUx5OWNjbHh1THk4Z1EyOXNiM0lnZG1GeWFXRnVkSE5jY2x4dUx5OWNjbHh1UUdWaFkyZ2dKR052Ykc5eUxDQWtkbUZzZFdVZ2FXNGdKSFJvWlcxbExXTnZiRzl5Y3lCN1hISmNiaUFnTG5KaGJtZGxMbWx6TFNON0pHTnZiRzl5ZlNCN1hISmNiaUFnSUNCamIyeHZjam9nSkhaaGJIVmxPMXh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNGlMQW9KQ1NJdkwxeHlYRzR2THlCVGQybDBZMmdnUTI5dWRISnZiRnh5WEc0dkwxeHlYRzR1WTI5dWRISnZiQ0I3WEhKY2JpQWdQaUF1YzNkcGRHTm9JSHRjY2x4dUlDQWdJRUJsZUhSbGJtUWdKV052Ym5SeWIyeHpMV2hwWkdVN1hISmNiaUFnSUNCQVpYaDBaVzVrSUNWamIyNTBjbTlzY3kxc1lXSmxiRHRjY2x4dVhISmNiaUFnSUNBbU9tTm9aV05yWldRZ2UxeHlYRzRnSUNBZ0lDQitJQzVzWVdKbGJDQjdYSEpjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnWVdaMFpYSWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ2JHVm1kRG9nSkhOM2FYUmphQzEzYVdSMGFDQXRJQ1J6ZDJsMFkyZ3RZMmx5WTJ4bExYTnBlbVU3WEhKY2JpQWdJQ0FnSUNBZ0lDQmlZV05yWjNKdmRXNWtMV052Ykc5eU9pQWtjM2RwZEdOb0xXRmpkR2wyWlMxamFYSmpiR1V0WW1GamEyZHliM1Z1WkR0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCK0lDNXNZV0psYkNCN1hISmNiaUFnSUNBZ0lIQmhaR1JwYm1jdGJHVm1kRG9nSkhOM2FYUmphQzFzWVdKbGJDMXdZV1JrYVc1bmJHVm1kRHRjY2x4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnWW1WbWIzSmxJSHRjY2x4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nSkhOM2FYUmphQzEzYVdSMGFEdGNjbHh1SUNBZ0lDQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQmliM0prWlhJdGNtRmthWFZ6S0NSaWIzSmtaWEp5WVdScGRYTXRjR2xzYkN3Z01DazdYSEpjYmlBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lFQnBibU5zZFdSbElHRm1kR1Z5SUh0Y2NseHVJQ0FnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJbHdpTzF4eVhHNGdJQ0FnSUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNBZ0lDQWdJQ0IwYjNBNklEVXdKVHRjY2x4dUlDQWdJQ0FnSUNCc1pXWjBPaUF3TzF4eVhHNGdJQ0FnSUNBZ0lIUnlZVzV6Wm05eWJUb2dkSEpoYm5Oc1lYUmxXU2d0TlRBbEtTQnpZMkZzWlNna2MzZHBkR05vTFdOcGNtTnNaUzEwY21GdVptOXliUzF6WTJGc1pTazdYSEpjYmlBZ0lDQWdJQ0FnZDJsa2RHZzZJQ1J6ZDJsMFkyZ3RZMmx5WTJ4bExYTnBlbVU3WEhKY2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBa2MzZHBkR05vTFdOcGNtTnNaUzF6YVhwbE8xeHlYRzRnSUNBZ0lDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklHSnZjbVJsY2kxeVlXUnBkWE1vSkdKdmNtUmxjbkpoWkdsMWN5MWphWEpqYkdVc0lEQXBPMXh5WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RNklDUnpkMmwwWTJndFkybHlZMnhsTFdKdmNtUmxjbU52Ykc5eU8xeHlYRzRnSUNBZ0lDQWdJRUJwYm1Oc2RXUmxJSFJ5WVc1emFYUnBiMjRvSkhOM2FYUmphQzFqYVhKamJHVXRkSEpoYm5OcGRHbHZiaWs3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JuMWNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdUV1Z1ZFZ4eVhHNHZMMXh5WEc1Y2NseHVMbTFsYm5VZ2UxeHlYRzRnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc0Z0lIQmhaR1JwYm1jNklEQTdJQzh2SUhKbGMyVjBJR3hwYzNRZ2MzUjViR1ZjY2x4dUlDQnRZWEpuYVc0NklEQTdJQzh2SUhKbGMyVjBJR3hwYzNRZ2MzUjViR1ZjY2x4dUlDQkFhVzVqYkhWa1pTQm1iMjUwYzJsNlpTZ2tabTl1ZEhOcGVtVXRibTl5YldGc0tUdGNjbHh1SUNCQWFXNWpiSFZrWlNCdFpXNTFMWFpoY21saGJuUW9KR052Ym5SeWIyeHpMWFJvWlcxbEtUc2dMeThnWkdWbVlYVnNkQ0JOWlc1MUlIWmhjbWxoYm5RZ2MzUjViR1Z6WEhKY2JuMWNjbHh1WEhKY2JpOHZYSEpjYmk4dklFMWxiblVnYVhSbGJYTmNjbHh1THk5Y2NseHVMbTFsYm5VdGFYUmxiU0I3WEhKY2JpQWdRR1Y0ZEdWdVpDQWxZMjl1ZEhKdmJITTdYSEpjYmlBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3SUM4dklISmxjMlYwSUdKMWRIUnZiaUJ6ZEhsc1pYTmNjbHh1SUNCM2FXUjBhRG9nTVRBd0pUc2dMeThnY21WelpYUWdZblYwZEc5dUlITjBlV3hsWEhKY2JpQWdjR0ZrWkdsdVp5MXNaV1owT2lBa2JtVnpkR1ZrVFdWdWRTMXBibVJsYm5RN0lDOHZJR2x1WkdWdWRDQXViV1Z1ZFMxcGRHVnRJR2x1SUM1dFpXNTFYSEpjYmlBZ1ltOXlaR1Z5T2lBd095QXZMeUJ5WlhObGRDQmlkWFIwYjI0Z2MzUjViR1VnTHk4Z2IzWmxjbkpwWkdVZ0pXTnZiblJ5YjJ4eklITjBlV3hsWEhKY2JpQWdZbTl5WkdWeUxYSmhaR2wxY3pvZ1ltOXlaR1Z5TFhKaFpHbDFjeWd3S1RzZ0x5OGdiM1psY25KcFpHVWdKV052Ym5SeWIyeHpJSE4wZVd4bFhISmNiaUFnWTI5c2IzSTZJR2x1YUdWeWFYUTdJQzh2SUc5MlpYSnlhV1JsSUNWamIyNTBjbTlzY3lCemRIbHNaVnh5WEc0Z0lIUmxlSFF0WVd4cFoyNDZJR2x1YUdWeWFYUTdJQzh2SUhKbGMyVjBJR0oxZEhSdmJpQnpkSGxzWlZ4eVhHNGdJRUJwYm1Oc2RXUmxJR1p2Ym5SemFYcGxLR2x1YUdWeWFYUXBPeUF2THlCdmRtVnljbWxrWlNBbFkyOXVkSEp2YkhNZ2MzUjViR1ZjY2x4dVhISmNiaUFnUUdsdVkyeDFaR1VnWW1WbWIzSmxJSHRjY2x4dUlDQWdJR052Ym5SbGJuUTZJRndpWENJN1hISmNiaUFnSUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnSUNCMGIzQTZJREE3WEhKY2JpQWdJQ0JpYjNSMGIyMDZJREE3WEhKY2JpQWdJQ0JzWldaME9pQXdPMXh5WEc0Z0lDQWdZbTl5WkdWeUxXeGxablE2SURBZ2MyOXNhV1E3WEhKY2JpQWdJQ0JpYjNKa1pYSXRiR1ZtZEMxamIyeHZjam9nYVc1b1pYSnBkRHRjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJSFJ5WVc1emFYUnBiMjRvSkcxbGJuVXRhWFJsYlMxaVpXWnZjbVV0ZEhKaGJuTnBkR2x2Yml3Z1ltOXlaR1Z5TFdOdmJHOXlJREZ6SUdOMVltbGpMV0psZW1sbGNpZ3hMQ0F3TENBeExDQXdLU2s3SUM4dklISmxkR0ZwYmlCaWIzSmtaWEl0WTI5c2IzSWdkR2xzYkNCaWIzSmtaWElnZDJsa2RHZ2dZbVVnTUZ4eVhHNGdJSDFjY2x4dVhISmNiaUFnSmpwdWIzUW9MbUZqZEdsMlpTa2dlMXh5WEc0Z0lDQWdMeThnVTNSNWJHVWdabTlqZFhNZ2MzUmhkR1VnZEc4Z2MyaHZkeUJsYkdWdFpXNTBjeUJwYmlCMGFHVnlaU0JtYjJOMWN5QnpkR0YwWlNCc2FXdGxJR0oxZEhSdmJpQnZjaUJoYm1Ob2IzSnpJSGRwZEdnZ2FISmxabHh5WEc0Z0lDQWdRR2x1WTJ4MVpHVWdhRzkyWlhJdFptOWpkWE1nZTF4eVhHNGdJQ0FnSUNCQWFXNWpiSFZrWlNCaVpXWnZjbVVnZTF4eVhHNGdJQ0FnSUNBZ0lFQnBibU5zZFdSbElIUnlZVzV6YVhScGIyNG9KRzFsYm5VdGFYUmxiUzFpWldadmNtVXRkSEpoYm5OcGRHbHZiaWs3SUM4dklISmxiVzkyWlNCaWIzSmtaWEl0WTI5c2IzSWdZVzVrSUdOdmJHOXlJSFJ5WVc1emFYUnBiMjRnZEc4Z2NYVnBZMnRzZVNCamFHRnVaMlVnWW05eVpHVnlMV052Ykc5eUlHRnpJR0p2Y21SbGNpQmhjSEJsWVhKY2NseHVJQ0FnSUNBZ0lDQmliM0prWlhJdGJHVm1kQzEzYVdSMGFEb2dKRzFsYm5VdGFYUmxiUzFpWldadmNtVXRZbTl5WkdWeWQybGtkR2c3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzRnSUVCcGJtTnNkV1JsSUdodmRtVnlJSHRjY2x4dUlDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlRzZ0x5OGdjbVZ6WlhRZ1lXNWphRzl5SUdSbFkyOXlZWFJwYjI1Y2NseHVJQ0I5WEhKY2JseHlYRzRnSUVCcGJtTnNkV1JsSUdadlkzVnpJSHRjY2x4dUlDQWdJRzkxZEd4cGJtVTZJREE3SUM4dklISmxjMlYwSUdKMWRIUnZiaUJ6ZEhsc1pWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ1FHbHVZMngxWkdVZ2JtOTBMV1JwYzJGaWJHVmtJSHRjY2x4dUlDQWdJRUJsZUhSbGJtUWdKV04xY25OdmNpMXdiMmx1ZEdWeU95QXZMeUJoWkdRZ1hDSm9ZVzVrWENJZ1kzVnljMjl5SUhSdklHNXZiaTFrYVhOaFlteGxaQ0JpZFhSMGIyNGdaV3hsYldWdWRITXVYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQkFhVzVqYkhWa1pTQmthWE5oWW14bFpDQjdYSEpjYmlBZ0lDQkFaWGgwWlc1a0lDVmpiMjUwY205c2N5MWthWE5oWW14bFpEdGNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaTh2WEhKY2JpOHZJRU52Ykc5eUlIWmhjbWxoYm5SelhISmNiaTh2WEhKY2JrQmxZV05vSUNSamIyeHZjaXdnSkhaaGJIVmxJR2x1SUNSMGFHVnRaUzFqYjJ4dmNuTWdlMXh5WEc0Z0lDNXRaVzUxTG1sekxTTjdKR052Ykc5eWZTQjdYSEpjYmlBZ0lDQkFhVzVqYkhWa1pTQnRaVzUxTFhaaGNtbGhiblFvSkhaaGJIVmxLVHRjY2x4dUlDQjlYSEpjYm4xY2NseHVYSEpjYmk4dlhISmNiaTh2SUU1bGMzUmxaQ0JOWlc1MVhISmNiaTh2WEhKY2JpOHZJRWx0Y0d4bGJXVnVkR0YwYVc5dUlHOW1JRTVsYzNSbFpDQnRaVzUxSUdseklHNXZkQ0JwYm1Oc2RXUmxaQ0JoY3lCcGRDQnlaWEYxYVhKbGN5QmhJR0pwZENCdlppQktZWFpoVTJOeWFYQjBYSEpjYmk4dklFWnZiR3h2ZDJsdVp5QktZWFpoVTJOeWFYQjBJRU52WkdVZ2FXMXdiR1Z0Wlc1MGN5QnVaWE4wWldRZ1RXVnVkU0JwYm5SbGNtRmpkR2x2YmlCaGJtUWdkMjl5YXlCM2FYUm9JRzFoYW05eUlFeGhkR1Z6ZENCQ2NtOTNjMlZ5YzF4eVhHNHZMMXh5WEc0dkx5QjJZWElnYldWdWRYUnlhV2RuWlhKeklEMGdaRzlqZFcxbGJuUXVaMlYwUld4bGJXVnVkSE5DZVVOc1lYTnpUbUZ0WlNoY0ltMWxiblV0ZEhKcFoyZGxjbHdpS1R0Y2NseHVMeThnVDJKcVpXTjBMbXRsZVhNb2JXVnVkWFJ5YVdkblpYSnpLUzVtYjNKRllXTm9LR1oxYm1OMGFXOXVJQ2hyS1NCN1hISmNiaTh2SUNBZ2JXVnVkWFJ5YVdkblpYSnpXMnRkTG05dVkyeHBZMnNnUFNCbWRXNWpkR2x2YmlBb1pTa2dlMXh5WEc0dkx5QWdJQ0FnWlM1MFlYSm5aWFF1WTJ4aGMzTk1hWE4wTG5SdloyZHNaU2hjSW1GamRHbDJaVndpS1R0Y2NseHVMeThnSUNCOU8xeHlYRzR2THlCOUtUdGNjbHh1THk5Y2NseHVYSEpjYmk4dklFNWxjM1JsWkNCTlpXNTFJRk4xY0hCdmNuUmNjbHh1TG0xbGJuVWdQaUF1YldWdWRTQjdYSEpjYmlBZ2IzWmxjbVpzYjNjNklHaHBaR1JsYmpzZ0x5OGdVSEpsZG1WdWRDQXViV1Z1ZFMxcGRHVnRJR1p5YjIwZ1oyOXBibWNnYjNWMGMybDZaU0J0Wlc1MUlHRm1kR1Z5SUdGd2NHeDVhVzVuSUcxaGNtZHBiaTFzWldaMFhISmNiaUFnUUdsdVkyeDFaR1VnWm05dWRITnBlbVVvYVc1b1pYSnBkQ2s3WEhKY2JseHlYRzRnSUM4dklFNWxjM1JsWkNCdFpXNTFJR2wwWlcxelhISmNiaUFnUGlBcUlIdGNjbHh1SUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SUNSdVpYTjBaV1JOWlc1MUxXbHVaR1Z1ZENBcklDUmpiMjUwY205c2N5MXdZV1JrYVc1bkxYZzdJQzh2SUdGa1pDQndZV1JrYVc1bklIUnZJSEJ5WlhabGJuUWdZMjl1ZEdWdWRDQm1jbTl0SUdkdmFXNW5JRzkxZEhOcFpHVWdiV1Z1ZFNCaFpuUmxjaUJoY0hCc2VXbHVaeUJ0WVhKbmFXNHRiR1ZtZEZ4eVhHNGdJQ0FnYldGeVoybHVMV3hsWm5RNklDUnVaWE4wWldSTlpXNTFMV2x1WkdWdWREc2dMeThnYVc1a1pXNTBJRzVsYzNSbFpDQnRaVzUxSUdsMFpXMXpYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQStJQzV0Wlc1MUlIdGNjbHh1SUNBZ0lIQmhaR1JwYm1jdGNtbG5hSFE2SURBN0lDOHZJSEpsYlc5MlpTQndZV1JrYVc1bklHOXVJRzVsYzNSbFpDQnRaVzUxWEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0ErSUM1dFpXNTFMWFJ5YVdkblpYSWdlMXh5WEc0Z0lDQWdjR0ZrWkdsdVp5MXlhV2RvZERvZ0pHTnZiblJ5YjJ4ekxYQmhaR1JwYm1jdGVEc2dMeThnY21WemRHOXlaU0J3WVdSa2FXNW5JSFJ2SUdSbFptRjFiSFFnZG1Gc2RXVmNjbHh1SUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUF3T3lBdkx5QnZkbVZ5Y21sa1pTQnpkSGxzWlNCbWNtOXRJRzVsYzNSbFpDQnRaVzUxSUdsMFpXMXpYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzR2THlBdWJXVnVkUzEwY21sbloyVnlJRTVsWldSeklIUnZJR0psSUVacGNuTjBJR1ZzWlcxbGJuUWdhVzRnYm1WemRHVmtJRzFsYm5WY2NseHVMbTFsYm5VdGRISnBaMmRsY2lCN1hISmNiaUFnWkdsemNHeGhlVG9nYVc1c2FXNWxMV1pzWlhnN1hISmNibHh5WEc0Z0lFQnBibU5zZFdSbElHRm1kR1Z5SUh0Y2NseHVJQ0FnSUdOdmJuUmxiblE2SUZ3aVhDSTdYSEpjYmlBZ0lDQmhiR2xuYmkxelpXeG1PaUJqWlc1MFpYSTdYSEpjYmlBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nWVhWMGJ6c2dMeThnWVd4cFoyNGdMbTFsYm5VdGRISnBaMmRsY2lCallYSmxkQ0IwYnlCbGJtUWdiMllnWm14bGVGeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ2RISnBZVzVuYkdVb1ltOTBkRzl0TENBa2JXVnVkUzEwY21sbloyVnlMV05oY21WMExYTnBlbVVzSUNSdFpXNTFMWFJ5YVdkblpYSXRZMkZ5WlhRdFkyOXNiM0lwTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnSmk1aFkzUnBkbVVnZTF4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnWVdaMFpYSWdlMXh5WEc0Z0lDQWdJQ0IwY21GdWMyWnZjbTA2SUhOallXeGxLQzB4S1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzRnSUg0Z0tpQjdYSEpjYmlBZ0lDQkFhVzVqYkhWa1pTQmhibWx0WVhScGIyNG9KRzVsYzNSbFpFMWxiblV0WVc1cGJXRjBhVzl1Ym1GdFpTd2dKRzVsYzNSbFpFMWxiblV0WVc1cGJXRjBhVzl1WkhWeVlYUnBiMjRwTzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnSmpwdWIzUW9MbUZqZEdsMlpTa2dlMXh5WEc0Z0lDQWdMeThnU0dsa1pTQmxkbVZ5ZVhSb2FXNW5JR1ZzYzJVZ2FXNXphV1JsSUcxbGJuVmNjbHh1SUNBZ0lINGdLaUI3WEhKY2JpQWdJQ0FnSUdScGMzQnNZWGs2SUc1dmJtVTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JpSXNDZ2tKSWk4dlhISmNiaTh2SUVSeWIzQmtiM2R1WEhKY2JpOHZYSEpjYmx4eVhHNHVaSEp2Y0dSdmQyNGdlMXh5WEc0Z0lFQmxlSFJsYm1RZ0pYQnZjMmwwYVc5dUxYSmxiR0YwYVhabE8xeHlYRzRnSUVCbGVIUmxibVFnSldScGMzQnNZWGt0YVc1c2FXNWxZbXh2WTJzN1hISmNibHh5WEc0Z0lENGdMbTFsYm5VZ2UxeHlYRzRnSUNBZ2NHOXphWFJwYjI0NklHRmljMjlzZFhSbE8xeHlYRzRnSUNBZ2RHOXdPaUF4TURBbE8xeHlYRzRnSUNBZ2VpMXBibVJsZURvZ0pHUnliM0JrYjNkdUxXMWxiblV0ZW1sdVpHVjRPMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2dibTl1WlRzZ0x5OGdTR2xrWlNCdFpXNTFJSFJ2SUdScGMzQnNZWGtnYjNabGNpQnBiblJsY21GamRHbHZibHh5WEc0Z0lDQWdiV2x1TFhkcFpIUm9PaUFrWkhKdmNHUnZkMjR0YldWdWRTMXRhVzUzYVdSMGFEdGNjbHh1SUNBZ0lIQmhaR1JwYm1jNklDUmtjbTl3Wkc5M2JpMXRaVzUxTFhCaFpHUnBibWN0ZVNBd08xeHlYRzRnSUNBZ2JXRnlaMmx1TFhSdmNEb2dKR1J5YjNCa2IzZHVMVzFsYm5VdGJXRnlaMmx1TzF4eVhHNGdJQ0FnWW05eVpHVnlMWEpoWkdsMWN6b2dZbTl5WkdWeUxYSmhaR2wxY3lncE8xeHlYRzRnSUNBZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvZ0pHUnliM0JrYjNkdUxXMWxiblV0WW1GamEyZHliM1Z1WkR0Y2NseHVJQ0FnSUdKdmVDMXphR0ZrYjNjNklHSnZlQzF6YUdGa2IzY29KR1J5YjNCa2IzZHVMVzFsYm5VdFltOTRjMmhoWkc5M0tUdGNjbHh1SUNBZ0lFQnBibU5zZFdSbElHWnZiblJ6YVhwbEtHbHVhR1Z5YVhRcE8xeHlYRzRnSUNBZ1FHbHVZMngxWkdVZ1lXNXBiV0YwYVc5dUtHWmhaR1ZwYml3Z0pHNWxjM1JsWkUxbGJuVXRZVzVwYldGMGFXOXVaSFZ5WVhScGIyNHBPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMbVJ5YjNCa2IzZHVJSHRjY2x4dUlDQWdJSGRwWkhSb09pQXhNREFsT3lBdkx5QmxlSEJsYm1RZ2JtVnpkR1ZrSUdSeWIzQmtiM2R1SUdGMllXbHNZV0pzWlNCemNHRmpaVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdKanB1YjNRb0xtbHpMVzFsWjJFcElIdGNjbHh1SUNBZ0lDNXRaVzUxTFdsMFpXMGdlMXh5WEc0Z0lDQWdJQ0IzYUdsMFpTMXpjR0ZqWlRvZ2JtOTNjbUZ3T3lBdkx5QndjbVYyWlc1MElIZHlZWEJ3YVc1bklHOW1JSFJsZUhSY2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpOHZJR2wwY3lCeVpXTnZiVzFsYm1SbFpDQjBieUIxYzJVZ1NtRjJZVk5qY21sd2RDQm1iM0lnU1cxd2JHVnRaVzUwWVhScGIyNGdiMllnWkhKdmNHUnZkMjRnWW5WMElHbHpJRzl3ZEdsdmJtRnNYSEpjYmk4dklFWnZiR3h2ZDJsdVp5QktZWFpoVTJOeWFYQjBJRU52WkdVZ2FXMXdiR1Z0Wlc1MGN5QmtjbTl3Wkc5M2JpQnBiblJsY21GamRHbHZiaUJoYm1RZ2QyOXlheUIzYVhSb0lHMWhhbTl5SUV4aGRHVnpkQ0JDY205M2MyVnljMXh5WEc0dkwxeHlYRzR2THlCMllYSWdaSEp2Y0dSdmQyNTBjbWxuWjJWeWN5QTlJR1J2WTNWdFpXNTBMbWRsZEVWc1pXMWxiblJ6UW5sRGJHRnpjMDVoYldVb1hDSmtjbTl3Wkc5M2JpMTBjbWxuWjJWeVhDSXBPMXh5WEc0dkx5QlBZbXBsWTNRdWEyVjVjeWhrY205d1pHOTNiblJ5YVdkblpYSnpLUzVtYjNKRllXTm9LR1oxYm1OMGFXOXVJQ2hyS1NCN1hISmNiaTh2SUNBZ1pISnZjR1J2ZDI1MGNtbG5aMlZ5YzF0clhTNXZibU5zYVdOcklEMGdablZ1WTNScGIyNGdLR1VwSUh0Y2NseHVMeThnSUNBZ0lHVXVkR0Z5WjJWMExtTnNZWE56VEdsemRDNTBiMmRuYkdVb1hDSmhZM1JwZG1WY0lpazdYSEpjYmk4dklDQWdmVHRjY2x4dUx5OGdmU2s3WEhKY2JpOHZYSEpjYmk1a2NtOXdaRzkzYmkxMGNtbG5aMlZ5SUh0Y2NseHVJQ0JBYVc1amJIVmtaU0JtYjI1MGMybDZaU2hwYm1obGNtbDBLVHRjY2x4dUlDQmthWE53YkdGNU9pQnBibXhwYm1VdFpteGxlRHRjY2x4dVhISmNiaUFnUUdsdVkyeDFaR1VnWVdaMFpYSWdlMXh5WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2NseHVJQ0FnSUhSeVlXNXpabTl5YlRvZ2RISmhibk5zWVhSbFdDZ2taSEp2Y0dSdmQyNHRkSEpwWjJkbGNpMWpZWEpsZEMxemFYcGxJQzhnTWlrN0lDOHZJSFZ6YVc1bklIUnlZVzV6Wm05eWJTQnBiaUJqYjIxaWFXNWhkR2x2YmlCM2FYUm9JRzFoY21kcGJpMXlhV2RvZENCMGJ5QnZabVp6WlhRZ2QyaGxiaUJ3WVhKbGJuUWdaV3hsYldWdWRDQm9ZWE1nWkdsemNHeGhlU0JwYm14cGJtVXRZbXh2WTJzc0lHSmxZMkYxYzJVZ2QyVWdhR0YyWlNCaGJISmxZV1I1SUhWelpXUWdiV0Z5WjJsdUxXeGxablFnZG1Gc2RXVWdabTl5SUdac1pYZ2djR0Z5Wlc1MElHVnNaVzFsYm5RZ2FHRjJhVzVuSUdScGMzQnNZWGtnWm14bGVGeHlYRzRnSUNBZ1lXeHBaMjR0YzJWc1pqb2dZMlZ1ZEdWeU95QXZMeUJoYkdsbmJpQmhkQ0J0YVdSa2JHVWdkMmhsYmlCd1lYSmxiblFnWld4bGJXVnVkQ0JvWVhNZ1pHbHpjR3hoZVNCbWJHVjRJR1V1WnlBdWJXVnVkUzFwZEdWdFhISmNiaUFnSUNCdFlYSm5hVzR0Y21sbmFIUTZJQ1JrY205d1pHOTNiaTEwY21sbloyVnlMV05oY21WMExYTnBlbVVnTHlBeU95QXZMeUIxYzJsdVp5QjBjbUZ1YzJadmNtMGdhVzRnWTI5dFltbHVZWFJwYjI0Z2QybDBhQ0J0WVhKbmFXNHRjbWxuYUhRZ2RHOGdiMlptYzJWMElIZG9aVzRnY0dGeVpXNTBJR1ZzWlcxbGJuUWdhR0Z6SUdScGMzQnNZWGtnYVc1c2FXNWxMV0pzYjJOckxDQmlaV05oZFhObElIZGxJR2hoZG1VZ1lXeHlaV0ZrZVNCMWMyVmtJRzFoY21kcGJpMXNaV1owSUhaaGJIVmxJR1p2Y2lCbWJHVjRJSEJoY21WdWRDQmxiR1Z0Wlc1MElHaGhkbWx1WnlCa2FYTndiR0Y1SUdac1pYaGNjbHh1SUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUJoZFhSdk95QXZMeUJoYkdsbmJpQmhkQ0JsYm1RZ2QyaGxiaUJ3WVhKbGJuUWdaV3hsYldWdWRDQm9ZWE1nWkdsemNHeGhlU0JtYkdWNElHVXVaeUF1YldWdWRTMXBkR1Z0WEhKY2JpQWdJQ0JBYVc1amJIVmtaU0IwY21saGJtZHNaU2hpYjNSMGIyMHNJQ1JrY205d1pHOTNiaTEwY21sbloyVnlMV05oY21WMExYTnBlbVVzSUNSa2NtOXdaRzkzYmkxMGNtbG5aMlZ5TFdOaGNtVjBMV052Ykc5eUtUdGNjbHh1SUNCOVhISmNibHh5WEc0Z0lDWXVZV04wYVhabElINGdMbTFsYm5VZ2UxeHlYRzRnSUNBZ1FHVjRkR1Z1WkNBbFpHbHpjR3hoZVMxaWJHOWphenNnTHk4Z1UyaHZkeUJ0Wlc1MUlIZG9aVzRnWVdOMGFYWmxYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzR2TDF4eVhHNHZMeUJFY205d1pHOTNiaUJ0Wlc1MUlHUnBjbVZqZEdsdmJseHlYRzR2TDF4eVhHNHVaSEp2Y0dSdmQyNHVhWE10ZEc5d0lIdGNjbHh1SUNBK0lDNXRaVzUxSUh0Y2NseHVJQ0FnSUhSdmNEb2dZWFYwYnp0Y2NseHVJQ0FnSUdKdmRIUnZiVG9nTVRBd0pUdGNjbHh1SUNBZ0lHMWhjbWRwYmpvZ01DQXdJQ1JrY205d1pHOTNiaTF0Wlc1MUxXMWhjbWRwYmlBd08xeHlYRzRnSUgxY2NseHVYSEpjYmlBZ1BpQXVaSEp2Y0dSdmQyNHRkSEpwWjJkbGNpQjdYSEpjYmlBZ0lDQkFhVzVqYkhWa1pTQmhablJsY2lCN1hISmNiaUFnSUNBZ0lIUnlZVzV6Wm05eWJUb2djMk5oYkdVb0xURXBJSFJ5WVc1emJHRjBaVmdvTFNSa2NtOXdaRzkzYmkxMGNtbG5aMlZ5TFdOaGNtVjBMWE5wZW1VZ0x5QXlLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYm4xY2NseHVYSEpjYmk1a2NtOXdaRzkzYmk1cGN5MXlhV2RvZENCN1hISmNiaUFnUGlBdWJXVnVkU0I3WEhKY2JpQWdJQ0IwYjNBNklEQTdYSEpjYmlBZ0lDQnNaV1owT2lBeE1EQWxPMXh5WEc0Z0lDQWdiV0Z5WjJsdU9pQXdJREFnTUNBa1pISnZjR1J2ZDI0dGJXVnVkUzF0WVhKbmFXNDdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQStJQzVrY205d1pHOTNiaTEwY21sbloyVnlJSHRjY2x4dUlDQWdJRUJwYm1Oc2RXUmxJR0ZtZEdWeUlIdGNjbHh1SUNBZ0lDQWdkSEpoYm5ObWIzSnRPaUJ5YjNSaGRHVW9NamN3WkdWbktTQjBjbUZ1YzJ4aGRHVlpLQ1JrY205d1pHOTNiaTEwY21sbloyVnlMV05oY21WMExYTnBlbVVnTHlBeUtUdGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibjFjY2x4dVhISmNiaTVrY205d1pHOTNiaTVwY3kxc1pXWjBJSHRjY2x4dUlDQStJQzV0Wlc1MUlIdGNjbHh1SUNBZ0lIUnZjRG9nTUR0Y2NseHVJQ0FnSUhKcFoyaDBPaUF4TURBbE8xeHlYRzRnSUNBZ2JXRnlaMmx1T2lBd0lDUmtjbTl3Wkc5M2JpMXRaVzUxTFcxaGNtZHBiaUF3SURBN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBK0lDNWtjbTl3Wkc5M2JpMTBjbWxuWjJWeUlIdGNjbHh1SUNBZ0lFQnBibU5zZFdSbElHRm1kR1Z5SUh0Y2NseHVJQ0FnSUNBZ2RISmhibk5tYjNKdE9pQnliM1JoZEdVb09UQmtaV2NwSUhSeVlXNXpiR0YwWlZrb0xTUmtjbTl3Wkc5M2JpMTBjbWxuWjJWeUxXTmhjbVYwTFhOcGVtVWdMeUF5S1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpOHZYSEpjYmk4dklGQjFjbVVnUTFOVElHRndjSEp2WVdOb0wybHVkR1Z5WVdOMGFXOXVYSEpjYmk4dlhISmNiaTh2SUVOemN5QmhjSEJ5YjJGamFDQjNiM0pyY3lCbWFXNWxJSGRwZEdnZ2MybHRjR3hsSUdSeWIzQmtiM2R1SUdKMWRDQjBhR1Y1SUdGeVpTQnViM1FnY21WamIyMXRaVzVrWldRZ1ptOXlJR052YlhCc1pYZ2djM1J5ZFdOMGRYSmxJR0Z1WkNCMGFHVjVJR0p5WldGcklGVllYSEpjYmk4dklHVXVaeUJYYUdWdUlIVnpaV1FnZDJsMGFDQnRaV2RoSUdSeWIzQmtiM2R1SUdsdWMybGtaU0F1YkhsMExXaGxZV1JsY2l3Z2JXVnVkU0JqYkc5elpYTWdZbVZtYjNKbElIVnpaWElnWTJGdUlHbHVkR1Z5WVdOMElIZHBkR2dnYVhRdUlHbDBjeUJpWldOaGRYTmxYSEpjYmk4dklHRnpJSE52YjI0Z1lYTWdkWE5sY2lCdGIzWmxjeUJqZFhKemIzSWdkRzhnYVc1MFpYSmhZM1FnZDJsMGFDQnRaVzUxSUdobElHeHZjMlZ6SUM1a2NtOXdaRzkzYmlCb2IzWmxjaUJ6ZEdGMFpTQmhibVFnYldWdWRTQmpiRzl6WlhNdVhISmNiaTVrY205d1pHOTNiaTV2Ymkxb2IzWmxjaUI3WEhKY2JpQWdMeThnZEc4Z2FXNTBaWEpoWTNRZ2QybDBhQ0J1WlhOMFpXUWdiV1Z1ZFZ4eVhHNGdJQzVrY205d1pHOTNiaUI3WEhKY2JpQWdJQ0JBYVc1amJIVmtaU0JvYjNabGNpQjdYSEpjYmlBZ0lDQWdJRDRnTG0xbGJuVWdlMXh5WEc0Z0lDQWdJQ0FnSUVCbGVIUmxibVFnSldScGMzQnNZWGt0WW14dlkyczdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBdkx5QlFjbVYyWlc1MElHUnliM0JrYjNkdUlHWnliMjBnWTJ4dmMybHVaeUJpWlhSM1pXVnVJR2RoY0hNZ1lua2dZM0psWVhScGJtY2dZV1JrYVhScGIyNWhiQ0JoY21WaElHRnliM1Z1WkNCa2NtOXdaRzkzYmx4eVhHNGdJQ0FnUGlBdWJXVnVkU0I3WEhKY2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUdKbFptOXlaU0I3WEhKY2JpQWdJQ0FnSUNBZ1FHVjRkR1Z1WkNBbFpISnZjR1J2ZDI0dFptbHNiQzFuWVhCek8xeHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQXZMeUIwYnlCcGJuUmxjbUZqZENCM2FYUm9JR2x1Ym1WeUlHMWxiblZjY2x4dUlDQkFhVzVqYkhWa1pTQm9iM1psY2lCN1hISmNiaUFnSUNBK0lDNXRaVzUxSUh0Y2NseHVJQ0FnSUNBZ1FHVjRkR1Z1WkNBbFpHbHpjR3hoZVMxaWJHOWphenRjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzh2SUZCeVpYWmxiblFnWkhKdmNHUnZkMjRnWm5KdmJTQmpiRzl6YVc1bklHSmxkSGRsWlc0Z1oyRndjeUJpZVNCamNtVmhkR2x1WnlCaFpHUnBkR2x2Ym1Gc0lHRnlaV0VnWVhKdmRXNWtJR1J5YjNCa2IzZHVYSEpjYmlBZ1BpQXViV1Z1ZFNCN1hISmNiaUFnSUNCQWFXNWpiSFZrWlNCaVpXWnZjbVVnZTF4eVhHNGdJQ0FnSUNCQVpYaDBaVzVrSUNWa2NtOXdaRzkzYmkxbWFXeHNMV2RoY0hNN1hISmNiaUFnSUNCOVhISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNHZMMXh5WEc0dkx5QkVjbTl3Wkc5M2JpQk5aV2RoWEhKY2JpOHZYSEpjYmk1a2NtOXdaRzkzYmk1cGN5MXRaV2RoSUh0Y2NseHVJQ0J3YjNOcGRHbHZiam9nYzNSaGRHbGpPMXh5WEc1Y2NseHVJQ0ErSUM1dFpXNTFJSHRjY2x4dUlDQWdJSEpwWjJoME9pQXdPMXh5WEc0Z0lDQWdiR1ZtZERvZ01EdGNjbHh1SUNBZ0lHMWhjbWRwYmpvZ01EdGNjbHh1SUNCOVhISmNibjFjY2x4dUlpd0tDUWtpTHk5Y2NseHVMeThnUW14dlkydHhkVzkwWlZ4eVhHNHZMMXh5WEc1Y2NseHVMbUpzYjJOcmNYVnZkR1VnZTF4eVhHNGdJSEJoWkdScGJtYzZJQzQwY21WdElDNDRjbVZ0TzF4eVhHNGdJR0p2Y21SbGNpMXNaV1owT2lBa1ltOXlaR1Z5ZDJsa2RHZ3RkMmxrWlNCemIyeHBaQ0FrY0hKcGJXRnllVHRjY2x4dWZWeHlYRzRpTEFvSkNTSXZMMXh5WEc0dkx5Qk1hWE4wWEhKY2JpOHZYSEpjYmx4eVhHNUFhV1lnSkdkbGJtVnlZWFJsTFdOdmJYQnZibVZ1ZEMxamJHRnpjMlZ6SUh0Y2NseHVJQ0F1YkdsemRDQjdYSEpjYmlBZ0lDQndZV1JrYVc1bkxXeGxablE2SURBN1hISmNibHh5WEc0Z0lDQWdQaUJzYVNCN1hISmNiaUFnSUNBZ0lFQmxlSFJsYm1RZ0pXUnBjM0JzWVhrdFlteHZZMnM3SUM4dklHNXZJRzVsWldRZ2RHOGdjMlYwSUd4cGMzUXRjM1I1YkdVZ2RHOGdibTl1WlNCaGN5QjBhR1VnYkdsemRDQnBkR1Z0Y3lCaGNtVWdZV3h5WldGa2VTQnpaWFFnZEc4Z1pHbHpjR3hoZVNCaWJHOWpheUJwYm5OMFpXRmtJRzltSUdScGMzQnNZWGtnYkdsemRGeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0xteHBjM1F1YVhNdGFXNXNhVzVsSUh0Y2NseHVJQ0FnSUVCbGVIUmxibVFnSldScGMzQnNZWGt0WW14dlkyczdYSEpjYmx4eVhHNGdJQ0FnUGlCc2FTQjdYSEpjYmlBZ0lDQWdJRUJsZUhSbGJtUWdKV1JwYzNCc1lYa3RhVzVzYVc1bFlteHZZMnM3WEhKY2JseHlYRzRnSUNBZ0lDQW1PbTV2ZENnNmJHRnpkQzFqYUdsc1pDa2dlMXh5WEc0Z0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dKR3hwYzNRdGFXNXNhVzVsTFhCaFpHUnBibWM3WEhKY2JpQWdJQ0FnSUgxY2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JuMWNjbHh1SWl3S0NRa2lMeTljY2x4dUx5OGdRMjl1ZEhKdmJGeHlYRzR2TDF4eVhHNHZMeUJWYzJWa0lIUnZJR052YldKcGJtVWdaR2xtWm1WeVpXNTBJR052YlhCdmJtVnVkSE1nWVc1a0lHOWlhbVZqZEhNZ2FXNTBieUJ2Ym1VZ1kyOXVkSEp2YkZ4eVhHNHZMeUJVYUdVZ2JXRnBiaUJqYjI1MGNtOXNJRzVsWldSeklIUnZJR0psSUhSb1pTQm1hWEp6ZENCamFHbHNaQ0J2WmlCRGIyNTBjbTlzSUdOc1lYTnpJSFJ2SUhkdmNtc2djSEp2Y0dWeWJIbGNjbHh1WEhKY2JpNWpiMjUwY205c0lIdGNjbHh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hISmNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYSEpjYmlBZ1FHbHVZMngxWkdVZ1ptOXVkSE5wZW1Vb0pHWnZiblJ6YVhwbExXNXZjbTFoYkNrN1hISmNibjFjY2x4dVhISmNibXhoWW1Wc0xtTnZiblJ5YjJ3Z2UxeHlYRzRnSUcxaGNtZHBiaTFpYjNSMGIyMDZJREE3WEhKY2JuMWNjbHh1WEhKY2JpOHZYSEpjYmk4dklHWmxaV1JpWVdOcklHbHVjMmxrWlNCamIyNTBjbTlzWEhKY2JpOHZYSEpjYmk1amIyNTBjbTlzSUQ0Z0xtWmxaV1JpWVdOcklIdGNjbHh1SUNCd2IzTnBkR2x2YmpvZ1lXSnpiMngxZEdVN1hISmNiaUFnY21sbmFIUTZJREE3WEhKY2JpQWdZbTkwZEc5dE9pQXhNREFsTzF4eVhHNGdJR1JwYzNCc1lYazZJRzV2Ym1VN1hISmNiaUFnY0dGa1pHbHVaem9nSkdOdmJuUnliMnd0Wm1WbFpHSmhZMnN0Y0dGa1pHbHVaenRjY2x4dUlDQnRZWEpuYVc0dFltOTBkRzl0T2lBa1kyOXVkSEp2YkMxbVpXVmtZbUZqYXkxaGNuSnZkeTF6YVhwbElDc2dKR052Ym5SeWIyd3RabVZsWkdKaFkyc3RiMlptYzJWMExXSnZkSFJ2YlR0Y2NseHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQmliM0prWlhJdGNtRmthWFZ6S0NrN1hISmNiaUFnWTI5c2IzSTZJQ1JqYjI1MGNtOXNMV1psWldSaVlXTnJMV052Ykc5eU8xeHlYRzRnSUdKdmVDMXphR0ZrYjNjNklHSnZlQzF6YUdGa2IzY29KR052Ym5SeWIyd3RabVZsWkdKaFkyc3RjMmhoWkc5M0tUdGNjbHh1SUNCQWFXNWpiSFZrWlNCbmNtRmthV1Z1ZEMxaVp5Z2tZMjl1ZEhKdmJDMW1aV1ZrWW1GamF5MWlZV05yWjNKdmRXNWtMQ0F4T0RCa1pXY3BPMXh5WEc1Y2NseHVJQ0JBYVc1amJIVmtaU0JpWldadmNtVWdlMXh5WEc0Z0lDQWdZMjl1ZEdWdWREb2dYQ0pjSWp0Y2NseHVJQ0FnSUhCdmMybDBhVzl1T2lCaFluTnZiSFYwWlR0Y2NseHVJQ0FnSUhSdmNEb2dNVEF3SlR0Y2NseHVJQ0FnSUhKcFoyaDBPaUFrWTI5dWRISnZiQzFtWldWa1ltRmpheTFoY25KdmR5MXZabVp6WlhRdGNtbG5hSFE3WEhKY2JpQWdJQ0JBYVc1amJIVmtaU0IwY21saGJtZHNaU2hpYjNSMGIyMHNJQ1JqYjI1MGNtOXNMV1psWldSaVlXTnJMV0Z5Y205M0xYTnBlbVVzSUNSamIyNTBjbTlzTFdabFpXUmlZV05yTFdKaFkydG5jbTkxYm1RcE8xeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVMbU52Ym5SeWIyd3VhWE10ZG1Gc2FXUWdQaUF1Wm1WbFpHSmhZMnN1YVhNdGRtRnNhV1FnZTF4eVhHNGdJRUJsZUhSbGJtUWdKV1JwYzNCc1lYa3RZbXh2WTJzN1hISmNibjFjY2x4dVhISmNiaTVqYjI1MGNtOXNMbWx6TFdsdWRtRnNhV1FnUGlBdVptVmxaR0poWTJzdWFYTXRhVzUyWVd4cFpDQjdYSEpjYmlBZ1FHVjRkR1Z1WkNBbFpHbHpjR3hoZVMxaWJHOWphenRjY2x4dWZWeHlYRzVjY2x4dUxtbHpMWFpoYkdsa1lYUmxaQ0F1WTI5dWRISnZiQ0I3WEhKY2JpQWdQaUF1Wm1sc1pUcHlaWEYxYVhKbFpDeGNjbHh1SUNBK0lDNXBibkIxZERweVpYRjFhWEpsWkNCN1hISmNiaUFnSUNBbU9uWmhiR2xrSUg0Z0xtWmxaV1JpWVdOckxtbHpMWFpoYkdsa0lIdGNjbHh1SUNBZ0lDQWdRR1Y0ZEdWdVpDQWxaR2x6Y0d4aGVTMWliRzlqYXp0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQW1PbWx1ZG1Gc2FXUWdmaUF1Wm1WbFpHSmhZMnN1YVhNdGFXNTJZV3hwWkNCN1hISmNiaUFnSUNBZ0lFQmxlSFJsYm1RZ0pXUnBjM0JzWVhrdFlteHZZMnM3WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0ErSUdsdWNIVjBXM1I1Y0dVOVhDSmphR1ZqYTJKdmVGd2lYVHB5WlhGMWFYSmxaQ0I3WEhKY2JpQWdJQ0FtT21Ob1pXTnJaV1FnZmlBdVptVmxaR0poWTJzdWFYTXRkbUZzYVdRZ2UxeHlYRzRnSUNBZ0lDQkFaWGgwWlc1a0lDVmthWE53YkdGNUxXSnNiMk5yTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDWTZibTkwS0RwamFHVmphMlZrS1NCK0lDNW1aV1ZrWW1GamF5NXBjeTFwYm5aaGJHbGtJSHRjY2x4dUlDQWdJQ0FnUUdWNGRHVnVaQ0FsWkdsemNHeGhlUzFpYkc5amF6dGNjbHh1SUNBZ0lIMWNjbHh1SUNCOVhISmNibjFjY2x4dUlpd0tDUWtpTHk5Y2NseHVMeThnUjNKdmRYQmNjbHh1THk5Y2NseHVMeThnVlhObFpDQjBieUJqYjIxaWFXNWxJSFpoY21sdmRYTWdZMjl1ZEhKdmJITWdkRzluWlhSb1pYSmNjbHh1WEhKY2JrQnBaaUFrWjJWdVpYSmhkR1V0WTI5dGNHOXVaVzUwTFdOc1lYTnpaWE1nZTF4eVhHNGdJQzh2SUVkeWIzVndJR0ZrWkc5dWMxeHlYRzRnSUM1aFpHUnZiaUI3WEhKY2JpQWdJQ0JBWlhoMFpXNWtJQ1ZqYjI1MGNtOXNjenRjY2x4dUlDQWdJR1JwYzNCc1lYazZJR1pzWlhnN0lDOHZJRzkyWlhKeWFXUmxJQ1ZqYjI1MGNtOXNjeUJ6ZEhsc1pTQjBieUIxYzJVZ1lXeHBaMjR0YVhSbGJYTmNjbHh1SUNBZ0lIVnpaWEl0YzJWc1pXTjBPaUJoZFhSdk95QXZMeUJoYkd4dmR5QjFjMlZ5SUhSdklITmxiR1ZqZENCMFpYaDBJR2x1YzJsa1pTQmhaR1J2Ymx4eVhHNGdJQ0FnWVd4cFoyNHRhWFJsYlhNNklHTmxiblJsY2pzZ0x5OGdRMlZ1ZEdWeUlHRnNhV2R1SUdOdmJuUmxiblFnYVc0Z1lXUmtiMjVjY2x4dUlDQWdJR0p2Y21SbGNpMWpiMnh2Y2pvZ0pHZHliM1Z3TFdGa1pHOXVMV0p2Y21SbGNtTnZiRzl5TzF4eVhHNGdJQ0FnWW1GamEyZHliM1Z1WkMxamIyeHZjam9nSkdkeWIzVndMV0ZrWkc5dUxXSmhZMnRuY205MWJtUTdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQXZMMXh5WEc0Z0lDOHZJRUpoYzJVZ2MzUjViR1Z6WEhKY2JpQWdMeTljY2x4dUlDQXZMeUJ6ZEhsc1pXeHBiblF0WkdsellXSnNaUzF1WlhoMExXeHBibVVnYm04dFpIVndiR2xqWVhSbExYTmxiR1ZqZEc5eWMxeHlYRzRnSUM1bmNtOTFjQ0I3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNE8xeHlYRzRnSUNBZ1pteGxlQzEzY21Gd09pQjNjbUZ3TzF4eVhHNWNjbHh1SUNBZ0lDWXVhWE10YkdjZ2UxeHlYRzRnSUNBZ0lDQStJQzVoWkdSdmJpeGNjbHh1SUNBZ0lDQWdQaUF1WW5SdUlIdGNjbHh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUFrWjNKdmRYQXRiR2N0Y0dGa1pHbHVaeTE1SUNSbmNtOTFjQzFzWnkxd1lXUmthVzVuTFhnN1hISmNiaUFnSUNBZ0lIMWNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0ErSUM1cGJuQjFkQ3hjY2x4dUlDQWdJRDRnTG1OdmJuUnliMndzWEhKY2JpQWdJQ0ErSUM1aFpHUnZiaXhjY2x4dUlDQWdJRDRnTG1KMGJpQjdYSEpjYmlBZ0lDQWdJRUJwYm1Oc2RXUmxJR2h2ZG1WeUxXWnZZM1Z6SUh0Y2NseHVJQ0FnSUNBZ0lDQjZMV2x1WkdWNE9pQWtaM0p2ZFhBdGFYUmxiWE10YUc5MlpYSXRabTlqZFhNdGVtbHVaR1Y0TzF4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdQaUF1YVc1d2RYUXNYSEpjYmlBZ0lDQStJQzVqYjI1MGNtOXNPbTV2ZENndVlXUmtiMjRwSUh0Y2NseHVJQ0FnSUNBZ1pteGxlRG9nTVNBeElEQWxPeUF2THlCbGVIQmhibVFnZEc4Z2JXRjRJSE53WVdObElHRjJZV2xzWVdKc1pTQjNhWFJvYjNWMElHOTJaWEptYkc5M0lHWnliMjBnWjNKdmRYQmNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FtT201dmRDZ3VhWE10ZVNrZ2UxeHlYRzRnSUNBZ0lDQStJQzVqYjI1MGNtOXNJSHRjY2x4dUlDQWdJQ0FnSUNCQVpYaDBaVzVrSUNWbmNtOTFjQzF0WVhKbmFXNHRlRHRjY2x4dVhISmNiaUFnSUNBZ0lDQWdQaUF1YVc1d2RYUWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ1FHVjRkR1Z1WkNBbFozSnZkWEF0WW05eVpHVnljbUZrYVhWekxUQWdJVzl3ZEdsdmJtRnNPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSmpwbWFYSnpkQzFqYUdsc1pDQStJQzVwYm5CMWREcHViM1FvTG1sekxXMXBiaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdRR1Y0ZEdWdVpDQWxaM0p2ZFhBdFltOXlaR1Z5Y21Ga2FYVnpMV3hsWm5RZ0lXOXdkR2x2Ym1Gc08xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdKanBzWVhOMExXTm9hV3hrSUQ0Z0xtbHVjSFYwT201dmRDZ3VhWE10YldsdUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNCQVpYaDBaVzVrSUNWbmNtOTFjQzFpYjNKa1pYSnlZV1JwZFhNdGNtbG5hSFFnSVc5d2RHbHZibUZzTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ1BpQXVhVzV3ZFhRc1hISmNiaUFnSUNBZ0lENGdMbUZrWkc5dUxGeHlYRzRnSUNBZ0lDQStJQzVpZEc0Z2UxeHlYRzRnSUNBZ0lDQWdJRUJsZUhSbGJtUWdKV2R5YjNWd0xXMWhjbWRwYmkxNE8xeHlYRzRnSUNBZ0lDQWdJRUJsZUhSbGJtUWdKV2R5YjNWd0xXSnZjbVJsY25KaFpHbDFjeTB3SUNGdmNIUnBiMjVoYkR0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnSmpwbWFYSnpkQzFqYUdsc1pEcHViM1FvTG1sekxXMXBiaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdRR1Y0ZEdWdVpDQWxaM0p2ZFhBdFltOXlaR1Z5Y21Ga2FYVnpMV3hsWm5RZ0lXOXdkR2x2Ym1Gc08xeHlYRzRnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdKanBzWVhOMExXTm9hV3hrT201dmRDZ3VhWE10YldsdUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNCQVpYaDBaVzVrSUNWbmNtOTFjQzFpYjNKa1pYSnlZV1JwZFhNdGNtbG5hSFFnSVc5d2RHbHZibUZzTzF4eVhHNGdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNZdWFYTXRlU0I3WEhKY2JpQWdJQ0FnSUQ0Z0xtTnZiblJ5YjJ3Z2UxeHlYRzRnSUNBZ0lDQWdJRUJsZUhSbGJtUWdKV2R5YjNWd0xXMWhjbWRwYmkxNU8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBK0lDNXBibkIxZENCN1hISmNiaUFnSUNBZ0lDQWdJQ0JBWlhoMFpXNWtJQ1ZuY205MWNDMWliM0prWlhKeVlXUnBkWE10TUNBaGIzQjBhVzl1WVd3N1hISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQW1PbVpwY25OMExXTm9hV3hrSUQ0Z0xtbHVjSFYwT201dmRDZ3VhWE10YldsdUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNCQVpYaDBaVzVrSUNWbmNtOTFjQzFpYjNKa1pYSnlZV1JwZFhNdGRHOXdJQ0Z2Y0hScGIyNWhiRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNZNmJHRnpkQzFqYUdsc1pDQStJQzVwYm5CMWREcHViM1FvTG1sekxXMXBiaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdRR1Y0ZEdWdVpDQWxaM0p2ZFhBdFltOXlaR1Z5Y21Ga2FYVnpMV0p2ZEhSdmJTQWhiM0IwYVc5dVlXdzdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0ErSUM1cGJuQjFkQ3hjY2x4dUlDQWdJQ0FnUGlBdVlXUmtiMjRzWEhKY2JpQWdJQ0FnSUQ0Z0xtSjBiaUI3WEhKY2JpQWdJQ0FnSUNBZ1FHVjRkR1Z1WkNBbFozSnZkWEF0YldGeVoybHVMWGs3WEhKY2JpQWdJQ0FnSUNBZ1FHVjRkR1Z1WkNBbFozSnZkWEF0WW05eVpHVnljbUZrYVhWekxUQWdJVzl3ZEdsdmJtRnNPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQW1PbVpwY25OMExXTm9hV3hrT201dmRDZ3VhWE10YldsdUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNCQVpYaDBaVzVrSUNWbmNtOTFjQzFpYjNKa1pYSnlZV1JwZFhNdGRHOXdJQ0Z2Y0hScGIyNWhiRHRjY2x4dUlDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNZNmJHRnpkQzFqYUdsc1pEcHViM1FvTG1sekxXMXBiaWtnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdRR1Y0ZEdWdVpDQWxaM0p2ZFhBdFltOXlaR1Z5Y21Ga2FYVnpMV0p2ZEhSdmJTQWhiM0IwYVc5dVlXdzdYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNCOVhISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdKaTVwY3kxaWIzSmtaWEpzWlhOeklIdGNjbHh1SUNBZ0lDQWdKanB1YjNRb0xtbHpMWGtwSUh0Y2NseHVJQ0FnSUNBZ0lDQStJQzVqYjI1MGNtOXNJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lENGdMbWx1Y0hWMElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1FHVjRkR1Z1WkNBbFozSnZkWEF0WW05eVpHVnlMWGt0TUR0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnUUdWNGRHVnVaQ0FsWjNKdmRYQXRZbTl5WkdWeWNtRmthWFZ6TFRBZ0lXOXdkR2x2Ym1Gc08xeHlYRzRnSUNBZ0lDQWdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnSUNZNlptbHljM1F0WTJocGJHUWdQaUF1YVc1d2RYUWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQkFaWGgwWlc1a0lDVm5jbTkxY0MxaWIzSmtaWEl0YkdWbWRDMHdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDWTZiR0Z6ZEMxamFHbHNaQ0ErSUM1cGJuQjFkQ0I3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRUJsZUhSbGJtUWdKV2R5YjNWd0xXSnZjbVJsY2kxeWFXZG9kQzB3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdmVnh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQWdJQ0FnUGlBdWFXNXdkWFFzWEhKY2JpQWdJQ0FnSUNBZ1BpQXVZV1JrYjI0c1hISmNiaUFnSUNBZ0lDQWdQaUF1WW5SdUlIdGNjbHh1SUNBZ0lDQWdJQ0FnSUVCbGVIUmxibVFnSldkeWIzVndMV0p2Y21SbGNpMTVMVEE3WEhKY2JpQWdJQ0FnSUNBZ0lDQkFaWGgwWlc1a0lDVm5jbTkxY0MxaWIzSmtaWEp5WVdScGRYTXRNQ0FoYjNCMGFXOXVZV3c3WEhKY2JseHlYRzRnSUNBZ0lDQWdJQ0FnSmpwbWFYSnpkQzFqYUdsc1pDQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lFQmxlSFJsYm1RZ0pXZHliM1Z3TFdKdmNtUmxjaTFzWldaMExUQTdYSEpjYmlBZ0lDQWdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FnSUNBZ0pqcHNZWE4wTFdOb2FXeGtJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdRR1Y0ZEdWdVpDQWxaM0p2ZFhBdFltOXlaR1Z5TFhKcFoyaDBMVEE3WEhKY2JpQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnZlZ4eVhHNGdJQ0FnSUNCOVhISmNibHh5WEc0Z0lDQWdJQ0FtTG1sekxYa2dlMXh5WEc0Z0lDQWdJQ0FnSUQ0Z0xtTnZiblJ5YjJ3Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnUGlBdWFXNXdkWFFnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JBWlhoMFpXNWtJQ1ZuY205MWNDMWliM0prWlhJdGVDMHdPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQkFaWGgwWlc1a0lDVm5jbTkxY0MxaWIzSmtaWEp5WVdScGRYTXRNQ0FoYjNCMGFXOXVZV3c3WEhKY2JpQWdJQ0FnSUNBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSUNBZ0lDQWdKanBtYVhKemRDMWphR2xzWkNBK0lDNXBibkIxZENCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUVCbGVIUmxibVFnSldkeWIzVndMV0p2Y21SbGNpMTBiM0F0TUR0Y2NseHVJQ0FnSUNBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDQWdJQ0FtT214aGMzUXRZMmhwYkdRZ1BpQXVhVzV3ZFhRZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCQVpYaDBaVzVrSUNWbmNtOTFjQzFpYjNKa1pYSXRZbTkwZEc5dExUQTdYSEpjYmlBZ0lDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQStJQzVwYm5CMWRDeGNjbHh1SUNBZ0lDQWdJQ0ErSUM1aFpHUnZiaXhjY2x4dUlDQWdJQ0FnSUNBK0lDNWlkRzRnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdRR1Y0ZEdWdVpDQWxaM0p2ZFhBdFltOXlaR1Z5TFhndE1EdGNjbHh1SUNBZ0lDQWdJQ0FnSUVCbGVIUmxibVFnSldkeWIzVndMV0p2Y21SbGNuSmhaR2wxY3kwd0lDRnZjSFJwYjI1aGJEdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQW1PbVpwY25OMExXTm9hV3hrSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnUUdWNGRHVnVaQ0FsWjNKdmRYQXRZbTl5WkdWeUxYUnZjQzB3TzF4eVhHNGdJQ0FnSUNBZ0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdJQ1k2YkdGemRDMWphR2xzWkNCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUVCbGVIUmxibVFnSldkeWIzVndMV0p2Y21SbGNpMWliM1IwYjIwdE1EdGNjbHh1SUNBZ0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzVuY205MWNDNWlkWFIwYjI1eklIdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHbHViR2x1WlMxbWJHVjRPeUF2THlCdmRtVnljbWxrWlNCa2FYTndiR0Y1SUhCeWIzQmxjblI1SUdadmNpQmlkWFIwYjI1eklHZHliM1Z3WEhKY2JpQWdmVnh5WEc1OVhISmNiaUlzQ2drSklpOHZYSEpjYmk4dklFVnRZbVZrWEhKY2JpOHZYSEpjYmx4eVhHNUFhV1lnSkdkbGJtVnlZWFJsTFdOdmJYQnZibVZ1ZEMxamJHRnpjMlZ6SUh0Y2NseHVJQ0F2TDF4eVhHNGdJQzh2SUVSdll5QTZJR0ZrWkNCRWIyTmNjbHh1SUNBdkwxeHlYRzVjY2x4dUlDQXVaVzFpWldRZ2UxeHlYRzRnSUNBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHlYRzRnSUNBZ1pHbHpjR3hoZVRvZ1lteHZZMnM3WEhKY2JpQWdJQ0J2ZG1WeVpteHZkem9nYUdsa1pHVnVPMXh5WEc0Z0lDQWdkMmxrZEdnNklERXdNQ1U3WEhKY2JpQWdJQ0J3WVdSa2FXNW5PaUF3TzF4eVhHNWNjbHh1SUNBZ0lFQnBibU5zZFdSbElHSmxabTl5WlNCN1hISmNiaUFnSUNBZ0lHTnZiblJsYm5RNklGd2lYQ0k3WEhKY2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdKc2IyTnJPMXh5WEc0Z0lDQWdJQ0FrUlUxQ1JVUXRVa0ZVU1U4dFJFVkdRVlZNVkRvZ2JXRndMV2RsZENna1lYTndaV04wTFhKaGRHbHZjeXdnSkdWdFltVmtMWEpoZEdsdkxXUmxabUYxYkhRcE95QXZMeUJuWlhRZ1pHVm1ZWFZzZENCbGJXSmxaQ0J5WVhScGJ5Qm1jbTl0SUcxaGNDQWtZWE53WldOMExYSmhkR2x2WEhKY2JpQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQndaWEpqWlc1MFlXZGxLRzFoY0MxblpYUW9KRVZOUWtWRUxWSkJWRWxQTFVSRlJrRlZURlFzSUhncElDOGdiV0Z3TFdkbGRDZ2tSVTFDUlVRdFVrRlVTVTh0UkVWR1FWVk1WQ3dnZVNrcE95QXZMeUJuWlhRZ1kyOHRiM0prYVc1aGRHVnpJRzltSUdSbFptRjFiSFFnWlcxaVpXUWdjbUYwYVc5Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JseHlYRzRnSUM1bGJXSmxaQzFwZEdWdElIdGNjbHh1SUNBZ0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNjbHh1SUNBZ0lIUnZjRG9nTUR0Y2NseHVJQ0FnSUdKdmRIUnZiVG9nTUR0Y2NseHVJQ0FnSUd4bFpuUTZJREE3WEhKY2JpQWdJQ0IzYVdSMGFEb2dNVEF3SlR0Y2NseHVJQ0FnSUdobGFXZG9kRG9nTVRBd0pUdGNjbHh1SUNBZ0lHSnZjbVJsY2pvZ01EdGNjbHh1SUNCOVhISmNibHh5WEc0Z0lDUkJVMUJGUTFRdFVrRlVTVTlUT2lCdFlYQXRjbVZ0YjNabEtDUmhjM0JsWTNRdGNtRjBhVzl6TENBa1pXMWlaV1F0Y21GMGFXOHRaR1ZtWVhWc2RDazdJQzh2SUhKbGJXOTJaU0JrWldaaGRXeDBJR1Z0WW1Wa0xYSmhkR2x2SUdGeklHbDBjeUJoYkhKbFlXUjVJSE5sZENCdmJpQmxiV0psWkZ4eVhHNGdJRUJsWVdOb0lDUnJaWGtzSUNSeVlYUnBieUJwYmlBa1FWTlFSVU5VTFZKQlZFbFBVeUI3WEhKY2JpQWdJQ0F1WlcxaVpXUXVhWE10STNza2EyVjVmU0I3WEhKY2JpQWdJQ0FnSUVCcGJtTnNkV1JsSUdKbFptOXlaU0I3WEhKY2JpQWdJQ0FnSUNBZ2NHRmtaR2x1WnkxMGIzQTZJSEJsY21ObGJuUmhaMlVvYldGd0xXZGxkQ2drY21GMGFXOHNJSGtwSUM4Z2JXRndMV2RsZENna2NtRjBhVzhzSUhncEtUdGNjbHh1SUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNGlMQW9KQ1NJdkwxeHlYRzR2THlCQ2NtVmhaR055ZFcxaVhISmNiaTh2WEhKY2JseHlYRzVBYVdZZ0pHZGxibVZ5WVhSbExXTnZiWEJ2Ym1WdWRDMWpiR0Z6YzJWeklIdGNjbHh1SUNBdkwxeHlYRzRnSUM4dklFSmhjMlVnYzNSNWJHVnpYSEpjYmlBZ0x5OWNjbHh1WEhKY2JpQWdMbUp5WldGa1kzSjFiV0lnZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNBZ0lHeHBjM1F0YzNSNWJHVTZJRzV2Ym1VN1hISmNiaUFnSUNCbWJHVjRMWGR5WVhBNklIZHlZWEE3WEhKY2JpQWdJQ0J3WVdSa2FXNW5PaUFrWW5KbFlXUmpjblZ0WWkxd1lXUmthVzVuTFhrZ0pHSnlaV0ZrWTNKMWJXSXRjR0ZrWkdsdVp5MTRPMXh5WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ0pHSnlaV0ZrWTNKMWJXSXRiV0Z5WjJsdVltOTBkRzl0TzF4eVhHNGdJQ0FnUUdsdVkyeDFaR1VnWm05dWRITnBlbVVvS1R0Y2NseHVYSEpjYmlBZ0lDQmhJSHRjY2x4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnYUc5MlpYSWdlMXh5WEc0Z0lDQWdJQ0FnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNjbHh1SUNBZ0lDQWdmVnh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMbUp5WldGa1kzSjFiV0l0YVhSbGJTQjdYSEpjYmlBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBa1luSmxZV1JqY25WdFlpMXBkR1Z0TFhCaFpHUnBibWN0ZUR0Y2NseHVYSEpjYmlBZ0lDQW1PbTV2ZENnNlptbHljM1F0WTJocGJHUXBJSHRjY2x4dUlDQWdJQ0FnUUdsdVkyeDFaR1VnWW1WbWIzSmxJSHRjY2x4dUlDQWdJQ0FnSUNCamIyNTBaVzUwT2lCeGRXOTBaU2drWW5KbFlXUmpjblZ0WWkxa2FYWnBaR1Z5S1R0Y2NseHVJQ0FnSUNBZ0lDQndZV1JrYVc1bkxYSnBaMmgwT2lBa1luSmxZV1JqY25WdFlpMXBkR1Z0TFhCaFpHUnBibWN0ZUNBdklESTdYSEpjYmlBZ0lDQWdJQ0FnWTI5c2IzSTZJQ1JpY21WaFpHTnlkVzFpTFdScGRtbGtaWEl0WTI5c2IzSTdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNCQWFXNWpiSFZrWlNCaFkzUnBkbVVnZTF4eVhHNGdJQ0FnSUNCamIyeHZjam9nSkdKeVpXRmtZM0oxYldJdFlXTjBhWFpsTFdOdmJHOXlPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNaYlpHRjBZUzF6WlhCaGNtRjBiM0pkSUh0Y2NseHVJQ0FnSUNBZ0pqcHViM1FvT21acGNuTjBMV05vYVd4a0tTQjdYSEpjYmlBZ0lDQWdJQ0FnUUdsdVkyeDFaR1VnWW1WbWIzSmxJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lHTnZiblJsYm5RNklHRjBkSElvWkdGMFlTMXpaWEJoY21GMGIzSXBPMXh5WEc0Z0lDQWdJQ0FnSUgxY2NseHVJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVmVnh5WEc0aUNnbGRMQW9KSW01aGJXVnpJam9nVzEwc0Nna2liV0Z3Y0dsdVozTWlPaUFpTzBGQlFVRTdPenM3TzBWQlMwVTdRVFpHZFVOR0xFRmlOVU5CTEdsQ1lUUkRhVUlzUVVGaFpDeFBRVUZQTEVkQlFVY3NTMEZCU3l4RlFYZEViRUlzVTBGQlV5eEJRVUZCTEZOQlFWTXNRMEZGYUVJc1UwRkJVeXhCZWtSMlJsSXNUVUZCVFN4SGVVUjVSa1FzUzBGQlN5eEZRVXBpTEZOQlFWTXNRVUZCUVN4VFFVRlRMRU5CUldoQ0xGTkJRVk1zUVhwRWRFWlNMRTFCUVUwc1IzbEVkMFpFTEV0QlFVc3NSVUZLWWl4VFFVRlRMRUZCUVVFc1UwRkJVeXhCZWtSeVJtWXNUVUZCVFN4SGVVUjNSMGdzUzBGQlN5eEZRVzVDV0N4VFFVRlRMRUZCUVVFc1UwRkJVeXhCZWtSd1JtWXNUVUZCVFN4SGVVUjFSMGdzUzBGQlN5eEZSUzlJVkN4TFFVRkxMRWRCUjBRc1JVRkJSU3hGUVV0T0xFdEJRVXNzUVVGQlFTeFZRVUZWTEVWRE1rSnFRaXhSUVVGUkxFRkJRVUVzVTBGQlV5eEhRVUZITEZOQlFWTXNRVUZCUVN4VFFVRlRMRVZCU1hSRExGRkJRVkVzUVVGQlFTeFhRVUZYTEVkQlFVY3NVMEZCVXl4QlFVRkJMRmRCUVZjc1JVRkpNVU1zWVVGQllTeERRVUZETEZGQlFWRXNSMEZEYkVJc1MwRkJTeXhCUVVGQkxGTkJRVk1zUVVGRllpeE5RVUZOTEVkQlFVY3NVMEZCVXl4QlFVRkJMRk5CUVZNN1FVRklhRU1zWVVGQllTeERRVUZETEZGQlFWRXNSMEZGYkVJc1RVRkJUU3hCUVVGQkxGTkJRVk1zUVVGRFpDeE5RVUZOTEVkQlFVY3NVMEZCVXl4QlFVRkJMRk5CUVZNc1JVRklhRU1zWVVGQllTeERRVUZETEZGQlFWRXNSMEZEYkVJc1MwRkJTeXhCUVVGQkxGTkJRVk1zUVVGTllpeFJRVUZSTEVkQlFVY3NVMEZCVXl4QlFVRkJMRmRCUVZjN1FVRlFjRU1zWVVGQllTeERRVUZETEZGQlFWRXNSMEZGYkVJc1RVRkJUU3hCUVVGQkxGTkJRVk1zUVVGTFpDeFJRVUZSTEVkQlFVY3NVMEZCVXl4QlFVRkJMRmRCUVZjc1JVRlFjRU1zWVVGQllTeERRVUZETEZGQlFWRXNSMEZaYkVJc1MwRkJTeXhEUVVGQkxFRkJRVUVzU1VGQlF5eERRVUZMTEZWQlFWVXNRVUZCWml4RFFVRm5RaXhUUVVGVExFRkJRemxDTEZGQlFWRXNSMEZCUnl4VFFVRlRMRUZCUVVFc1UwRkJVeXhGUVdKc1F5eGhRVUZoTEVOQlFVTXNVVUZCVVN4SFFWbHNRaXhMUVVGTExFTkJRVUVzUVVGQlFTeEpRVUZETEVOQlFVc3NWVUZCVlN4QlFVRm1MRU5CUVdkQ0xGTkJRVk1zUVVGTE9VSXNTVUZCU3l4RFFVRkJMRkZCUVZFc1NVRkJTU3hUUVVGVExFRkJRVUVzVjBGQlZ5eERhRUpxUlROQ08wVkJRMklzVDBGQlR5eEZRVUZGTEV0QlFVczdRMEZEWmpzN1FXRkZSQ3hCWWtGQkxGTmhRVk1zUlVWVFVDeExRVUZMTEVGQlFVRXNWVUZCVlN4SFFVZFlMRVZCUVVVc1EyWmFZVHRGUVVOdVFpeFBRVUZQTEVWQlFVVXNXVUZCV1R0RFFVTjBRanM3UVdGR1JDeEJZblZFUVN4VFlYWkVVeXhEWW5WRVZUdEZRVU5xUWl4UlFVRlJMRVZCUVVVc1VVRkJVVHREUVVOdVFqczdRVTF3UkVNc1FVNHdSRVlzU1UweFJFMHNRV3hFYTBoR0xFbEJRVXNzUlVGQlFTeEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFVRlZMRWxCUVVzc1EwRkJRU3hUUVVGVExFZDNSRFZIYkVNc1ZVRkJWU3hCZUVRMFIwNHNTVUZCU3l4RlFVRkJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJRVlVzU1VGQlN5eERRVUZCTEZOQlFWTXNSVFJEZUVSc1FqdEZRVU5rTEUxQlFVMHNSVUZCUlN4UFFVRlBPME5CUTJoQ096dEJRMjVGUXl4TlFVRk5MRVZCUVVVc2MwSkJRWE5DTEVWQlFVVXNUVUZCVFR0RlQwTjRReXhCVUVaQkxGRlBSVkVzUjBGRFNpeE5RVUZOTEVkT01rVk9MRTFCUVUwc1FUZERkRVZRTEZGQlFWRXNSVzlFVGxnc1VVRkJVU3hIUVVOS0xGTkJRVk1zUjFBeVJWUXNUVUZCVFN4Qk4wTjBSVkFzVVVGQlVTeEZjMFJPV0N4UlFVRlJMRWRCUTBvc1QwRkJUeXhIVkRKRlVDeE5RVUZOTEVFM1EzUkZVQ3hSUVVGUkxFVm5SRVpZTEUxQlFVMHNSVU5GU2l4SlFVRkpMRVZKVEU0c1RVRkJUU3hGUlZkT0xGVkJRVlVzUlV0U1VpeE5RVUZOTEVWYWEwaFNMRkZCUVZFc1FVRjNRa3dzYlVKQlFXMUNMRWRCUVVjc1RVRkJUU3hEUVVGQkxFRkJRVUVzVjBGQlF5eERRVUZaTEVkQlFVY3NRVUZCWml4SlFVTXhRaXhOUVVGTkxFVkRMMEpXTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZxUkRGSFZpeFJRVUZSTEVWeFJFeFlMRTFCUVUwc1FVRnZRa2dzYzBKQlFYTkNMRVZCY0VKNlFpeE5RVUZOTEVGQmQwSklMR3RDUVVGclFpeEZRWGhDY2tJc1RVRkJUU3hCUVRSQ1NDeFhRVUZYTEVWQk5VSmtMRTFCUVUwc1FVRnJSRWdzYTBKQlFXdENMRVZCYkVSeVFpeE5RVUZOTEVGQmMwUklMQ3RDUVVFclFpeEZRWFJFYkVNc1RVRkJUU3hCUVRCRVNDeFhRVUZYTEVWRE0wUmtMRkZCUVZFc1IwRkRTaXhQUVVGUExFZEJZVXdzVFVGQlRTeEJkRVJCVkN4UFFVRlBMRVYxUkVaV0xGVkJRVlVzUVhaRVRsQXNVVUZCVVN4RmRVUk5XQ3hWUVVGVkxFRjRSR2RFVUN4TlFVRk5MRUYzUkRGQ1RpeEpRVUZMTEVOQlFVRXNUMEZCVHl4RGRrUTFRbG9zVVVGQlVTeEZkVVJOV0N4VlFVRlZMRUZCYzBKUUxFbEJRVXNzUTBGQlFTeFBRVUZQTEVONFJESkNXaXhOUVVGTkxFRkRka1JPTEZGQlFWRXNSWFZFVFZnc1ZVRkJWU3hCZUVSclJGQXNUVUZCVFN4QmQwUTFRazRzU1VGQlN5eERRVUZCTEU5QlFVOHNRM1pFTlVKYUxGRkJRVkVzUlhWRVRWZ3NWVUZCVlN4QlFYTkNVQ3hKUVVGTExFTkJRVUVzVDBGQlR5eERlRVEyUWxvc1RVRkJUU3hCUTNwRVRpeFJRVUZSTEVNMFExSmhPMGxCUjNCQ0xGVkJRVlVzUlVGQlJTeEpRVUZKTzBkQlJXNUNPenM3UVU5SVJDeEJUa2RCTEZGTlNGRXNSMEZEU2l4TlFVRk5MRWRPTWtWT0xFMUJRVTBzUVRkRGRFVlFMRkZCUVZFc1JXOUVUbGdzVVVGQlVTeEhRVU5LTEZOQlFWTXNSMUF5UlZRc1RVRkJUU3hCTjBOMFJWQXNVVUZCVVN4RmMwUk9XQ3hSUVVGUkxFZEJRMG9zVDBGQlR5eEhWREpGVUN4TlFVRk5MRUUzUTNSRlVDeFJRVUZSTEVWblJFWllMRTFCUVUwc1JVTkZTaXhKUVVGSkxFVkpURTRzVFVGQlRTeEZSVmRPTEZWQlFWVXNSVXRTVWl4TlFVRk5MRU5tUkVVN1JVRkRVaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4UFFVRlBMRVZCUVVVc1dVRkJXVHRGUVVOeVFpeFhRVUZYTEVWQlFVVXNTVUZCU1R0RlFVTnFRaXhQUVVGUExFVnFRalJDZVVNc1QwRkJkVUlzUTBGcVFuWkNMRTFCUVVzN1JXbENWbkpFTEUxQlFVMHNSVGxDUmpCQ0xFZEJRVWNzUXpoQ1JVd3NTMEZCU3l4RGFrSlRZU3hYUVVGWE8wVnBRbEl6UkN4aFFVRmhMRVU1UWtGdFFpeE5RVUZMTzBVNFFrTnlReXhMUVVGTExFVXZRbmREVlN4UFFVRmxPMFVyUW5aRE9VSXNaMEpCUVdkQ0xFVnFRa3RuUXl4WFFVRlhPMFZwUWtvelJDeGpRVUZqTEVWQlFVVXNUVUZCVFR0RlFVTjBRaXhsUVVGbExFVkJRVVVzU1VGQlNUdEZRVVZ5UWl4WFFVRlhMRVY0UW1sQ2FVSXNSMEZCUnp0RmQwSm9RaTlDTEZkQlFWY3NSWGhDYjBKcFFpeEhRVUZITzBVeFFtWTNRaXhUUVVGVExFVkJRVU1zU1VGQlF6dEZUVlpZTEZWQlFWVXNSV0pWYTBJc1owaEJRU3RFTzBONVJFWTVSanM3UVUxdVFrUXNRWEJFWjBKRkxGRnZSR2hDVFN4SFFVTktMRTFCUVUwc1IwNHlSVTRzVFVGQlRTeEJPVU0xUkU0c1NVRkJTeXhGUVhkSFFTeEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFYaEhWU3hKUVVGTExFTkJkMGRCTEZOQlFWTXNRMEY0UjBNc1QwRkJUeXhCUTFaMlF5eFJRVUZSTEVWdlJFNVlMRkZCUVZFc1IwRkRTaXhUUVVGVExFZFFNa1ZVTEUxQlFVMHNRVGxETlVST0xFbEJRVXNzUlVGM1IwRXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjRSMVVzU1VGQlN5eERRWGRIUVN4VFFVRlRMRU5CZUVkRExFOUJRVThzUVVOV2RrTXNVVUZCVVN4RmMwUk9XQ3hSUVVGUkxFZEJRMG9zVDBGQlR5eEhWREpGVUN4TlFVRk5MRUU1UXpWRVRpeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVGRFZuWkRMRkZCUVZFc1JXZEVSbGdzVFVGQlRTeEJha1JaUml4SlFVRkxMRVZCZDBkQkxFRkJRVUVzVVVGQlF5eEJRVUZCTEVWQmVFZFZMRWxCUVVzc1EwRjNSMEVzVTBGQlV5eERRWGhIUXl4UFFVRlBMRVZyUkZaNFF5eEpRVUZKTEVGc1JGVkdMRWxCUVVzc1JVRjNSMEVzUVVGQlFTeFJRVUZETEVGQlFVRXNSVUY0UjFVc1NVRkJTeXhEUVhkSFFTeFRRVUZUTEVOQmVFZERMRTlCUVU4c1JXOUVhRUl4UXl4UlFVRlJMRWRCUTBvc1RVRkJUU3hIVGpKRlRpeE5RVUZOTEVFNVF6TkVVQ3hKUVVGTExFVkJkVWRETEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCZGtkVExFbEJRVXNzUTBGMVIwTXNVMEZCVXl4RFFYWkhRU3hQUVVGUExFRkRXSFJETEZGQlFWRXNSVzlFVGxnc1VVRkJVU3hIUVVOS0xGTkJRVk1zUjFBeVJWUXNUVUZCVFN4Qk9VTXpSRkFzU1VGQlN5eEZRWFZIUXl4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhaSFV5eEpRVUZMTEVOQmRVZERMRk5CUVZNc1EwRjJSMEVzVDBGQlR5eEJRMWgwUXl4UlFVRlJMRVZ6UkU1WUxGRkJRVkVzUjBGRFNpeFBRVUZQTEVkVU1rVlFMRTFCUVUwc1FUbERNMFJRTEVsQlFVc3NSVUYxUjBNc1FVRkJRU3hSUVVGRExFRkJRVUVzUlVGMlIxTXNTVUZCU3l4RFFYVkhReXhUUVVGVExFTkJka2RCTEU5QlFVOHNRVU5ZZEVNc1VVRkJVU3hGWjBSR1dDeE5RVUZOTEVGcVJHRklMRWxCUVVzc1JVRjFSME1zUVVGQlFTeFJRVUZETEVGQlFVRXNSVUYyUjFNc1NVRkJTeXhEUVhWSFF5eFRRVUZUTEVOQmRrZEJMRTlCUVU4c1JXdEVXSFpETEVsQlFVa3NRV3hFVjBnc1NVRkJTeXhGUVhWSFF5eEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFYWkhVeXhKUVVGTExFTkJkVWRETEZOQlFWTXNRMEYyUjBFc1QwRkJUeXhEUVVGRE8wVkZaWEJETEZOQlFWTXNSVUZCUlN4SlFVRkpPMFUwUTA1cVFpeFZRVUZWTEVWQlFXRXNTVUZCU1R0RE9VTlFOVUk3TzBGdlJHNUNTQ3hCY0VSNVFrVXNVVzlFZWtKTkxFZEJRMG9zVFVGQlRTeEhjRVIzUWxBc1RVRkJUU3hCT0VOdFJFd3NUVUZCVFN4Qk4wTjBSVkFzVVVGQlVTeEZiMFJPV0N4UlFVRlJMRWRCUTBvc1UwRkJVeXhIY2tSM1FsWXNUVUZCVFN4Qk9FTnRSRXdzVFVGQlRTeEJOME4wUlZBc1VVRkJVU3hGYzBST1dDeFJRVUZSTEVkQlEwb3NUMEZCVHl4SGRrUjNRbElzVFVGQlRTeEJPRU50UkV3c1RVRkJUU3hCTjBOMFJWQXNVVUZCVVN4RlJHMUNVaXhOUVVGTkxFRnJSRzVDVUN4SlFVRkpMRVZGVGs0c1VVRkJVU3hIUVVOS0xFMUJRVTBzUjA0eVJVNHNUVUZCVFN4Qk9VTnNSRkFzVFVGQlRTeEJRM0JDVGl4UlFVRlJMRVZ2UkU1WUxGRkJRVkVzUjBGRFNpeFRRVUZUTEVkUU1rVlVMRTFCUVUwc1FUbERiRVJRTEUxQlFVMHNRVU53UWs0c1VVRkJVU3hGYzBST1dDeFJRVUZSTEVkQlEwb3NUMEZCVHl4SFZESkZVQ3hOUVVGTkxFRTVRMnhFVUN4TlFVRk5MRUZEY0VKT0xGRkJRVkVzUldsRVFWUXNTVUZCU1N4QmJFUnZRa2dzVFVGQlRTeERRVUZETzBVNFExRk9MRlZCUVZVc1JYaEVRMGNzYTBOQlFUaENPME5WVURWRE96dEJiMFExUWtnc1FYQkViVVJGTEZGdlJHNUVUU3hIUVVOS0xFMUJRVTBzUjNCRWEwUk9MRTFCUVUwc1FUaERlVUpPTEUxQlFVMHNRVGREZEVWUUxGRkJRVkVzUlc5RVRsZ3NVVUZCVVN4SFFVTktMRk5CUVZNc1IzSkVhMFJVTEUxQlFVMHNRVGhEZVVKT0xFMUJRVTBzUVRkRGRFVlFMRkZCUVZFc1JYTkVUbGdzVVVGQlVTeEhRVU5LTEU5QlFVOHNSM1pFYTBSUUxFMUJRVTBzUVRoRGVVSk9MRTFCUVUwc1FUZERkRVZRTEZGQlFWRXNSVVEyUTFBc1RVRkJUU3hCYVVRdlExWXNUVUZCVFN4RmFrUXJRMFlzVFVGQlRTeEJhMFEzUTFJc1NVRkJTU3hGUlU1T0xGRkJRVkVzUjBGRFNpeE5RVUZOTEVkT01rVk9MRTFCUVUwc1FUbERlRUpRTEUxQlFVMHNRVU01UTA0c1VVRkJVU3hGYjBST1dDeFJRVUZSTEVkQlEwb3NVMEZCVXl4SFVESkZWQ3hOUVVGTkxFRTVRM2hDVUN4TlFVRk5MRUZET1VOT0xGRkJRVkVzUlhORVRsZ3NVVUZCVVN4SFFVTktMRTlCUVU4c1IxUXlSVkFzVFVGQlRTeEJPVU40UWxBc1RVRkJUU3hCUXpsRFRpeFJRVUZSTEVWblJFWllMRTFCUVUwc1FXcEVaMFJJTEUxQlFVMHNSV3RFT1VOUUxFbEJRVWtzUVd4RU9FTklMRTFCUVUwc1EwRkJRenRGUldoQ1NpeFRRVUZUTEVVMFEwMVJMRTFCUVUwc1F6VkRZazBzUlVGQlJTeERRVUZoTEZGQlFWRXNRMEZCSzBJc1NVRkJTVHRGTkVOamVrWXNUMEZCVHl4RlFVRkZMRU5CUVVNN1F6bERWMWc3TzBGRlFVc3NWVUZCVlN4RFFVRldMRTFCUVZVN1JVRkRVaXhKUVVGSk8wbEJRVWNzVlVGQlZTeEZRVUZETEc5Q1FVRkRPenRGUVVOdVFpeEhRVUZITzBsQlFVY3NWVUZCVlN4RlFVRkRMSGRDUVVGRE96dEZRVU5zUWl4SFFVRkhPMGxCUVVjc1ZVRkJWU3hGUVVGRExFbEJRVU03T3pzN1FXdEVla1ExUWl4QmJrUk5SU3hSYlVST1RTeEhRVU5LTEUxQlFVMHNRWEJFWlU0c1NVRkJTeXhGUVhkSFFTeEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFYaEhWU3hKUVVGTExFTkJkMGRCTEZOQlFWTXNRMEY0UjBNc1QwRkJUeXhIT0VOdFEzQkRMRTFCUVUwc1FUZEROME5VTEZGQlFWRXNSVzlFVGxnc1VVRkJVU3hIUVVOS0xGTkJRVk1zUVhKRVpWUXNTVUZCU3l4RlFYZEhRU3hCUVVGQkxGRkJRVU1zUVVGQlFTeEZRWGhIVlN4SlFVRkxMRU5CZDBkQkxGTkJRVk1zUTBGNFIwTXNUMEZCVHl4SE9FTnRRM0JETEUxQlFVMHNRVGRETjBOVUxGRkJRVkVzUlhORVRsZ3NVVUZCVVN4SFFVTktMRTlCUVU4c1FYWkVaVkFzU1VGQlN5eEZRWGRIUVN4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhoSFZTeEpRVUZMTEVOQmQwZEJMRk5CUVZNc1EwRjRSME1zVDBGQlR5eEhPRU50UTNCRExFMUJRVTBzUVRkRE4wTlVMRkZCUVZFc1JXMUVUbGdzVVVGQlVTeEhRVU5LTEUxQlFVMHNRWEJFWjBKUUxFbEJRVXNzUlVGMVIwTXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjJSMU1zU1VGQlN5eERRWFZIUXl4VFFVRlRMRU5CZGtkQkxFOUJRVThzUnpoRGEwTnVReXhOUVVGTkxFRTNRemREVkN4UlFVRlJMRVZ2UkU1WUxGRkJRVkVzUjBGRFNpeFRRVUZUTEVGeVJHZENWaXhKUVVGTExFVkJkVWRETEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCZGtkVExFbEJRVXNzUTBGMVIwTXNVMEZCVXl4RFFYWkhRU3hQUVVGUExFYzRRMnREYmtNc1RVRkJUU3hCTjBNM1ExUXNVVUZCVVN4RmMwUk9XQ3hSUVVGUkxFZEJRMG9zVDBGQlR5eEJka1JuUWxJc1NVRkJTeXhGUVhWSFF5eEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFYWkhVeXhKUVVGTExFTkJkVWRETEZOQlFWTXNRMEYyUjBFc1QwRkJUeXhIT0VOclEyNURMRTFCUVUwc1FUZEROME5VTEZGQlFWRXNRMEZCUXp0Rk5rTXJRMG9zVDBGQlR5eEZRVUZGTEVWQlFVVTdRemRETjBOb1FqczdRVzFFVWtnc1FXNUVUVVVzVVcxRVRrMHNSMEZEU2l4TlFVRk5MRUZPZVVSUUxGRkJRVkVzUjBGRFRDeE5RVUZOTEVFM1EzSkVWQ3hSUVVGUkxFVnZSRTVZTEZGQlFWRXNSMEZEU2l4VFFVRlRMRUZRZVVSV0xGRkJRVkVzUjBGRFRDeE5RVUZOTEVFM1EzSkVWQ3hSUVVGUkxFVnpSRTVZTEZGQlFWRXNSMEZEU2l4UFFVRlBMRUZVZVVSU0xGRkJRVkVzUjBGRFRDeE5RVUZOTEVFM1EzSkVWQ3hSUVVGUkxFTkJRVU03UlRaRGRVUktMRmxCUVZrc1JVRkJSU3haUVVGWk8wVkJRekZDTEZWQlFWVXNSVUZCUlN4WlFVRlpPMFUxUXpsQ01VSXNVMEZCVXl4RlFVRkZMRWxCUVVrN1EwUjRRbXhDT3p0QmJVUlNTQ3hCYmtSTlJTeFJiVVJPVFN4SGNFUnRSRW9zVFVGQlRTeEJiMFJzUkU0c1RVRkJUU3hIVG05RlNpeE5RVUZOTEVFM1F5OUVWQ3hSUVVGUkxFVnZSRTVZTEZGQlFWRXNSM0pFYlVSS0xFMUJRVTBzUVhGRWJFUk9MRk5CUVZNc1IxQnZSVkFzVFVGQlRTeEJOME12UkZRc1VVRkJVU3hGYzBST1dDeFJRVUZSTEVkMlJHMUVTaXhOUVVGTkxFRjFSR3hFVGl4UFFVRlBMRWRVYjBWTUxFMUJRVTBzUVRkREwwUlVMRkZCUVZFc1JXMUVUbGdzVVVGQlVTeEhRVU5LTEUxQlFVMHNRWEJFYlVSUUxFMUJRVTBzUnpoRGFVSklMRTFCUVUwc1FUZERMMFJVTEZGQlFWRXNSVzlFVGxnc1VVRkJVU3hIUVVOS0xGTkJRVk1zUVhKRWJVUldMRTFCUVUwc1J6aERhVUpJTEUxQlFVMHNRVGRETDBSVUxGRkJRVkVzUlhORVRsZ3NVVUZCVVN4SFFVTktMRTlCUVU4c1FYWkViVVJTTEUxQlFVMHNSemhEYVVKSUxFMUJRVTBzUVRkREwwUlVMRkZCUVZFc1EwRkJRenRGUXpoQ1RpeFRRVUZUTEVVMFEyMURXU3hOUVVGTkxFTTFRekZEUlN4RlFVRkZMRU5CUVdFc1VVRkJVU3hEUVVFclFpeEpRVUZKTzBORWNrSXhSanM3UVcxRVVrZ3NRVTQwUlVVc1VVMDFSVTBzUjBGRFNpeE5RVUZOTEVkT01rVk9MRTFCUVUwc1JVODFSVllzVVVGQlVTeEhRVU5LTEZOQlFWTXNSMUF5UlZRc1RVRkJUU3hGVXpWRlZpeFJRVUZSTEVkQlEwb3NUMEZCVHl4SFZESkZVQ3hOUVVGTkxFTkJRVU03UlVGRFVDeFJRVUZSTEVWQlFVVXNVVUZCVVR0RlFVTnNRaXhOUVVGTkxFVkJRVVVzVDBGQlR6dEZRVU5tTEZsQlFWa3NSV3BDZWtOclF5eFRRVUZwUXp0RmFVSXdReTlGTEdGQlFXRXNSVUZCUlN4RFFVRkRPME5CZVVKcVFqczdRVTE2UjBnc1FVNXJSa2tzVVUxc1Jra3NSMEZEU2l4TlFVRk5MRWRPTWtWT0xFMUJRVTBzUTBGTlRpeEpRVUZMTEVOQlFVRXNUVUZCVFN4SFQyeEdaaXhSUVVGUkxFZEJRMG9zVTBGQlV5eEhVREpGVkN4TlFVRk5MRU5CVFU0c1NVRkJTeXhEUVVGQkxFMUJRVTBzUjFOc1JtWXNVVUZCVVN4SFFVTktMRTlCUVU4c1IxUXlSVkFzVFVGQlRTeERRVTFPTEVsQlFVc3NRMEZCUVN4TlFVRk5MRVZCUVVVN1JVRkRXQ3hoUVVGaExFVkJRVVVzUzBGQlN6dEZRVU53UWl4WlFVRlpMRVZxUWpsRFowTXNVMEZCYVVNN1EybENLME01UlRzN1FVMXlSa3dzUVc1RVRVVXNVVzFFVGswc1IwRkRTaXhOUVVGTkxFZE9Na1ZPTEUxQlFVMHNRVGREZEVWUUxGRkJRVkVzUlc5RVRsZ3NVVUZCVVN4SFFVTktMRk5CUVZNc1IxQXlSVlFzVFVGQlRTeEJOME4wUlZBc1VVRkJVU3hGYzBST1dDeFJRVUZSTEVkQlEwb3NUMEZCVHl4SFZESkZVQ3hOUVVGTkxFRTNRM1JGVUN4UlFVRlJMRU5CUVVNN1JUWkRkVVpPTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNSMEZCUnl4RlFVRkZMRWRCUVVjN1JVRkRVaXhKUVVGSkxFVkJRVVVzUTBGQlF6dEZRVU5RTEZOQlFWTXNSVUZCUlN4blFrRkJaMEk3UlVGRE0wSXNTMEZCU3l4RmFFVXZSRWNzVTBGQmNVTTdSV2RGWjBVM1F5eE5RVUZOTEVWb1JXaEZSU3hUUVVGeFF6dEZaMFZwUlRkRExFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNXVUZCV1N4RkwwSjBSRVFzVDBGQlpUdEZLMEoxUkRGQ0xHZENRVUZuUWl4RkwwSXhSRXdzU1VGQlNUdEZia0oyUW1wQ0xGTkJRVk1zUlVGQlF5eFBRVUZETzBOTFlsbzdPMEZ0UkZKSUxFRnVSRTFGTEZGdFJFNU5MRWRPSzBkSUxGTkJRVk1zUVUwNVIxWXNUVUZCVFN4SFRpdEhSaXhOUVVGTkxFRTNRekZIV0N4UlFVRlJMRVZ2UkU1WUxGRkJRVkVzUjFBclIwZ3NVMEZCVXl4QlR6bEhWaXhUUVVGVExFZFFLMGRNTEUxQlFVMHNRVGRETVVkWUxGRkJRVkVzUlhORVRsZ3NVVUZCVVN4SFZDdEhTQ3hUUVVGVExFRlRPVWRXTEU5QlFVOHNSMVFyUjBnc1RVRkJUU3hCTjBNeFIxZ3NVVUZCVVN4RFFVRkRPMFUyUXpSSFJpeExRVUZMTEVVdlFuSkZSU3hQUVVGbE8wTmtja00zUWpzN1FXMUVVa2dzUVc1RVRVVXNVVzFFVGswc1IwNHJSMGdzVVVGQlVTeEJUVGxIVkN4TlFVRk5MRWRPSzBkR0xFMUJRVTBzUVRkRE1VZFlMRkZCUVZFc1JXOUVUbGdzVVVGQlVTeEhVQ3RIU0N4UlFVRlJMRUZQT1VkVUxGTkJRVk1zUjFBclIwd3NUVUZCVFN4Qk4wTXhSMWdzVVVGQlVTeEZjMFJPV0N4UlFVRlJMRWRVSzBkSUxGRkJRVkVzUVZNNVIxUXNUMEZCVHl4SFZDdEhTQ3hOUVVGTkxFRTNRekZIV0N4UlFVRlJMRU5CUVVNN1JUWkRORWRHTEV0QlFVc3NSUzlDYUVWRkxFOUJRV1U3UTJReFF6ZENPenRCYlVSU1NDeEJia1JOUlN4UmJVUk9UU3hIVGl0SFNDeFhRVUZYTEVGTk9VZGFMRTFCUVUwc1IwNHJSMFlzVFVGQlRTeEJOME14UjFnc1VVRkJVU3hGYjBST1dDeFJRVUZSTEVkUUswZElMRmRCUVZjc1FVODVSMW9zVTBGQlV5eEhVQ3RIVEN4TlFVRk5MRUUzUXpGSFdDeFJRVUZSTEVWelJFNVlMRkZCUVZFc1IxUXJSMGdzVjBGQlZ5eEJVemxIV2l4UFFVRlBMRWRVSzBkSUxFMUJRVTBzUVRkRE1VZFlMRkZCUVZFc1EwRkJRenRGTmtNMFIwWXNTMEZCU3l4RkwwSTFSME1zVDBGQlR6dERaRVZ3UWpzN1FXMUVVa2dzUVc1RVRVVXNVVzFFVGswc1IwNHJSMGdzWVVGQllTeEJUVGxIWkN4TlFVRk5MRWRPSzBkR0xFMUJRVTBzUVRkRE1VZFlMRkZCUVZFc1JXOUVUbGdzVVVGQlVTeEhVQ3RIU0N4aFFVRmhMRUZQT1Vka0xGTkJRVk1zUjFBclIwd3NUVUZCVFN4Qk4wTXhSMWdzVVVGQlVTeEZjMFJPV0N4UlFVRlJMRWRVSzBkSUxHRkJRV0VzUVZNNVIyUXNUMEZCVHl4SFZDdEhTQ3hOUVVGTkxFRTNRekZIV0N4UlFVRlJMRU5CUVVNN1JUWkRORWRHTEV0QlFVc3NSUzlDYkVWRkxFbEJRV1U3UTJSNFF6ZENPenRCYlVSU1NDeEJia1JOUlN4UmJVUk9UU3hIVGl0SFNDeFJRVUZSTEVGTk9VZFVMRTFCUVUwc1IwNHJSMFlzVFVGQlRTeEJOME14UjFnc1VVRkJVU3hGYjBST1dDeFJRVUZSTEVkUUswZElMRkZCUVZFc1FVODVSMVFzVTBGQlV5eEhVQ3RIVEN4TlFVRk5MRUUzUXpGSFdDeFJRVUZSTEVWelJFNVlMRkZCUVZFc1IxUXJSMGdzVVVGQlVTeEJVemxIVkN4UFFVRlBMRWRVSzBkSUxFMUJRVTBzUVRkRE1VZFlMRkZCUVZFc1EwRkJRenRGTmtNMFIwWXNTMEZCU3l4RkwwSnlSME1zVDBGQlR6dERaRXh3UWpzN1FXMUVVa2dzUVc1RVRVVXNVVzFFVGswc1IwNHJSMGdzVVVGQlVTeEJUVGxIVkN4TlFVRk5MRWRPSzBkR0xFMUJRVTBzUVRkRE1VZFlMRkZCUVZFc1JXOUVUbGdzVVVGQlVTeEhVQ3RIU0N4UlFVRlJMRUZQT1VkVUxGTkJRVk1zUjFBclIwd3NUVUZCVFN4Qk4wTXhSMWdzVVVGQlVTeEZjMFJPV0N4UlFVRlJMRWRVSzBkSUxGRkJRVkVzUVZNNVIxUXNUMEZCVHl4SFZDdEhTQ3hOUVVGTkxFRTNRekZIV0N4UlFVRlJMRU5CUVVNN1JUWkRORWRHTEV0QlFVc3NSUzlDZUVkRExFOUJRVTg3UTJSR2NFSTdPMEZ0UkZKSUxFRnVSRTFGTEZGdFJFNU5MRWRPSzBkSUxGTkJRVk1zUVUwNVIxWXNUVUZCVFN4SFRpdEhSaXhOUVVGTkxFRTNRekZIV0N4UlFVRlJMRVZ2UkU1WUxGRkJRVkVzUjFBclIwZ3NVMEZCVXl4QlR6bEhWaXhUUVVGVExFZFFLMGRNTEUxQlFVMHNRVGRETVVkWUxGRkJRVkVzUlhORVRsZ3NVVUZCVVN4SFZDdEhTQ3hUUVVGVExFRlRPVWRXTEU5QlFVOHNSMVFyUjBnc1RVRkJUU3hCTjBNeFIxZ3NVVUZCVVN4RFFVRkRPMFUyUXpSSFJpeExRVUZMTEVVdlFuWkhReXhQUVVGUE8wTmtTSEJDT3p0QmJVUlNTQ3hCYmtSTlJTeFJiVVJPVFN4SFRpdEhTQ3hUUVVGVExFRk5PVWRXTEUxQlFVMHNSMDRyUjBZc1RVRkJUU3hCTjBNeFIxZ3NVVUZCVVN4RmIwUk9XQ3hSUVVGUkxFZFFLMGRJTEZOQlFWTXNRVTg1UjFZc1UwRkJVeXhIVUN0SFRDeE5RVUZOTEVFM1F6RkhXQ3hSUVVGUkxFVnpSRTVZTEZGQlFWRXNSMVFyUjBnc1UwRkJVeXhCVXpsSFZpeFBRVUZQTEVkVUswZElMRTFCUVUwc1FUZERNVWRZTEZGQlFWRXNRMEZCUXp0Rk5rTTBSMFlzUzBGQlN5eEZMMEl4UjBNc1QwRkJUenREWkVGd1FqczdRVzFFVWtnc1FVNTVTRWtzVVUxNlNFa3NSMEZEU2l4TlFVRk5MRU53UkhGSFRpeEJRVUZCTEZGQlFVTXNRVUZCUVN4Sk9FTnRRa01zVFVGQlRTeEZUM3BJV2l4UlFVRlJMRWRCUTBvc1UwRkJVeXhEY2tSeFIxUXNRVUZCUVN4UlFVRkRMRUZCUVVFc1NUaERiVUpETEUxQlFVMHNSVk42U0Zvc1VVRkJVU3hIUVVOS0xFOUJRVThzUTNaRWNVZFFMRUZCUVVFc1VVRkJReXhCUVVGQkxFazRRMjFDUXl4TlFVRk5MRVZOZWtoYUxGRkJRVkVzUjBGRFNpeE5RVUZOTEVGd1JITkhVQ3hUUVVGVExFYzRRMnRDVGl4TlFVRk5MRVZQZWtoYUxGRkJRVkVzUjBGRFNpeFRRVUZUTEVGeVJITkhWaXhUUVVGVExFYzRRMnRDVGl4TlFVRk5MRVZUZWtoYUxGRkJRVkVzUjBGRFNpeFBRVUZQTEVGMlJITkhVaXhUUVVGVExFYzRRMnRDVGl4TlFVRk5MRU5CUVVNN1JVRkZVQ3hqUVVGakxFVkJRVVVzU1VGQlNUdEZRVU53UWl4UFFVRlBMRVZxUW14SGNVTXNSMEZCUlR0RGFVSjFSeTlET3p0QlRXcEpUQ3hCYmtSTlJTeFJiVVJPVFN4SFFVTktMRTFCUVUwc1EzQkVjVWRPTEVGQlFVRXNVVUZCUXl4QlFVRkJMRWs0UTIxQ1F5eE5RVUZOTEVFM1EyNUlWQ3hSUVVGUkxFVnZSRTVZTEZGQlFWRXNSMEZEU2l4VFFVRlRMRU55UkhGSFZDeEJRVUZCTEZGQlFVTXNRVUZCUVN4Sk9FTnRRa01zVFVGQlRTeEJOME51U0ZRc1VVRkJVU3hGYzBST1dDeFJRVUZSTEVkQlEwb3NUMEZCVHl4RGRrUnhSMUFzUVVGQlFTeFJRVUZETEVGQlFVRXNTVGhEYlVKRExFMUJRVTBzUVRkRGJraFVMRkZCUVZFc1JXMUVUbGdzVVVGQlVTeEhRVU5LTEUxQlFVMHNRWEJFYzBkUUxGTkJRVk1zUnpoRGEwSk9MRTFCUVUwc1FUZERia2hVTEZGQlFWRXNSVzlFVGxnc1VVRkJVU3hIUVVOS0xGTkJRVk1zUVhKRWMwZFdMRk5CUVZNc1J6aERhMEpPTEUxQlFVMHNRVGREYmtoVUxGRkJRVkVzUlhORVRsZ3NVVUZCVVN4SFFVTktMRTlCUVU4c1FYWkVjMGRTTEZOQlFWTXNSemhEYTBKT0xFMUJRVTBzUVRkRGJraFVMRkZCUVZFc1EwRkJRenRGTmtONVNFb3NTMEZCU3l4RkwwSm9Sa2tzVDBGQlpTeERLMEpuUmtzc1ZVRkJWVHRETjBOMlNEVkRPenRCYTBSU1NDeEJUSFZKUVN4UlMzWkpVU3hIUVVOS0xFdEJRVXNzUlVORVZDeFJRVUZSTEVkQlEwb3NUVUZCVFN4RlEwUldMRkZCUVZFc1IwRkRTaXhUUVVGVExFVkZSR0lzVVVGQlVTeEhRVU5LTEU5QlFVOHNRMVJ6U1VrN1JVRkxZaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4UFFVRlBMRVZCUVVVc1JVRkJSVHRGUVVOWUxFOUJRVThzUlVGQlJTeERRVUZETzBOQlExZzdPMEZIY2tkRUxFRkllVWRCTEUxSGVrZE5MRU5xUkRSRVJpeEJRVUZCTEZGQlFVTXNRVUZCUVN4SGFVUTFSRXdzVFVGQlRTeEJha1EyUkVnc1UwRkJVeXhGYVVSMlJGb3NVVUZCVVN4QlFVRkJMRTFCUVUwc1FVRkJRU3hWUVVGVk8wRkJRM2hDTEV0QlFVc3NRVUZCUVN4TlFVRk5MRUZCUVVFc1ZVRkJWU3hGUXpSSWJrSXNTVUZCU1N4RGJFUjJSVVlzUVVGQlFTeFJRVUZETEVGQlFVRXNSMnRFZFVWSUxFbEJRVWtzUVd4RWRFVklMRk5CUVZNc1JYTkVkRWRhTEUxQlFVMHNRM1JFY1VkR0xFRkJRVUVzVVVGQlF5eEJRVUZCTEVkelJISkhUQ3hOUVVGTkxFRjBSSE5IU0N4VFFVRlRMRVYzUkROR1dpeFZRVUZWTEVONFJEQkdUaXhCUVVGQkxGRkJRVU1zUVVGQlFTeEhkMFF4Umt3c1ZVRkJWU3hCZUVReVJsQXNVMEZCVXl4RE9FTTBRMDg3UlVGRGFrSXNZMEZCWXl4RlFVRkZMRWxCUVVrN1JVRkRjRUlzVDBGQlR5eEZha0l6U0hsRExFZEJRVVU3UTJsQ05FaHVSRHM3UVVjM1JrTXNRVWhwUjBZc1RVZHFSMUVzUVVGQlFTeFJRVUZSTEVFelF6TkRXQ3hUUVVGVExFVXlRekpEV2l4TlFVRk5MRUZCUVVFc1VVRkJVU3hCTTBNelExZ3NVMEZCVXl4Rk1rTXlRMW9zVFVGQlRTeEJRVUZCTEZOQlFWTXNRVE5ETTBOYUxGTkJRVk1zUlRKRGFVUmtMR0ZCUVdFc1EwRkJReXhOUVVGTkxFRkJRVUVzVTBGQlV5eEJRVU14UWl4TlFVRk5MRVZGVlZRc1lVRkJZU3hEUVVGRExFdEJRVXNzUVVGQlFTeFRRVUZUTEVGQlEzcENMRTFCUVUwc1IwRkJSeXhOUVVGTkxFRkJRVUVzVFVGQlRTeEZSbXhDZEVJc1RVRkJUU3hCUVVGQkxGTkJRVk1zUVRORE0wTmFMRk5CUVZNc1JUSkRhVVJrTEdGQlFXRXNRMEZCUXl4TlFVRk5MRUZCUVVFc1UwRkJVeXhCUVUweFFpeFJRVUZSTEVWRlMxZ3NZVUZCWVN4RFFVRkRMRXRCUVVzc1FVRkJRU3hUUVVGVExFRkJUWHBDTEZGQlFWRXNSMEZCUnl4TlFVRk5MRUZCUVVFc1RVRkJUU3hGUmt3eFFpeE5RVUZOTEVGQlFVRXNUVUZCVFN4RFNDdEZZenRGUVVONFFpeGhRVUZoTEVWb1FqRkphME1zVFVGQk9FTTdSV2RDTWtrM1JpeHBRa0ZCYVVJc1JVRkJSU3hUUVVGVE8wVkJRelZDTEcxQ1FVRnRRaXhGUVVGRkxFdEJRVXNzUTJoRmFFaGtMRTlCUVhOQ0xFTm5SV2RJYjBJc1RVRkJUVHRGUVVNMVJDeGxRVUZsTEVWb1FqbEpaME1zVFVGQlZTeERRVUZXTEUxQlFWVTdRMmRDSzBreFJEczdRV1U1U1VNc1FXUndRa1lzVFdOdlFsRXNRVUY1UWtnc1NVRkJTeXhEUVVGQkxFdEJRVXNzU1VGRFVDeFJRVUZSTEVWQk1VSmtMRTFCUVUwc1FVRjVRa2dzU1VGQlN5eERRVUZCTEV0QlFVc3NTVUZwUWxBc1RVRkJUVHRCUVRGRFdpeE5RVUZOTEVGQmVVSklMRWxCUVVzc1EwRkJRU3hMUVVGTExFbEJhMEpRTEUxQlFVMDdRVUV6UTFvc1RVRkJUU3hCUVhsQ1NDeEpRVUZMTEVOQlFVRXNTMEZCU3l4SlFXMUNVQ3hKUVVGSkxFTmthRVZKTzBWQlEyUXNXVUZCV1N4RlFVRkZMRTFCUVRCQ08wVkJRM2hETEZkQlFWY3NSVUZCUlN4TlFVRXdRanREUVVONFF6czdRV05wUWtNc1FXUm1SaXhOWTJWUkxFRkJNRVJJTEV0QlFVc3NSMEZEUml4UlFVRlJMRVZCTTBSa0xFMUJRVTBzUVVFd1JFZ3NTMEZCU3l4SFFXbENSaXhOUVVGTk8wRkJNMFZhTEUxQlFVMHNRVUV3UkVnc1MwRkJTeXhIUVd0Q1JpeE5RVUZOTzBGQk5VVmFMRTFCUVUwc1FVRXdSRWdzUzBGQlN5eEhRVzFDUml4SlFVRkpMRU5rTlVaSk8wVkJRMlFzVlVGQlZTeEZRVUZGTEUxQlFUQkNPMFZCUTNSRExHRkJRV0VzUlVGQlJTeE5RVUV3UWp0RFFVTXhRenM3UVdOWlF5eEJaRlpHTEUxalZWRXNRVUV5Umtnc1kwRkJZeXhCUVdsRFdpeExRVUZMTEVkQlEwWXNVVUZCVVN4SFFVTk9MRTFCUVUwc1JVRTVTR2hDTEUxQlFVMHNRVUV5Umtnc1kwRkJZeXhCUVdsRFdpeExRVUZMTEVkQlowSkdMRTFCUVUwN1FVRTFTV1FzVFVGQlRTeEJRVEpHU0N4alFVRmpMRUZCYVVOYUxFdEJRVXNzUjBGcFFrWXNUVUZCVFR0QlFUZEpaQ3hOUVVGTkxFRkJNa1pJTEdOQlFXTXNRVUZwUTFvc1MwRkJTeXhIUVd0Q1JpeEpRVUZKTEVOa2VFcEpPMFZCUTJoQ0xGbEJRVmtzUlVGQlJTeERRVUZETzBWQlEyWXNWMEZCVnl4RlFVRkZMRU5CUVVNN1EwRkRaanM3UVdOUFF5eEJaRXhHTEUxalMxRXNRVUV5Umtnc1kwRkJZeXhCUVVOYUxFbEJRVXNzUTBGdVJVWXNTMEZCU3l4SlFXOUZUQ3hSUVVGUkxFZEJRMDRzVFVGQlRTeEZRVGxHYUVJc1RVRkJUU3hCUVRKR1NDeGpRVUZqTEVGQlExb3NTVUZCU3l4RFFXNUZSaXhMUVVGTExFbEJiVVpNTEUxQlFVMDdRVUUxUjJRc1RVRkJUU3hCUVRKR1NDeGpRVUZqTEVGQlExb3NTVUZCU3l4RFFXNUZSaXhMUVVGTExFbEJiMFpNTEUxQlFVMDdRVUUzUjJRc1RVRkJUU3hCUVRKR1NDeGpRVUZqTEVGQlExb3NTVUZCU3l4RFFXNUZSaXhMUVVGTExFbEJjVVpNTEVsQlFVa3NRMlJ1U0VrN1JVRkRhRUlzVlVGQlZTeEZRVUZGTEVOQlFVTTdSVUZEWWl4aFFVRmhMRVZCUVVVc1EwRkJRenREUVVOcVFqczdRV05GUXl4QlpFRkdMRTFqUVZFc1FVRXlSa2dzWTBGQll5eEJRV2xEV2l4TFFVRkxMRWRCUTBZc1VVRkJVU3hCUVUxUUxGbEJRVmtzUjBGQlJ5eE5RVUZOTEVWQmJrazVRaXhOUVVGTkxFRkJNa1pJTEdOQlFXTXNRVUZwUTFvc1MwRkJTeXhIUVdkQ1JpeE5RVUZOTEVGQlRVd3NXVUZCV1R0QlFXeEtja0lzVFVGQlRTeEJRVEpHU0N4alFVRmpMRUZCYVVOYUxFdEJRVXNzUjBGcFFrWXNUVUZCVFN4QlFVdE1MRmxCUVZrN1FVRnNTbkpDTEUxQlFVMHNRVUV5Umtnc1kwRkJZeXhCUVdsRFdpeExRVUZMTEVkQmEwSkdMRWxCUVVrc1FVRkpTQ3haUVVGWkxFTmtiRXBJTzBWQlEyeENMRlZCUVZVc1JVRkJSU3hEUVVGRE8wTkJRMlE3TzBGalJrTXNRV1JKUml4TlkwcFJMRUZCTWtaSUxHTkJRV01zUVVGRFdpeEpRVUZMTEVOQmJrVkdMRXRCUVVzc1NVRnZSVXdzVVVGQlVTeEJRVlZRTEZkQlFWY3NSMEZCUnl4TlFVRk5MRVZCZGtjM1FpeE5RVUZOTEVGQk1rWklMR05CUVdNc1FVRkRXaXhKUVVGTExFTkJia1ZHTEV0QlFVc3NTVUZ0Umt3c1RVRkJUU3hCUVZWTUxGZEJRVmM3UVVGMFNIQkNMRTFCUVUwc1FVRXlSa2dzWTBGQll5eEJRVU5hTEVsQlFVc3NRMEZ1UlVZc1MwRkJTeXhKUVc5R1RDeE5RVUZOTEVGQlUwd3NWMEZCVnp0QlFYUkljRUlzVFVGQlRTeEJRVEpHU0N4alFVRmpMRUZCUTFvc1NVRkJTeXhEUVc1RlJpeExRVUZMTEVsQmNVWk1MRWxCUVVrc1FVRlJTQ3hYUVVGWExFTmtiRWhCTzBWQlEzQkNMRmxCUVZrc1JVRkJSU3hEUVVGRE8wTkJRMmhDT3p0QlkwNURMRUZrVVVZc1RXTlNVU3hCUVRKR1NDeGpRVUZqTEVGQmFVTmFMRXRCUVVzc1IwRkRSaXhSUVVGUkxFRkJWVkFzVjBGQlZ5eEhRVUZITEUxQlFVMHNSVUYyU1RkQ0xFMUJRVTBzUVVFeVJrZ3NZMEZCWXl4QlFXbERXaXhMUVVGTExFZEJaMEpHTEUxQlFVMHNRVUZWVEN4WFFVRlhPMEZCZEVwd1FpeE5RVUZOTEVGQk1rWklMR05CUVdNc1FVRnBRMW9zUzBGQlN5eEhRV2xDUml4TlFVRk5MRUZCVTB3c1YwRkJWenRCUVhSS2NFSXNUVUZCVFN4QlFUSkdTQ3hqUVVGakxFRkJhVU5hTEV0QlFVc3NSMEZyUWtZc1NVRkJTU3hCUVZGSUxGZEJRVmNzUTJRNVNVTTdSVUZEY2tJc1lVRkJZU3hGUVVGRkxFTkJRVU03UTBGRGFrSTdPMEZqVmtNc1FXUlpSaXhOWTFwUkxFRkJNa1pJTEdOQlFXTXNRVUZEV2l4SlFVRkxMRU5CYmtWR0xFdEJRVXNzU1VGdlJVd3NVVUZCVVN4QlFVMVFMRmxCUVZrc1IwRkJSeXhOUVVGTkxFVkJia2M1UWl4TlFVRk5MRUZCTWtaSUxHTkJRV01zUVVGRFdpeEpRVUZMTEVOQmJrVkdMRXRCUVVzc1NVRnRSa3dzVFVGQlRTeEJRVTFNTEZsQlFWazdRVUZzU0hKQ0xFMUJRVTBzUVVFeVJrZ3NZMEZCWXl4QlFVTmFMRWxCUVVzc1EwRnVSVVlzUzBGQlN5eEpRVzlHVEN4TlFVRk5MRUZCUzB3c1dVRkJXVHRCUVd4SWNrSXNUVUZCVFN4QlFUSkdTQ3hqUVVGakxFRkJRMW9zU1VGQlN5eERRVzVGUml4TFFVRkxMRWxCY1VaTUxFbEJRVWtzUVVGSlNDeFpRVUZaTEVOa2RFZEdPMFZCUTI1Q0xGZEJRVmNzUlVGQlJTeERRVUZETzBOQlEyWTdPMEZqWkVNc1FXUm5Ra1lzVFdOb1FsRXNRVUY1UWtnc1NVRkJTeXhEUVVGQkxFdEJRVXNzU1VGRFVDeFJRVUZSTEVkQlIwNHNUVUZCVFN4RlFUZENaQ3hOUVVGTkxFRkJlVUpJTEVsQlFVc3NRMEZCUVN4TFFVRkxMRWxCYVVKUUxFMUJRVTA3UVVFeFExb3NUVUZCVFN4QlFYbENTQ3hKUVVGTExFTkJRVUVzUzBGQlN5eEpRV3RDVUN4TlFVRk5PMEZCTTBOYUxFMUJRVTBzUVVGNVFrZ3NTVUZCU3l4RFFVRkJMRXRCUVVzc1NVRnRRbEFzU1VGQlNTeEZRVFZEVml4TlFVRk5MRUZCTUVSSUxFdEJRVXNzUjBGRFJpeFJRVUZSTEVkQlIwNHNUVUZCVFN4RlFUbEVaQ3hOUVVGTkxFRkJNRVJJTEV0QlFVc3NSMEZwUWtZc1RVRkJUVHRCUVRORldpeE5RVUZOTEVGQk1FUklMRXRCUVVzc1IwRnJRa1lzVFVGQlRUdEJRVFZGV2l4TlFVRk5MRUZCTUVSSUxFdEJRVXNzUjBGdFFrWXNTVUZCU1N4RlFUZEZWaXhOUVVGTkxFRkJNa1pJTEdOQlFXTXNRVUZEV2l4SlFVRkxMRU5CYmtWR0xFdEJRVXNzU1VGdlJVd3NVVUZCVVN4SFFVTk9MRTFCUVUwc1JVRTVSbWhDTEUxQlFVMHNRVUV5Umtnc1kwRkJZeXhCUVVOYUxFbEJRVXNzUTBGdVJVWXNTMEZCU3l4SlFXMUdUQ3hOUVVGTk8wRkJOVWRrTEUxQlFVMHNRVUV5Umtnc1kwRkJZeXhCUVVOYUxFbEJRVXNzUTBGdVJVWXNTMEZCU3l4SlFXOUdUQ3hOUVVGTk8wRkJOMGRrTEUxQlFVMHNRVUV5Umtnc1kwRkJZeXhCUVVOYUxFbEJRVXNzUTBGdVJVWXNTMEZCU3l4SlFYRkdUQ3hKUVVGSkxFVkJPVWRhTEUxQlFVMHNRVUV5Umtnc1kwRkJZeXhCUVdsRFdpeExRVUZMTEVkQlEwWXNVVUZCVVN4SFFVTk9MRTFCUVUwc1JVRTVTR2hDTEUxQlFVMHNRVUV5Umtnc1kwRkJZeXhCUVdsRFdpeExRVUZMTEVkQlowSkdMRTFCUVUwN1FVRTFTV1FzVFVGQlRTeEJRVEpHU0N4alFVRmpMRUZCYVVOYUxFdEJRVXNzUjBGcFFrWXNUVUZCVFR0QlFUZEpaQ3hOUVVGTkxFRkJNa1pJTEdOQlFXTXNRVUZwUTFvc1MwRkJTeXhIUVd0Q1JpeEpRVUZKTEVOa09VaFJPMFZCUTNCQ0xHRkJRV0VzUlVGQlowSXNRMEZCUXp0RFFVTXZRanM3UVdOc1FrTXNRV1J2UWtZc1RXTndRbEVzUVVFd1JFZ3NTMEZCU3l4SFFVTkdMRkZCUVZFc1FVRlBVQ3haUVVGWkxFZEJRVWNzVFVGQlRTeEJRVUZCTEVsQlFVc3NRMEZCUVN4UFFVRlBMRWRCYkVWNFF5eE5RVUZOTEVGQk1FUklMRXRCUVVzc1IwRnBRa1lzVFVGQlRTeEJRVTFNTEZsQlFWa3NRVUZCUVN4SlFVRkxMRU5CWmxNc1QwRkJUenRCUVd4RmVFTXNUVUZCVFN4QlFUQkVTQ3hMUVVGTExFZEJhMEpHTEUxQlFVMHNRVUZMVEN4WlFVRlpMRUZCUVVFc1NVRkJTeXhEUVdaVExFOUJRVTg3UVVGc1JYaERMRTFCUVUwc1FVRXdSRWdzUzBGQlN5eEhRVzFDUml4SlFVRkpMRUZCU1Vnc1dVRkJXU3hCUVVGQkxFbEJRVXNzUTBGbVV5eFBRVUZQTEVWa09VTnNRanRGY0VScVEzUkNMSE5DUVVGelFpeEZjVUpMVlN4TlFVRkxPMFZ5UWtweVF5eDFRa0ZCZFVJc1JYRkNTVk1zVFVGQlN6dERLMEk0UW5SRE96dEJZM1JDUXl4QlpIZENSaXhOWTNoQ1VTeEJRWGxDU0N4SlFVRkxMRU5CUVVFc1MwRkJTeXhKUVVOUUxGRkJRVkVzUVVGWFVDeFhRVUZYTEVkQlFVY3NUVUZCVFN4QlFVRkJMRWxCUVVzc1EwRTJRa01zVDBGQlR5eEhRV3hGZUVNc1RVRkJUU3hCUVhsQ1NDeEpRVUZMTEVOQlFVRXNTMEZCU3l4SlFXbENVQ3hOUVVGTkxFRkJWVXdzVjBGQlZ5eEJRVUZCTEVsQlFVc3NRMEZqVlN4UFFVRlBPMEZCYkVWNFF5eE5RVUZOTEVGQmVVSklMRWxCUVVzc1EwRkJRU3hMUVVGTExFbEJhMEpRTEUxQlFVMHNRVUZUVEN4WFFVRlhMRUZCUVVFc1NVRkJTeXhEUVdOVkxFOUJRVTg3UVVGc1JYaERMRTFCUVUwc1FVRjVRa2dzU1VGQlN5eERRVUZCTEV0QlFVc3NTVUZ0UWxBc1NVRkJTU3hCUVZGSUxGZEJRVmNzUVVGQlFTeEpRVUZMTEVOQlkxVXNUMEZCVHl4RlpERkRhRUk3UlhCRUwwSjRRaXgxUWtGQmRVSXNSWEZDUkZNc1RVRkJTenRGY2tKRmNrTXNNRUpCUVRCQ0xFVnhRa1pOTEUxQlFVczdReXRDYTBOMFF6czdRV014UWtNc1FXUTBRa1lzVFdNMVFsRXNRVUV3UkVnc1MwRkJTeXhIUVVOR0xGRkJRVkVzUVVGWFVDeFhRVUZYTEVkQlFVY3NUVUZCVFN4QlFVRkJMRWxCUVVzc1EwRktReXhQUVVGUExFZEJiRVY0UXl4TlFVRk5MRUZCTUVSSUxFdEJRVXNzUjBGcFFrWXNUVUZCVFN4QlFWVk1MRmRCUVZjc1FVRkJRU3hKUVVGTExFTkJia0pWTEU5QlFVODdRVUZzUlhoRExFMUJRVTBzUVVFd1JFZ3NTMEZCU3l4SFFXdENSaXhOUVVGTkxFRkJVMHdzVjBGQlZ5eEJRVUZCTEVsQlFVc3NRMEZ1UWxVc1QwRkJUenRCUVd4RmVFTXNUVUZCVFN4QlFUQkVTQ3hMUVVGTExFZEJiVUpHTEVsQlFVa3NRVUZSU0N4WFFVRlhMRUZCUVVFc1NVRkJTeXhEUVc1Q1ZTeFBRVUZQTEVWa2RFTm1PMFZ3UkRkQ2VrSXNNRUpCUVRCQ0xFVnhRbEJOTEUxQlFVczdSWEpDVVhKRExIbENRVUY1UWl4RmNVSlNUeXhOUVVGTE8wTXJRbk5EZEVNN08wRmpPVUpETEVGa1owTkdMRTFqYUVOUkxFRkJlVUpJTEVsQlFVc3NRMEZCUVN4TFFVRkxMRWxCUTFBc1VVRkJVU3hCUVU5UUxGbEJRVmtzUjBGQlJ5eE5RVUZOTEVGQlFVRXNTVUZCU3l4RFFXbERRU3hQUVVGUExFZEJiRVY0UXl4TlFVRk5MRUZCZVVKSUxFbEJRVXNzUTBGQlFTeExRVUZMTEVsQmFVSlFMRTFCUVUwc1FVRk5UQ3haUVVGWkxFRkJRVUVzU1VGQlN5eERRV3RDVXl4UFFVRlBPMEZCYkVWNFF5eE5RVUZOTEVGQmVVSklMRWxCUVVzc1EwRkJRU3hMUVVGTExFbEJhMEpRTEUxQlFVMHNRVUZMVEN4WlFVRlpMRUZCUVVFc1NVRkJTeXhEUVd0Q1V5eFBRVUZQTzBGQmJFVjRReXhOUVVGTkxFRkJlVUpJTEVsQlFVc3NRMEZCUVN4TFFVRkxMRWxCYlVKUUxFbEJRVWtzUVVGSlNDeFpRVUZaTEVGQlFVRXNTVUZCU3l4RFFXdENVeXhQUVVGUExFVmtiRU5xUWp0RmNFUXpRblpDTEhOQ1FVRnpRaXhGY1VKaVZTeE5RVUZMTzBWeVFtTnlReXg1UWtGQmVVSXNSWEZDWkU4c1RVRkJTenRESzBJd1EzUkRPenRCVlRKRVJDeEJWR3BJUVN4VFUybElVeXhCUVVGQkxGTkJRVk1zUTBGRmFFSXNVMEZCVXl4SFFWRk1MRXRCUVVzc1FYaEViRWhTTEZGQlFWRXNSWGRFZDBkWUxGTkJRVk1zUVVGQlFTeFRRVUZUTEVkQmVVSmtMRXRCUVVzc1FYaEVha2xPTEZGQlFWRXNReXREVkZNN1JVRkRiRUlzVDBGQlR5eEZRVUZGTEVWQlFVVTdSVUZEV0N4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeEhRVUZITEVWVVl5dENMRTlCUVVzN1JWTmlka01zUzBGQlN5eEZWR0UyUWl4UFFVRkxPMFZUV25aRExFMUJRVTBzUlZSWk5FSXNUMEZCU3p0RlUxaDJReXhKUVVGSkxFVlVWemhDTEU5QlFVczdSVk5XZGtNc1QwRkJUeXhGUVVGRkxFVkJRVVU3UTBGTFdqczdRVU5NUkN4QlFVRkJMRTFCUVUwc1EwRkJRenRGUVV0TUxFdEJRVXNzUlVGQlJTeEpRVUZKTzBWQlExZ3NXVUZCV1N4RmJFTnhRMGNzVDBGQlpUdEZhME53UXpsQ0xHZENRVUZuUWl4RmJFTnBRMFFzU1VGQlNUdEZhME5vUTI1Q0xGVkJRVlVzUlRORWRVSkxMSEZEUVVFNFFqdERNa1JpT1VNN08wRkJiRUpFTEVGcVJIRkNSU3hOYVVSeVFra3NRV3BFY1VKSUxFMUJRVTBzUldsRWNrSlVMRTFCUVUwc1FXcEVjMEpJTEUxQlFVMHNRMEZCUXp0RmFVUllUaXhWUVVGVkxFVXpSRzlDUnl4M1JVRkJPRUk3UTFWUU5VTTdPMEZwUkhoQ1NDeEJha1FyUTBVc1RXbEVMME5KTEVGcVJDdERSaXhOUVVGTkxFVnBSQzlEVml4TlFVRk5MRUZxUkdkRVNDeE5RVUZOTEVOQlFVTTdSV2xFYWtOT0xGbEJRVmtzUlVGQlJTeFpRVUZaTzBWQlF6RkNMRlZCUVZVc1JVRkJZU3hKUVVGSk8wTnFSR3RETlVJN08wRnBSSHBDU0N4QlFVRkJMRTFCUVUwc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGRFdpeGpRVUZqTEVWQlFVVXNVMEZCTmtRN1JVRkROMFVzV1VGQldTeEZRVUZGTEVOQlFVTTdSVUZEWml4dFFrRkJiVUlzUldwRGVrSmhMRWRCUVVjN1JXbERNRUp1UXl4aFFVRmhMRVZCUVdkQ0xFTkJRVU03UTBGTEwwSTdPMEZCVkVRc1FXcEVTMFVzVFdsRVRFa3NRVUZCUVN4UFFVRlBMRUZxUkV0V0xFbEJRVXNzUTBGQlFTeE5RVUZOTEVOQlFVTXNTVUZCU3l4RFFVRkJMRTFCUVUwc1JVRkJSVHRGYVVSRmVFSXNWVUZCVlN4RlFVRmhMRWxCUVVrN1EycEVRVFZDT3p0QmFVUnhRa1FzUVVGQlFTeE5RVUZOTEVGQlFVRXNVMEZCVXl4RFFVRkxPMFV6UTI1RWNFSXNXVUZCV1N4RlUzVkRSeXgzUWtGQlpUdEZWSFJET1VJc1MwRkJTeXhGVTNORFZTeFBRVUZsTzBOclEyTTNRanM3UVVGR1JDeEJha1JvUTBFc1RXbEVaME5OTEVGQlFVRXNVMEZCVXl4QmFrUm9RMlFzVFVGQlRTeEZhVVJuUTFBc1RVRkJUU3hCUVVGQkxGTkJRVk1zUVdwRUwwSmtMRTFCUVUwc1EwRkJRenRGVFdoQ1RpeFZRVUZWTEVWb1FubENSeXd5UlVGQk9FSTdRMVZRTlVNN08wRk5RVVFzUVVGQlFTeFJRVUZSTEVjeVF6WkNVaXhOUVVGTkxFRkJRVUVzVTBGQlV5eEhNME0zUWtFc1MwRkJTeXhEUVVGRE8wVkJRMjVDTEV0QlFVc3NSVk5uUWxFc1QwRkJaVHREVkdZM1FqczdRVUZGUkN4QlFVRkJMRkZCUVZFc1FVRkJRU3h0UWtGQmJVSXNSekpEZVVJelFpeE5RVUZOTEVGQlFVRXNVMEZCVXl4SE0wTjZRbTFDTEUxQlFVMHNRMEZCUXp0RlFVTjJReXhMUVVGTExFVlRXVkVzVDBGQlpUdERWRmczUWpzN1FUSkRkVUpFTEVGQlFVRXNUVUZCVFN4QlFVRkJMRkZCUVZFc1EwRkJUVHRGTTBOdVJIQkNMRmxCUVZrc1JWTTBRMGNzY1VKQlFXVTdSVlF6UXpsQ0xFdEJRVXNzUlZNeVExVXNUMEZCWlR0RGEwTlROMEk3TzBGQlJrUXNRV3BFYUVOQkxFMXBSR2REVFN4QlFVRkJMRkZCUVZFc1FXcEVhRU5pTEUxQlFVMHNSV2xFWjBOUUxFMUJRVTBzUVVGQlFTeFJRVUZSTEVGcVJDOUNZaXhOUVVGTkxFTkJRVU03UlUxb1FrNHNWVUZCVlN4RmFFSjVRa2NzZDBWQlFUaENPME5WVURWRE96dEJUVUZFTEVGQlFVRXNVVUZCVVN4SE1rTTJRbElzVFVGQlRTeEJRVUZCTEZGQlFWRXNSek5ETjBKRExFdEJRVXNzUTBGQlF6dEZRVU51UWl4TFFVRkxMRVZUY1VKUkxFOUJRV1U3UTFSd1FqZENPenRCUVVWRUxFRkJRVUVzVVVGQlVTeEJRVUZCTEcxQ1FVRnRRaXhITWtONVFqTkNMRTFCUVUwc1FVRkJRU3hSUVVGUkxFY3pRM3BDYjBJc1RVRkJUU3hEUVVGRE8wVkJRM1pETEV0QlFVc3NSVk5wUWxFc1QwRkJaVHREVkdoQ04wSTdPMEV5UTNWQ1JDeEJRVUZCTEUxQlFVMHNRVUZCUVN4WFFVRlhMRU5CUVVjN1JUTkRia1J3UWl4WlFVRlpMRVZUUVVVc2RVSkJRVTg3UlZSRGNrSXNTMEZCU3l4RlUwUlRMRTlCUVU4N1EydERjVVJ3UWpzN1FVRkdSQ3hCYWtSb1EwRXNUV2xFWjBOTkxFRkJRVUVzVjBGQlZ5eEJha1JvUTJoQ0xFMUJRVTBzUldsRVowTlFMRTFCUVUwc1FVRkJRU3hYUVVGWExFRnFSQzlDYUVJc1RVRkJUU3hEUVVGRE8wVk5hRUpPTEZWQlFWVXNSV2hDZVVKSExEQkZRVUU0UWp0RFZWQTFRenM3UVUxQlJDeEJRVUZCTEZGQlFWRXNSekpETmtKU0xFMUJRVTBzUVVGQlFTeFhRVUZYTEVjelF6ZENSaXhMUVVGTExFTkJRVU03UlVGRGJrSXNTMEZCU3l4RlUzWkNUeXhQUVVGUE8wTlVkMEp3UWpzN1FVRkZSQ3hCUVVGQkxGRkJRVkVzUVVGQlFTeHRRa0ZCYlVJc1J6SkRlVUl6UWl4TlFVRk5MRUZCUVVFc1YwRkJWeXhITTBONlFtbENMRTFCUVUwc1EwRkJRenRGUVVOMlF5eExRVUZMTEVWVE0wSlBMRTlCUVU4N1ExUTBRbkJDT3p0Qk1rTjFRa1FzUVVGQlFTeE5RVUZOTEVGQlFVRXNZVUZCWVN4RFFVRkRPMFV6UTI1RWNFSXNXVUZCV1N4RlV6QkRSeXgzUWtGQlpUdEZWSHBET1VJc1MwRkJTeXhGVTNsRFZTeEpRVUZsTzBOclExYzNRanM3UVVGR1JDeEJha1JvUTBFc1RXbEVaME5OTEVGQlFVRXNZVUZCWVN4QmFrUm9RMnhDTEUxQlFVMHNSV2xFWjBOUUxFMUJRVTBzUVVGQlFTeGhRVUZoTEVGcVJDOUNiRUlzVFVGQlRTeERRVUZETzBWTmFFSk9MRlZCUVZVc1JXaENlVUpITERKRlFVRTRRanREVlZBMVF6czdRVTFCUkN4QlFVRkJMRkZCUVZFc1J6SkROa0pTTEUxQlFVMHNRVUZCUVN4aFFVRmhMRWN6UXpkQ1NpeExRVUZMTEVOQlFVTTdSVUZEYmtJc1MwRkJTeXhGVTIxQ1VTeEpRVUZsTzBOVWJFSTNRanM3UVVGRlJDeEJRVUZCTEZGQlFWRXNRVUZCUVN4dFFrRkJiVUlzUnpKRGVVSXpRaXhOUVVGTkxFRkJRVUVzWVVGQllTeEhNME42UW1Vc1RVRkJUU3hEUVVGRE8wVkJRM1pETEV0QlFVc3NSVk5sVVN4SlFVRmxPME5VWkRkQ096dEJNa04xUWtRc1FVRkJRU3hOUVVGTkxFRkJRVUVzVVVGQlVTeERRVUZOTzBVelEyNUVjRUlzV1VGQldTeEZVMDlGTEhWQ1FVRlBPMFZVVG5KQ0xFdEJRVXNzUlZOTlV5eFBRVUZQTzBOclF6aERjRUk3TzBGQlJrUXNRV3BFYUVOQkxFMXBSR2REVFN4QlFVRkJMRkZCUVZFc1FXcEVhRU5pTEUxQlFVMHNSV2xFWjBOUUxFMUJRVTBzUVVGQlFTeFJRVUZSTEVGcVJDOUNZaXhOUVVGTkxFTkJRVU03UlUxb1FrNHNWVUZCVlN4RmFFSjVRa2NzTUVWQlFUaENPME5WVURWRE96dEJhVVEyUWtRc1FUTkRNME5GTEUweVF6SkRTU3hCUVVGQkxGRkJRVkVzUVRORE0wTllMRk5CUVZNc1EwRkJRenRGUVV0UUxHZENRVUZuUWl4Rk5VSmpXaXcwVmtGQkswZzdRelJDVW5SSk96dEJRVWRJTEVGQlFVRXNVVUZCVVN4SE1rTTJRbElzVFVGQlRTeEJRVUZCTEZGQlFWRXNSek5ETjBKRExFdEJRVXNzUTBGQlF6dEZRVU51UWl4TFFVRkxMRVZUYUVKUExFOUJRVTg3UTFScFFuQkNPenRCUVVWRUxFRkJRVUVzVVVGQlVTeEJRVUZCTEcxQ1FVRnRRaXhITWtONVFqTkNMRTFCUVUwc1FVRkJRU3hSUVVGUkxFY3pRM3BDYjBJc1RVRkJUU3hEUVVGRE8wVkJRM1pETEV0QlFVc3NSVk53UWs4c1QwRkJUenREVkhGQ2NFSTdPMEV5UTNWQ1JDeEJRVUZCTEUxQlFVMHNRVUZCUVN4UlFVRlJMRU5CUVUwN1JUTkRia1J3UWl4WlFVRlpMRVZUU1VVc2RVSkJRVTg3UlZSSWNrSXNTMEZCU3l4RlUwZFRMRTlCUVU4N1EydERhVVJ3UWpzN1FVRkdSQ3hCYWtSb1EwRXNUV2xFWjBOTkxFRkJRVUVzVVVGQlVTeEJha1JvUTJJc1RVRkJUU3hGYVVSblExQXNUVUZCVFN4QlFVRkJMRkZCUVZFc1FXcEVMMEppTEUxQlFVMHNRMEZCUXp0RlRXaENUaXhWUVVGVkxFVm9RbmxDUnl3d1JVRkJPRUk3UTFWUU5VTTdPMEZwUkRaQ1JDeEJNME16UTBVc1RUSkRNa05KTEVGQlFVRXNVVUZCVVN4Qk0wTXpRMWdzVTBGQlV5eERRVUZETzBWQlQxQXNaMEpCUVdkQ0xFVTFRbGxhTERaYVFVRXJTRHRETkVKU2RFazdPMEZCUjBnc1FVRkJRU3hSUVVGUkxFY3lRelpDVWl4TlFVRk5MRUZCUVVFc1VVRkJVU3hITTBNM1FrTXNTMEZCU3l4RFFVRkRPMFZCUTI1Q0xFdEJRVXNzUlZOdVFrOHNUMEZCVHp0RFZHOUNjRUk3TzBGQlJVUXNRVUZCUVN4UlFVRlJMRUZCUVVFc2JVSkJRVzFDTEVjeVEzbENNMElzVFVGQlRTeEJRVUZCTEZGQlFWRXNSek5EZWtKdlFpeE5RVUZOTEVOQlFVTTdSVUZEZGtNc1MwRkJTeXhGVTNaQ1R5eFBRVUZQTzBOVWQwSndRanM3UVRKRGRVSkVMRUZCUVVFc1RVRkJUU3hCUVVGQkxGTkJRVk1zUlVGTmFrSXNZVUZCWVN4RFFVRkRMRTFCUVUwc1FVRkJRU3hUUVVGVExFRkJRekZDTEUxQlFVMHNSVVZWVkN4aFFVRmhMRU5CUVVNc1MwRkJTeXhCUVVGQkxGTkJRVk1zUVVGRGVrSXNUVUZCVFN4SFFVRkhMRTFCUVUwc1FVRkJRU3hOUVVGTkxFTkdiRUpHTzBVelEyNUVjRUlzV1VGQldTeEZVMHRGTEhOQ1FVRlBPMFZVU25KQ0xFdEJRVXNzUlZOSlV5eFBRVUZQTzBOclEyZEVjRUk3TzBGQlJrUXNRV3BFYUVOQkxFMXBSR2REVFN4QlFVRkJMRk5CUVZNc1FXcEVhRU5rTEUxQlFVMHNSV2xFYzBOVUxHRkJRV0VzUTJwRWRFTldMRTFCUVUwc1FXbEVjME5MTEUxQlFVMHNRVUZCUVN4VFFVRlRMRUZCUXpGQ0xFMUJRVTBzUlVWVlZDeGhRVUZoTEVOQlFVTXNTMEZCU3l4QlFVRkJMRk5CUVZNc1FVRkRla0lzVFVGQlRTeEhia1JzUkU0c1RVRkJUU3hCYlVSclJFY3NUVUZCVFN4QlFVRkJMRTFCUVUwc1JVWnNRblJDTEUxQlFVMHNRVUZCUVN4VFFVRlRMRUZxUkM5Q1pDeE5RVUZOTEVWcFJIRkRWQ3hoUVVGaExFTkJRVU1zVFVGQlRTeEJha1J5UTJwQ0xFMUJRVTBzUVdsRWNVTlhMRk5CUVZNc1FVRkRNVUlzVFVGQlRTeEZSVlZVTEdGQlFXRXNRMEZCUXl4TFFVRkxMRUZCUVVFc1UwRkJVeXhCUVVONlFpeE5RVUZOTEVkQlFVY3NUVUZCVFN4QlFVRkJMRTFCUVUwc1FXNUVha1J5UWl4TlFVRk5MRU5CUVVNN1JVMW9RazRzVlVGQlZTeEZhRUo1UWtjc2VVVkJRVGhDTzBOVlVEVkRPenRCYVVRMlFrUXNRVE5ETTBORkxFMHlRekpEU1N4QlFVRkJMRk5CUVZNc1FUTkRNME5hTEZOQlFWTXNSVEpEYVVSa0xHRkJRV0VzUTBGQlF5eE5RVUZOTEVGQlFVRXNVMEZCVXl4QlFVTXhRaXhOUVVGTkxFVkZWVlFzWVVGQllTeERRVUZETEV0QlFVc3NRVUZCUVN4VFFVRlRMRUZCUTNwQ0xFMUJRVTBzUjBGQlJ5eE5RVUZOTEVGQlFVRXNUVUZCVFN4RE4wTTNSRlE3UlVGSFVDeG5Ra0ZCWjBJc1JUVkNaMEphTERSUVFVRXJTRHRETkVKU2RFazdPMEZCUjBnc1FVRkJRU3hSUVVGUkxFY3lRelpDVWl4TlFVRk5MRUZCUVVFc1UwRkJVeXhITTBNM1FrRXNTMEZCU3l4Rk1rTnRRM1JDTEdGQlFXRXNRek5EYmtOWUxGRkJRVkVzUnpKRGJVTkpMRTFCUVUwc1FVRkJRU3hUUVVGVExFRkJRekZDTEUxQlFVMHNSek5EY0VOUkxFdEJRVXNzUlRaRE9FTjBRaXhoUVVGaExFTTNRemxEV0N4UlFVRlJMRWMyUXpoRFNTeExRVUZMTEVGQlFVRXNVMEZCVXl4QlFVTjZRaXhOUVVGTkxFZEJRVWNzVFVGQlRTeEJRVUZCTEUxQlFVMHNSemRETDBOUUxFdEJRVXNzUTBGQlF6dEZRVU51UWl4TFFVRkxMRVZUYkVKUExFOUJRVTg3UTFSdFFuQkNPenRCUVVWRUxFRkJRVUVzVVVGQlVTeEJRVUZCTEcxQ1FVRnRRaXhITWtONVFqTkNMRTFCUVUwc1FVRkJRU3hUUVVGVExFY3pRM3BDYlVJc1RVRkJUU3hGTWtNclFqRkRMR0ZCUVdFc1F6TkRMMEpZTEZGQlFWRXNRVUZCUVN4dFFrRkJiVUlzUnpKREswSm1MRTFCUVUwc1FVRkJRU3hUUVVGVExFRkJRekZDTEUxQlFVMHNSek5EYUVNeVFpeE5RVUZOTEVVMlF6QkRNVU1zWVVGQllTeEROME14UTFnc1VVRkJVU3hCUVVGQkxHMUNRVUZ0UWl4SE5rTXdRMllzUzBGQlN5eEJRVUZCTEZOQlFWTXNRVUZEZWtJc1RVRkJUU3hIUVVGSExFMUJRVTBzUVVGQlFTeE5RVUZOTEVjM1F6TkRXU3hOUVVGTkxFTkJRVU03UlVGRGRrTXNTMEZCU3l4RlUzUkNUeXhQUVVGUE8wTlVkVUp3UWpzN1FUSkRkVUpFTEVGQlFVRXNUVUZCVFN4QlFVRkJMRk5CUVZNc1JVRk5ha0lzWVVGQllTeERRVUZETEUxQlFVMHNRVUZCUVN4VFFVRlRMRUZCVFRGQ0xGRkJRVkVzUlVWTFdDeGhRVUZoTEVOQlFVTXNTMEZCU3l4QlFVRkJMRk5CUVZNc1FVRk5la0lzVVVGQlVTeEhRVUZITEUxQlFVMHNRVUZCUVN4TlFVRk5MRU5HZGtKS08wVXpRMjVFY0VJc1dVRkJXU3hGVTBWRkxITkNRVUZQTzBWVVJISkNMRXRCUVVzc1JWTkRVeXhQUVVGUE8wTnJRMjFFY0VJN08wRkJSa1FzUVdwRWFFTkJMRTFwUkdkRFRTeEJRVUZCTEZOQlFWTXNRV3BFYUVOa0xFMUJRVTBzUldsRWMwTlVMR0ZCUVdFc1EycEVkRU5XTEUxQlFVMHNRV2xFYzBOTExFMUJRVTBzUVVGQlFTeFRRVUZUTEVGQlRURkNMRkZCUVZFc1JVVkxXQ3hoUVVGaExFTkJRVU1zUzBGQlN5eEJRVUZCTEZOQlFWTXNRVUZOZWtJc1VVRkJVU3hIYmtSMlJGSXNUVUZCVFN4QmJVUjFSRXNzVFVGQlRTeEJRVUZCTEUxQlFVMHNSVVoyUW5oQ0xFMUJRVTBzUVVGQlFTeFRRVUZUTEVGcVJDOUNaQ3hOUVVGTkxFVnBSSEZEVkN4aFFVRmhMRU5CUVVNc1RVRkJUU3hCYWtSeVEycENMRTFCUVUwc1FXbEVjVU5YTEZOQlFWTXNRVUZOTVVJc1VVRkJVU3hGUlV0WUxHRkJRV0VzUTBGQlF5eExRVUZMTEVGQlFVRXNVMEZCVXl4QlFVMTZRaXhSUVVGUkxFZEJRVWNzVFVGQlRTeEJRVUZCTEUxQlFVMHNRVzVFZEVSMlFpeE5RVUZOTEVOQlFVTTdSVTFvUWs0c1ZVRkJWU3hGYUVKNVFrY3NlVVZCUVRoQ08wTlZVRFZET3p0QmFVUTJRa1FzUVRORE0wTkZMRTB5UXpKRFNTeEJRVUZCTEZOQlFWTXNRVE5ETTBOYUxGTkJRVk1zUlRKRGFVUmtMR0ZCUVdFc1EwRkJReXhOUVVGTkxFRkJRVUVzVTBGQlV5eEJRVTB4UWl4UlFVRlJMRVZGUzFnc1lVRkJZU3hEUVVGRExFdEJRVXNzUVVGQlFTeFRRVUZUTEVGQlRYcENMRkZCUVZFc1IwRkJSeXhOUVVGTkxFRkJRVUVzVFVGQlRTeEROME5zUlZnN1JVRlRVQ3huUWtGQlowSXNSVFZDVlZvc09GTkJRU3RJTzBNMFFsSjBTVHM3UVVGSFNDeEJRVUZCTEZGQlFWRXNSekpETmtKU0xFMUJRVTBzUVVGQlFTeFRRVUZUTEVjelF6ZENRU3hMUVVGTExFVXlRMjFEZEVJc1lVRkJZU3hETTBOdVExZ3NVVUZCVVN4SE1rTnRRMGtzVFVGQlRTeEJRVUZCTEZOQlFWTXNRVUZOTVVJc1VVRkJVU3hITTBONlEwMHNTMEZCU3l4Rk5rTTRRM1JDTEdGQlFXRXNRemRET1VOWUxGRkJRVkVzUnpaRE9FTkpMRXRCUVVzc1FVRkJRU3hUUVVGVExFRkJUWHBDTEZGQlFWRXNSMEZCUnl4TlFVRk5MRUZCUVVFc1RVRkJUU3hITjBOd1JGUXNTMEZCU3l4RFFVRkRPMFZCUTI1Q0xFdEJRVXNzUlZOeVFrOHNUMEZCVHp0RFZITkNjRUk3TzBGQlJVUXNRVUZCUVN4UlFVRlJMRUZCUVVFc2JVSkJRVzFDTEVjeVEzbENNMElzVFVGQlRTeEJRVUZCTEZOQlFWTXNSek5EZWtKdFFpeE5RVUZOTEVVeVF5dENNVU1zWVVGQllTeERNME12UWxnc1VVRkJVU3hCUVVGQkxHMUNRVUZ0UWl4SE1rTXJRbVlzVFVGQlRTeEJRVUZCTEZOQlFWTXNRVUZOTVVJc1VVRkJVU3hITTBOeVEzbENMRTFCUVUwc1JUWkRNRU14UXl4aFFVRmhMRU0zUXpGRFdDeFJRVUZSTEVGQlFVRXNiVUpCUVcxQ0xFYzJRekJEWml4TFFVRkxMRUZCUVVFc1UwRkJVeXhCUVUxNlFpeFJRVUZSTEVkQlFVY3NUVUZCVFN4QlFVRkJMRTFCUVUwc1J6ZERhRVJWTEUxQlFVMHNRMEZCUXp0RlFVTjJReXhMUVVGTExFVlRla0pQTEU5QlFVODdRMVF3UW5CQ096dEJNa041UTBnc1FVRkJRU3hOUVVGTkxFRkJRVUVzVFVGQlRTeERRVUZETzBWQlJWZ3NaVUZCWlN4RlFVRkZMRWxCUVVrN1JVRkZja0lzYTBKQlFXdENMRVZCUVVVc1NVRkJTVHRGUVVONFFpeFZRVUZWTEVWQlFVVXNTVUZCU1R0RlFVTm9RaXhuUWtGQlowSXNSWFpGYUVST0xHMVJRVUVyU0R0RGRVVnJSVEZKT3p0QlFYaENSQ3hCUVZORkxFMUJWRWtzUVVGQlFTeE5RVUZOTEVOQlUxUXNRVUZCUVN4UlFVRkRMRUZCUVVFc1IwRlVTaXhOUVVGTkxFRkJRVUVzVFVGQlRTeERRVlZVTEVGQlFVRXNTVUZCUXl4QlFVRkJMRU5CUVVzc1NVRkJTeXhGUVVGQkxFRkJRVUVzU1VGQlF5eERRVUZMTEVkQlFVY3NRVUZCVWl4SFFVRlhPMFZCUTNSQ0xHRkJRV0VzUlhCQ2JrUnBReXhQUVVGMVFqdEZiMEp2UkhKRkxHZENRVUZuUWl4RlFVRkZMRWxCUVVrN1EwRkRka0k3TzBGQllrZ3NRVUZsUlN4TlFXWkpMRUZCUVVFc1RVRkJUU3hCUVdWVUxGbEJRVmtzUTBGQlF6dEZRVU5hTEU5QlFVOHNSVUZCUlN4SlFVRkpPME5CUTJRN08wRkJha0pJTEVGQmIwSkZMRTFCY0VKSkxFRkJRVUVzVFVGQlRTeEJRVzlDVkN4WFFVRlhMRU5CUVVNN1JVRkRXQ3hMUVVGTExFVnNRemxEVVN4UFFVRmxPMFZyUXl0RE5VSXNWVUZCVlN4RmJFTnlSRWNzU1VGQlNUdERhME56Ukd4Q096dEJRVWRJTEVGQlFVRXNUVUZCVFN4QlFVRkJMRmRCUVZjc1EwRkJRenRGUVVOb1FpeExRVUZMTEVWc1EzSkVWU3hQUVVGbE8wTnJRM05FTDBJN08wRkJSVVFzUVVGQlFTeE5RVUZOTEVGQlFVRXNZVUZCWVN4RFFVRkRPMFZCUTJ4Q0xFOUJRVThzUlVGQlJTeERRVUZETzBWQlExWXNTMEZCU3l4RmJFTTFSRlVzVDBGQlpUdERhME0yUkM5Q096dEJRVVZFTEVGQlFVRXNVVUZCVVN4QlFVRkJMRTFCUVUwc1EwRkJRenRGUVVOaUxFMUJRVTBzUlVGQlJTeEpRVUZKTzBWQlExb3NWVUZCVlN4RmJrSjJSM0ZETEV0QlFUQkVPME50UW5kSE1VYzdPMEZCUzBRc1FVRkRSU3hSUVVSTkxFZEJRMG9zVFVGQlRTeERRVUZETzBWeVJHeEhVQ3hUUVVGVExFVkJRVU1zVDBGQlF6dEZjVVJ2UjFnc1QwRkJUeXhGUVVGRkxFbEJRVWs3UlVGRFlpeFhRVUZYTEVWQlFVVXNUVUZCVFR0RlFVTnVRaXhOUVVGTkxFVkJRVVVzU1VGQlNUdERRVU5pT3p0QlFVNUlMRUZCVlUwc1VVRldSU3hCUVZGTUxHTkJRV01zUjBGRFdDeE5RVUZOTEVkQlEwb3NTMEZCU3l4RFFVRkRPMFZCUTA0c1QwRkJUeXhGVkRkSU1FSXNSVUZCUlR0RlV6aElia01zWTBGQll5eEZRVUZGTEVsQlFVazdSVUZEY0VJc1QwRkJUeXhGV2k5SWIwTXNSMEZCUlR0RFdXZEpPVU03TzBGQlpGQXNRVUZwUWxFc1VVRnFRa0VzUVVGUlRDeGpRVUZqTEVkQlExZ3NUVUZCVFN4QmFrUTFSVklzVFVGQlRTeEhhVVJ2UmtFc1MwRkJTeXhGUVdwQ1ppeFJRVUZSTEVGQlVVd3NZMEZCWXl4SFFVTllMRTFCUVUwc1FXcEVNMFZVTEUxQlFVMHNSMmxFYlVaRExFdEJRVXNzUTBGQlF6dEZRVU5PTEU5QlFVOHNSVUZCUlN4RFFVRkRPME5CUTFnN08wRkJia0pVTEVGQmVVSkpMRkZCZWtKSkxFRkJkMEpNTEcxQ1FVRnRRaXhIUVVGSExFMUJRVTBzUTBGQlFTeEJRVUZCTEZkQlFVTXNRMEZCV1N4SFFVRkhMRUZCUVdZc1NVRkRNVUlzVFVGQlRTeERRVUZETzBWQlExQXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzUjBGQlJ5eEZRVUZGTEVkQlFVYzdSVUZEVWl4SlFVRkpMRVZ1UlhKSFNTeFBRVUZ6UWp0RmJVVnpSemxDTEZOQlFWTXNSVUZCUlN4blFrRkJaMEk3UlVGRE0wSXNZMEZCWXl4RlFVRkZMRWxCUVVrN1JVRkRjRUlzVDBGQlR5eEZRVUZGTEVkQlFVYzdSVUZEV2l4blFrRkJaMElzUld4RE1VZE1MRWxCUVVrN1JXdERNa2RtTEZkQlFWY3NSVUZCUlN4RFFVRkRPMFV2UXpWSmFFSXNWVUZCVlN4RllsVnJRaXhwUkVGQkswUTdRelJFYjBreFJqczdRVUZ1UTB3c1FVRnpRMDBzVVVGMFEwVXNRVUYzUWt3c2JVSkJRVzFDTEVkQlFVY3NUVUZCVFN4RFFVRkJMRUZCUVVFc1YwRkJReXhEUVVGWkxFZEJRVWNzUVVGQlppeERha1F6UmpkQ0xFbEJRVXNzUTBGQlFTeHJRa0ZCYTBJc1NXbEVlVWRzUWl4TlFVRk5MRVZCZEVOa0xGRkJRVkVzUVVGM1Frd3NiVUpCUVcxQ0xFZEJRVWNzVFVGQlRTeERRVUZCTEVGQlFVRXNWMEZCUXl4RFFVRlpMRWRCUVVjc1FVRkJaaXhEYWtRelJrWXNUVUZCVFN4SGFVUjVSelZDTEUxQlFVMHNSVUYwUTJRc1VVRkJVU3hCUVhkQ1RDeHRRa0ZCYlVJc1IwRkJSeXhOUVVGTkxFTkJRVUVzUVVGQlFTeFhRVUZETEVOQlFWa3NSMEZCUnl4QlFVRm1MRU5xUkRGR04wSXNUVUZCVFN4SGFVUjNSMFFzVFVGQlRTeERRVUZETzBWQlExQXNSMEZCUnl4RlFVRkZMRVZCUVVVN1JYSkVlRWxZTEZOQlFWTXNSVUZCUXl4TlFVRkRPME54UkRCSlVqczdRVUY2UTFBc1FVRTJRMDBzVVVFM1EwVXNRVUYzUWt3c2JVSkJRVzFDTEVkQlFVY3NUVUZCVFN4RFFVRkJMRUZCUVVFc1YwRkJReXhEUVVGWkxFZEJRVWNzUVVGQlppeERRVzlDTTBJc1NVRkJTeXhEUVVGQkxITkNRVUZ6UWl4SlFVTjRRaXhOUVVGTkxFTkJRVU03UlVGRFVDeEhRVUZITEVWQlFVVXNSVUZCUlR0RmNrUXZTVmdzVTBGQlV5eEZRVUZETEUxQlFVTTdRM0ZFYVVwU096dEJRMmhMVEN4QlFVRkJMRWxCUVVrc1EwRkJRenRGUVUxSUxGVkJRVlVzUlVGQlJTeE5RVUZOTzBOQlMyNUNPenRCUVU5RUxFRkJRVUVzU1VGQlNTeEJRVUZCTEU5QlFVOHNRMEZCUXp0RlFVOVdMRXRCUVVzc1JXNURZVkVzU1VGQlNUdEZiRUkxUW1wQ0xHZENRVUZuUWl4RmEwSnBRMGdzVDBGQlpUdERiVU54UXpkQ096dEJRVGxFUkN4QmJFUXlRa0VzU1d0RU0wSkpMRUZCUVVFc1QwRkJUeXhCYkVReVFsUXNUVUZCVFN4RmEwUXpRbElzU1VGQlNTeEJRVUZCTEU5QlFVOHNRV3hFTkVKV0xFMUJRVTBzUTBGQlF6dEZTSEJEVGl4blFrRkJaMElzUlZwalZpeFBRVUZ6UkR0RFpYZENOMFE3TzBGclJEbENSQ3hCYkVSU1FTeEphMFJSU1N4QlFVRkJMRTlCUVU4c1FXeEVVbFFzU1VGQlN5eEZRWGRIUVN4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhoSFZTeEpRVUZMTEVOQmQwZEJMRk5CUVZNc1EwRjRSME1zVDBGQlR5eEZhMFJSZUVNc1NVRkJTU3hCUVVGQkxFOUJRVThzUVd4RVVGWXNTVUZCU3l4RlFYVkhReXhCUVVGQkxGRkJRVU1zUVVGQlFTeEZRWFpIVXl4SlFVRkxMRU5CZFVkRExGTkJRVk1zUTBGMlIwRXNUMEZCVHl4RFFVRkRPMFZyUkRoQ2NFTXNTMEZCU3l4RmJrTklUU3hKUVVGSk8wVnRRMHRpTEdkQ1FVRm5RaXhGYWtWdVFtUXNUMEZCYzBRN1EyVllOMFE3TzBGclJFdEVMRUZxUkd4Q1FTeEphVVJyUWtrc1FVRkJRU3hQUVVGUExFRkJOa0pTTEZkQlFWY3NRV3BFTDBOaUxGRkJRVkVzUTBGQlF6dEZSWEZDVWl4TFFVRkxMRVZaYVVKUkxFbEJRVWs3UTJSd1EyeENPenRCYVVSblFrUXNRVUZ4UTBrc1NVRnlRMEVzUVVGQlFTeFBRVUZQTEVGQmNVTk9MRk5CUVZNc1EwRkJTenRGTjBNdlEyNUNMRXRCUVVzc1JWVnpRMVVzVDBGQll6dEZiRUp3UXpOQ0xHZENRVUZuUWl4RmEwSTJRa2dzVDBGQlpUdERiVU5yUW5wQ096dEJRWFpEVEN4QmJFUkRRU3hKYTBSRVNTeEJRVUZCTEU5QlFVOHNRVUZ4UTA0c1UwRkJVeXhCYkVSd1EySXNUVUZCVFN4RmEwUkVVQ3hKUVVGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4VFFVRlRMRUZzUkc1RFlpeE5RVUZOTEVOQlFVTTdSVXRTVGl4VlFVRlZMRVZtYVVKSExIRkRRVUU0UWp0RFZWQTFRenM3UVd0RVNrUXNRV3hFTWtKQkxFbHJSRE5DU1N4QlFVRkJMRTlCUVU4c1FVRnhRMDRzVTBGQlV5eEJiRVJXV2l4TlFVRk5MRVZyUkROQ1VpeEpRVUZKTEVGQlFVRXNUMEZCVHl4QlFYRkRUaXhUUVVGVExFRnNSRlJpTEUxQlFVMHNRMEZCUXp0RlNIQkRUaXhuUWtGQlowSXNSVnBqVml4UFFVRnpSRHREWlhkQ04wUTdPMEZyUkRsQ1JDeEJiRVJTUVN4SmEwUlJTU3hCUVVGQkxFOUJRVThzUVVGeFEwNHNVMEZCVXl4QmJFUTNRMW9zU1VGQlN5eEZRWGRIUVN4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhoSFZTeEpRVUZMTEVOQmQwZEJMRk5CUVZNc1EwRjRSME1zVDBGQlR5eEZhMFJSZUVNc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVGeFEwNHNVMEZCVXl4QmJFUTFRMklzU1VGQlN5eEZRWFZIUXl4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhaSFV5eEpRVUZMTEVOQmRVZERMRk5CUVZNc1EwRjJSMEVzVDBGQlR5eERRVUZETzBWTFYzUkRMRXRCUVVzc1JWVjNRbEVzVDBGQll6dEZWblJDZWtJc1owSkJRV2RDTEVWd1FrRmFMRTlCUVhORU8wTmxXRGRFT3p0QmEwUkxSQ3hCYWtSc1FrRXNTV2xFYTBKSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4VFFVRlRMRUUzUXpOQ1lpeFhRVUZYTEVGS05VSllMRkZCUVZFc1EwRkJRenRGUlhGQ1VpeExRVUZMTEVWWmVVSlJMRTlCUVdNN1EyUTFRelZDT3p0QmFVUm5Ra1FzUVVGeFEwa3NTVUZ5UTBFc1FVRkJRU3hQUVVGUExFRkJjVU5PTEZGQlFWRXNRMEZCVFR0RmNrUTNRMnBDTEdkQ1FVRm5RaXhGYTBKclEwZ3NUMEZCWlR0RGJVTmhla0k3TzBGQmRrTk1MRUZzUkVOQkxFbHJSRVJKTEVGQlFVRXNUMEZCVHl4QlFYRkRUaXhSUVVGUkxFRnNSSEJEV2l4TlFVRk5MRVZyUkVSUUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQmNVTk9MRkZCUVZFc1FXeEVia05hTEUxQlFVMHNRMEZCUXp0RlMxSk9MRlZCUVZVc1JXWnBRa2NzYTBOQlFUaENPME5WVURWRE96dEJhMFJLUkN4QmJFUXlRa0VzU1d0RU0wSkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeFJRVUZSTEVGc1JGWllMRTFCUVUwc1JXdEVNMEpTTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCY1VOT0xGRkJRVkVzUVd4RVZGb3NUVUZCVFN4RFFVRkRPMFZJY0VOT0xHZENRVUZuUWl4RldtTldMRTlCUVhORU8wTmxkMEkzUkRzN1FXdEVPVUpFTEVGc1JGSkJMRWxyUkZGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4UlFVRlJMRUZzUkRkRFdDeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVWclJGRjRReXhKUVVGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4UlFVRlJMRUZzUkRWRFdpeEpRVUZMTEVWQmRVZERMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJka2RUTEVsQlFVc3NRMEYxUjBNc1UwRkJVeXhEUVhaSFFTeFBRVUZQTEVOQlFVTTdSVXRoY0VNc1owSkJRV2RDTEVWd1FrRmFMRTlCUVhORU8wTmxXRGRFT3p0QmEwUkxSQ3hCUVhGRFNTeEpRWEpEUVN4QlFVRkJMRTlCUVU4c1FVRnhRMDRzVjBGQlZ5eERRVUZITzBWeVJEZERha0lzWjBKQlFXZENMRVZyUWxaS0xFOUJRVTg3UTIxRGVVUm9RanM3UVVGMlEwd3NRV3hFUTBFc1NXdEVSRWtzUVVGQlFTeFBRVUZQTEVGQmNVTk9MRmRCUVZjc1FXeEVjRU5tTEUxQlFVMHNSV3RFUkZBc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVGeFEwNHNWMEZCVnl4QmJFUnVRMllzVFVGQlRTeERRVUZETzBWTFVrNHNWVUZCVlN4RlptbENSeXh2UTBGQk9FSTdRMVZRTlVNN08wRnJSRXBFTEVGc1JESkNRU3hKYTBRelFra3NRVUZCUVN4UFFVRlBMRUZCY1VOT0xGZEJRVmNzUVd4RVZtUXNUVUZCVFN4RmEwUXpRbElzU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUZ4UTA0c1YwRkJWeXhCYkVSVVppeE5RVUZOTEVOQlFVTTdSVWh3UTA0c1owSkJRV2RDTEVWYVkxWXNUMEZCYzBRN1EyVjNRamRFT3p0QmEwUTVRa1FzUVd4RVVrRXNTV3RFVVVrc1FVRkJRU3hQUVVGUExFRkJjVU5PTEZkQlFWY3NRV3hFTjBOa0xFbEJRVXNzUlVGM1IwRXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjRSMVVzU1VGQlN5eERRWGRIUVN4VFFVRlRMRU5CZUVkRExFOUJRVThzUld0RVVYaERMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJjVU5PTEZkQlFWY3NRV3hFTlVObUxFbEJRVXNzUlVGMVIwTXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjJSMU1zU1VGQlN5eERRWFZIUXl4VFFVRlRMRU5CZGtkQkxFOUJRVThzUTBGQlF6dEZTMkZ3UXl4blFrRkJaMElzUlhCQ1FWb3NUMEZCYzBRN1EyVllOMFE3TzBGclJFdEVMRUZCY1VOSkxFbEJja05CTEVGQlFVRXNUMEZCVHl4QlFYRkRUaXhoUVVGaExFTkJRVU03UlhKRU4wTnFRaXhuUWtGQlowSXNSV3RDWjBOSUxFbEJRV1U3UTIxRFpYcENPenRCUVhaRFRDeEJiRVJEUVN4SmEwUkVTU3hCUVVGQkxFOUJRVThzUVVGeFEwNHNZVUZCWVN4QmJFUndRMnBDTEUxQlFVMHNSV3RFUkZBc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVGeFEwNHNZVUZCWVN4QmJFUnVRMnBDTEUxQlFVMHNRMEZCUXp0RlMxSk9MRlZCUVZVc1JXWnBRa2NzY1VOQlFUaENPME5WVURWRE96dEJhMFJLUkN4QmJFUXlRa0VzU1d0RU0wSkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeGhRVUZoTEVGc1JGWm9RaXhOUVVGTkxFVnJSRE5DVWl4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeGhRVUZoTEVGc1JGUnFRaXhOUVVGTkxFTkJRVU03UlVod1EwNHNaMEpCUVdkQ0xFVmFZMVlzVDBGQmMwUTdRMlYzUWpkRU96dEJhMFE1UWtRc1FXeEVVa0VzU1d0RVVVa3NRVUZCUVN4UFFVRlBMRUZCY1VOT0xHRkJRV0VzUVd4RU4wTm9RaXhKUVVGTExFVkJkMGRCTEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCZUVkVkxFbEJRVXNzUTBGM1IwRXNVMEZCVXl4RFFYaEhReXhQUVVGUExFVnJSRkY0UXl4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeGhRVUZoTEVGc1JEVkRha0lzU1VGQlN5eEZRWFZIUXl4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhaSFV5eEpRVUZMTEVOQmRVZERMRk5CUVZNc1EwRjJSMEVzVDBGQlR5eERRVUZETzBWTFlYQkRMR2RDUVVGblFpeEZjRUpCV2l4UFFVRnpSRHREWlZnM1JEczdRV3RFUzBRc1FVRnhRMGtzU1VGeVEwRXNRVUZCUVN4UFFVRlBMRUZCY1VOT0xGRkJRVkVzUTBGQlRUdEZOME12UTI1Q0xFdEJRVXNzUlZWelExVXNUMEZCWXp0RmJFSndRek5DTEdkQ1FVRm5RaXhGYTBKSVNpeFBRVUZQTzBOdFEydEVhRUk3TzBGQmRrTk1MRUZzUkVOQkxFbHJSRVJKTEVGQlFVRXNUMEZCVHl4QlFYRkRUaXhSUVVGUkxFRnNSSEJEV2l4TlFVRk5MRVZyUkVSUUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQmNVTk9MRkZCUVZFc1FXeEVia05hTEUxQlFVMHNRMEZCUXp0RlMxSk9MRlZCUVZVc1JXWnBRa2NzYjBOQlFUaENPME5WVURWRE96dEJhMFJLUkN4QmJFUXlRa0VzU1d0RU0wSkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeFJRVUZSTEVGc1JGWllMRTFCUVUwc1JXdEVNMEpTTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCY1VOT0xGRkJRVkVzUVd4RVZGb3NUVUZCVFN4RFFVRkRPMFZJY0VOT0xHZENRVUZuUWl4RldtTldMRTlCUVhORU8wTmxkMEkzUkRzN1FXdEVPVUpFTEVGc1JGSkJMRWxyUkZGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4UlFVRlJMRUZzUkRkRFdDeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVWclJGRjRReXhKUVVGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4UlFVRlJMRUZzUkRWRFdpeEpRVUZMTEVWQmRVZERMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJka2RUTEVsQlFVc3NRMEYxUjBNc1UwRkJVeXhEUVhaSFFTeFBRVUZQTEVOQlFVTTdSVXRYZEVNc1MwRkJTeXhGVldkQ1VTeEpRVUZKTzBWV1pHWXNaMEpCUVdkQ0xFVndRa0ZhTEU5QlFYTkVPME5sV0RkRU96dEJhMFJMUkN4QmFrUnNRa0VzU1dsRWEwSkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeFJRVUZSTEVFM1F6TkNXaXhYUVVGWExFRktOVUpZTEZGQlFWRXNRMEZCUXp0RlJYRkNVaXhMUVVGTExFVlplVUpSTEU5QlFXTTdRMlExUXpWQ096dEJhVVJuUWtRc1FVRnhRMGtzU1VGeVEwRXNRVUZCUVN4UFFVRlBMRUZCY1VOT0xGRkJRVkVzUTBGQlRUdEZOME12UTI1Q0xFdEJRVXNzUlZWelExVXNUMEZCWXp0RmJFSndRek5DTEdkQ1FVRm5RaXhGYTBKT1NpeFBRVUZQTzBOdFEzRkVhRUk3TzBGQmRrTk1MRUZzUkVOQkxFbHJSRVJKTEVGQlFVRXNUMEZCVHl4QlFYRkRUaXhSUVVGUkxFRnNSSEJEV2l4TlFVRk5MRVZyUkVSUUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQmNVTk9MRkZCUVZFc1FXeEVia05hTEUxQlFVMHNRMEZCUXp0RlMxSk9MRlZCUVZVc1JXWnBRa2NzYjBOQlFUaENPME5WVURWRE96dEJhMFJLUkN4QmJFUXlRa0VzU1d0RU0wSkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeFJRVUZSTEVGc1JGWllMRTFCUVUwc1JXdEVNMEpTTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCY1VOT0xGRkJRVkVzUVd4RVZGb3NUVUZCVFN4RFFVRkRPMFZJY0VOT0xHZENRVUZuUWl4RldtTldMRTlCUVhORU8wTmxkMEkzUkRzN1FXdEVPVUpFTEVGc1JGSkJMRWxyUkZGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4UlFVRlJMRUZzUkRkRFdDeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVWclJGRjRReXhKUVVGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4UlFVRlJMRUZzUkRWRFdpeEpRVUZMTEVWQmRVZERMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJka2RUTEVsQlFVc3NRMEYxUjBNc1UwRkJVeXhEUVhaSFFTeFBRVUZQTEVOQlFVTTdSVXRYZEVNc1MwRkJTeXhGVldkQ1VTeEpRVUZKTzBWV1pHWXNaMEpCUVdkQ0xFVndRa0ZhTEU5QlFYTkVPME5sV0RkRU96dEJhMFJMUkN4QmFrUnNRa0VzU1dsRWEwSkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeFJRVUZSTEVFM1F6TkNXaXhYUVVGWExFRktOVUpZTEZGQlFWRXNRMEZCUXp0RlJYRkNVaXhMUVVGTExFVlplVUpSTEU5QlFXTTdRMlExUXpWQ096dEJhVVJuUWtRc1FVRnhRMGtzU1VGeVEwRXNRVUZCUVN4UFFVRlBMRUZCY1VOT0xGTkJRVk1zUTBGQlN6dEZOME12UTI1Q0xFdEJRVXNzUlZWelExVXNUMEZCWXp0RmJFSndRek5DTEdkQ1FVRm5RaXhGYTBKTVNpeFBRVUZQTzBOdFEyOUVhRUk3TzBGQmRrTk1MRUZzUkVOQkxFbHJSRVJKTEVGQlFVRXNUMEZCVHl4QlFYRkRUaXhUUVVGVExFRnNSSEJEWWl4TlFVRk5MRVZyUkVSUUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQmNVTk9MRk5CUVZNc1FXeEVia05pTEUxQlFVMHNRMEZCUXp0RlMxSk9MRlZCUVZVc1JXWnBRa2NzYlVOQlFUaENPME5WVURWRE96dEJhMFJLUkN4QmJFUXlRa0VzU1d0RU0wSkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeFRRVUZUTEVGc1JGWmFMRTFCUVUwc1JXdEVNMEpTTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCY1VOT0xGTkJRVk1zUVd4RVZHSXNUVUZCVFN4RFFVRkRPMFZJY0VOT0xHZENRVUZuUWl4RldtTldMRTlCUVhORU8wTmxkMEkzUkRzN1FXdEVPVUpFTEVGc1JGSkJMRWxyUkZGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4VFFVRlRMRUZzUkRkRFdpeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVWclJGRjRReXhKUVVGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4VFFVRlRMRUZzUkRWRFlpeEpRVUZMTEVWQmRVZERMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJka2RUTEVsQlFVc3NRMEYxUjBNc1UwRkJVeXhEUVhaSFFTeFBRVUZQTEVOQlFVTTdSVXRYZEVNc1MwRkJTeXhGVldkQ1VTeEpRVUZKTzBWV1pHWXNaMEpCUVdkQ0xFVndRa0ZhTEU5QlFYTkVPME5sV0RkRU96dEJhMFJMUkN4QmFrUnNRa0VzU1dsRWEwSkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeFRRVUZUTEVFM1F6TkNZaXhYUVVGWExFRktOVUpZTEZGQlFWRXNRMEZCUXp0RlJYRkNVaXhMUVVGTExFVlplVUpSTEU5QlFXTTdRMlExUXpWQ096dEJhVVJuUWtRc1FVRnhRMGtzU1VGeVEwRXNRVUZCUVN4UFFVRlBMRUZCY1VOT0xGTkJRVk1zUTBGQlN6dEZOME12UTI1Q0xFdEJRVXNzUlZWelExVXNUMEZCWXp0RmJFSndRek5DTEdkQ1FVRm5RaXhGYTBKU1NpeFBRVUZQTzBOdFEzVkVhRUk3TzBGQmRrTk1MRUZzUkVOQkxFbHJSRVJKTEVGQlFVRXNUMEZCVHl4QlFYRkRUaXhUUVVGVExFRnNSSEJEWWl4TlFVRk5MRVZyUkVSUUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQmNVTk9MRk5CUVZNc1FXeEVia05pTEUxQlFVMHNRMEZCUXp0RlMxSk9MRlZCUVZVc1JXWnBRa2NzYlVOQlFUaENPME5WVURWRE96dEJhMFJLUkN4QmJFUXlRa0VzU1d0RU0wSkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeFRRVUZUTEVGc1JGWmFMRTFCUVUwc1JXdEVNMEpTTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCY1VOT0xGTkJRVk1zUVd4RVZHSXNUVUZCVFN4RFFVRkRPMFZJY0VOT0xHZENRVUZuUWl4RldtTldMRTlCUVhORU8wTmxkMEkzUkRzN1FXdEVPVUpFTEVGc1JGSkJMRWxyUkZGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4VFFVRlRMRUZzUkRkRFdpeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVWclJGRjRReXhKUVVGSkxFRkJRVUVzVDBGQlR5eEJRWEZEVGl4VFFVRlRMRUZzUkRWRFlpeEpRVUZMTEVWQmRVZERMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJka2RUTEVsQlFVc3NRMEYxUjBNc1UwRkJVeXhEUVhaSFFTeFBRVUZQTEVOQlFVTTdSVXRYZEVNc1MwRkJTeXhGVldkQ1VTeEpRVUZKTzBWV1pHWXNaMEpCUVdkQ0xFVndRa0ZhTEU5QlFYTkVPME5sV0RkRU96dEJhMFJMUkN4QmFrUnNRa0VzU1dsRWEwSkpMRUZCUVVFc1QwRkJUeXhCUVhGRFRpeFRRVUZUTEVFM1F6TkNZaXhYUVVGWExFRktOVUpZTEZGQlFWRXNRMEZCUXp0RlJYRkNVaXhMUVVGTExFVlplVUpSTEU5QlFXTTdRMlExUXpWQ096dEJhVVJuUWtRc1FXeEVNa0pCTEVsclJETkNTU3hCUVVGQkxFOUJRVThzUVd4RU1rSlVMRTFCUVUwc1JXdEVNMEpTTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZzUkRSQ1ZpeE5RVUZOTEVOQlFVTTdSVVZvUWtvc1UwRkJVeXhGWjBSclExVXNWMEZCVnl4RGFFUjZRMFFzUlVGQlJTeERRVUZoTEZGQlFWRXNRMEZCSzBJc1NVRkJTVHREUm5sQ01VWTdPMEZGVFVzc1ZVRkJWU3hEUVVGV0xGZEJRVlU3UlVGRFVpeEpRVUZKTzBsQlFVY3NWVUZCVlN4RlFVRkRMRmxCUVVNN08wVkJRMjVDTEVkQlFVYzdTVUZCUnl4VlFVRlZMRVZCUVVNc2QwSkJRVU03TzBWQlEyeENMRWRCUVVjN1NVRkJSeXhWUVVGVkxFVkJRVU1zU1VGQlF6czdPenRCWjBSMlF6RkNMRUZzUkRoRlFTeEphMFE1UlVrc1FVRkJRU3hQUVVGUExFTnNSRGhGVkN4QlFVRkJMRkZCUVVNc1FVRkJRU3hIYTBRNVJVZ3NTVUZCU1N4QlFVRkJMRTlCUVU4c1FXeEVLMFZXTEZOQlFWTXNRMEZCUXp0RmEwUjJRbEFzUzBGQlN5eEZia053UTAwc1NVRkJTVHRGYlVOeFEyWXNWVUZCVlN4RmJrTm9RME1zVDBGQlpUdERabmRFTjBJN08wRnJSR2hDUkN4QlFVRkJMRWxCUVVrc1FVRkJRU3hQUVVGUExFTkJRVU03UlVGSlZpeFpRVUZaTEVWdVF6bERReXhQUVVGbE8wVnRReXRETlVJc1MwRkJTeXhGYmtNM1ExRXNUMEZCWlR0RGJVTTBSRGRDT3p0QlFYQkNSQ3hCYkVSb1JVRXNTV3RFWjBWSkxFRkJRVUVzVDBGQlR5eEJiRVJvUlZZc1RVRkJUU3hGYTBSblJWQXNTVUZCU1N4QlFVRkJMRTlCUVU4c1FXeEVMMFJXTEUxQlFVMHNRMEZCUXp0RlMzTkNUaXhaUVVGWkxFVlZRME1zVDBGQlpUdEZWa0UxUWl4VlFVRlZMRVZtWkVjc2EwTkJRVGhDTzBOVlVEVkRPenRCYTBRMlJFUXNRV3hFZEVOQkxFbHJSSE5EU1N4QlFVRkJMRTlCUVU4c1FXeEVkRU5VTEUxQlFVMHNSV3RFYzBOU0xFbEJRVWtzUVVGQlFTeFBRVUZQTEVGc1JISkRWaXhOUVVGTkxFTkJRVU03UlV0RFRpeFpRVUZaTEVWVlNrTXNUMEZCWlR0RlZrczFRaXhMUVVGTExFVlZURkVzVDBGQlpUdERaa3MzUWpzN1FXdEViVU5FTEVGc1JIcEZRU3hKYTBSNVJVa3NRVUZCUVN4UFFVRlBMRUZzUkhwRlZDeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVWclJIbEZlRU1zU1VGQlNTeEJRVUZCTEU5QlFVOHNRV3hFZUVWV0xFbEJRVXNzUlVGMVIwTXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjJSMU1zU1VGQlN5eERRWFZIUXl4VFFVRlRMRU5CZGtkQkxFOUJRVThzUTBGQlF6dEZTM2xEZEVNc1dVRkJXU3hGY0VJMVFrNHNUMEZCYzBRN1JXOUNOa0kxUkN4TFFVRkxMRVZ3UWpkQ1F5eFBRVUZ6UkR0RFpWZzNSRHM3UVd0RWMwVkVMRUZzUkdoRlFTeEphMFJuUlVrc1FVRkJRU3hQUVVGUExFRkJWMDRzVTBGQlV5eEJiRVF6UldJc1RVRkJUU3hGYTBSblJWQXNTVUZCU1N4QlFVRkJMRTlCUVU4c1FVRlhUaXhUUVVGVExFRnNSREZGWWl4TlFVRk5MRU5CUVVNN1JVdHpRazRzV1VGQldTeEZWVWhETEU5QlFXVTdSVlpKTlVJc1ZVRkJWU3hGWm1SSExIRkRRVUU0UWp0RFZWQTFRenM3UVd0RU5rUkVMRUZzUkhSRFFTeEphMFJ6UTBrc1FVRkJRU3hQUVVGUExFRkJWMDRzVTBGQlV5eEJiRVJxUkZvc1RVRkJUU3hGYTBSelExSXNTVUZCU1N4QlFVRkJMRTlCUVU4c1FVRlhUaXhUUVVGVExFRnNSR2hFWWl4TlFVRk5MRU5CUVVNN1JVdERUaXhaUVVGWkxFVlZVa01zVDBGQlpUdEZWbE0xUWl4TFFVRkxMRVZWVkZFc1QwRkJaVHREWmxNM1FqczdRV3RFYlVORUxFRnNSSHBGUVN4SmEwUjVSVWtzUVVGQlFTeFBRVUZQTEVGQlYwNHNVMEZCVXl4QmJFUndSbG9zU1VGQlN5eEZRWGRIUVN4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhoSFZTeEpRVUZMTEVOQmQwZEJMRk5CUVZNc1EwRjRSME1zVDBGQlR5eEZhMFI1UlhoRExFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQlYwNHNVMEZCVXl4QmJFUnVSbUlzU1VGQlN5eEZRWFZIUXl4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhaSFV5eEpRVUZMTEVOQmRVZERMRk5CUVZNc1EwRjJSMEVzVDBGQlR5eERRVUZETzBWTGVVTjBReXhaUVVGWkxFVndRalZDVGl4UFFVRnpSRHRGYjBJMlFqVkVMRXRCUVVzc1JYQkNOMEpETEU5QlFYTkVPME5sV0RkRU96dEJhMFJ6UlVRc1FXeEVhRVZCTEVsclJHZEZTU3hCUVVGQkxFOUJRVThzUVVGWFRpeFJRVUZSTEVGc1JETkZXaXhOUVVGTkxFVnJSR2RGVUN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVZkT0xGRkJRVkVzUVd4RU1VVmFMRTFCUVUwc1EwRkJRenRGUzNOQ1RpeFpRVUZaTEVWVlJVTXNUMEZCWlR0RlZrUTFRaXhWUVVGVkxFVm1aRWNzYTBOQlFUaENPME5WVURWRE96dEJhMFEyUkVRc1FXeEVkRU5CTEVsclJITkRTU3hCUVVGQkxFOUJRVThzUVVGWFRpeFJRVUZSTEVGc1JHcEVXQ3hOUVVGTkxFVnJSSE5EVWl4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVZkT0xGRkJRVkVzUVd4RWFFUmFMRTFCUVUwc1EwRkJRenRGUzBOT0xGbEJRVmtzUlZWSVF5eFBRVUZsTzBWV1NUVkNMRXRCUVVzc1JWVktVU3hQUVVGbE8wTm1TVGRDT3p0QmEwUnRRMFFzUVd4RWVrVkJMRWxyUkhsRlNTeEJRVUZCTEU5QlFVOHNRVUZYVGl4UlFVRlJMRUZzUkhCR1dDeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVWclJIbEZlRU1zU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUZYVGl4UlFVRlJMRUZzUkc1R1dpeEpRVUZMTEVWQmRVZERMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJka2RUTEVsQlFVc3NRMEYxUjBNc1UwRkJVeXhEUVhaSFFTeFBRVUZQTEVOQlFVTTdSVXQ1UTNSRExGbEJRVmtzUlhCQ05VSk9MRTlCUVhORU8wVnZRalpDTlVRc1MwRkJTeXhGY0VJM1FrTXNUMEZCYzBRN1EyVllOMFE3TzBGclJITkZSQ3hCYkVSb1JVRXNTV3RFWjBWSkxFRkJRVUVzVDBGQlR5eEJRVmRPTEZkQlFWY3NRV3hFTTBWbUxFMUJRVTBzUld0RVowVlFMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJWMDRzVjBGQlZ5eEJiRVF4UldZc1RVRkJUU3hEUVVGRE8wVkxjMEpPTEZsQlFWa3NSVlV4UTBFc1QwRkJUenRGVmpKRGJrSXNWVUZCVlN4RlptUkhMRzlEUVVFNFFqdERWVkExUXpzN1FXdEVOa1JFTEVGc1JIUkRRU3hKYTBSelEwa3NRVUZCUVN4UFFVRlBMRUZCVjA0c1YwRkJWeXhCYkVScVJHUXNUVUZCVFN4RmEwUnpRMUlzU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUZYVGl4WFFVRlhMRUZzUkdoRVppeE5RVUZOTEVOQlFVTTdSVXREVGl4WlFVRlpMRVZWTDBOQkxFOUJRVTg3UlZablJHNUNMRXRCUVVzc1JWVm9SRThzVDBGQlR6dERabWRFY0VJN08wRnJSRzFEUkN4QmJFUjZSVUVzU1d0RWVVVkpMRUZCUVVFc1QwRkJUeXhCUVZkT0xGZEJRVmNzUVd4RWNFWmtMRWxCUVVzc1JVRjNSMEVzUVVGQlFTeFJRVUZETEVGQlFVRXNSVUY0UjFVc1NVRkJTeXhEUVhkSFFTeFRRVUZUTEVOQmVFZERMRTlCUVU4c1JXdEVlVVY0UXl4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVZkT0xGZEJRVmNzUVd4RWJrWm1MRWxCUVVzc1JVRjFSME1zUVVGQlFTeFJRVUZETEVGQlFVRXNSVUYyUjFNc1NVRkJTeXhEUVhWSFF5eFRRVUZUTEVOQmRrZEJMRTlCUVU4c1EwRkJRenRGUzNsRGRFTXNXVUZCV1N4RmNFSTFRazRzVDBGQmMwUTdSVzlDTmtJMVJDeExRVUZMTEVWd1FqZENReXhQUVVGelJEdERaVmczUkRzN1FXdEVjMFZFTEVGc1JHaEZRU3hKYTBSblJVa3NRVUZCUVN4UFFVRlBMRUZCVjA0c1lVRkJZU3hCYkVRelJXcENMRTFCUVUwc1JXdEVaMFZRTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCVjA0c1lVRkJZU3hCYkVReFJXcENMRTFCUVUwc1EwRkJRenRGUzNOQ1RpeFpRVUZaTEVWVlFVTXNTVUZCWlR0RlZrTTFRaXhWUVVGVkxFVm1aRWNzY1VOQlFUaENPME5WVURWRE96dEJhMFEyUkVRc1FXeEVkRU5CTEVsclJITkRTU3hCUVVGQkxFOUJRVThzUVVGWFRpeGhRVUZoTEVGc1JHcEVhRUlzVFVGQlRTeEZhMFJ6UTFJc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVGWFRpeGhRVUZoTEVGc1JHaEVha0lzVFVGQlRTeERRVUZETzBWTFEwNHNXVUZCV1N4RlZVeERMRWxCUVdVN1JWWk5OVUlzUzBGQlN5eEZWVTVSTEVsQlFXVTdRMlpOTjBJN08wRnJSRzFEUkN4QmJFUjZSVUVzU1d0RWVVVkpMRUZCUVVFc1QwRkJUeXhCUVZkT0xHRkJRV0VzUVd4RWNFWm9RaXhKUVVGTExFVkJkMGRCTEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCZUVkVkxFbEJRVXNzUTBGM1IwRXNVMEZCVXl4RFFYaEhReXhQUVVGUExFVnJSSGxGZUVNc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVGWFRpeGhRVUZoTEVGc1JHNUdha0lzU1VGQlN5eEZRWFZIUXl4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhaSFV5eEpRVUZMTEVOQmRVZERMRk5CUVZNc1EwRjJSMEVzVDBGQlR5eERRVUZETzBWTGVVTjBReXhaUVVGWkxFVndRalZDVGl4UFFVRnpSRHRGYjBJMlFqVkVMRXRCUVVzc1JYQkNOMEpETEU5QlFYTkVPME5sV0RkRU96dEJhMFJ6UlVRc1FXeEVhRVZCTEVsclJHZEZTU3hCUVVGQkxFOUJRVThzUVVGWFRpeFJRVUZSTEVGc1JETkZXaXhOUVVGTkxFVnJSR2RGVUN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVZkT0xGRkJRVkVzUVd4RU1VVmFMRTFCUVUwc1EwRkJRenRGUzNOQ1RpeFpRVUZaTEVWVmJrTkJMRTlCUVU4N1JWWnZRMjVDTEZWQlFWVXNSV1prUnl4dlEwRkJPRUk3UTFWUU5VTTdPMEZyUkRaRVJDeEJiRVIwUTBFc1NXdEVjME5KTEVGQlFVRXNUMEZCVHl4QlFWZE9MRkZCUVZFc1FXeEVha1JZTEUxQlFVMHNSV3RFYzBOU0xFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQlYwNHNVVUZCVVN4QmJFUm9SRm9zVFVGQlRTeERRVUZETzBWTFEwNHNXVUZCV1N4RlZYaERRU3hQUVVGUE8wVldlVU51UWl4TFFVRkxMRVZWZWtOUExFOUJRVTg3UTJaNVEzQkNPenRCYTBSdFEwUXNRV3hFZWtWQkxFbHJSSGxGU1N4QlFVRkJMRTlCUVU4c1FVRlhUaXhSUVVGUkxFRnNSSEJHV0N4SlFVRkxMRVZCZDBkQkxFRkJRVUVzVVVGQlF5eEJRVUZCTEVWQmVFZFZMRWxCUVVzc1EwRjNSMEVzVTBGQlV5eERRWGhIUXl4UFFVRlBMRVZyUkhsRmVFTXNTVUZCU1N4QlFVRkJMRTlCUVU4c1FVRlhUaXhSUVVGUkxFRnNSRzVHV2l4SlFVRkxMRVZCZFVkRExFRkJRVUVzVVVGQlF5eEJRVUZCTEVWQmRrZFRMRWxCUVVzc1EwRjFSME1zVTBGQlV5eERRWFpIUVN4UFFVRlBMRU5CUVVNN1JVdDVRM1JETEZsQlFWa3NSWEJDTlVKT0xFOUJRWE5FTzBWdlFqWkNOVVFzUzBGQlN5eEZjRUkzUWtNc1QwRkJjMFE3UTJWWU4wUTdPMEZyUkhORlJDeEJiRVJvUlVFc1NXdEVaMFZKTEVGQlFVRXNUMEZCVHl4QlFWZE9MRkZCUVZFc1FXeEVNMFZhTEUxQlFVMHNSV3RFWjBWUUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQlYwNHNVVUZCVVN4QmJFUXhSVm9zVFVGQlRTeERRVUZETzBWTGMwSk9MRmxCUVZrc1JWVjBRMEVzVDBGQlR6dEZWblZEYmtJc1ZVRkJWU3hGWm1SSExHOURRVUU0UWp0RFZWQTFRenM3UVd0RU5rUkVMRUZzUkhSRFFTeEphMFJ6UTBrc1FVRkJRU3hQUVVGUExFRkJWMDRzVVVGQlVTeEJiRVJxUkZnc1RVRkJUU3hGYTBSelExSXNTVUZCU1N4QlFVRkJMRTlCUVU4c1FVRlhUaXhSUVVGUkxFRnNSR2hFV2l4TlFVRk5MRU5CUVVNN1JVdERUaXhaUVVGWkxFVlZNME5CTEU5QlFVODdSVlkwUTI1Q0xFdEJRVXNzUlZVMVEwOHNUMEZCVHp0RFpqUkRjRUk3TzBGclJHMURSQ3hCYkVSNlJVRXNTV3RFZVVWSkxFRkJRVUVzVDBGQlR5eEJRVmRPTEZGQlFWRXNRV3hFY0VaWUxFbEJRVXNzUlVGM1IwRXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjRSMVVzU1VGQlN5eERRWGRIUVN4VFFVRlRMRU5CZUVkRExFOUJRVThzUld0RWVVVjRReXhKUVVGSkxFRkJRVUVzVDBGQlR5eEJRVmRPTEZGQlFWRXNRV3hFYmtaYUxFbEJRVXNzUlVGMVIwTXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjJSMU1zU1VGQlN5eERRWFZIUXl4VFFVRlRMRU5CZGtkQkxFOUJRVThzUTBGQlF6dEZTM2xEZEVNc1dVRkJXU3hGY0VJMVFrNHNUMEZCYzBRN1JXOUNOa0kxUkN4TFFVRkxMRVZ3UWpkQ1F5eFBRVUZ6UkR0RFpWZzNSRHM3UVd0RWMwVkVMRUZzUkdoRlFTeEphMFJuUlVrc1FVRkJRU3hQUVVGUExFRkJWMDRzVTBGQlV5eEJiRVF6UldJc1RVRkJUU3hGYTBSblJWQXNTVUZCU1N4QlFVRkJMRTlCUVU4c1FVRlhUaXhUUVVGVExFRnNSREZGWWl4TlFVRk5MRU5CUVVNN1JVdHpRazRzV1VGQldTeEZWWEpEUVN4UFFVRlBPMFZXYzBOdVFpeFZRVUZWTEVWbVpFY3NiVU5CUVRoQ08wTlZVRFZET3p0QmEwUTJSRVFzUVd4RWRFTkJMRWxyUkhORFNTeEJRVUZCTEU5QlFVOHNRVUZYVGl4VFFVRlRMRUZzUkdwRVdpeE5RVUZOTEVWclJITkRVaXhKUVVGSkxFRkJRVUVzVDBGQlR5eEJRVmRPTEZOQlFWTXNRV3hFYUVSaUxFMUJRVTBzUTBGQlF6dEZTME5PTEZsQlFWa3NSVlV4UTBFc1QwRkJUenRGVmpKRGJrSXNTMEZCU3l4RlZUTkRUeXhQUVVGUE8wTm1Na053UWpzN1FXdEViVU5FTEVGc1JIcEZRU3hKYTBSNVJVa3NRVUZCUVN4UFFVRlBMRUZCVjA0c1UwRkJVeXhCYkVSd1Jsb3NTVUZCU3l4RlFYZEhRU3hCUVVGQkxGRkJRVU1zUVVGQlFTeEZRWGhIVlN4SlFVRkxMRU5CZDBkQkxGTkJRVk1zUTBGNFIwTXNUMEZCVHl4RmEwUjVSWGhETEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCVjA0c1UwRkJVeXhCYkVSdVJtSXNTVUZCU3l4RlFYVkhReXhCUVVGQkxGRkJRVU1zUVVGQlFTeEZRWFpIVXl4SlFVRkxMRU5CZFVkRExGTkJRVk1zUTBGMlIwRXNUMEZCVHl4RFFVRkRPMFZMZVVOMFF5eFpRVUZaTEVWd1FqVkNUaXhQUVVGelJEdEZiMEkyUWpWRUxFdEJRVXNzUlhCQ04wSkRMRTlCUVhORU8wTmxXRGRFT3p0QmEwUnpSVVFzUVd4RWFFVkJMRWxyUkdkRlNTeEJRVUZCTEU5QlFVOHNRVUZYVGl4VFFVRlRMRUZzUkRORllpeE5RVUZOTEVWclJHZEZVQ3hKUVVGSkxFRkJRVUVzVDBGQlR5eEJRVmRPTEZOQlFWTXNRV3hFTVVWaUxFMUJRVTBzUTBGQlF6dEZTM05DVGl4WlFVRlpMRVZWZUVOQkxFOUJRVTg3UlZaNVEyNUNMRlZCUVZVc1JXWmtSeXh0UTBGQk9FSTdRMVZRTlVNN08wRnJSRFpFUkN4QmJFUjBRMEVzU1d0RWMwTkpMRUZCUVVFc1QwRkJUeXhCUVZkT0xGTkJRVk1zUVd4RWFrUmFMRTFCUVUwc1JXdEVjME5TTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCVjA0c1UwRkJVeXhCYkVSb1JHSXNUVUZCVFN4RFFVRkRPMFZMUTA0c1dVRkJXU3hGVlRkRFFTeFBRVUZQTzBWV09FTnVRaXhMUVVGTExFVlZPVU5QTEU5QlFVODdRMlk0UTNCQ096dEJhMFJ0UTBRc1FXeEVla1ZCTEVsclJIbEZTU3hCUVVGQkxFOUJRVThzUVVGWFRpeFRRVUZUTEVGc1JIQkdXaXhKUVVGTExFVkJkMGRCTEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCZUVkVkxFbEJRVXNzUTBGM1IwRXNVMEZCVXl4RFFYaEhReXhQUVVGUExFVnJSSGxGZUVNc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVGWFRpeFRRVUZUTEVGc1JHNUdZaXhKUVVGTExFVkJkVWRETEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCZGtkVExFbEJRVXNzUTBGMVIwTXNVMEZCVXl4RFFYWkhRU3hQUVVGUExFTkJRVU03UlV0NVEzUkRMRmxCUVZrc1JYQkNOVUpPTEU5QlFYTkVPMFZ2UWpaQ05VUXNTMEZCU3l4RmNFSTNRa01zVDBGQmMwUTdRMlZZTjBRN08wRnJSSE5GUkN4QmJFUmhRU3hKYTBSaVNTeEJRVUZCTEU5QlFVOHNRMnhFWVZRc1FVRkJRU3hSUVVGRExFRkJRVUVzUjJ0RVlrZ3NTVUZCU1N4QlFVRkJMRTlCUVU4c1FXeEVZMVlzVTBGQlV5eERRVUZETzBWclJFZFFMRmxCUVZrc1JXNURla1JFTEU5QlFXVTdSVzFETUVReFFpeExRVUZMTEVWdVF6RkVUU3hQUVVGbE8wTm1kMFEzUWpzN1FXdEVUMFFzUVVGQlFTeEpRVUZKTEVGQlFVRXNUMEZCVHl4RFFVRkRPMFZCU1ZZc1dVRkJXU3hGUVVGRkxFTkJRVU03UlVGRFppeHRRa0ZCYlVJc1JXNURkRVZPTEU5QlFXVTdSVzFEZFVVMVFpeFhRVUZYTEVWQlFVVXNRMEZCUXp0RlFVTmtMR0ZCUVdFc1JVRkJaMElzUTBGQlF6dEZRVU01UWl4VlFVRlZMRVZCUVdFc1NVRkJTVHREUVdsRU5VSTdPMEZCZWtSRUxFRnFSREZIUVN4SmFVUXdSMGtzUVVGQlFTeFBRVUZQTEVGcVJERkhWaXhSUVVGUkxFTkJRVU03UldsRWNVaE9MRTlCUVU4c1JVRkJSU3hGUVVGRk8wVkJRMWdzVVVGQlVTeEZRVUZGTEZGQlFWRTdSVUZEYkVJc1MwRkJTeXhGUVVGRkxFTkJRVU03UlVGRFVpeE5RVUZOTEVWQlFVVXNTVUZCU1R0RlFVTmFMRWxCUVVrc1JVRkJSU3hIUVVGSE8wVkJRMVFzVTBGQlV5eEZRVUZGTEdkQ1FVRm5RanRGUVVNelFpeExRVUZMTEVWQlFVVXNRMEZCUXp0RlFVTlNMR0ZCUVdFc1JVRkJSU3hIUVVGM1FpeERRVUZETEV0QlFVczdSV2hFZGtndlF5eFZRVUZWTEVWaVZXdENMRFpFUVVFclJEdERXV0kxUmpzN1FXbEVkMGRFTEVGc1JIQkVRU3hKYTBSdlJFa3NRVUZCUVN4UFFVRlBMRUZzUkhCRVZpeE5RVUZOTEVWclJHOUVVQ3hKUVVGSkxFRkJRVUVzVDBGQlR5eEJiRVJ1UkZZc1RVRkJUU3hGYTBSdFJGQXNTVUZCU1N4QlFVRkJMRTlCUVU4c1FXeEViRVJXTEUxQlFVMHNSV3RFYTBSUUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGc1JHcEVWaXhOUVVGTkxFTkJRVU03UlV0TFRpeExRVUZMTEVWVmJrSlJMRTlCUVdVN1EyWm5RamRDT3p0QmEwUXJRMFFzUVdwRU1VZEJMRWxwUkRCSFNTeEJRVUZCTEU5QlFVOHNRV3hFY0VSV0xFMUJRVTBzUVVOMFJFNHNVVUZCVVN4RmFVUXdSMVFzU1VGQlNTeEJRVUZCTEU5QlFVOHNRV3hFYmtSV0xFMUJRVTBzUVVOMlJFNHNVVUZCVVN4RmFVUXdSMVFzU1VGQlNTeEJRVUZCTEU5QlFVOHNRV3hFYkVSV0xFMUJRVTBzUVVONFJFNHNVVUZCVVN4RmFVUXdSMVFzU1VGQlNTeEJRVUZCTEU5QlFVOHNRV3hFYWtSV0xFMUJRVTBzUVVONlJFNHNVVUZCVVN4RFFVRkRPMFZKWjBWT0xHMUNRVUZ0UWl4RlZYSkNVaXhQUVVGbE8wTmtla00zUWpzN1FXbEVkMGRFTEVGc1JHaEhRU3hKYTBSblIwa3NRVUZCUVN4UFFVRlBMRUZzUkdoSFZDeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVWclJHZEhlRU1zU1VGQlNTeEJRVUZCTEU5QlFVOHNRV3hFTDBaV0xFbEJRVXNzUlVGMVIwTXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjJSMU1zU1VGQlN5eERRWFZIUXl4VFFVRlRMRU5CZGtkQkxFOUJRVThzUTBGQlF6dEZTekJFZEVNc1MwRkJTeXhGY0VJM1EwTXNUMEZCYzBRN1EyVllOMFE3TzBGclJEWkdSQ3hCYWtReFIwRXNTV2xFTUVkSkxFRkJRVUVzVDBGQlR5eEJiRVJvUjFRc1NVRkJTeXhGUVhkSFFTeEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFYaEhWU3hKUVVGTExFTkJkMGRCTEZOQlFWTXNRMEY0UjBNc1QwRkJUeXhCUTFaMlF5eFJRVUZSTEVWcFJEQkhWQ3hKUVVGSkxFRkJRVUVzVDBGQlR5eEJiRVF2UmxZc1NVRkJTeXhGUVhWSFF5eEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFYWkhVeXhKUVVGTExFTkJkVWRETEZOQlFWTXNRMEYyUjBFc1QwRkJUeXhCUTFoMFF5eFJRVUZSTEVOQlFVTTdSVWwxUlU0c2JVSkJRVzFDTEVWd1FpOURaaXhQUVVGelJEdERaMEowUWpkRU96dEJhVVIzUjBRc1FXcEVNVWRCTEVscFJEQkhTU3hCUVVGQkxFOUJRVThzUVRkREwwSldMRmRCUVZjc1FVb3pSVmdzVVVGQlVTeERRVUZETzBWRmNVSlNMRXRCUVVzc1JWbHpRbEVzVDBGQlpUdERaSHBETjBJN08wRnBSSGRIUkN4QmJFUndSRUVzU1d0RWIwUkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFRRVUZUTEVGc1JEbEZZaXhOUVVGTkxFVnJSRzlFVUN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFRRVUZUTEVGc1JEZEZZaXhOUVVGTkxFVnJSRzFFVUN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFRRVUZUTEVGc1JEVkZZaXhOUVVGTkxFVnJSR3RFVUN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFRRVUZUTEVGc1JETkZZaXhOUVVGTkxFTkJRVU03UlV0TFRpeExRVUZMTEVWVmRrSlJMRTlCUVdVN1EyWnZRamRDT3p0QmEwUXJRMFFzUVdwRU1VZEJMRWxwUkRCSFNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1UwRkJVeXhCYkVRNVJXSXNUVUZCVFN4QlEzUkVUaXhSUVVGUkxFVnBSREJIVkN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFRRVUZUTEVGc1JEZEZZaXhOUVVGTkxFRkRka1JPTEZGQlFWRXNSV2xFTUVkVUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQk1FSk9MRk5CUVZNc1FXeEVOVVZpTEUxQlFVMHNRVU40UkU0c1VVRkJVU3hGYVVRd1IxUXNTVUZCU1N4QlFVRkJMRTlCUVU4c1FVRXdRazRzVTBGQlV5eEJiRVF6UldJc1RVRkJUU3hCUTNwRVRpeFJRVUZSTEVOQlFVTTdSVWxuUlU0c2JVSkJRVzFDTEVWVmVrSlNMRTlCUVdVN1EyUnlRemRDT3p0QmFVUjNSMFFzUVd4RWFFZEJMRWxyUkdkSFNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1UwRkJVeXhCYkVReFNGb3NTVUZCU3l4RlFYZEhRU3hCUVVGQkxGRkJRVU1zUVVGQlFTeEZRWGhIVlN4SlFVRkxMRU5CZDBkQkxGTkJRVk1zUTBGNFIwTXNUMEZCVHl4RmEwUm5SM2hETEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGTkJRVk1zUVd4RWVraGlMRWxCUVVzc1JVRjFSME1zUVVGQlFTeFJRVUZETEVGQlFVRXNSVUYyUjFNc1NVRkJTeXhEUVhWSFF5eFRRVUZUTEVOQmRrZEJMRTlCUVU4c1EwRkJRenRGU3pCRWRFTXNTMEZCU3l4RmNFSTNRME1zVDBGQmMwUTdRMlZZTjBRN08wRnJSRFpHUkN4QmFrUXhSMEVzU1dsRU1FZEpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFRRVUZUTEVGc1JERklXaXhKUVVGTExFVkJkMGRCTEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCZUVkVkxFbEJRVXNzUTBGM1IwRXNVMEZCVXl4RFFYaEhReXhQUVVGUExFRkRWblpETEZGQlFWRXNSV2xFTUVkVUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQk1FSk9MRk5CUVZNc1FXeEVla2hpTEVsQlFVc3NSVUYxUjBNc1FVRkJRU3hSUVVGRExFRkJRVUVzUlVGMlIxTXNTVUZCU3l4RFFYVkhReXhUUVVGVExFTkJka2RCTEU5QlFVOHNRVU5ZZEVNc1VVRkJVU3hEUVVGRE8wVkpkVVZPTEcxQ1FVRnRRaXhGY0VJdlEyWXNUMEZCYzBRN1EyZENkRUkzUkRzN1FXbEVkMGRFTEVGcVJERkhRU3hKYVVRd1Iwa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGTkJRVk1zUVRkRGVrUmlMRmRCUVZjc1FVb3pSVmdzVVVGQlVTeERRVUZETzBWRmNVSlNMRXRCUVVzc1JWbHJRbEVzVDBGQlpUdERaSEpETjBJN08wRnBSSGRIUkN4QmJFUndSRUVzU1d0RWIwUkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFJRVUZSTEVGc1JEbEZXaXhOUVVGTkxFVnJSRzlFVUN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFJRVUZSTEVGc1JEZEZXaXhOUVVGTkxFVnJSRzFFVUN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFJRVUZSTEVGc1JEVkZXaXhOUVVGTkxFVnJSR3RFVUN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFJRVUZSTEVGc1JETkZXaXhOUVVGTkxFTkJRVU03UlV0TFRpeExRVUZMTEVWVmJFSlJMRTlCUVdVN1EyWmxOMEk3TzBGclJDdERSQ3hCYWtReFIwRXNTV2xFTUVkSkxFRkJRVUVzVDBGQlR5eEJRVEJDVGl4UlFVRlJMRUZzUkRsRldpeE5RVUZOTEVGRGRFUk9MRkZCUVZFc1JXbEVNRWRVTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGRkJRVkVzUVd4RU4wVmFMRTFCUVUwc1FVTjJSRTRzVVVGQlVTeEZhVVF3UjFRc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNVVUZCVVN4QmJFUTFSVm9zVFVGQlRTeEJRM2hFVGl4UlFVRlJMRVZwUkRCSFZDeEpRVUZKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhSUVVGUkxFRnNSRE5GV2l4TlFVRk5MRUZEZWtST0xGRkJRVkVzUTBGQlF6dEZTV2RGVGl4dFFrRkJiVUlzUlZWd1FsSXNUMEZCWlR0RFpERkROMEk3TzBGcFJIZEhSQ3hCYkVSb1IwRXNTV3RFWjBkSkxFRkJRVUVzVDBGQlR5eEJRVEJDVGl4UlFVRlJMRUZzUkRGSVdDeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVWclJHZEhlRU1zU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1VVRkJVU3hCYkVSNlNGb3NTVUZCU3l4RlFYVkhReXhCUVVGQkxGRkJRVU1zUVVGQlFTeEZRWFpIVXl4SlFVRkxMRU5CZFVkRExGTkJRVk1zUTBGMlIwRXNUMEZCVHl4RFFVRkRPMFZMTUVSMFF5eExRVUZMTEVWd1FqZERReXhQUVVGelJEdERaVmczUkRzN1FXdEVOa1pFTEVGcVJERkhRU3hKYVVRd1Iwa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGRkJRVkVzUVd4RU1VaFlMRWxCUVVzc1JVRjNSMEVzUVVGQlFTeFJRVUZETEVGQlFVRXNSVUY0UjFVc1NVRkJTeXhEUVhkSFFTeFRRVUZUTEVOQmVFZERMRTlCUVU4c1FVTldka01zVVVGQlVTeEZhVVF3UjFRc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNVVUZCVVN4QmJFUjZTRm9zU1VGQlN5eEZRWFZIUXl4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhaSFV5eEpRVUZMTEVOQmRVZERMRk5CUVZNc1EwRjJSMEVzVDBGQlR5eEJRMWgwUXl4UlFVRlJMRU5CUVVNN1JVbDFSVTRzYlVKQlFXMUNMRVZ3UWk5RFppeFBRVUZ6UkR0RFowSjBRamRFT3p0QmFVUjNSMFFzUVdwRU1VZEJMRWxwUkRCSFNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1VVRkJVU3hCTjBONlJGb3NWMEZCVnl4QlNqTkZXQ3hSUVVGUkxFTkJRVU03UlVWeFFsSXNTMEZCU3l4RldYVkNVU3hQUVVGbE8wTmtNVU0zUWpzN1FXbEVkMGRFTEVGc1JIQkVRU3hKYTBSdlJFa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGZEJRVmNzUVd4RU9VVm1MRTFCUVUwc1JXdEViMFJRTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGZEJRVmNzUVd4RU4wVm1MRTFCUVUwc1JXdEViVVJRTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGZEJRVmNzUVd4RU5VVm1MRTFCUVUwc1JXdEVhMFJRTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGZEJRVmNzUVd4RU0wVm1MRTFCUVUwc1EwRkJRenRGUzB0T0xFdEJRVXNzUlZVNVJFOHNUMEZCVHp0RFpqSkVjRUk3TzBGclJDdERSQ3hCYWtReFIwRXNTV2xFTUVkSkxFRkJRVUVzVDBGQlR5eEJRVEJDVGl4WFFVRlhMRUZzUkRsRlppeE5RVUZOTEVGRGRFUk9MRkZCUVZFc1JXbEVNRWRVTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGZEJRVmNzUVd4RU4wVm1MRTFCUVUwc1FVTjJSRTRzVVVGQlVTeEZhVVF3UjFRc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNWMEZCVnl4QmJFUTFSV1lzVFVGQlRTeEJRM2hFVGl4UlFVRlJMRVZwUkRCSFZDeEpRVUZKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhYUVVGWExFRnNSRE5GWml4TlFVRk5MRUZEZWtST0xGRkJRVkVzUTBGQlF6dEZTV2RGVGl4dFFrRkJiVUlzUlZWb1JWUXNUMEZCVHp0RFpFVndRanM3UVdsRWQwZEVMRUZzUkdoSFFTeEphMFJuUjBrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZkQlFWY3NRV3hFTVVoa0xFbEJRVXNzUlVGM1IwRXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjRSMVVzU1VGQlN5eERRWGRIUVN4VFFVRlRMRU5CZUVkRExFOUJRVThzUld0RVowZDRReXhKUVVGSkxFRkJRVUVzVDBGQlR5eEJRVEJDVGl4WFFVRlhMRUZzUkhwSVppeEpRVUZMTEVWQmRVZERMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJka2RUTEVsQlFVc3NRMEYxUjBNc1UwRkJVeXhEUVhaSFFTeFBRVUZQTEVOQlFVTTdSVXN3UkhSRExFdEJRVXNzUlhCQ04wTkRMRTlCUVhORU8wTmxXRGRFT3p0QmEwUTJSa1FzUVdwRU1VZEJMRWxwUkRCSFNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1YwRkJWeXhCYkVReFNHUXNTVUZCU3l4RlFYZEhRU3hCUVVGQkxGRkJRVU1zUVVGQlFTeEZRWGhIVlN4SlFVRkxMRU5CZDBkQkxGTkJRVk1zUTBGNFIwTXNUMEZCVHl4QlExWjJReXhSUVVGUkxFVnBSREJIVkN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFhRVUZYTEVGc1JIcElaaXhKUVVGTExFVkJkVWRETEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCZGtkVExFbEJRVXNzUTBGMVIwTXNVMEZCVXl4RFFYWkhRU3hQUVVGUExFRkRXSFJETEZGQlFWRXNRMEZCUXp0RlNYVkZUaXh0UWtGQmJVSXNSWEJDTDBObUxFOUJRWE5FTzBOblFuUkNOMFE3TzBGcFJIZEhSQ3hCYWtReFIwRXNTV2xFTUVkSkxFRkJRVUVzVDBGQlR5eEJRVEJDVGl4WFFVRlhMRUUzUTNwRVppeFhRVUZYTEVGS00wVllMRkZCUVZFc1EwRkJRenRGUlhGQ1VpeExRVUZMTEVWWmNrSlBMRTlCUVU4N1EyUkZjRUk3TzBGcFJIZEhSQ3hCYkVSd1JFRXNTV3RFYjBSSkxFRkJRVUVzVDBGQlR5eEJRVEJDVGl4aFFVRmhMRUZzUkRsRmFrSXNUVUZCVFN4RmEwUnZSRkFzU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1lVRkJZU3hCYkVRM1JXcENMRTFCUVUwc1JXdEViVVJRTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xHRkJRV0VzUVd4RU5VVnFRaXhOUVVGTkxFVnJSR3RFVUN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeGhRVUZoTEVGc1JETkZha0lzVFVGQlRTeERRVUZETzBWTFMwNHNTMEZCU3l4RlZYQkNVU3hKUVVGbE8wTm1hVUkzUWpzN1FXdEVLME5FTEVGcVJERkhRU3hKYVVRd1Iwa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xHRkJRV0VzUVd4RU9VVnFRaXhOUVVGTkxFRkRkRVJPTEZGQlFWRXNSV2xFTUVkVUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQk1FSk9MR0ZCUVdFc1FXeEVOMFZxUWl4TlFVRk5MRUZEZGtST0xGRkJRVkVzUldsRU1FZFVMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEdGQlFXRXNRV3hFTlVWcVFpeE5RVUZOTEVGRGVFUk9MRkZCUVZFc1JXbEVNRWRVTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xHRkJRV0VzUVd4RU0wVnFRaXhOUVVGTkxFRkRla1JPTEZGQlFWRXNRMEZCUXp0RlNXZEZUaXh0UWtGQmJVSXNSVlYwUWxJc1NVRkJaVHREWkhoRE4wSTdPMEZwUkhkSFJDeEJiRVJvUjBFc1NXdEVaMGRKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhoUVVGaExFRnNSREZJYUVJc1NVRkJTeXhGUVhkSFFTeEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFYaEhWU3hKUVVGTExFTkJkMGRCTEZOQlFWTXNRMEY0UjBNc1QwRkJUeXhGYTBSblIzaERMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEdGQlFXRXNRV3hFZWtocVFpeEpRVUZMTEVWQmRVZERMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJka2RUTEVsQlFVc3NRMEYxUjBNc1UwRkJVeXhEUVhaSFFTeFBRVUZQTEVOQlFVTTdSVXN3UkhSRExFdEJRVXNzUlhCQ04wTkRMRTlCUVhORU8wTmxXRGRFT3p0QmEwUTJSa1FzUVdwRU1VZEJMRWxwUkRCSFNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1lVRkJZU3hCYkVReFNHaENMRWxCUVVzc1JVRjNSMEVzUVVGQlFTeFJRVUZETEVGQlFVRXNSVUY0UjFVc1NVRkJTeXhEUVhkSFFTeFRRVUZUTEVOQmVFZERMRTlCUVU4c1FVTldka01zVVVGQlVTeEZhVVF3UjFRc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNZVUZCWVN4QmJFUjZTR3BDTEVsQlFVc3NSVUYxUjBNc1FVRkJRU3hSUVVGRExFRkJRVUVzUlVGMlIxTXNTVUZCU3l4RFFYVkhReXhUUVVGVExFTkJka2RCTEU5QlFVOHNRVU5ZZEVNc1VVRkJVU3hEUVVGRE8wVkpkVVZPTEcxQ1FVRnRRaXhGY0VJdlEyWXNUMEZCYzBRN1EyZENkRUkzUkRzN1FXbEVkMGRFTEVGcVJERkhRU3hKYVVRd1Iwa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xHRkJRV0VzUVRkRGVrUnFRaXhYUVVGWExFRktNMFZZTEZGQlFWRXNRMEZCUXp0RlJYRkNVaXhMUVVGTExFVlpjVUpSTEVsQlFXVTdRMlI0UXpkQ096dEJhVVIzUjBRc1FXeEVjRVJCTEVsclJHOUVTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNVVUZCVVN4QmJFUTVSVm9zVFVGQlRTeEZhMFJ2UkZBc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNVVUZCVVN4QmJFUTNSVm9zVFVGQlRTeEZhMFJ0UkZBc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNVVUZCVVN4QmJFUTFSVm9zVFVGQlRTeEZhMFJyUkZBc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNVVUZCVVN4QmJFUXpSVm9zVFVGQlRTeERRVUZETzBWTFMwNHNTMEZCU3l4RlZYWkVUeXhQUVVGUE8wTm1iMFJ3UWpzN1FXdEVLME5FTEVGcVJERkhRU3hKYVVRd1Iwa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGRkJRVkVzUVd4RU9VVmFMRTFCUVUwc1FVTjBSRTRzVVVGQlVTeEZhVVF3UjFRc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNVVUZCVVN4QmJFUTNSVm9zVFVGQlRTeEJRM1pFVGl4UlFVRlJMRVZwUkRCSFZDeEpRVUZKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhSUVVGUkxFRnNSRFZGV2l4TlFVRk5MRUZEZUVST0xGRkJRVkVzUldsRU1FZFVMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZGQlFWRXNRV3hFTTBWYUxFMUJRVTBzUVVONlJFNHNVVUZCVVN4RFFVRkRPMFZKWjBWT0xHMUNRVUZ0UWl4RlZYcEVWQ3hQUVVGUE8wTmtUSEJDT3p0QmFVUjNSMFFzUVd4RWFFZEJMRWxyUkdkSFNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1VVRkJVU3hCYkVReFNGZ3NTVUZCU3l4RlFYZEhRU3hCUVVGQkxGRkJRVU1zUVVGQlFTeEZRWGhIVlN4SlFVRkxMRU5CZDBkQkxGTkJRVk1zUTBGNFIwTXNUMEZCVHl4RmEwUm5SM2hETEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGRkJRVkVzUVd4RWVraGFMRWxCUVVzc1JVRjFSME1zUVVGQlFTeFJRVUZETEVGQlFVRXNSVUYyUjFNc1NVRkJTeXhEUVhWSFF5eFRRVUZUTEVOQmRrZEJMRTlCUVU4c1EwRkJRenRGU3pCRWRFTXNTMEZCU3l4RmNFSTNRME1zVDBGQmMwUTdRMlZZTjBRN08wRnJSRFpHUkN4QmFrUXhSMEVzU1dsRU1FZEpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFJRVUZSTEVGc1JERklXQ3hKUVVGTExFVkJkMGRCTEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCZUVkVkxFbEJRVXNzUTBGM1IwRXNVMEZCVXl4RFFYaEhReXhQUVVGUExFRkRWblpETEZGQlFWRXNSV2xFTUVkVUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQk1FSk9MRkZCUVZFc1FXeEVla2hhTEVsQlFVc3NSVUYxUjBNc1FVRkJRU3hSUVVGRExFRkJRVUVzUlVGMlIxTXNTVUZCU3l4RFFYVkhReXhUUVVGVExFTkJka2RCTEU5QlFVOHNRVU5ZZEVNc1VVRkJVU3hEUVVGRE8wVkpkVVZPTEcxQ1FVRnRRaXhGY0VJdlEyWXNUMEZCYzBRN1EyZENkRUkzUkRzN1FXbEVkMGRFTEVGcVJERkhRU3hKYVVRd1Iwa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGRkJRVkVzUVRkRGVrUmFMRmRCUVZjc1FVb3pSVmdzVVVGQlVTeERRVUZETzBWRmNVSlNMRXRCUVVzc1JWbGtUeXhQUVVGUE8wTmtUSEJDT3p0QmFVUjNSMFFzUVd4RWNFUkJMRWxyUkc5RVNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1VVRkJVU3hCYkVRNVJWb3NUVUZCVFN4RmEwUnZSRkFzU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1VVRkJVU3hCYkVRM1JWb3NUVUZCVFN4RmEwUnRSRkFzU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1VVRkJVU3hCYkVRMVJWb3NUVUZCVFN4RmEwUnJSRkFzU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1VVRkJVU3hCYkVRelJWb3NUVUZCVFN4RFFVRkRPMFZMUzA0c1MwRkJTeXhGVlRGRVR5eFBRVUZQTzBObWRVUndRanM3UVd0RUswTkVMRUZxUkRGSFFTeEphVVF3UjBrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZGQlFWRXNRV3hFT1VWYUxFMUJRVTBzUVVOMFJFNHNVVUZCVVN4RmFVUXdSMVFzU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1VVRkJVU3hCYkVRM1JWb3NUVUZCVFN4QlEzWkVUaXhSUVVGUkxFVnBSREJIVkN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFJRVUZSTEVGc1JEVkZXaXhOUVVGTkxFRkRlRVJPTEZGQlFWRXNSV2xFTUVkVUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGQk1FSk9MRkZCUVZFc1FXeEVNMFZhTEUxQlFVMHNRVU42UkU0c1VVRkJVU3hEUVVGRE8wVkpaMFZPTEcxQ1FVRnRRaXhGVlRWRVZDeFBRVUZQTzBOa1JuQkNPenRCYVVSM1IwUXNRV3hFYUVkQkxFbHJSR2RIU1N4QlFVRkJMRTlCUVU4c1FVRXdRazRzVVVGQlVTeEJiRVF4U0Znc1NVRkJTeXhGUVhkSFFTeEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFYaEhWU3hKUVVGTExFTkJkMGRCTEZOQlFWTXNRMEY0UjBNc1QwRkJUeXhGYTBSblIzaERMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZGQlFWRXNRV3hFZWtoYUxFbEJRVXNzUlVGMVIwTXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjJSMU1zU1VGQlN5eERRWFZIUXl4VFFVRlRMRU5CZGtkQkxFOUJRVThzUTBGQlF6dEZTekJFZEVNc1MwRkJTeXhGY0VJM1EwTXNUMEZCYzBRN1EyVllOMFE3TzBGclJEWkdSQ3hCYWtReFIwRXNTV2xFTUVkSkxFRkJRVUVzVDBGQlR5eEJRVEJDVGl4UlFVRlJMRUZzUkRGSVdDeEpRVUZMTEVWQmQwZEJMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJlRWRWTEVsQlFVc3NRMEYzUjBFc1UwRkJVeXhEUVhoSFF5eFBRVUZQTEVGRFZuWkRMRkZCUVZFc1JXbEVNRWRVTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZCTUVKT0xGRkJRVkVzUVd4RWVraGFMRWxCUVVzc1JVRjFSME1zUVVGQlFTeFJRVUZETEVGQlFVRXNSVUYyUjFNc1NVRkJTeXhEUVhWSFF5eFRRVUZUTEVOQmRrZEJMRTlCUVU4c1FVTllkRU1zVVVGQlVTeERRVUZETzBWSmRVVk9MRzFDUVVGdFFpeEZjRUl2UTJZc1QwRkJjMFE3UTJkQ2RFSTNSRHM3UVdsRWQwZEVMRUZxUkRGSFFTeEphVVF3UjBrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZGQlFWRXNRVGREZWtSYUxGZEJRVmNzUVVvelJWZ3NVVUZCVVN4RFFVRkRPMFZGY1VKU0xFdEJRVXNzUlZscVFrOHNUMEZCVHp0RFpFWndRanM3UVdsRWQwZEVMRUZzUkhCRVFTeEphMFJ2UkVrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZOQlFWTXNRV3hFT1VWaUxFMUJRVTBzUld0RWIwUlFMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZOQlFWTXNRV3hFTjBWaUxFMUJRVTBzUld0RWJVUlFMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZOQlFWTXNRV3hFTlVWaUxFMUJRVTBzUld0RWEwUlFMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZOQlFWTXNRV3hFTTBWaUxFMUJRVTBzUTBGQlF6dEZTMHRPTEV0QlFVc3NSVlY2UkU4c1QwRkJUenREWm5ORWNFSTdPMEZyUkN0RFJDeEJha1F4UjBFc1NXbEVNRWRKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhUUVVGVExFRnNSRGxGWWl4TlFVRk5MRUZEZEVST0xGRkJRVkVzUldsRU1FZFVMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZOQlFWTXNRV3hFTjBWaUxFMUJRVTBzUVVOMlJFNHNVVUZCVVN4RmFVUXdSMVFzU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1UwRkJVeXhCYkVRMVJXSXNUVUZCVFN4QlEzaEVUaXhSUVVGUkxFVnBSREJIVkN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFRRVUZUTEVGc1JETkZZaXhOUVVGTkxFRkRla1JPTEZGQlFWRXNRMEZCUXp0RlNXZEZUaXh0UWtGQmJVSXNSVlV6UkZRc1QwRkJUenREWkVod1FqczdRV2xFZDBkRUxFRnNSR2hIUVN4SmEwUm5SMGtzUVVGQlFTeFBRVUZQTEVGQk1FSk9MRk5CUVZNc1FXeEVNVWhhTEVsQlFVc3NSVUYzUjBFc1FVRkJRU3hSUVVGRExFRkJRVUVzUlVGNFIxVXNTVUZCU3l4RFFYZEhRU3hUUVVGVExFTkJlRWRETEU5QlFVOHNSV3RFWjBkNFF5eEpRVUZKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhUUVVGVExFRnNSSHBJWWl4SlFVRkxMRVZCZFVkRExFRkJRVUVzVVVGQlF5eEJRVUZCTEVWQmRrZFRMRWxCUVVzc1EwRjFSME1zVTBGQlV5eERRWFpIUVN4UFFVRlBMRU5CUVVNN1JVc3dSSFJETEV0QlFVc3NSWEJDTjBORExFOUJRWE5FTzBObFdEZEVPenRCYTBRMlJrUXNRV3BFTVVkQkxFbHBSREJIU1N4QlFVRkJMRTlCUVU4c1FVRXdRazRzVTBGQlV5eEJiRVF4U0Zvc1NVRkJTeXhGUVhkSFFTeEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFYaEhWU3hKUVVGTExFTkJkMGRCTEZOQlFWTXNRMEY0UjBNc1QwRkJUeXhCUTFaMlF5eFJRVUZSTEVWcFJEQkhWQ3hKUVVGSkxFRkJRVUVzVDBGQlR5eEJRVEJDVGl4VFFVRlRMRUZzUkhwSVlpeEpRVUZMTEVWQmRVZERMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJka2RUTEVsQlFVc3NRMEYxUjBNc1UwRkJVeXhEUVhaSFFTeFBRVUZQTEVGRFdIUkRMRkZCUVZFc1EwRkJRenRGU1hWRlRpeHRRa0ZCYlVJc1JYQkNMME5tTEU5QlFYTkVPME5uUW5SQ04wUTdPMEZwUkhkSFJDeEJha1F4UjBFc1NXbEVNRWRKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhUUVVGVExFRTNRM3BFWWl4WFFVRlhMRUZLTTBWWUxGRkJRVkVzUTBGQlF6dEZSWEZDVWl4TFFVRkxMRVZaYUVKUExFOUJRVTg3UTJSSWNFSTdPMEZwUkhkSFJDeEJiRVJ3UkVFc1NXdEViMFJKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhUUVVGVExFRnNSRGxGWWl4TlFVRk5MRVZyUkc5RVVDeEpRVUZKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhUUVVGVExFRnNSRGRGWWl4TlFVRk5MRVZyUkcxRVVDeEpRVUZKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhUUVVGVExFRnNSRFZGWWl4TlFVRk5MRVZyUkd0RVVDeEpRVUZKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhUUVVGVExFRnNSRE5GWWl4TlFVRk5MRU5CUVVNN1JVdExUaXhMUVVGTExFVlZOVVJQTEU5QlFVODdRMlo1UkhCQ096dEJhMFFyUTBRc1FXcEVNVWRCTEVscFJEQkhTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNVMEZCVXl4QmJFUTVSV0lzVFVGQlRTeEJRM1JFVGl4UlFVRlJMRVZwUkRCSFZDeEpRVUZKTEVGQlFVRXNUMEZCVHl4QlFUQkNUaXhUUVVGVExFRnNSRGRGWWl4TlFVRk5MRUZEZGtST0xGRkJRVkVzUldsRU1FZFVMRWxCUVVrc1FVRkJRU3hQUVVGUExFRkJNRUpPTEZOQlFWTXNRV3hFTlVWaUxFMUJRVTBzUVVONFJFNHNVVUZCVVN4RmFVUXdSMVFzU1VGQlNTeEJRVUZCTEU5QlFVOHNRVUV3UWs0c1UwRkJVeXhCYkVRelJXSXNUVUZCVFN4QlEzcEVUaXhSUVVGUkxFTkJRVU03UlVsblJVNHNiVUpCUVcxQ0xFVlZPVVJVTEU5QlFVODdRMlJCY0VJN08wRnBSSGRIUkN4QmJFUm9SMEVzU1d0RVowZEpMRUZCUVVFc1QwRkJUeXhCUVRCQ1RpeFRRVUZUTEVGc1JERklXaXhKUVVGTExFVkJkMGRCTEVGQlFVRXNVVUZCUXl4QlFVRkJMRVZCZUVkVkxFbEJRVXNzUTBGM1IwRXNVMEZCVXl4RFFYaEhReXhQUVVGUExFVnJSR2RIZUVNc1NVRkJTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNVMEZCVXl4QmJFUjZTR0lzU1VGQlN5eEZRWFZIUXl4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVhaSFV5eEpRVUZMTEVOQmRVZERMRk5CUVZNc1EwRjJSMEVzVDBGQlR5eERRVUZETzBWTE1FUjBReXhMUVVGTExFVndRamREUXl4UFFVRnpSRHREWlZnM1JEczdRV3RFTmtaRUxFRnFSREZIUVN4SmFVUXdSMGtzUVVGQlFTeFBRVUZQTEVGQk1FSk9MRk5CUVZNc1FXeEVNVWhhTEVsQlFVc3NSVUYzUjBFc1FVRkJRU3hSUVVGRExFRkJRVUVzUlVGNFIxVXNTVUZCU3l4RFFYZEhRU3hUUVVGVExFTkJlRWRETEU5QlFVOHNRVU5XZGtNc1VVRkJVU3hGYVVRd1IxUXNTVUZCU1N4QlFVRkJMRTlCUVU4c1FVRXdRazRzVTBGQlV5eEJiRVI2U0dJc1NVRkJTeXhGUVhWSFF5eEJRVUZCTEZGQlFVTXNRVUZCUVN4RlFYWkhVeXhKUVVGTExFTkJkVWRETEZOQlFWTXNRMEYyUjBFc1QwRkJUeXhCUTFoMFF5eFJRVUZSTEVOQlFVTTdSVWwxUlU0c2JVSkJRVzFDTEVWd1FpOURaaXhQUVVGelJEdERaMEowUWpkRU96dEJhVVIzUjBRc1FXcEVNVWRCTEVscFJEQkhTU3hCUVVGQkxFOUJRVThzUVVFd1FrNHNVMEZCVXl4Qk4wTjZSR0lzVjBGQlZ5eEJTak5GV0N4UlFVRlJMRU5CUVVNN1JVVnhRbElzUzBGQlN5eEZXVzVDVHl4UFFVRlBPME5rUVhCQ096dEJhVVIzUjBRc1FXcEVNVWRCTEVscFJEQkhTU3hCUVVGQkxFOUJRVThzUVd4RWFFZFVMRWxCUVVzc1JVRjNSMEVzUVVGQlFTeFJRVUZETEVGQlFVRXNSVUY0UjFVc1NVRkJTeXhEUVhkSFFTeFRRVUZUTEVOQmVFZERMRTlCUVU4c1FVTldka01zVVVGQlVTeEZhVVF3UjFRc1NVRkJTU3hCUVVGQkxFOUJRVThzUVd4RUwwWldMRWxCUVVzc1JVRjFSME1zUVVGQlFTeFJRVUZETEVGQlFVRXNSVUYyUjFNc1NVRkJTeXhEUVhWSFF5eFRRVUZUTEVOQmRrZEJMRTlCUVU4c1FVTllkRU1zVVVGQlVTeERRVUZETzBWRE1FSk9MRk5CUVZNc1JVRkJSU3hKUVVGSk8wTkVlRUpzUWpzN1FXbEVkMGRFTEVGcVJERkhRU3hKYVVRd1Iwa3NRVUZCUVN4UFFVRlBMRUZzUkdoRFZpeE5RVUZOTEVGRE1VVk9MRkZCUVZFc1JXbEVNRWRVTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZzUkM5Q1ZpeE5RVUZOTEVGRE0wVk9MRkZCUVZFc1JXbEVNRWRVTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZzUkRsQ1ZpeE5RVUZOTEVGRE5VVk9MRkZCUVZFc1JXbEVNRWRVTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZzUkRkQ1ZpeE5RVUZOTEVGRE4wVk9MRkZCUVZFc1JXbEVNRWRVTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZzUkRWQ1ZpeEpRVUZMTEVWQmIwTkRMRUZCUVVFc1VVRkJReXhCUVVGQkxFVkJjRU5UTEVsQlFVc3NRMEZ2UTBNc1UwRkJVeXhEUVhCRFFTeFBRVUZQTEVGRE9VVjBReXhSUVVGUkxFVnBSREJIVkN4SlFVRkpMRUZCUVVFc1QwRkJUeXhCYkVRelFsWXNTVUZCU3l4RlFXMURReXhCUVVGQkxGRkJRVU1zUVVGQlFTeEZRVzVEVXl4SlFVRkxMRU5CYlVORExGTkJRVk1zUTBGdVEwRXNUMEZCVHl4QlF5OUZkRU1zVVVGQlVTeERRVUZETzBWcFJHbEtTaXhMUVVGTExFVkJRVVVzU1VGQlNUdERha1F2U1doQ096dEJhVVIzUjBRc1FXeEVOMFJCTEVsclJEWkVTU3hCUVVGQkxFOUJRVThzUVd4RU4wUlVMRTFCUVUwc1JXdEVOa1JTTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZzUkRWRVZpeE5RVUZOTEVOQlFVTTdSVVZ3UWtvc1UwRkJVeXhGUVVGRkxFbEJRVWs3UldkRU5raG1MRzFDUVVGdFFpeEZRVUZGTEZkQlFWYzdRMnhFZGtkdVF6czdRV3RFTUVSRUxFRnFSREZIUVN4SmFVUXdSMGtzUVVGQlFTeFBRVUZQTEVGc1JEZEVWQ3hOUVVGTkxFRkROME5RTEZGQlFWRXNSV2xFTUVkVUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGc1JEVkVWaXhOUVVGTkxFRkRPVU5PTEZGQlFWRXNRMEZCUXp0RlF6aENUaXhUUVVGVExFVm5SREpJV1N4TFFVRkxMRU5vUkd4SlJ5eEZRVUZGTEVOQlFXRXNVVUZCVVN4RFFVRXJRaXhKUVVGSk8wTkVja0l4UmpzN1FVTXdSRXNzVlVGQlZTeERRVUZXTEV0QlFWVTdSVUZEVWl4SlFVRkpPMFZCUTBvc1IwRkJSenRKUVVGSExFOUJRVThzUlVGQlJTeERRVUZET3p0RlFVVm9RaXhIUVVGSE8wVkJRMGdzUjBGQlJ6dEpRVUZITEU5QlFVOHNSVUZCUlN4RFFVRkRPenM3TzBGblJIbERlRUlzUVd4RVZrRXNTV3RFVlVrc1FVRkJRU3hQUVVGUExFTnNSRlpVTEVGQlFVRXNVVUZCUXl4QlFVRkJMRWRyUkZWSUxFbEJRVWtzUVVGQlFTeFBRVUZQTEVGc1JGUldMRk5CUVZNc1EwRkJRenRGYTBRMlJGQXNTMEZCU3l4RmJrTnVTRTBzVDBGQlpUdERabmRFTjBJN08wRnJSRTlFTEVGcVJERkhRU3hKYVVRd1Iwa3NRVUZCUVN4UFFVRlBMRU5zUkZaVUxFRkJRVUVzVVVGQlF5eEJRVUZCTEVORGFFZEdMRkZCUVZFc1JXbEVNRWRVTEVsQlFVa3NRVUZCUVN4UFFVRlBMRUZzUkZSV0xGTkJRVk1zUVVOcVIxUXNVVUZCVVN4RFFVRkRPMFZwUkdkTFNpeHRRa0ZCYlVJc1JXNURja2hXTEU5QlFXVTdRMlI2UXpkQ096dEJhVVFyUzBRc1FVRkJRU3hKUVVGSkxFRkJRVUVzVjBGQlZ5eERRVUZETzBWQlEyUXNZMEZCWXl4RlFVRkZMRWxCUVVrN1JVRkZjRUlzUzBGQlN5eEZRVUZGTEhOQ1FVRnpRanRGTDBOMlRDOUNMRkZCUVZFc1JVRkJSU3hSUVVGUk8wTXJRM2xNYWtJN08wRkJURVFzUVdwRWFreEJMRWxwUkdsTVNTeEJRVUZCTEZkQlFWY3NRV3BFYWt4a0xGRkJRVkVzUTBGQlF6dEZSVVJTTEU5QlFVOHNSVUZCUlN4RlFVRkZPMFZCUTFnc1VVRkJVU3hGUVVGRkxGRkJRVkU3UlVGRGJFSXNSMEZCUnl4RlFVRkZMSEZDUVVGeFFqdEZRVU14UWl4TFFVRkxMRVZCUVVVc1EwRkJRenRGUVVOU0xFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNTVUZCU1N4RlFVRkZMSEZDUVVGeFFqdEZRVU16UWl4VFFVRlRMRVZCUVVVc1QwRkJUenRGUVVOc1FpeExRVUZMTEVWQlFVVXNSMEZCUnp0RlFVTldMRTFCUVUwc1JVRkJSU3hIUVVGSE8wVkJRMWdzVFVGQlRTeEZRVUZGTEhkQ1FVRjNRanRGUVVOb1F5eHJRa0ZCYTBJc1JVRkJSU3hYUVVGWE8wVkJReTlDTEdGQlFXRXNSVUZCUlN4SFFVRkhPMFZCUld4Q0xGTkJRVk1zUlVGQlJTeDFRa0ZCZFVJN1JVRkRiRU1zUzBGQlN5eEZXVGhDVVN4UFFVRmxPME5rZWtNM1FqczdRVU56UlVzc1ZVRkJWU3hEUVVGV0xFbEJRVlU3UlVGRFVpeEpRVUZKTzBsQlFVY3NVMEZCVXl4RlFVRkZMR05CUVdNN096czdRV2RFYlVoNFF5eEJRVUZCTEVsQlFVa3NRVUZCUVN4VFFVRlRMRU5CUVVNN1JVRkRXaXhMUVVGTExFVkJRVVVzU1VGQlNUdERRVU5hT3p0QlFVOUVMRUZCUVVFc1NVRkJTU3hCUVVGQkxGVkJRVlVzUTBGQlF6dEZRVU5pTEV0QlFVc3NSVzVDZEUxM1F5eE5RVUZOTzBWdFFuVk5ia1FzVFVGQlRTeEZia0oyVFhWRExFMUJRVTA3UlcxQ2QwMXVSQ3hQUVVGUExFVkJRVVVzUTBGQlF6dERRVU5ZT3p0QlF5OU5TQ3hCUVVsSkxGRkJTa2tzUjBGRFNpeExRVUZMTEVkQlIwZ3NUVUZCVFN4RFFVRkRPMFZCUTFBc1lVRkJZU3hGUVVGRkxFTkJRVU03UTBGRGFrSTdPMEZEVGt3c1FXNUVUVVVzVVcxRVRrMHNSMEZEU2l4TlFVRk5MRUZCU1V3c1VVRkJVU3hIUVVOTUxFMUJRVTBzUVc1RVFWZ3NVVUZCVVN4RFFVRkRPMFZ0UkVWR0xGbEJRVmtzUlhCQ1NtMUNMRTFCUVVzN1JXOUNTM0JETEdkQ1FVRm5RaXhGY2tOdFExUXNTVUZCU1R0RFpIQkRiRUk3TzBGdFJGSklMRUZ1UkUxRkxGRnRSRTVOTEVkQlEwb3NUVUZCVFN4SFFXRktMRTFCUVUwc1FXNUVVbFFzVVVGQlVTeERRVUZETzBWdFJGVktMR0ZCUVdFc1JYQkRTR0VzUjBGQlJ6dERaa3hzUXpzN1FXOUVVa2dzUVhCRVkwVXNVVzlFWkUwc1IwRkRTaXhUUVVGVExFRkJTVklzVVVGQlVTeEhRVU5NTEUxQlFVMHNRWEJFVVZnc1QwRkJUeXhEUVVGRE8wVnZSRTVFTEVkQlFVY3NSWEJDU0c5RExFZEJRVWM3Ulc5Q1NURkRMRk5CUVZNc1JVRkJSU3h4UWtGQmNVSXNRMEZCUXl4aFFVRmhPMFZCUXpsRExFdEJRVXNzUlVGQlJTeFRRVUZuUXp0RlFVTjJReXhOUVVGTkxFVndRbEJwUXl4VFFVRXJRanRGYjBKUmRFVXNUVUZCVFN4RmNFSk9hVU1zVFVGQlN5eERiMEpOUVN4TFFVRkxMRU4wUTJkRE1VTXNTVUZCU1R0RmMwTXZRbGdzWjBKQlFXZENMRVZCUVVVc1EwRkJRenRGUVVOdVFpeHBRa0ZCYVVJc1JVRkJSU3hEUVVGRE8wTndSRVV6UWpzN1FXOUVhRUpJTEVGd1JFMUZMRkZ2UkU1TkxFZEJRMG9zVTBGQlV5eEJRV3RDVWl4alFVRmpMRWRCUTFnc1RVRkJUU3hCY0VSa1dDeFJRVUZSTEVOQlFVTTdSVzlFWjBKR0xGbEJRVmtzUlVGQlJTeFpRVUZaTzBWQlF6RkNMRlZCUVZVc1JVRkJSU3haUVVGWk8wTndSR1l2UWpzN1FXOUVVa2dzUVhCRVkwVXNVVzlFWkUwc1IwRkRTaXhUUVVGVExFRkJhMEpTTEdOQlFXTXNSMEZEV0N4TlFVRk5MRUZ3UkU1WUxFOUJRVThzUTBGQlF6dEZiMFJoUkN4UFFVRlBMRVZCUVVVc1JVRkJSVHRGUVVOWUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRWRCUVVjc1JVRkJSU3hIUVVGSE8wVkJRMUlzVTBGQlV5eEZRVUZGTEhGQ1FVRnhRanRGUVVOb1F5eExRVUZMTEVWd1FuUkNhME1zVTBGQkswSTdSVzlDZFVKMFJTeE5RVUZOTEVWd1FuUkNhVU1zUjBGQlJ6dEZiMEoxUWpGRExGVkJRVlVzUlhSRFYwZ3NTVUZCU1R0RFpEVkNiRUk3TzBGdlJHaENTQ3hCY0VSalJTeFJiMFJrVFN4SFFVTktMRk5CUVZNc1IwRnhRMUFzVFVGQlRTeEJjRVI0UWxRc1QwRkJUeXhEUVVGRE8wVnZSREJDU0N4UFFVRlBMRVZCUVVVc1JVRkJSVHRGUVVOWUxGRkJRVkVzUlVGQlJTeFJRVUZSTzBWQlEyeENMRWxCUVVrc1JVRkJSU3hUUVVFclFqdERjRVF4UWpGRE96dEJjVVJtU0N4QlFVRkJMRTFCUVUwc1EwRkJRenRGUVVkTUxFOUJRVThzUlVGQlJTeExRVUZMTzBWQlEyUXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hOUVVGTkxFVkJRVVVzUzBGQlN6dEZRVU5pTEU5QlFVOHNSVUZCUlN4RFFVRkRPMFZCUlZZc1pVRkJaU3hGUVVGRkxFbEJRVWs3UlVGRmNrSXNhMEpCUVd0Q0xFVkJRVVVzU1VGQlNUdEZRVU40UWl4VlFVRlZMRVZCUVVVc1NVRkJTVHREUVRCRmFrSTdPMEZCY2taRUxFRjBSR3RFUlN4TmMwUnNSRWtzUVhSRWEwUkdMRTFCUVUwc1JYTkViRVJXTEUxQlFVMHNRWFJFYlVSSUxFMUJRVTBzUTBGQlF6dEZjMFJ5UTA0c1QwRkJUeXhGUVVGRkxFTkJRVU03UTNSRWRVTllPenRCYzBSeVJFZ3NRVUZ2UWtVc1RVRndRa2tzUVVGdlFrZ3NjMEpCUVhOQ0xFTkJRVU03UlM5RFZuaENMRXRCUVVzc1JUSkNSMmxFTEVkQlFVYzdSVE5DUm5wRUxFMUJRVTBzUlRKQ1JXZEVMRWRCUVVjN1JUTkNSSHBFTEUxQlFVMHNSVEpDUjJkRUxFZEJRVWNzUTBGQlF5eExRVUZMTEVOQlFVTXNXVUZCV1R0Rk0wSkdOVVVzWVVGQllTeEZVMFJ0UWl4SFFVRkhPMFZVUjI1RExHVkJRV1VzUlVGQlJTeEpRVUZKTzBWQlJYSkNMR3RDUVVGclFpeEZRVUZGTEVsQlFVazdSVUZEZUVJc1ZVRkJWU3hGUVVGRkxFbEJRVWs3UlVGRGFFSXNWVUZCVlN4RlVYZENTeXhKUVVGSk8wVlNka0p1UWl4VlFVRlZMRVZxUW1OTExHbERRVUU0UWp0RldYaENNME1zVlVGQlZTeEZZbFZyUWl4dlJFRkJLMFE3UTJsRlJUVkdPenRCUVhSQ1NDeEJRWGRDUlN4TlFYaENTU3hCUVhkQ1NDeHJRa0ZCYTBJc1EwRkJRenRGTDBOa2NFSXNTMEZCU3l4Rk1rSkhhVVFzUjBGQlJ6dEZNMEpHZWtRc1RVRkJUU3hGTWtKRlowUXNSMEZCUnp0Rk0wSkVla1FzVFVGQlRTeEZNa0pIWjBRc1IwRkJSeXhEUVVGRExFdEJRVXNzUTBGQlF5eFpRVUZaTzBVelFrWTFSU3hoUVVGaExFVlRSRzFDTEVkQlFVYzdSVlJIYmtNc1pVRkJaU3hGUVVGRkxFbEJRVWs3UlVGRmNrSXNhMEpCUVd0Q0xFVkJRVVVzU1VGQlNUdEZRVU40UWl4VlFVRlZMRVZCUVVVc1NVRkJTVHRGUVVOb1FpeFZRVUZWTEVWUmQwSkxMRWxCUVVrN1JWSjJRbTVDTEZWQlFWVXNSV3BDWTBzc2FVTkJRVGhDTzBWWmVFSXpReXhWUVVGVkxFVmlWV3RDTEc5RVFVRXJSRHREYVVWTk5VWTdPMEZCTVVKSUxFRkJORUpGTEUxQk5VSkpMRUZCTkVKSUxGZEJRVmNzUTBGQlF6dEZMME5zUW1Jc1MwRkJTeXhGTWtKSGFVUXNSMEZCUnp0Rk0wSkdla1FzVFVGQlRTeEZNa0pGWjBRc1IwRkJSenRGTTBKRWVrUXNUVUZCVFN4Rk1rSkhaMFFzUjBGQlJ5eERRVUZETEV0QlFVc3NRMEZCUXl4WlFVRlpPMFV6UWtZMVJTeGhRVUZoTEVWVFJHMUNMRWRCUVVjN1JWUkhia01zWlVGQlpTeEZRVUZGTEVsQlFVazdSVUZGY2tJc2EwSkJRV3RDTEVWQlFVVXNTVUZCU1R0RlFVTjRRaXhWUVVGVkxFVkJRVVVzU1VGQlNUdEZRVU5vUWl4VlFVRlZMRVZSZDBKTExFbEJRVWs3UlZKMlFtNUNMRlZCUVZVc1JXcENZMHNzYVVOQlFUaENPMFZaZUVJelF5eFZRVUZWTEVWaVZXdENMRzlFUVVFclJEdERhVVZWTlVZN08wRkJPVUpJTEVGQmFVTkpMRTFCYWtORkxFRjBSSGRDU0N4TlFVRk5MRUZ6UkZOS0xITkNRVUZ6UWl4RlFXcERNMElzVFVGQlRTeEJkRVI1UWtnc1RVRkJUU3hCYzBSUlNpeHpRa0ZCYzBJc1EwRkJRenRGUVVOMFFpeFRRVUZUTEVWQlFVVXNWVUZCY1VNN1JVRkRhRVFzV1VGQldTeEZkRU0zUW1kQ0xFZEJRVWM3UTNORE9FSm9RenM3UVVGd1Ewd3NRVUZ6UTBrc1RVRjBRMFVzUVhSRWQwSklMRTFCUVUwc1FYTkVZMG9zYTBKQlFXdENMRVZCZEVOMlFpeE5RVUZOTEVGMFJIbENTQ3hOUVVGTkxFRnpSR0ZLTEd0Q1FVRnJRaXhEUVVGRE8wVkJRMnhDTEZOQlFWTXNSVUZCUlN4VlFVRnhRenRGUVVOb1JDeFpRVUZaTEVWMFEyeERaMElzUjBGQlJ6dERjME50UTJoRE96dEJRWHBEVEN4QlFUSkRTU3hOUVRORFJTeEJkRVIzUWtnc1RVRkJUU3hCYzBSdFFrb3NWMEZCVnl4RlFUTkRhRUlzVFVGQlRTeEJkRVI1UWtnc1RVRkJUU3hCYzBSclFrb3NWMEZCVnl4RFFVRkRPMFZCUTFnc1UwRkJVeXhGUVVGRkxGVkJRWEZETzBWQlEyaEVMRmxCUVZrc1JYUkRka05uUWl4SFFVRkhPME56UTNkRGFFTTdPMEZCT1VOTUxFRkJhMFJGTEUxQmJFUkpMRUZCYTBSSUxHdENRVUZyUWl4RFFVRkRPMFV2UTNKRWNFSXNUMEZCVHl4RlFVRkZMRWxCUVVrN1JVRkRZaXhYUVVGWExFVkJRVVVzVFVGQlRUdEZRVU51UWl4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxFMUJRVTBzUlRKQ1VXZEVMRTlCUVUwN1JUTkNVRFZFTEUxQlFVMHNSVUZCUlN4RFFVRkRPMFZCUTFRc1RVRkJUU3hGUVVGRkxFTkJRVU03UlVGRFZDeGhRVUZoTEVWVFVXMUNMRWxCUVVrN1JWUlFjRU1zWjBKQlFXZENMRVZSTUVORUxFOUJRV1U3UlZKNlF6bENMRlZCUVZVc1JXcENOa0pMTEhGRFFVRTRRanRGV1hoQ00wTXNWVUZCVlN4RllsVnJRaXcwUWtGQkswUTdRMmxGWjBNMVJqczdRVUZ3UkVnc1FVRnpSRVVzVFVGMFJFa3NRVUZ6UkVnc0swSkJRU3RDTEVOQlFVTTdSUzlEZWtScVF5eFBRVUZQTEVWQlFVVXNTVUZCU1R0RlFVTmlMRmRCUVZjc1JVRkJSU3hOUVVGTk8wVkJRMjVDTEV0QlFVc3NSVUZCUlN4SlFVRkpPMFZCUTFnc1RVRkJUU3hGTWtKUlowUXNUMEZCVFR0Rk0wSlFOVVFzVFVGQlRTeEZRVUZGTEVOQlFVTTdSVUZEVkN4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVOVUxHRkJRV0VzUlZOUmJVSXNTVUZCU1R0RlZGQndReXhuUWtGQlowSXNSVkV3UTBRc1QwRkJaVHRGVW5wRE9VSXNWVUZCVlN4RmFrSTJRa3NzY1VOQlFUaENPMFZaZUVJelF5eFZRVUZWTEVWaVZXdENMRFJDUVVFclJEdERhVVZ2UXpWR096dEJRWGhFU0N4QlFUQkVSU3hOUVRGRVNTeEJRVEJFU0N4WFFVRlhMRU5CUVVNN1JVRkRXQ3hMUVVGTExFVkJRVVVzVjBGQlZ6dEZMME01UkhCQ0xFOUJRVThzUlVGQlJTeEpRVUZKTzBWQlEySXNWMEZCVnl4RlFVRkZMRTFCUVUwN1JVRkRia0lzUzBGQlN5eEZRVUZGTEVsQlFVazdSVUZEV0N4TlFVRk5MRVV5UWxGblJDeFBRVUZOTzBVelFsQTFSQ3hOUVVGTkxFVkJRVVVzUTBGQlF6dEZRVU5VTEUxQlFVMHNSVUZCUlN4RFFVRkRPMFZCUTFRc1lVRkJZU3hGVTFGdFFpeEpRVUZKTzBWVVVIQkRMR2RDUVVGblFpeEZVVEJEUkN4UFFVRmxPMFZTZWtNNVFpeFZRVUZWTEVWcVFqWkNTeXh4UTBGQk9FSTdSVmw0UWpORExGVkJRVlVzUldKVmEwSXNORUpCUVN0RU8wTnBSWGxETlVZN08wRkJOMFJJTEVGQkswUkZMRTFCTDBSSkxFRkJLMFJJTEdkQ1FVRm5RaXhEUVVGRE8wVkJRMmhDTEZWQlFWVXNSWFpEYUVKSExFOUJRV1U3UTNWRGFVSTNRanM3UVVGcVJVZ3NRVUZ2UlVrc1RVRndSVVVzUVhSRWMwVklMRTFCUVUwc1FYTkVSa29zYTBKQlFXdENMRVZCY0VWMlFpeE5RVUZOTEVGMFJIVkZTQ3hOUVVGTkxFRnpSRWhLTEd0Q1FVRnJRaXhGUVhCRmRrSXNUVUZCVFN4QmRFUjNSVWdzU1VGQlN5eEZRU3REUXl4QlFVRkJMRkZCUVVNc1FVRkJRU3hGUVM5RFV5eEpRVUZMTEVOQkswTkRMRk5CUVZNc1EwRXZRMEVzVDBGQlR5eEJjMFJLY0VNc2EwSkJRV3RDTEVWQmNFVjJRaXhOUVVGTkxFRjBSSGxGU0N4SlFVRkxMRVZCT0VORExFRkJRVUVzVVVGQlF5eEJRVUZCTEVWQk9VTlRMRWxCUVVzc1EwRTRRME1zVTBGQlV5eERRVGxEUVN4UFFVRlBMRUZ6UkV4d1F5eHJRa0ZCYTBJc1EwRkJRenRGUVVOc1FpeG5Ra0ZCWjBJc1JVRkJSU3haUVVGWk8wTkJReTlDT3p0QlFYUkZUQ3hCUVhkRlNTeE5RWGhGUlN4QmRFUnpSVWdzVFVGQlRTeEJjMFJGU2l3clFrRkJLMElzUlVGNFJYQkRMRTFCUVUwc1FYUkVkVVZJTEUxQlFVMHNRWE5FUTBvc0swSkJRU3RDTEVWQmVFVndReXhOUVVGTkxFRjBSSGRGU0N4SlFVRkxMRVZCSzBORExFRkJRVUVzVVVGQlF5eEJRVUZCTEVWQkwwTlRMRWxCUVVzc1EwRXJRME1zVTBGQlV5eERRUzlEUVN4UFFVRlBMRUZ6UkVGd1F5d3JRa0ZCSzBJc1JVRjRSWEJETEUxQlFVMHNRWFJFZVVWSUxFbEJRVXNzUlVFNFEwTXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRTVRMU1zU1VGQlN5eERRVGhEUXl4VFFVRlRMRU5CT1VOQkxFOUJRVThzUVhORVJIQkRMQ3RDUVVFclFpeERRVUZETzBWQlF5OUNMR2RDUVVGblFpeEZRVUZGTEZsQlFWazdRMEZETDBJN08wRkJNVVZNTEVGQk5FVkpMRTFCTlVWRkxFRjBSSE5GU0N4TlFVRk5MRUZ6UkUxS0xHZENRVUZuUWl4RlFUVkZja0lzVFVGQlRTeEJkRVIxUlVnc1RVRkJUU3hCYzBSTFNpeG5Ra0ZCWjBJc1JVRTFSWEpDTEUxQlFVMHNRWFJFZDBWSUxFbEJRVXNzUlVFclEwTXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRXZRMU1zU1VGQlN5eERRU3REUXl4VFFVRlRMRU5CTDBOQkxFOUJRVThzUVhORVNYQkRMR2RDUVVGblFpeEZRVFZGY2tJc1RVRkJUU3hCZEVSNVJVZ3NTVUZCU3l4RlFUaERReXhCUVVGQkxGRkJRVU1zUVVGQlFTeEZRVGxEVXl4SlFVRkxMRU5CT0VORExGTkJRVk1zUTBFNVEwRXNUMEZCVHl4QmMwUkhjRU1zWjBKQlFXZENMRU5CUVVNN1JVRkRhRUlzUzBGQlN5eEZRVUZGTEU5QlFVODdSVUZEWkN4VlFVRlZMRVZCUVVVc1dVRkJXVHREUVVONlFqczdRVUZaU0N4QlFVRkJMRTFCUVUwc1FVRkJRU3hUUVVGVExFTkJRVXM3UlVGRGJFSXNTMEZCU3l4RmRrTm9SRkVzVDBGQlpUdERkVU5wUkRkQ096dEJRVVpFTEVGQlFVRXNUVUZCVFN4QlFVRkJMRkZCUVZFc1EwRkJUVHRGUVVOc1FpeExRVUZMTEVWMlF6TkRVU3hQUVVGbE8wTjFRelJETjBJN08wRkJSa1FzUVVGQlFTeE5RVUZOTEVGQlFVRXNWMEZCVnl4RFFVRkhPMFZCUTJ4Q0xFdEJRVXNzUlhaRGRrWlBMRTlCUVU4N1EzVkRkMFp3UWpzN1FVRkdSQ3hCUVVGQkxFMUJRVTBzUVVGQlFTeGhRVUZoTEVOQlFVTTdSVUZEYkVJc1MwRkJTeXhGZGtNM1ExRXNTVUZCWlR0RGRVTTRRemRDT3p0QlFVWkVMRUZCUVVFc1RVRkJUU3hCUVVGQkxGRkJRVkVzUTBGQlRUdEZRVU5zUWl4TFFVRkxMRVYyUTJoR1R5eFBRVUZQTzBOMVEybEdjRUk3TzBGQlJrUXNRVUZCUVN4TlFVRk5MRUZCUVVFc1VVRkJVU3hEUVVGTk8wVkJRMnhDTEV0QlFVc3NSWFpEYmtaUExFOUJRVTg3UTNWRGIwWndRanM3UVVGR1JDeEJRVUZCTEUxQlFVMHNRVUZCUVN4VFFVRlRMRU5CUVVzN1JVRkRiRUlzUzBGQlN5eEZka05zUms4c1QwRkJUenREZFVOdFJuQkNPenRCUVVaRUxFRkJRVUVzVFVGQlRTeEJRVUZCTEZOQlFWTXNRMEZCU3p0RlFVTnNRaXhMUVVGTExFVjJRM0pHVHl4UFFVRlBPME4xUTNOR2NFSTdPMEZET1VaSUxFRjBSR05GTEZGelJHUk5MRWRCUTBvc1QwRkJUeXhCUVVsT0xGRkJRVkVzUjBGRFRDeE5RVUZOTEVGMFJGRllMRTlCUVU4c1EwRkJRenRGYzBST1JDeEpRVUZKTEVWQlFVVXNVMEZCYlVNN1JVRkRla01zWjBKQlFXZENMRVY0UTIxRFZDeEpRVUZKTzBOa05VSnNRanM3UVhORWFFSklMRUZCWTBrc1VVRmtTU3hIUVVOS0xFOUJRVThzUjBGaFRDeE5RVUZOTEVOQlFVTTdSVUZEVUN4WlFVRlpMRVZ3UWtOelFpeFRRVUVyUXp0RGIwSnBRbXhHT3p0QlFXcERUQ3hCZEVSTlJTeFJjMFJPVFN4SFFVTktMRTlCUVU4c1IwRmhUQ3hOUVVGTkxFRjBSRkpVTEZGQlFWRXNRMEZCUXp0RmMwUlhTaXhMUVVGTExFVndRbUl5UWl4VFFVRXJRanRGYjBKakwwUXNZVUZCWVN4RmRrTk9ZU3hKUVVGSk8wTm1TbTVET3p0QmMwUlNTQ3hCZEVSalJTeFJjMFJrVFN4SFFVTktMRTlCUVU4c1IwRmhUQ3hOUVVGTkxFRjBSRUZVTEU5QlFVOHNRMEZCUXp0RmMwUlJTQ3hQUVVGUExFVkJRVVVzUlVGQlJUdEZRVU5ZTEZGQlFWRXNSVUZCUlN4UlFVRlJPMFZCUTJ4Q0xFZEJRVWNzUlVGQlJTeEhRVUZITzBWQlExSXNTVUZCU1N4RlFVRkZMRU5CUVVNN1JVRkRVQ3hUUVVGVExFVkJRVVVzWjBKQlFXZENMRU5CUVVNc1ZVRkJiME03UlVGRGFFVXNTMEZCU3l4RmVrVlJReXhUUVVGeFF6dEZlVVZRTTBNc1RVRkJUU3hGZWtWUFFTeFRRVUZ4UXp0RmVVVk9NME1zWVVGQllTeEZka05vUW1Fc1IwRkJSenRGZFVOcFFqZENMRlZCUVZVc1JYaERhVUpFTEU5QlFXVTdSV0p3UXpWQ0xGVkJRVlVzUldKVmEwSXNkVVJCUVN0RU8wTlpURFZHT3p0QmRVUm1TQ3hCUVVGQkxFdEJRVXNzUTBGQlF6dEZRVU5LTEU5QlFVOHNSVUZCUlN4TFFVRkxPMFZCUTJRc1QwRkJUeXhGUVVGRkxFTkJRVU03UlVGRFZpeE5RVUZOTEVWQlFVVXNRMEZCUXp0Rk5VUnBRbEFzVTBGQlV5eEZRVUZETEVsQlFVTTdRelJFWkdRN08wRkJUa1FzUVhoRU1rUkZMRXQzUkRORVJ5eERhRVJKU0N4VlFVRlZMRUZTZFVSVUxFMUJRVTBzUlhkRU0wUlVMRXRCUVVzc1EyaEVTVWdzVlVGQlZTeEJVbmRFVkN4TlFVRk5MRVYzUkRWRVZDeExRVUZMTEVOb1JFbElMRlZCUVZVc1FWSjVSRlFzVFVGQlRTeEZkMFEzUkZRc1MwRkJTeXhEYUVSSlNDeFZRVUZWTEVGU01FUlVMRTFCUVUwc1EwRkJRenRGVVhaRVNpeFpRVUZaTEVWUGVVTkVMRTlCUVdVN1JWQjRRekZDTEdkQ1FVRm5RaXhGZGtKeFFsb3NUMEZCYzBRN1EyVnRRemRFT3p0QmQwUm9SVWdzUVdoRVYwa3NTMmRFV0VNc1EyaEVTVWdzVlVGQlZTeEJRVTlRTEU5QlFVOHNRMEZCUXp0RlFVTlFMRXRCUVVzc1JVOHJRazBzU1VGQlNUdEZVRGxDWml4blFrRkJaMElzUlU5dFEwd3NUMEZCWlR0RFVHeERNMEk3TzBGblJFaE1MRUZCUVVFc1ZVRkJWU3hEUVVGRE8wVkJSVlFzVDBGQlR5eEZRVUZGTEV0QlFVczdSVUZEWkN4TFFVRkxMRVZCUVVVc1NVRkJTVHRGUVVOWUxGbEJRVmtzUld4Q1FUUkNMRXRCUVhWQ08wVnJRa012UkN4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVOVUxHRkJRV0VzUlVGQlowSXNRMEZCUXp0RlFVTTVRaXhMUVVGTExFVkJRVVVzVDBGQlR6dEZRVU5rTEZWQlFWVXNSVUZCUlN4UFFVRlBPMFUxUkVOcVFpeFRRVUZUTEVWQlFVTXNUMEZCUXp0RE5FUnpRMlE3TzBGQkwwTkVMRUYyUkU1RkxGVjFSRTFSTEVGMlJFNVFMRkZCUVZFc1EwRkJRenRGZFVSclFsSXNUMEZCVHl4RlFVRkZMRVZCUVVVN1JVRkRXQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4SFFVRkhMRVZCUVVVc1EwRkJRenRGUVVOT0xFMUJRVTBzUlVGQlJTeERRVUZETzBWQlExUXNTVUZCU1N4RlFVRkZMRU5CUVVNN1JVRkRVQ3hYUVVGWExFVkJRVVVzVDBGQlR6dEZRVU53UWl4cFFrRkJhVUlzUlVGQlJTeFBRVUZQTzBWMFJHNUNNVUlzVlVGQlZTeEZZbFZyUWl4clJVRkJLMFE3UTFsaU5VWTdPMEYxUkVsSUxFRjJSRTVGTEZWMVJFMVJMRUZCYzBKUUxFbEJRVXNzUTBGQlFTeFBRVUZQTEVONFJEQkNXaXhOUVVGTkxFRkRkRVJPTEZGQlFWRXNSWFZFVFZnc1ZVRkJWU3hCUVhOQ1VDeEpRVUZMTEVOQlFVRXNUMEZCVHl4RGVFUXlRbG9zVFVGQlRTeEJRM1pFVGl4UlFVRlJMRVYxUkUxWUxGVkJRVlVzUVVGelFsQXNTVUZCU3l4RFFVRkJMRTlCUVU4c1EzaEVORUphTEUxQlFVMHNRVU40UkU0c1VVRkJVU3hGZFVSTldDeFZRVUZWTEVGQmMwSlFMRWxCUVVzc1EwRkJRU3hQUVVGUExFTjRSRFpDV2l4TlFVRk5MRUZEZWtST0xGRkJRVkVzUTBGQlF6dEZRMHRTTEZWQlFWVXNSV0pWYTBJc2VVSkJRU3RFTzBWdFJXdENka1lzYVVKQlFXbENMRVY0UTJoRFV5eEhRVUZITzBObVEyeERPenRCZFVSSlNDeEJlRVJoUlN4VmQwUmlVU3hCZUVSaFVDeE5RVUZOTEVWM1JHSlVMRlZCUVZVc1FYaEVZMUFzVFVGQlRTeERRVUZETzBWM1JHMUNUaXhsUVVGbExFVkJRVVVzU1VGQlNUdERlRVJxUW5SQ096dEJkMFJvUWtnc1FYaEVkVU5GTEZWM1JIWkRVU3hCZUVSMVEwNHNUVUZCVFN4RmQwUjJRMVlzVlVGQlZTeEJlRVIzUTFBc1RVRkJUU3hEUVVGRE8wVjNSRWhPTEU5QlFVOHNSVUZCUlN4RFFVRkRPME40UkV0WU96dEJkMFJYUkN4QmVFUk1RU3hMZDBSTFN5eEJRVUZCTEZOQlFWTXNRMmhFTlVSa0xGVkJRVlVzUVZKMVJGUXNUVUZCVFN4RmQwUkxVQ3hMUVVGTExFRkJRVUVzVTBGQlV5eERhRVExUkdRc1ZVRkJWU3hCVW5kRVZDeE5RVUZOTEVWM1JFbFFMRXRCUVVzc1FVRkJRU3hUUVVGVExFTm9SRFZFWkN4VlFVRlZMRUZTZVVSVUxFMUJRVTBzUlhkRVIxQXNTMEZCU3l4QlFVRkJMRk5CUVZNc1EyaEVOVVJrTEZWQlFWVXNRVkl3UkZRc1RVRkJUU3hEUVVGRE8wVlJka1JLTEZsQlFWa3NSVTl4UTBRc1QwRkJaVHRGVUhCRE1VSXNaMEpCUVdkQ0xFVjJRbkZDV2l4UFFVRnpSRHREWlcxRE4wUTdPMEYzUkVGRUxFRm9SSEpFUlN4TFowUnhSRWNzUVVGQlFTeFRRVUZUTEVOb1JEVkVaQ3hWUVVGVkxFRkJUMUFzVDBGQlR5eERRVUZETzBWQlExQXNTMEZCU3l4RlQzVkRUU3hQUVVGak8wVlFkRU42UWl4blFrRkJaMElzUlU4clFrd3NUMEZCWlR0RFVEbENNMEk3TzBGblJHdEVTQ3hCZUVSTVFTeExkMFJMU3l4QlFVRkJMRkZCUVZFc1EyaEVOVVJpTEZWQlFWVXNRVkoxUkZRc1RVRkJUU3hGZDBSTFVDeExRVUZMTEVGQlFVRXNVVUZCVVN4RGFFUTFSR0lzVlVGQlZTeEJVbmRFVkN4TlFVRk5MRVYzUkVsUUxFdEJRVXNzUVVGQlFTeFJRVUZSTEVOb1JEVkVZaXhWUVVGVkxFRlNlVVJVTEUxQlFVMHNSWGRFUjFBc1MwRkJTeXhCUVVGQkxGRkJRVkVzUTJoRU5VUmlMRlZCUVZVc1FWSXdSRlFzVFVGQlRTeERRVUZETzBWUmRrUktMRmxCUVZrc1JVOHdRMFFzVDBGQlpUdEZVSHBETVVJc1owSkJRV2RDTEVWMlFuRkNXaXhQUVVGelJEdERaVzFETjBRN08wRjNSRUZFTEVGb1JISkVSU3hMWjBSeFJFY3NRVUZCUVN4UlFVRlJMRU5vUkRWRVlpeFZRVUZWTEVGQlQxQXNUMEZCVHl4RFFVRkRPMFZCUTFBc1MwRkJTeXhGVHl0Q1RTeEpRVUZKTzBWUU9VSm1MR2RDUVVGblFpeEZUMjlEVEN4UFFVRmxPME5RYmtNelFqczdRV2RFYTBSSUxFRjRSRXhCTEV0M1JFdExMRUZCUVVFc1YwRkJWeXhEYUVRMVJHaENMRlZCUVZVc1FWSjFSRlFzVFVGQlRTeEZkMFJMVUN4TFFVRkxMRUZCUVVFc1YwRkJWeXhEYUVRMVJHaENMRlZCUVZVc1FWSjNSRlFzVFVGQlRTeEZkMFJKVUN4TFFVRkxMRUZCUVVFc1YwRkJWeXhEYUVRMVJHaENMRlZCUVZVc1FWSjVSRlFzVFVGQlRTeEZkMFJIVUN4TFFVRkxMRUZCUVVFc1YwRkJWeXhEYUVRMVJHaENMRlZCUVZVc1FWSXdSRlFzVFVGQlRTeERRVUZETzBWUmRrUktMRmxCUVZrc1JVOUdSaXhQUVVGUE8wVlFSMnBDTEdkQ1FVRm5RaXhGZGtKeFFsb3NUMEZCYzBRN1EyVnRRemRFT3p0QmQwUkJSQ3hCYUVSeVJFVXNTMmRFY1VSSExFRkJRVUVzVjBGQlZ5eERhRVExUkdoQ0xGVkJRVlVzUVVGUFVDeFBRVUZQTEVOQlFVTTdSVUZEVUN4TFFVRkxMRVZQSzBKTkxFbEJRVWs3UlZBNVFtWXNaMEpCUVdkQ0xFVlBVazRzVDBGQlR6dERVRk5zUWpzN1FXZEVhMFJJTEVGNFJFeEJMRXQzUkV0TExFRkJRVUVzWVVGQllTeERhRVExUkd4Q0xGVkJRVlVzUVZKMVJGUXNUVUZCVFN4RmQwUkxVQ3hMUVVGTExFRkJRVUVzWVVGQllTeERhRVExUkd4Q0xGVkJRVlVzUVZKM1JGUXNUVUZCVFN4RmQwUkpVQ3hMUVVGTExFRkJRVUVzWVVGQllTeERhRVExUkd4Q0xGVkJRVlVzUVZKNVJGUXNUVUZCVFN4RmQwUkhVQ3hMUVVGTExFRkJRVUVzWVVGQllTeERhRVExUkd4Q0xGVkJRVlVzUVZJd1JGUXNUVUZCVFN4RFFVRkRPMFZSZGtSS0xGbEJRVmtzUlU5M1EwUXNTVUZCWlR0RlVIWkRNVUlzWjBKQlFXZENMRVYyUW5GQ1dpeFBRVUZ6UkR0RFpXMUROMFE3TzBGM1JFRkVMRUZvUkhKRVJTeExaMFJ4UkVjc1FVRkJRU3hoUVVGaExFTm9SRFZFYkVJc1ZVRkJWU3hCUVU5UUxFOUJRVThzUTBGQlF6dEZRVU5RTEV0QlFVc3NSVThyUWswc1NVRkJTVHRGVURsQ1ppeG5Ra0ZCWjBJc1JVOXJRMHdzU1VGQlpUdERVR3BETTBJN08wRm5SR3RFU0N4QmVFUk1RU3hMZDBSTFN5eEJRVUZCTEZGQlFWRXNRMmhFTlVSaUxGVkJRVlVzUVZKMVJGUXNUVUZCVFN4RmQwUkxVQ3hMUVVGTExFRkJRVUVzVVVGQlVTeERhRVExUkdJc1ZVRkJWU3hCVW5kRVZDeE5RVUZOTEVWM1JFbFFMRXRCUVVzc1FVRkJRU3hSUVVGUkxFTm9SRFZFWWl4VlFVRlZMRUZTZVVSVUxFMUJRVTBzUlhkRVIxQXNTMEZCU3l4QlFVRkJMRkZCUVZFc1EyaEVOVVJpTEZWQlFWVXNRVkl3UkZRc1RVRkJUU3hEUVVGRE8wVlJka1JLTEZsQlFWa3NSVTlMUml4UFFVRlBPMFZRU21wQ0xHZENRVUZuUWl4RmRrSnhRbG9zVDBGQmMwUTdRMlZ0UXpkRU96dEJkMFJCUkN4QmFFUnlSRVVzUzJkRWNVUkhMRUZCUVVFc1VVRkJVU3hEYUVRMVJHSXNWVUZCVlN4QlFVOVFMRTlCUVU4c1EwRkJRenRGUVVOUUxFdEJRVXNzUlU5MVEwMHNUMEZCWXp0RlVIUkRla0lzWjBKQlFXZENMRVZQUkU0c1QwRkJUenREVUVWc1FqczdRV2RFYTBSSUxFRjRSRXhCTEV0M1JFdExMRUZCUVVFc1VVRkJVU3hEYUVRMVJHSXNWVUZCVlN4QlVuVkVWQ3hOUVVGTkxFVjNSRXRRTEV0QlFVc3NRVUZCUVN4UlFVRlJMRU5vUkRWRVlpeFZRVUZWTEVGU2QwUlVMRTFCUVUwc1JYZEVTVkFzUzBGQlN5eEJRVUZCTEZGQlFWRXNRMmhFTlVSaUxGVkJRVlVzUVZKNVJGUXNUVUZCVFN4RmQwUkhVQ3hMUVVGTExFRkJRVUVzVVVGQlVTeERhRVExUkdJc1ZVRkJWU3hCVWpCRVZDeE5RVUZOTEVOQlFVTTdSVkYyUkVvc1dVRkJXU3hGVDBWR0xFOUJRVTg3UlZCRWFrSXNaMEpCUVdkQ0xFVjJRbkZDV2l4UFFVRnpSRHREWlcxRE4wUTdPMEYzUkVGRUxFRm9SSEpFUlN4TFowUnhSRWNzUVVGQlFTeFJRVUZSTEVOb1JEVkVZaXhWUVVGVkxFRkJUMUFzVDBGQlR5eERRVUZETzBWQlExQXNTMEZCU3l4RlQzVkRUU3hQUVVGak8wVlFkRU42UWl4blFrRkJaMElzUlU5S1RpeFBRVUZQTzBOUVMyeENPenRCWjBSclJFZ3NRWGhFVEVFc1MzZEVTMHNzUVVGQlFTeFRRVUZUTEVOb1JEVkVaQ3hWUVVGVkxFRlNkVVJVTEUxQlFVMHNSWGRFUzFBc1MwRkJTeXhCUVVGQkxGTkJRVk1zUTJoRU5VUmtMRlZCUVZVc1FWSjNSRlFzVFVGQlRTeEZkMFJKVUN4TFFVRkxMRUZCUVVFc1UwRkJVeXhEYUVRMVJHUXNWVUZCVlN4QlVubEVWQ3hOUVVGTkxFVjNSRWRRTEV0QlFVc3NRVUZCUVN4VFFVRlRMRU5vUkRWRVpDeFZRVUZWTEVGU01FUlVMRTFCUVUwc1EwRkJRenRGVVhaRVNpeFpRVUZaTEVWUFIwWXNUMEZCVHp0RlVFWnFRaXhuUWtGQlowSXNSWFpDY1VKYUxFOUJRWE5FTzBObGJVTTNSRHM3UVhkRVFVUXNRV2hFY2tSRkxFdG5SSEZFUnl4QlFVRkJMRk5CUVZNc1EyaEVOVVJrTEZWQlFWVXNRVUZQVUN4UFFVRlBMRU5CUVVNN1JVRkRVQ3hMUVVGTExFVlBkVU5OTEU5QlFXTTdSVkIwUTNwQ0xHZENRVUZuUWl4RlQwaE9MRTlCUVU4N1ExQkpiRUk3TzBGblJHdEVTQ3hCZUVSTVFTeExkMFJMU3l4QlFVRkJMRk5CUVZNc1EyaEVOVVJrTEZWQlFWVXNRVkoxUkZRc1RVRkJUU3hGZDBSTFVDeExRVUZMTEVGQlFVRXNVMEZCVXl4RGFFUTFSR1FzVlVGQlZTeEJVbmRFVkN4TlFVRk5MRVYzUkVsUUxFdEJRVXNzUVVGQlFTeFRRVUZUTEVOb1JEVkVaQ3hWUVVGVkxFRlNlVVJVTEUxQlFVMHNSWGRFUjFBc1MwRkJTeXhCUVVGQkxGTkJRVk1zUTJoRU5VUmtMRlZCUVZVc1FWSXdSRlFzVFVGQlRTeERRVUZETzBWUmRrUktMRmxCUVZrc1JVOUJSaXhQUVVGUE8wVlFRMnBDTEdkQ1FVRm5RaXhGZGtKeFFsb3NUMEZCYzBRN1EyVnRRemRFT3p0QmQwUkJSQ3hCYUVSeVJFVXNTMmRFY1VSSExFRkJRVUVzVTBGQlV5eERhRVExUkdRc1ZVRkJWU3hCUVU5UUxFOUJRVThzUTBGQlF6dEZRVU5RTEV0QlFVc3NSVTkxUTAwc1QwRkJZenRGVUhSRGVrSXNaMEpCUVdkQ0xFVlBUazRzVDBGQlR6dERVRTlzUWpzN1FXZEVjMFZNTEVGQlFVRXNTMEZCU3l4SFFVRkhMRXRCUVVzc1EwRkJRenRGUVVOYUxGRkJRVkVzUlVGQlJTeE5RVUZOTzBVMVJHcEZaQ3hUUVVGVExFVkJRVU1zVDBGQlF6dERORVJyUm1RN08wRkJiRUpFTEVGQlMwVXNTMEZNUnl4SFFVRkhMRXRCUVVzc1IwRkxWQ3hEUVVGRExFTkJRVU03UlVGRFJpeGhRVUZoTEVWQlFVVXNUVUZCZDBNN1JVRkRka1FzVjBGQlZ5eEZiRUkxUlRKQ0xFdEJRWFZDTzBOclFqWkZPVVE3TzBGQlVrZ3NRVUZWUlN4TFFWWkhMRWRCUVVjc1MwRkJTeXhIUVZWVUxFdEJRVXNzUTBGQlF6dEZRVU5PTEdGQlFXRXNSVUZCUlN4RFFVRkRPME5CUTJwQ096dEJRVnBJTEVGQlkwVXNTMEZrUnl4SFFVRkhMRXRCUVVzc1IwRmpWQ3hoUVVGaExFTkJRVU03UlVGRFpDeGhRVUZoTEVVelFteEdhVU1zVFVGQlN6dEZNa0p0Um01RUxGZEJRVmNzUlVGQlJTeERRVUZETzBOQlEyWTdPMEZCU1Vnc1FVRkJRU3hoUVVGaExFTkJRVU03UlVGRFdpeFBRVUZQTEVWQlFVVXNWMEZCVnp0RFFYbENja0k3TzBGQk1VSkVMRUYyUkRWR1JTeGhkVVEwUmxjc1FYWkVOVVpXTEU5QlFVOHNRMEZCUXp0RmRVUm5SMUFzVDBGQlR5eEZRVUZGTEVWQlFVVTdSVUZEV0N4VlFVRlZMRVZCUVVVc1RVRkJUVHRGUVVOc1FpeFhRVUZYTEVWQlFVVXNTVUZCU1R0RmNFUjBSMjVDTEUxQlFVMHNSV2xEUlRKRExFZEJRVWNzUTJwRFJuUkRMRXRCUVVzc1EwRkJReXhYUVVGWE8wVkJReTlDTEdkQ1FVRnJReXhGYTBORFRTeFpRVUZaTzBWc1EwRndSQ3hoUVVGdlFpeEZRVUZUTEVOQlFVTTdRMGhKTjBJN08wRjFSREJHU0N4QmRrUTFSa1VzWVhWRU5FWlhMRUZCVlZZc1QwRkJUeXhCZGtSMFIxQXNUMEZCVHl4RFFVRkRPMFYxUkhkSFRDeFRRVUZUTEVWQlFVVXNVMEZCVXp0RGRrUjBSM1pDT3p0QmRVUXdSa2dzUVVGblFrVXNZVUZvUWxjc1IwRm5RbFFzUTBGQlF5eERRVUZETzBWMFJIUkdRU3hUUVVGVExFVnZRMjVDTWtJc1RVRkJUU3hEUVVOT0xFbEJRVWNzUTNCRFYwc3NVVUZCVVN4RFFVRXJRaXhKUVVGSk8wTnpSQ3RHTVVZN08wRjBSR3hFU3l4VlFVRlZMRU5CUVZZc1RVRkJWVHRGUVVOU0xFbEJRVWs3U1VGQlJ5eFBRVUZQTEVWQlFVVXNRMEZCUXpzN096dEJjMFFyUWpOQ0xFRkJjMEpKTEdGQmRFSlRMRUZCYjBKV0xFbEJRVXNzUTBFMVJrRXNUMEZCVHl4SlFUaEdWQ3hEUVVGRExFTkJRVU03UlVGRFJpeFBRVUZQTEVWQlFVVXNTVUZCU1R0RFFVTmtPenRCUTJwSlRDeEJRVWxGTEZOQlNrOHNSMEZKVEN4TFFVRkxMRU5CUVVNN1JVRkRUaXhSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4SFFVRkhMRVZCUVVVc1NVRkJTVHRGUVVOVUxFOUJRVThzUld4Q1VYbENMRVZCUVVVN1JXdENVR3hETEU5QlFVOHNSVUZCUlN4SlFVRkpPMFZCUTJJc1UwRkJVeXhGYkVKTGRVSXNTVUZCU1R0RmEwSktjRU1zVDBGQlR5eEZiRUpGZVVJc1RVRkJTeXhEYTBKR1NDeERRVUZETzBWQlEyNURMRlZCUVZVc1JXeENSWE5DTEUxQlFVczdSV3RDUkhKRExHRkJRV0VzUlhwRFNtbENMRTFCUVVzN1JYbERTMjVETEdkQ1FVRm5RaXhGTVVNNFFrZ3NTVUZCU1R0Rk1FTTNRbXBDTEZWQlFWVXNSVzVGYjBKSExEaENRVUU0UWp0RlRXUXpReXhUUVVGVExFVkJRVU1zVDBGQlF6dEZUV1ZVTEZOQlFWTXNSWFZFYmtKUkxFMUJRVTBzUTI1Q1EyRXNTVUZCUnl4RGNFTlhTeXhSUVVGUkxFTkJRU3RDTEVsQlFVazdRM1ZFV0RGR096dEJRV3BDU0N4QlFXMUNSU3hUUVc1Q1R5eERRVzFDVUN4VFFVRlRMRU5CUVVNN1JVRkRVaXhMUVVGTExFVkJRVVVzU1VGQlNUdERRVU5hT3p0QlFYSkNTQ3hCUVhkQ1NTeFRRWGhDU3l4QlFYVkNUaXhKUVVGTExFTkJRVUVzVVVGQlVTeEZRVU5hTEZWQlFWVXNRMEZCUXp0RlFVTlVMRmRCUVZjc1JVRkJSU3hOUVVGTk8wTkJRM0JDT3p0QlFXTk1MRUZCUVVFc2FVSkJRV2xDTEVOQlFVTTdSVGRFY0VKa0xGTkJRVk1zUlVGQlF5eFBRVUZETzBVMlJITkNZaXhQUVVGUExFVkJRVVVzVjBGQlZ6dERRV055UWpzN1FVRm9Ra1FzUVhoRU0wSkZMR2xDZDBReVFtVXNRWGhFTTBKa0xFOUJRVThzUTBGQlF6dEZkMFJuUTFBc1QwRkJUeXhGUVVGRkxFVkJRVVU3UlVGRFdDeFRRVUZUTEVWQlFVVXNaVUZCTkVNN1JVRkRka1FzVlVGQlZTeEZRVUZGTEUxQlFVMDdSVUZEYkVJc1dVRkJXU3hGUVVGRkxFZEJRV2RETzBWQlF6bERMRmRCUVZjc1JVRkJSU3hKUVVGSk8wVnlSSGhEYmtJc1RVRkJUU3hGYVVORk1rTXNSMEZCUnl4RGFrTkdkRU1zUzBGQlN5eERRVUZETEZkQlFWYzdSVUZETDBJc1owSkJRV3RETEVWdFEwOUJMRmxCUVZrN1JXNURUamxETEdGQlFXOUNMRVZCUVZNc1EwRkJRenREU0VrM1FqczdRWGRFT0VOSUxFRkJRMFVzVTBGRVR5eEJRVUZCTEU5QlFVOHNSMEZEV2l4TFFVRkxMRU5CUVVNN1JVRkRUaXhIUVVGSExFVkJRVVVzU1VGQlNUdEZRVU5VTEUxQlFVMHNSVUZCUlN4SlFVRkpPMFZCUTFvc1RVRkJUU3hGUVVGRkxFTkJRVU1zUTBGQlF5eERRVUZETEVOc1FuQkVjVUlzVFVGQlN5eERhMEp2UkVnc1EwRkJRenREUVVOd1F6czdRVUZNU0N4QmVFUm9SRVVzVTNkRVowUlBMRUZCUVVFc1QwRkJUeXhIUVU5YUxHbENRVUZwUWl4QmVFUjJSR3hDTEU5QlFVOHNRMEZCUXp0RmQwUjVSRXdzVTBGQlV5eEZRVUZGTEZOQlFWTXNRMEZCUXl4blFrRkJOa003UTNoRWRrUnlSVHM3UVhkRU5FUklMRUZCUTBVc1UwRkVUeXhCUVVGQkxGTkJRVk1zUjBGRFpDeExRVUZMTEVOQlFVTTdSVUZEVGl4SFFVRkhMRVZCUVVVc1EwRkJRenRGUVVOT0xFbEJRVWtzUlVGQlJTeEpRVUZKTzBWQlExWXNUVUZCVFN4RlFVRkZMRU5CUVVNc1EwRkJReXhEUVVGRExFTkJRVU1zUTBGQlF5eERiRUpzUlcxQ0xFMUJRVXM3UTJ0Q2JVVjBRenM3UVVGTVNDeEJlRVE1UkVVc1UzZEVPRVJQTEVGQlFVRXNVMEZCVXl4SFFVOWtMR2xDUVVGcFFpeEJlRVJ5Uld4Q0xFOUJRVThzUTBGQlF6dEZkMFIxUlV3c1UwRkJVeXhGUVVGRkxHTkJRV01zUTBGQlF5eGxRVUUwUXp0RGVFUnlSWHBGT3p0QmQwUXdSVWdzUVVGRFJTeFRRVVJQTEVGQlFVRXNVVUZCVVN4SFFVTmlMRXRCUVVzc1EwRkJRenRGUVVOT0xFZEJRVWNzUlVGQlJTeERRVUZETzBWQlEwNHNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hOUVVGTkxFVkJRVVVzUTBGQlF5eERiRUpvUm5WQ0xFMUJRVXNzUTJ0Q1owWk1MRU5CUVVNc1EwRkJReXhEUVVGRE8wTkJRM0JET3p0QlFVeElMRUY0UkRWRlJTeFRkMFEwUlU4c1FVRkJRU3hSUVVGUkxFZEJUMklzYVVKQlFXbENMRUY0Ukc1R2JFSXNUMEZCVHl4RFFVRkRPMFYzUkhGR1RDeFRRVUZUTEVWQlFVVXNZVUZCWVN4RFFVRkRMR2RDUVVFMlF6dERlRVJ1Um5wRk96dEJkMFJwU1Vnc1FVRkJRU3hUUVVGVExFRkJRVUVzVVVGQlVTeERRVUZETzBWQlEyaENMRkZCUVZFc1JVRkJSU3hOUVVGTk8wTkJUMnBDT3p0QlFWSkVMRUZCUjBVc1UwRklUeXhCUVVGQkxGRkJRVkVzUjBGSFlpeExRVUZMTEVOQlFVTTdSVUZEVGl4TFFVRkxMRVZCUVVVc1EwRkJRenRGUVVOU0xFbEJRVWtzUlVGQlJTeERRVUZETzBWQlExQXNUVUZCVFN4RlFVRkZMRU5CUVVNN1EwRkRWanM3UVVOMlNrZ3NRVUZCUVN4WFFVRlhMRU5CUVVNN1JVRkRWaXhQUVVGUExFVkJRVVVzVjBGQlZ6dEZRVU53UWl4WFFVRlhMRVV4UTBseFFpeEhRVUZITEVNd1EwcEtMRXRCUVVzc1F6TkRSM1JDTEU5QlFVODdRekpEUm5SQ096dEJRMFpETEVGQlFVRXNTMEZCU3l4RFFVRkRPMFZCUTBvc1dVRkJXU3hGUVVGRkxFTkJRVU03UTBGTGFFSTdPMEZCUlVRc1FVRk5TU3hMUVU1RExFRkJRVUVzVlVGQlZTeEhRVWRZTEVWQlFVVXNRVUZIUkN4SlFVRkxMRU5CUVVFc1YwRkJWeXhGUVVGRk8wVkJRMnBDTEZsQlFWa3NSWFpDWW5GQ0xFdEJRVWs3UTNWQ1kzUkRPenRCUTJaUUxFRkJRVUVzVVVGQlVTeERRVUZETzBWQlExQXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzVDBGQlR5eEZRVUZGTEV0QlFVczdSV2hGWjBKYUxGTkJRVk1zUlVGQlF5eEpRVUZETzBOblJXUmtPenRCUVVWRUxFRkJRVUVzUzBGQlN5eEJRVUZCTEZGQlFWRXNRMEZCUXp0RlFVTmFMR0ZCUVdFc1JVRkJSU3hEUVVGRE8wTkJRMnBDT3p0QlFVdEVMRUZCUVVFc1VVRkJVU3hIUVVGSExGTkJRVk1zUTBGQlF6dEZRVU51UWl4UlFVRlJMRVZCUVVVc1VVRkJVVHRGUVVOc1FpeExRVUZMTEVWQlFVVXNRMEZCUXp0RlFVTlNMRTFCUVUwc1JVRkJSU3hKUVVGSk8wVkJRMW9zVDBGQlR5eEZRVUZGTEVsQlFVazdSVUZEWWl4UFFVRlBMRVYyUW1Zd1F5eEhRVUZITEVOQlFVTXNSMEZCUnp0RmRVSm5RbmhFTEdGQlFXRXNSVUZCUlN4SFFVRTRSRHRGUVVNM1JTeGhRVUZoTEVVMVEyUnRRaXhOUVVGTE8wVTBRMlZ5UXl4TFFVRkxMRVUzUTI5Q1ZTeEpRVUZKTzBVMlEyNUNia0lzVlVGQlZTeEZkRVZWU3l4cFEwRkJPRUk3UlU5dVFqTkRMR2RDUVVGblFpeEZhMEpyUTBnc1QwRkJaVHRETmtObUwwSTdPMEZCYmtKRUxFRXpSRlpGTEZFeVJGVk5MRWRCUVVjc1UwRkJVeXhCTTBSV2FrSXNVVUZCVVN4RFFVRkRPMFV5UkhWQ1VpeFBRVUZQTEVWQlFVVXNSVUZCUlR0RlFVTllMRkZCUVZFc1JVRkJSU3hSUVVGUk8wVkJRMnhDTEVkQlFVY3NSVUZCUlN4SlFVRkpPMFZCUTFRc1MwRkJTeXhGZGtKdVFqQkRMRWxCUVVrN1JXcERTSEpFTEUxQlFVMHNSV2xEUlRKRExFZEJRVWNzUTJwRFJuUkRMRXRCUVVzc1EwRkJReXhYUVVGWE8wVkJReTlDTEdkQ1FVRnJReXhGVjNWRGJrSXNUMEZCWlR0RldIUkRPVUlzWVVGQmIwSXNSVUZCVXl4RFFVRkRPME5JU2pkQ096dEJORVJLUkN4QlFVRkJMRTFCUVUwc1EwRkJRenRGUVVWTUxFOUJRVThzUlVGQlJTeEpRVUZKTzBWQlEySXNWMEZCVnl4RlFVRkZMRWxCUVVrN1JVRkRha0lzVjBGQlZ5eEZRVUZGTEUxQlFVMDdSVUZEYmtJc1dVRkJXU3hGT1VOelEwTXNUMEZCWlR0Rk9FTnlRelZDTEdkQ1FVRm5RaXhGTTBOTE5FTXNUMEZCWlR0RE1rTktOVVU3TzBGQlRVUXNRVUZCUVN4TlFVRk5MRU5CUVVNN1JVRkRUQ3hQUVVGUExFVkJRVVVzU1VGQlNUdEZRVU5pTEZOQlFWTXNSVUZCUlN4SlFVRkpPME5CTUVwb1FqczdRVUUxU2tRc1FVRkxTU3hOUVV4RkxFRkJTVWdzVFVGQlRTeEhRVU5JTEUxQlFVMDdRVUZNV2l4TlFVRk5MRUZCU1Vnc1RVRkJUU3hIUVVWSUxFbEJRVWtzUTBGQlF6dEZRVU5NTEU5QlFVOHNSWEpDWmpCQ0xFOUJRVTBzUTBGRFRpeFBRVUZQTzBOeFFtVjZRenM3UVVGU1RDeEJOMFF5UTBFc1RUWkVNME5OTEVkQlYwWXNUVUZCVFN4Qk4wUm5RMVFzVFVGQlRTeEZOa1F6UTFBc1RVRkJUU3hIUVZkR0xFMUJRVTBzUVRkRWFVTlVMRTFCUVUwc1JUWkVOVU5RTEUxQlFVMHNSMEZYUml4TlFVRk5MRUUzUkd0RFZDeE5RVUZOTEVVMlJEZERVQ3hOUVVGTkxFZEJWMFlzVFVGQlRTeEJOMFJ0UTFRc1RVRkJUVHRCTmtRNVExQXNUVUZCVFN4SFFWbEdMRkZCUVZFc1FUZEVLMEpZTEUxQlFVMDdRVFpFTTBOUUxFMUJRVTBzUjBGWlJpeFJRVUZSTEVFM1JHZERXQ3hOUVVGTk8wRTJSRFZEVUN4TlFVRk5MRWRCV1VZc1VVRkJVU3hCTjBScFExZ3NUVUZCVFR0Qk5rUTNRMUFzVFVGQlRTeEhRVmxHTEZGQlFWRXNRVGRFYTBOWUxFMUJRVTA3UVRaRU9VTlFMRTFCUVUwc1IwRmhSaXhOUVVGTkxFRTNSRGhDVkN4TlFVRk5PMEUyUkRORFVDeE5RVUZOTEVkQllVWXNUVUZCVFN4Qk4wUXJRbFFzVFVGQlRUdEJOa1ExUTFBc1RVRkJUU3hIUVdGR0xFMUJRVTBzUVRkRVowTlVMRTFCUVUwN1FUWkVOME5RTEUxQlFVMHNSMEZoUml4TlFVRk5MRUUzUkdsRFZDeE5RVUZOTzBFMlJEbERVQ3hOUVVGTkxFZEJZMFlzU1VGQlNTeEJOMFEyUWxBc1RVRkJUVHRCTmtRelExQXNUVUZCVFN4SFFXTkdMRWxCUVVrc1FUZEVPRUpRTEUxQlFVMDdRVFpFTlVOUUxFMUJRVTBzUjBGalJpeEpRVUZKTEVFM1JDdENVQ3hOUVVGTk8wRTJSRGREVUN4TlFVRk5MRWRCWTBZc1NVRkJTU3hCTjBSblExQXNUVUZCVFN4RFFVRkRPMFUyUkRsQ1JpeFBRVUZQTEVWeVFqZENNRUlzUlVGQlJUdERlRU0yUkhoRE96dEJOa1JvUkVRc1FVRnZRa1VzVFVGd1Fra3NSMEZ2UWtZc1RVRkJUVHRCUVhCQ1ZpeE5RVUZOTEVkQmNVSkdMRkZCUVZFc1FVRkJRU3hKUVVGTExFTkJiRU5xUWl4TlFVRk5MRVZCYTBOdFFqdEZRVU55UWl4SlFVRkpMRVZCUVVVc1RVRkJUVHREUVVOaU96dEJRWFZKU0N4QlFVRkJMRTFCUVUwc1FVRkJRU3hSUVVGUkxFTkJRVU03UlVGRFlpeFBRVUZQTEVWQlFVVXNWMEZCVnp0RFFVTnlRanM3UVVNelMwUXNRVUZCUVN4TlFVRk5MRU5CUVVNN1JVRkRUQ3hSUVVGUkxFVkJRVVVzVVVGQlVUdEZRVU5zUWl4UFFVRlBMRVZCUVVVc1MwRkJTenRGUVVOa0xGRkJRVkVzUlVGQlJTeE5RVUZOTzBWQlEyaENMRXRCUVVzc1JVRkJSU3hKUVVGSk8wVkJRMWdzVDBGQlR5eEZRVUZGTEVOQlFVTTdRMEZSV0RzN1FVRmlSQ3hCTjBSQlFTeE5Oa1JCVFN4Qk4wUkJUQ3hSUVVGUkxFTkJRVU03UlRaRVVVNHNUMEZCVHl4RlFVRkZMRVZCUVVVN1JVRkRXQ3hQUVVGUExFVkJRVVVzUzBGQlN6dEZRVVZrTEZkQlFWY3NSVUZCUlN4TlFVRXJSVHRETjBSVUwwWTdPMEUyUkdGRUxFRkJRVUVzVjBGQlZ5eERRVUZETzBWQlExWXNVVUZCVVN4RlFVRkZMRkZCUVZFN1JVRkRiRUlzUjBGQlJ5eEZRVUZGTEVOQlFVTTdSVUZEVGl4TlFVRk5MRVZCUVVVc1EwRkJRenRGUVVOVUxFbEJRVWtzUlVGQlJTeERRVUZETzBWQlExQXNTMEZCU3l4RlFVRkZMRWxCUVVrN1JVRkRXQ3hOUVVGTkxFVkJRVVVzU1VGQlNUdEZRVU5hTEUxQlFVMHNSVUZCUlN4RFFVRkRPME5CUTFZN08wRkJTVU1zUVRkRU0wSkdMRTAyUkRKQ1VTeEJRVUZCTEU5QlFVOHNRVGRFTTBKa0xGRkJRVkVzUTBGQlF6dEZOa1EyUWtvc1YwRkJWeXhGUVVGRkxFbEJRVzFFTzBNM1JETkNja1U3TzBFMlJIbENReXhCTjBRelFrWXNUVFpFTWtKUkxFRkJRVUVzVDBGQlR5eEJOMFF6UW1Rc1VVRkJVU3hEUVVGRE8wVTJSRFpDU2l4WFFVRlhMRVZCUVVVc1IwRkJiVVE3UXpkRU0wSnlSVHM3UVRaRWVVSkRMRUUzUkROQ1JpeE5Oa1F5UWxFc1FVRkJRU3hUUVVGVExFRTNSRE5DYUVJc1VVRkJVU3hEUVVGRE8wVTJSRFpDU2l4WFFVRlhMRVZCUVVVc1MwRkJiVVE3UXpkRU0wSnlSVHM3UVRaRWVVSkRMRUUzUkROQ1JpeE5Oa1F5UWxFc1FVRkJRU3hSUVVGUkxFRTNSRE5DWml4UlFVRlJMRU5CUVVNN1JUWkVOa0pLTEZkQlFWY3NSVUZCUlN4VFFVRnRSRHRETjBRelFuSkZPenRCT0VSR1JDeEJRVUZCTEZkQlFWY3NRMEZCUXp0RlFVTldMRTlCUVU4c1JVRkJSU3hKUVVGSk8wVkJRMklzVlVGQlZTeEZRVUZGTEVsQlFVazdSVUZEYUVJc1UwRkJVeXhGUVVGRkxFbEJRVWs3UlVGRFppeFBRVUZQTEVWeVFrNTVRaXhQUVVGTkxFTkJRMDRzU1VGQlNUdEZjVUpOY0VNc1lVRkJZU3hGY2tKS2JVSXNTVUZCU1R0Rk9VTmpjRU1zVTBGQlV5eEZRVUZETEVsQlFVTTdRMjFGUmxvN08wRkJZa1FzUVM5RWJVSkJMRmNyUkc1Q1Z5eERRVkZVTEVOQlFVTXNRUzlFVjBZc1RVRkJUU3hGSzBSdVFsQXNWMEZCVnl4RFFWRlVMRU5CUVVNc1FTOUVXVVlzVFVGQlRTeERRVUZETzBVclJGWkdMR1ZCUVdVc1JVRkJSU3hKUVVGSk8wTXZSRmt4UWpzN1FTdEVVRVFzUVVGQlFTeG5Ra0ZCWjBJc1EwRkJRenRGUVVObUxHRkJRV0VzUlhKQ2FFSnRRaXhMUVVGSk8wTnhRbkZEY2tNN08wRkJkRUpFTEVFNVJHWkJMR2RDT0VSbFowSXNRVUZIWWl4SlFVRkxMRU5CUVVFc1dVRkJXU3hET1VSc1FtNUNMRkZCUVZFc1EwRkJRenRGT0VSdlFrb3NUMEZCVHl4RmNrSnFRbkZDTEV0QlFVczdSWEZDYTBKcVF5eGhRVUZoTEVWQlFVVXNUVUZCT0VJN1JVRkROME1zUzBGQlN5eEZhRVJ4UWtrc1QwRkJaVHREWkhwRE4wSTdPMEU0UkdGRUxFRXZSRXhCTEdkQ0swUkxaMElzUVM5RVRHUXNTVUZCU3l4RlFYZEhRU3hCUVVGQkxGRkJRVU1zUVVGQlFTeEZRWGhIVlN4SlFVRkxMRU5CZDBkQkxGTkJRVk1zUTBGNFIwTXNUMEZCVHl4RkswUkxlRU1zWjBKQlFXZENMRUV2UkVwbUxFbEJRVXNzUlVGMVIwTXNRVUZCUVN4UlFVRkRMRUZCUVVFc1JVRjJSMU1zU1VGQlN5eERRWFZIUXl4VFFVRlRMRU5CZGtkQkxFOUJRVThzUTBGQlF6dEZLMFJuUW5CRExFdEJRVXNzUldoRVowSk5MRTlCUVdVN1EyWTVRamRDT3p0QkswUkZSQ3hCT1VSbVFTeG5RamhFWldkQ0xFTkJaV0lzUVVGQlFTeGpRVUZETEVGQlFVRXNRMEZEUXl4SlFVRkxMRU5CWWtZc1dVRkJXU3hET1VSc1FtNUNMRkZCUVZFc1EwRkJRenRGT0VScFEwWXNUMEZCVHl4RlFVRkZMRzlDUVVGdlFqdERPVVF2UW5CRElncDkgKi8iLCIvKipcclxuICogRmx1aWQgQ29tcG9uZW50cyB2MC4yMC4wXHJcbiAqIENvcHlyaWdodCAoYykgMjAxOS0yMDI3IEZsdWlkIEZyYW1ld29ya1xyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTktMjAyNyBBc2hmYWhhblxyXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgKGh0dHBzOi8vZ2l0aHViLmNvbS9mbHVpZC1mcmFtZXdvcmsvRmx1aWQvYmxvYi9tYXN0ZXIvTElDRU5TRSlcclxuKi9cclxuXHJcbi8vIENvbmZpZ3VyYXRpb25cclxuXHJcbkBpbXBvcnQgXCIuL3ZlbmRvcnMvdmVuZG9yc1wiO1xyXG5cclxuLy9cclxuLy8gVG9vbHNcclxuLy9cclxuXHJcbkBpbXBvcnQgXCIuL3Rvb2xzL3Rvb2xzXCI7XHJcblxyXG4vL1xyXG4vLyBTZXR0aW5nc1xyXG4vL1xyXG5cclxuQGltcG9ydCBcIi4vc2V0dGluZ3Mvc2V0dGluZ3NcIjtcclxuXHJcbi8vXHJcbi8vIFBsYWNlaG9sZGVyc1xyXG4vL1xyXG5cclxuQGltcG9ydCBcIi4vc2V0dGluZ3MvcGxhY2Vob2xkZXJzL2dlbmVyYWxcIjtcclxuQGltcG9ydCBcIi4vc2V0dGluZ3MvcGxhY2Vob2xkZXJzL3ByZWZlcnMtcmVkdWNlZC1tb3Rpb25cIjtcclxuQGltcG9ydCBcIi4vc2V0dGluZ3MvcGxhY2Vob2xkZXJzL2NvbnRyb2xzXCI7XHJcbkBpbXBvcnQgXCIuL3NldHRpbmdzL3BsYWNlaG9sZGVycy9ncm91cFwiO1xyXG5AaW1wb3J0IFwiLi9zZXR0aW5ncy9wbGFjZWhvbGRlcnMvZHJvcGRvd25cIjtcclxuXHJcbi8vXHJcbi8vIENvbXBvbmVudHNcclxuLy9cclxuXHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvaW5wdXRcIjtcclxuQGltcG9ydCBcIi4vY29tcG9uZW50cy9idXR0b25cIjtcclxuQGltcG9ydCBcIi4vY29tcG9uZW50cy9maWxlXCI7XHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvcmFkaW9cIjtcclxuQGltcG9ydCBcIi4vY29tcG9uZW50cy9jaGVja2JveFwiO1xyXG5AaW1wb3J0IFwiLi9jb21wb25lbnRzL3JhbmdlXCI7XHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvc3dpdGNoXCI7XHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvbWVudVwiO1xyXG5AaW1wb3J0IFwiLi9jb21wb25lbnRzL2Ryb3Bkb3duXCI7XHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvYmxvY2txdW90ZVwiO1xyXG5AaW1wb3J0IFwiLi9jb21wb25lbnRzL2xpc3RcIjtcclxuQGltcG9ydCBcIi4vY29tcG9uZW50cy9jb250cm9sXCI7XHJcbkBpbXBvcnQgXCIuL2NvbXBvbmVudHMvZ3JvdXBcIjtcclxuQGltcG9ydCBcIi4vY29tcG9uZW50cy9lbWJlZFwiO1xyXG5AaW1wb3J0IFwiLi9jb21wb25lbnRzL2JyZWFkY3J1bWJcIjtcclxuIiwiJWRpc3BsYXktYmxvY2sge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4lZGlzcGxheS1pbmxpbmVibG9jayB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4ldmVydGljYWxhbGlnbi1iYXNlbGluZSB7XHJcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG59XHJcblxyXG4lLXdlYmtpdGFwcGVhcmFuY2Utbm9uZSB7XHJcbiAgLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHByb3BlcnR5LW5vLXZlbmRvci1wcmVmaXhcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbiUtd2Via2l0YXBwZWFyYW5jZS1idXR0b24ge1xyXG4gIC8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBwcm9wZXJ0eS1uby12ZW5kb3ItcHJlZml4XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XHJcbn1cclxuXHJcbiUtd2Via2l0YXBwZWFyYW5jZS10ZXh0ZmllbGQge1xyXG4gIC8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBwcm9wZXJ0eS1uby12ZW5kb3ItcHJlZml4XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XHJcbn1cclxuXHJcbiVjb2xvci1pbmhlcml0IHtcclxuICBjb2xvcjogaW5oZXJpdDtcclxufVxyXG5cclxuJWxpbmVoZWlnaHQtaW5oZXJpdCB7XHJcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XHJcbn1cclxuXHJcbiVwYWRkaW5nLTAge1xyXG4gIHBhZGRpbmc6IDA7XHJcbn1cclxuXHJcbiVib3JkZXItMCB7XHJcbiAgYm9yZGVyOiAwO1xyXG59XHJcblxyXG4lYm9yZGVyc3R5bGUtbm9uZSB7XHJcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xyXG59XHJcblxyXG4lbWFyZ2ludG9wLTAge1xyXG4gIG1hcmdpbi10b3A6IDA7XHJcbn1cclxuXHJcbiVtYXJnaW4tMCB7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4lb3ZlcmZsb3ctYXV0byB7XHJcbiAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbiVwb3NpdGlvbi1yZWxhdGl2ZSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4lcG9zaXRpb24tZml4ZWQge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxufVxyXG5cclxuJWN1cnNvci1wb2ludGVyIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIiwiLy9cclxuLy8gUGxhY2Vob2xkZXJzIFVzZWQgZm9yIHZhcmlvdXMgY29udHJvbHNcclxuLy9cclxuXHJcbi8vIEJhc2ljIHN0eWxlcyBmb3Igbm9ybWFsIGNvbnRyb2xzIHdoZXJlIHN0eWxlIGFyZSBkaXJlY3RseSBhcHBsaWVkIG9uIGVsZW1lbnRzXHJcbi8vIGUuZyBCdXR0b24sIEdyb3VwIEFkZG9uLCBJbnB1dCwgVGV4dGFyZWEsIFNlbGVjdCwgTWVudSwgUmFuZ2UgYW5kICVjb250cm9scy1sYWJlbChzKSBsYWJlbFxyXG4lY29udHJvbHMge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgcGFkZGluZzogJGNvbnRyb2xzLXBhZGRpbmcteSAkY29udHJvbHMtcGFkZGluZy14O1xyXG4gIGJvcmRlcjogJGNvbnRyb2xzLWJvcmRlcndpZHRoIHNvbGlkICRjb250cm9scy1ib3JkZXJjb2xvcjtcclxuICBib3JkZXItcmFkaXVzOiBib3JkZXItcmFkaXVzKCRjb250cm9scy1ib3JkZXJyYWRpdXMsIDApO1xyXG4gIGNvbG9yOiAkY29udHJvbHMtY29sb3I7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGNvbnRyb2xzLWJhY2tncm91bmQ7XHJcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgZm9udC1mYW1pbHk6ICRjb250cm9scy1mb250ZmFtaWx5O1xyXG4gIGZvbnQtd2VpZ2h0OiAkY29udHJvbHMtZm9udHdlaWdodDtcclxuICBsaW5lLWhlaWdodDogJGNvbnRyb2xzLWxpbmVoZWlnaHQ7XHJcbiAgQGluY2x1ZGUgZm9udHNpemUoKTtcclxuICBAaW5jbHVkZSB0cmFuc2l0aW9uKCRjb250cm9scy10cmFuc2l0aW9uKTtcclxufVxyXG5cclxuLy8gQmFzaWMgYWN0aXZlIHN0YXRlIHN0eWxlcyBmb3Igbm9ybWFsIGNvbnRyb2xzIHdoZXJlIHN0eWxlIGFyZSBkaXJlY3RseSBhcHBsaWVkIG9uIGVsZW1lbnRzXHJcbi8vIGUuZyBCdXR0b24sIEdyb3VwIEFkZG9uLCBJbnB1dCwgVGV4dGFyZWEsIFNlbGVjdCBhbmQgJWNvbnRyb2xzLWxhYmVsKHMpIGxhYmVsXHJcbiVjb250cm9scy1hY3RpdmUge1xyXG4gIEBpbmNsdWRlIGFjdGl2ZSB7XHJcbiAgICBAaW5jbHVkZSBhbmltYXRpb24obm9uZSk7IC8vIGRpc2FibGUgYW5pbWF0aW9ucyBvbiBjbGljayBldmVudCBhbmQgcGxheSBhZ2FpbiBvbiBmb2N1cy9jbGlja3VwIGV2ZW50XHJcbiAgICBib3gtc2hhZG93OiBib3gtc2hhZG93KG5vbmUpOyAvLyBubyBzaGFkb3cgaW4gY2xpY2tlZCBzdGF0ZVxyXG4gIH1cclxufVxyXG5cclxuLy8gQmFzaWMgaG92ZXIgc3RhdGUgc3R5bGVzIGZvciBub3JtYWwgY29udHJvbHMgd2hlcmUgc3R5bGUgYXJlIGRpcmVjdGx5IGFwcGxpZWQgb24gZWxlbWVudHNcclxuLy8gZS5nIEJ1dHRvbiwgR3JvdXAgQWRkb24sIFRleHRhcmVhLCBTZWxlY3QgYW5kICVjb250cm9scy1sYWJlbChzKSBsYWJlbFxyXG4lY29udHJvbHMtaG92ZXIge1xyXG4gIEBpbmNsdWRlIGhvdmVyIHtcclxuICAgIGJveC1zaGFkb3c6IGJveC1zaGFkb3coJGNvbnRyb2xzLWZvY3VzLWJveHNoYWRvdyByZ2JhKCRjb250cm9scy10aGVtZSwgLjUpKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIEJhc2ljIGZvY3VzIHN0YXRlIHN0eWxlcyBmb3Igbm9ybWFsIGNvbnRyb2xzIHdoZXJlIHN0eWxlIGFyZSBkaXJlY3RseSBhcHBsaWVkIG9uIGVsZW1lbnRzXHJcbi8vIGUuZyBCdXR0b24sIEdyb3VwIEFkZG9uLCBJbnB1dCwgVGV4dGFyZWEsIFNlbGVjdCBhbmQgJWNvbnRyb2xzLWxhYmVsKHMpIGxhYmVsXHJcbiVjb250cm9scy1mb2N1cyB7XHJcbiAgQGluY2x1ZGUgZm9jdXMge1xyXG4gICAgQGluY2x1ZGUgYW5pbWF0aW9uKHJpcHBsZSk7IC8vIHJpcHBsZSBhbmltYXRpb24gb24gY2xpY2sgZXZlbnRcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBCYXNpYyBzdHlsZXMgZm9yIGNvbnRyb2xzIHdoZXJlIHN0eWxlIGFyZSBub3QgZGlyZWN0bHkgYXBwbGllZCBvbiBlbGVtZW50cyBidXQgb24gdGhlaXIgbGFiZWwgaW5zdGVhZFxyXG4vLyBlLmcgQ2hlY2tib3gsIFJhZGlvIGFuZCBTd2l0Y2hcclxuJWNvbnRyb2xzLWxhYmVsIHtcclxuICBAaW5jbHVkZSBhY3RpdmUge1xyXG4gICAgfiAubGFiZWwge1xyXG4gICAgICBAaW5jbHVkZSBiZWZvcmUge1xyXG4gICAgICAgIG9wYWNpdHk6IC41O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmOmNoZWNrZWQge1xyXG4gICAgfiAubGFiZWwge1xyXG4gICAgICBAaW5jbHVkZSBiZWZvcmUge1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xyXG4gICAgICAgIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcclxuICAgICAgICBAaW5jbHVkZSBhbmltYXRpb24obm9uZSk7IC8vIGRpc2FibGUgYW5pbWF0aW9ucyBvbiBjbGljayBldmVudCBhbmQgcGxheSBhZ2FpbiBvbiBmb2N1cy9jbGlja3VwIGV2ZW50XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBpbmNsdWRlIGZvY3VzIHtcclxuICAgIH4gLmxhYmVsIHtcclxuICAgICAgQGluY2x1ZGUgYmVmb3JlIHtcclxuICAgICAgICBAaW5jbHVkZSBhbmltYXRpb24ocmlwcGxlKTsgLy8gcmlwcGxlIGFuaW1hdGlvbiBvbiBjbGljayBldmVudFxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB+IC5sYWJlbCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nLWxlZnQ6ICRjb250cm9scy1sYWJlbC1wYWRkaW5nbGVmdDtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7IC8vIG92ZXJyaWRlIGxhYmVsIHN0eWxlIGluc2lkZSBjb250cm9sXHJcblxyXG4gICAgOm5vdCg6ZW1wdHkpIHtcclxuICAgICAgcGFkZGluZy1yaWdodDogLjVyZW07XHJcbiAgICAgIHBhZGRpbmctbGVmdDogJGNvbnRyb2xzLWxhYmVsLXBhZGRpbmdsZWZ0O1xyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICAgIEBleHRlbmQgJWNvbnRyb2xzO1xyXG4gICAgICBAZXh0ZW5kICVjb250cm9scy1hY3RpdmU7XHJcbiAgICAgIEBleHRlbmQgJWNvbnRyb2xzLWhvdmVyO1xyXG4gICAgICBAZXh0ZW5kICVjb250cm9scy1mb2N1cztcclxuXHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiA1MCU7XHJcbiAgICAgIGxlZnQ6IDA7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTtcclxuICAgICAgd2lkdGg6ICRjb250cm9scy1sYWJlbC1iZWZvcmUtc2l6ZTtcclxuICAgICAgaGVpZ2h0OiAkY29udHJvbHMtbGFiZWwtYmVmb3JlLXNpemU7XHJcbiAgICAgIHBhZGRpbmc6IDA7IC8vIG92ZXJyaWRlICVjb250cm9scyBwYWRkaW5nXHJcbiAgICAgIGJvcmRlci1jb2xvcjogJGNvbnRyb2xzLWxhYmVsLWJvcmRlcmNvbG9yO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29udHJvbHMtbGFiZWwtYmFja2dyb3VuZDtcclxuICAgICAgQGluY2x1ZGUgZm9udHNpemUoaW5oZXJpdCk7IC8vIG92ZXJyaWRlICVjb250cm9scyBmb250LXNpemVcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vXHJcbiAgLy8gQ29sb3IgdmFyaWFudHNcclxuICAvL1xyXG4gIEBlYWNoICRjb2xvciwgJHZhbHVlIGluICR0aGVtZS1jb2xvcnMge1xyXG4gICAgJi5pcy0jeyRjb2xvcn0ge1xyXG4gICAgICB+IC5sYWJlbCB7XHJcbiAgICAgICAgQGluY2x1ZGUgYmVmb3JlIHtcclxuICAgICAgICAgIGNvbG9yOiAkdmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAaW5jbHVkZSBkaXNhYmxlZCB7XHJcbiAgICB+IC5sYWJlbCB7XHJcbiAgICAgIC8vIFNlcGFyYXRlIHN0eWxlIGZyb20gJWNvbnRyb2xzLWRpc2FibGVkIHBsYWNlaG9sZGVyIHRvIEZpeCA6IGRpc2FibGVkIG9wYWNpdHkgb24gJWNvbnRyb2xzLWxhYmVsIGluIElFXHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICBvcGFjaXR5OiAkY29udHJvbHMtZGlzYWJsZWQtb3BhY2l0eTtcclxuICAgICAgQGluY2x1ZGUgYmVmb3JlIHtcclxuICAgICAgICAvLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVjbGFyYXRpb24tbm8taW1wb3J0YW50XHJcbiAgICAgICAgY29sb3I6ICRjb250cm9scy10aGVtZS1saWdodCAhaW1wb3J0YW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBCYXNpYyBzdHlsZXMgdG8gaGlkZSBjb250cm9scyBmcm9tIHZpc3VhbCBhcHBlYXJhbmNlXHJcbi8vIGUuZyBDaGVja2JveCwgUmFkaW8sIFN3aXRjaCBhbmQgRmlsZVxyXG4lY29udHJvbHMtaGlkZSB7XHJcbiAgLy8gV2Ugc2V0IHBvc2l0aW9uLCB6LWluZGV4IGFuZCBvcGFjaXR5IGluc3RlYWQgb2Ygc2V0dGluZyBkaXNwbGF5IGFuZCB2aXNpYmlsaXR5IHByb3BlcnRpZXNcclxuICAvLyBiZWNhdXNlIHRoZXkgd291bGQgbGVhZCB0byBjb250cm9sIGJlaW5nIGhpZGRlbiBmcm9tIHNjcmVlbiByZWFkZXJzIGFuZCBvdGhlciBhc3Npc3RpdmUgdGVjaG5vbG9naWVzXHJcbiAgLy9cclxuICAvLyBSZWFkIG1vcmUgOiBodHRwczovL2FsaXN0YXBhcnQuY29tL2FydGljbGUvbm93LXlvdS1zZWUtbWUvXHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHotaW5kZXg6IC0xO1xyXG4gIG9wYWNpdHk6IDA7XHJcbn1cclxuXHJcbi8vIEJhc2ljIHN0eWxlcyBmb3IgZGlzYWJsZWQgY29udHJvbHNcclxuLy8gZS5nIEJ1dHRvbiwgSW5wdXQsIFRleHRhcmVhLCBTZWxlY3QsIE1lbnUsIFJhbmdlIGFuZCAlY29udHJvbHMtbGFiZWwocykgbGFiZWxcclxuJWNvbnRyb2xzLWRpc2FibGVkIHtcclxuICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICBvcGFjaXR5OiAkY29udHJvbHMtZGlzYWJsZWQtb3BhY2l0eTtcclxufVxyXG5cclxuLy8gQmFzaWMgc3R5bGVzIGZvciBzaG93aW5nIHZhbGlkYXRpb24gaWNvbiBvbiBjb250cm9scyB1c2luZyBiYWNrZ3JvdW5kIGltYWdlXHJcbi8vIGUuZyBJbnB1dCwgVGV4dGFyZWEgYW5kIFNlbGVjdFxyXG4lY29udHJvbHMtdmFsaWRhdGlvbi1pY29uIHtcclxuICBwYWRkaW5nLXJpZ2h0OiAkaW5wdXQtaWNvbi1wYWRkaW5nO1xyXG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgJGlucHV0LWljb24tcG9zaXRpb24tcmlnaHQgY2VudGVyO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogJGlucHV0LWljb24tc2l6ZSAkaW5wdXQtaWNvbi1zaXplO1xyXG59XHJcbiIsIi8vXHJcbi8vIGNvbnRyb2wgU2V0dGluZ3NcclxuLy9cclxuLy8gU2hhcmVkIFNldHRpbmdzIGJldHdlZW4gdmFyaW91cyBjb250cm9sc1xyXG5cclxuLy9cclxuLy8gSW5oZXJpdFxyXG4vL1xyXG4kY29udHJvbHMtYm9yZGVyd2lkdGg6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICRib3JkZXJ3aWR0aC1kZWZhdWx0ICFkZWZhdWx0O1xyXG4kY29udHJvbHMtYm9yZGVycmFkaXVzOiAgICAgICAgICAgICAgICAgICAgICAgICAgICRib3JkZXJyYWRpdXMtZGVmYXVsdCAhZGVmYXVsdDtcclxuJGNvbnRyb2xzLWxpbmVoZWlnaHQ6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkbGluZWhlaWdodC1kZWZhdWx0ICFkZWZhdWx0O1xyXG4kY29udHJvbHMtZm9udHdlaWdodDogICAgICAgICAgICAgICAgICAgICAgICAgICAgICRmb250d2VpZ2h0LW5vcm1hbCAhZGVmYXVsdDtcclxuXHJcbi8vXHJcbi8vIFNldHRpbmdcclxuLy9cclxuJGNvbnRyb2xzLXRoZW1lOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZ3JheS02MDAgIWRlZmF1bHQ7XHJcbiRjb250cm9scy10aGVtZS1saWdodDogICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdyYXktMzAwICFkZWZhdWx0O1xyXG4kY29udHJvbHMtY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRib2R5LWNvbG9yICFkZWZhdWx0O1xyXG4kY29udHJvbHMtYmFja2dyb3VuZDogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kY29udHJvbHMtYm9yZGVyY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zcGFyZW50ICFkZWZhdWx0O1xyXG4kY29udHJvbHMtcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC43NWVtICFkZWZhdWx0O1xyXG4kY29udHJvbHMtZm9udGZhbWlseTogICAgICAgICAgICAgICAgICAgICAgICAgICAgIG51bGwgIWRlZmF1bHQ7XHJcbiRjb250cm9scy10cmFuc2l0aW9uOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3IsIGJhY2tncm91bmQtY29sb3IsIGJvcmRlciwgYm94LXNoYWRvdyAhZGVmYXVsdDtcclxuXHJcbiRjb250cm9scy1mb2N1cy1ib3hzaGFkb3ctc2l6ZTogICAgICAgICAgICAgICAgICAgLjJyZW0gIWRlZmF1bHQ7XHJcbiRjb250cm9scy1mb2N1cy1ib3hzaGFkb3c6ICAgICAgICAgICAgICAgICAgICAgICAgMCAwIDAgJGNvbnRyb2xzLWZvY3VzLWJveHNoYWRvdy1zaXplICFkZWZhdWx0OyAvLyBjb2xvciBpcyBleHBsaWNpdGx5IGRlZmluZWQgb24gdXNhZ2VcclxuXHJcbiRjb250cm9scy1kaXNhYmxlZC1iYWNrZ3JvdW5kOiAgICAgICAgICAgICAgICAgICAgJGNvbnRyb2xzLXRoZW1lICFkZWZhdWx0O1xyXG4kY29udHJvbHMtZGlzYWJsZWQtb3BhY2l0eTogICAgICAgICAgICAgICAgICAgICAgIC41ICFkZWZhdWx0O1xyXG5cclxuJGNvbnRyb2xzLWxhYmVsLWJhY2tncm91bmQ6ICAgICAgICAgICAgICAgICAgICAgICAkd2hpdGUgIWRlZmF1bHQ7XHJcbiRjb250cm9scy1sYWJlbC1ib3JkZXJjb2xvcjogICAgICAgICAgICAgICAgICAgICAgJGNvbnRyb2xzLXRoZW1lLWxpZ2h0ICFkZWZhdWx0O1xyXG5cclxuLy9cclxuLy8gRGVyaXZlZFxyXG4vL1xyXG5cclxuJGNvbnRyb2xzLXBhZGRpbmcteTogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29udHJvbHMtcGFkZGluZy14IC8gMiAhZGVmYXVsdDtcclxuXHJcbiRjb250cm9scy1sYWJlbC1iZWZvcmUtc2l6ZTogICAgICAgICAgICAgICAgICAgICAgY29udmVydC11bml0KDE2cHgsIGVtKSAhZGVmYXVsdDsgLy8gdXNlIDE2cHggY29udHJvbHNcclxuJGNvbnRyb2xzLWxhYmVsLXBhZGRpbmdsZWZ0OiAgICAgICAgICAgICAgICAgICAgICAkY29udHJvbHMtbGFiZWwtYmVmb3JlLXNpemUgKiAxLjUgIWRlZmF1bHQ7XHJcbiIsIi8vXHJcbi8vIEJvcmRlcnMgU2V0dGluZ3NcclxuLy9cclxuXHJcbi8vXHJcbi8vIFNldHRpbmdcclxuLy9cclxuJGJvcmRlci1jb2xvcjogICAgICAgICAgICAgICAgICAgICRncmF5LTIwMCAhZGVmYXVsdDtcclxuXHJcbiRib3JkZXJ3aWR0aC1ub3JtYWw6ICAgICAgICAgICAgICAxcHggIWRlZmF1bHQ7XHJcbiRib3JkZXJ3aWR0aC13aWRlOiAgICAgICAgICAgICAgICAzcHggIWRlZmF1bHQ7XHJcblxyXG4kYm9yZGVycmFkaXVzLXNtYWxsOiAgICAgICAgICAgICAgLjI1ZW0gIWRlZmF1bHQ7XHJcbiRib3JkZXJyYWRpdXMtbm9ybWFsOiAgICAgICAgICAgICAuNWVtICFkZWZhdWx0O1xyXG4kYm9yZGVycmFkaXVzLWxhcmdlOiAgICAgICAgICAgICAgMWVtICFkZWZhdWx0O1xyXG4kYm9yZGVycmFkaXVzLXBpbGw6ICAgICAgICAgICAgICAgNTBlbSAhZGVmYXVsdDtcclxuJGJvcmRlcnJhZGl1cy1jaXJjbGU6ICAgICAgICAgICAgIDUwJSAhZGVmYXVsdDtcclxuXHJcbi8vXHJcbi8vIERlcml2ZWRcclxuLy9cclxuJGJvcmRlcndpZHRoLWRlZmF1bHQ6ICAgICAgICAgICAgICRib3JkZXJ3aWR0aC1ub3JtYWwgIWRlZmF1bHQ7XHJcbiRib3JkZXJyYWRpdXMtZGVmYXVsdDogICAgICAgICAgICAkYm9yZGVycmFkaXVzLXNtYWxsICFkZWZhdWx0O1xyXG4kYm9yZGVyLWRlZmF1bHQ6ICAgICAgICAgICAgICAgICAgJGJvcmRlcndpZHRoLWRlZmF1bHQgc29saWQgJGJvcmRlci1jb2xvciAhZGVmYXVsdDtcclxuIiwiLy9cclxuLy8gQmFzaWMgQ29sb3JzIFNldHRpbmdzXHJcbi8vXHJcblxyXG4vL1xyXG4vLyBTZXR0aW5nXHJcbi8vXHJcbiRibHVlOiAgICAgICAgICAjMTg5MGZmICFkZWZhdWx0O1xyXG4kaW5kaWdvOiAgICAgICAgIzU0MDBmZiAhZGVmYXVsdDtcclxuJHB1cnBsZTogICAgICAgICM4MDVhZDUgIWRlZmF1bHQ7XHJcbiRwaW5rOiAgICAgICAgICAjZWIyZjk2ICFkZWZhdWx0O1xyXG4kcmVkOiAgICAgICAgICAgI2Y1MjIyZCAhZGVmYXVsdDtcclxuJG9yYW5nZTogICAgICAgICNmYThjMTYgIWRlZmF1bHQ7XHJcbiR5ZWxsb3c6ICAgICAgICAjZmFkYjE0ICFkZWZhdWx0O1xyXG4kZ3JlZW46ICAgICAgICAgIzUyYzQxYSAhZGVmYXVsdDtcclxuJHRlYWw6ICAgICAgICAgICMyMGM5OTcgIWRlZmF1bHQ7XHJcbiRjeWFuOiAgICAgICAgICAjMTNjMmMyICFkZWZhdWx0O1xyXG4kYnJvd246ICAgICAgICAgIzZkNGM0MSAhZGVmYXVsdDtcclxuJGxpbWU6ICAgICAgICAgICNhMGQ5MTEgIWRlZmF1bHQ7XHJcbiRnb2xkOiAgICAgICAgICAjZmFhZDE0ICFkZWZhdWx0O1xyXG4kdm9sY2FubzogICAgICAgI2ZhNTQxYyAhZGVmYXVsdDtcclxuJGdlZWtibHVlOiAgICAgICMyZjU0ZWIgIWRlZmF1bHQ7XHJcbiR2aXZpZHZvaWxldDogICAjYjcyMWZmICFkZWZhdWx0O1xyXG5cclxuJGNvbG9yczogKFxyXG4gIFwiYmx1ZVwiOiAgICAgICAgICRibHVlLFxyXG4gIFwiaW5kaWdvXCI6ICAgICAgICRpbmRpZ28sXHJcbiAgXCJwdXJwbGVcIjogICAgICAgJHB1cnBsZSxcclxuICBcInBpbmtcIjogICAgICAgICAkcGluayxcclxuICBcInJlZFwiOiAgICAgICAgICAkcmVkLFxyXG4gIFwib3JhbmdlXCI6ICAgICAgICRvcmFuZ2UsXHJcbiAgXCJ5ZWxsb3dcIjogICAgICAgJHllbGxvdyxcclxuICBcImdyZWVuXCI6ICAgICAgICAkZ3JlZW4sXHJcbiAgXCJ0ZWFsXCI6ICAgICAgICAgJHRlYWwsXHJcbiAgXCJjeWFuXCI6ICAgICAgICAgJGN5YW4sXHJcbiAgXCJicm93blwiOiAgICAgICAgJGJyb3duLFxyXG4gIFwibGltZVwiOiAgICAgICAgICRsaW1lLFxyXG4gIFwiZ29sZFwiOiAgICAgICAgICRnb2xkLFxyXG4gIFwidm9sY2Fub1wiOiAgICAgICR2b2xjYW5vLFxyXG4gIFwiZ2Vla2JsdWVcIjogICAgICRnZWVrYmx1ZSxcclxuICBcInZpdmlkdm9pbGV0XCI6ICAkdml2aWR2b2lsZXQsXHJcbikgIWRlZmF1bHQ7XHJcblxyXG4vL1xyXG4vLyBHcmF5c2NhbGUgQ29sb3JzXHJcbi8vXHJcblxyXG4kd2hpdGU6ICAgICAgICAgICNmZmYgIWRlZmF1bHQ7XHJcbiRncmF5LTEwMDogICAgICAgaHNsKDAsIDAlLCA5NCUpICFkZWZhdWx0O1xyXG4kZ3JheS0yMDA6ICAgICAgIGhzbCgwLCAwJSwgODMlKSAhZGVmYXVsdDtcclxuJGdyYXktMzAwOiAgICAgICBoc2woMCwgMCUsIDcyJSkgIWRlZmF1bHQ7XHJcbiRncmF5LTUwMDogICAgICAgaHNsKDAsIDAlLCA1MCUpICFkZWZhdWx0O1xyXG4kZ3JheS02MDA6ICAgICAgIGhzbCgwLCAwJSwgMzklKSAhZGVmYXVsdDtcclxuJGdyYXktNzAwOiAgICAgICBoc2woMCwgMCUsIDI4JSkgIWRlZmF1bHQ7XHJcbiRncmF5LTgwMDogICAgICAgaHNsKDAsIDAlLCAxNyUpICFkZWZhdWx0O1xyXG4kZ3JheS05MDA6ICAgICAgIGhzbCgwLCAwJSwgNiUpICFkZWZhdWx0O1xyXG4kYmxhY2s6ICAgICAgICAgICMwMDAgIWRlZmF1bHQ7XHJcblxyXG4vL1xyXG4vLyBEZXJpdmVkXHJcbi8vXHJcblxyXG4vL1xyXG4vLyBUaGVtZSBDb2xvcnNcclxuLy9cclxuXHJcbiRkaXNhYmxlZDogICAgICAgICRncmF5LTYwMCAhZGVmYXVsdDtcclxuXHJcbiRwcmltYXJ5OiAgICAgICAgICRwdXJwbGUgIWRlZmF1bHQ7XHJcbiRzZWNvbmRhcnk6ICAgICAgICRncmF5LTUwMCAhZGVmYXVsdDtcclxuJHZhbGlkOiAgICAgICAgICAgJGdyZWVuICFkZWZhdWx0O1xyXG4kaW5mbzogICAgICAgICAgICAkY3lhbiAhZGVmYXVsdDtcclxuJHdhcm46ICAgICAgICAgICAgJHllbGxvdyAhZGVmYXVsdDtcclxuJGVycm9yOiAgICAgICAgICAgJHJlZCAhZGVmYXVsdDtcclxuJGxpZ2h0OiAgICAgICAgICAgJGdyYXktMTAwICFkZWZhdWx0O1xyXG4kZGFyazogICAgICAgICAgICAkZ3JheS03MDAgIWRlZmF1bHQ7XHJcblxyXG4kdGhlbWUtY29sb3JzOiAoXHJcbiAgXCJsaWdodFwiOiAgICAgICAgICAgJGxpZ2h0LFxyXG4gIFwiZGFya1wiOiAgICAgICAgICAgICRkYXJrLFxyXG4gIFwicHJpbWFyeVwiOiAgICAgICAgICRwcmltYXJ5LFxyXG4gIFwic2Vjb25kYXJ5XCI6ICAgICAgICRzZWNvbmRhcnksXHJcbiAgXCJpbmZvXCI6ICAgICAgICAgICAgJGluZm8sXHJcbiAgXCJ3YXJuXCI6ICAgICAgICAgICAgJHdhcm4sXHJcbiAgXCJ2YWxpZFwiOiAgICAgICAgICAgJHZhbGlkLFxyXG4gIFwiZXJyb3JcIjogICAgICAgICAgICRlcnJvcixcclxuKSAhZGVmYXVsdDtcclxuXHJcbi8vIENvbWJpbmUgQWxsIGNvbG9ycyBpZiAkZW5hYmxlLWFsbC1jb2xvci12YXJpYW50IG9wdGlvbiBpcyBlbmFibGVkXHJcbkBpZiAkZW5hYmxlLWFsbC1jb2xvci12YXJpYW50IHtcclxuICAkdGhlbWUtY29sb3JzOiBtYXAtbWVyZ2UoJGNvbG9ycywgJHRoZW1lLWNvbG9ycyk7XHJcbn1cclxuIiwiLy9cclxuLy8gRm9udCBTZXR0aW5nc1xyXG4vL1xyXG5cclxuLy9cclxuLy8gU2V0dGluZ1xyXG4vL1xyXG4kZm9udHNpemUtbm9ybWFsOiAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG5cclxuJGZvbnRmYW1pbHktc2Fucy1zZXJpZjogICAgICAgLWFwcGxlLXN5c3RlbSwgLy8gU2FmYXJpIGZvciBPUyBYIGFuZCBpT1MgKFNhbiBGcmFuY2lzY28pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsaW5rbWFjc3lzdGVtZm9udCwgLy8gQ2hyb21lIDwgNTYgZm9yIE9TIFggKFNhbiBGcmFuY2lzY28pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiU2Vnb2UgVUlcIiwgLy8gV2luZG93cyA2K1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlBpbmdGYW5nIFNDXCIsIC8vIEVhc3QgQXNpYW4gbGFuZ3VhZ2VzIC8vIFNpbXBsaWZpZWQgQ2hpbmVzZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkhpcmFnaW5vIFNhbnMgR0JcIiwgLy8gRWFzdCBBc2lhbiBsYW5ndWFnZXMgLy8gSmFwYW5lc2VcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJVYnVudHVcIiwgLy8gVWJ1bnR1IDEwLjEwK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIkNhbnRhcmVsbFwiLCAvLyBHbm9tZSAzK1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIk5vdG8gU2Fuc1wiLCAvLyBLREUgUGxhc21hIDUrXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiSGVsdmV0aWNhIE5ldWVcIiwgLy8gZmFsbGJhY2tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJpYWwsIC8vIGZhbGxiYWNrXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNhbnMtc2VyaWYsIC8vIGZhbGxiYWNrXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiQXBwbGUgQ29sb3IgRW1vamlcIiwgLy8gbWFjT1MgZW1vamlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJTZWdvZSBVSSBFbW9qaVwiLCAvLyBXaW5kb3dzIGVtb2ppXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiU2Vnb2UgVUkgU3ltYm9sXCIsIC8vIFdpbmRvd3MgZW1vamlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJOb3RvIENvbG9yIEVtb2ppXCIgIWRlZmF1bHQ7IC8vIExpbnV4IGVtb2ppXHJcbiRmb250ZmFtaWx5LXNlcmlmOiAgICAgICAgICAgIGdlb3JnaWEsIGNhbWJyaWEsIFwiVGltZXMgTmV3IFJvbWFuXCIsIHRpbWVzLCBzZXJpZiAhZGVmYXVsdDtcclxuJGZvbnRmYW1pbHktbW9ub3NwYWNlOiAgICAgICAgXCJNZW5sb1wiLCAvLyBtYWNPUyAxMC4xMCtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJVYnVudHUgbW9ub3NwYWNlXCIsIC8vIFVidW50dSAxMC4xMCtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJOb3RvIE1vbm9cIiwgLy8gS0RFIFBsYXNtYSA1K1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIk94eWdlbiBNb25vXCIsIC8vIEtERSBQbGFzbWEgNCtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJMaWJlcmF0aW9uIE1vbm9cIiwgLy8gTGludXgvT3Blbk9mZmljZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xhcywgLy8gZmFsbGJhY2tcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9ub3NwYWNlICFkZWZhdWx0OyAvLyBmYWxsYmFja1xyXG5cclxuJGZvbnR3ZWlnaHQtbGlnaHRlcjogICAgICAgICAgbGlnaHRlciAhZGVmYXVsdDtcclxuJGZvbnR3ZWlnaHQtbGlnaHQ6ICAgICAgICAgICAgMzAwICFkZWZhdWx0O1xyXG4kZm9udHdlaWdodC1ub3JtYWw6ICAgICAgICAgICA0MDAgIWRlZmF1bHQ7XHJcbiRmb250d2VpZ2h0LWJvbGQ6ICAgICAgICAgICAgIDcwMCAhZGVmYXVsdDtcclxuJGZvbnR3ZWlnaHQtYm9sZGVyOiAgICAgICAgICAgYm9sZGVyICFkZWZhdWx0O1xyXG5cclxuJGxpbmVoZWlnaHQtZGVmYXVsdDogICAgICAgICAgMS41ICFkZWZhdWx0O1xyXG5cclxuLy9cclxuLy8gRGVyaXZlZFxyXG4vL1xyXG4kZm9udHNpemUtc21hbGw6ICAgICAgICAgICAgICAkZGVmYXVsdC1zbWFsbC1xdWFudGl0eSAqIDFyZW0gIWRlZmF1bHQ7XHJcbiRmb250c2l6ZS1sYXJnZTogICAgICAgICAgICAgICRkZWZhdWx0LWxhcmdlLXF1YW50aXR5ICogMXJlbSAhZGVmYXVsdDtcclxuJGZvbnRmYW1pbHktZGVmYXVsdDogICAgICAgICAgJGZvbnRmYW1pbHktc2Fucy1zZXJpZiAhZGVmYXVsdDtcclxuJGZvbnR3ZWlnaHQtZGVmYXVsdDogICAgICAgICAgJGZvbnR3ZWlnaHQtbm9ybWFsICFkZWZhdWx0O1xyXG4iLCIvLyBzdHlsZWxpbnQtZGlzYWJsZSBwcm9wZXJ0eS1ibGFja2xpc3RcclxuLy9cclxuLy8gRm9udCBTaXplXHJcbi8vXHJcblxyXG4vL1xyXG4vLyBSZXNwb25zaXZlIGZvbnQgc2l6ZVxyXG4vLyBHZW5lcmF0ZSBmb250IHNpemUgYmFzZWQgb24gb24gc2V0dGluZyBgJGVuYWJsZS1mbHVpZC1mb250c2l6ZXNgXHJcbi8vXHJcbi8vIFBhcmFtZXRlcnM6XHJcbi8vIFtvcHRpb25hbF0ge1N0cmluZyxOdW1iZXJ9ICRmb250c2l6ZSAtIGZvbnQgc2l6ZSBpbiByZW0gYW5kIHBtICwgUkZTIG9ubHkgc3VwcG9ydCBweCBhbmQgcmVtXHJcbi8vIFtvcHRpb25hbF0ge01hcH0gJGltcG9ydGFudCAtIHNldCBpbXBvcnRhbnQgaW4gY3NzIHN0eWxlXHJcbi8vXHJcbkBtaXhpbiBmb250c2l6ZSgkZm9udHNpemU6ICRmb250c2l6ZS1ub3JtYWwsICRpbXBvcnRhbnQ6IGZhbHNlKSB7XHJcbiAgQGlmICRlbmFibGUtZmx1aWQtZm9udHNpemVzIHtcclxuICAgICRmb250c2l6ZS11bml0OiBpZih0eXBlLW9mKCRmb250c2l6ZSkgPT0gXCJudW1iZXJcIiwgdW5pdCgkZm9udHNpemUpLCBmYWxzZSk7XHJcblxyXG4gICAgLy8gSWYgJGZvbnRzaXplIGlzIG5vdCBhIG51bWJlciAobGlrZSBpbmhlcml0KSBvciAkZm9udHNpemUgaGFzIGEgdW5pdCBvdGhlciB0aGFuIHB4IG9yIHJlbSBvciBpdHMgdmFsdWUgaXMgMFxyXG4gICAgQGlmICgkZm9udHNpemUgPT0gMCkgb3IgKG5vdCAkZm9udHNpemUtdW5pdCkgb3IgKCRmb250c2l6ZS11bml0ICE9IFwiXCIgYW5kICRmb250c2l6ZS11bml0ICE9IFwicHhcIiBhbmQgJGZvbnRzaXplLXVuaXQgIT0gXCJyZW1cIikge1xyXG4gICAgICBmb250LXNpemU6ICN7JGZvbnRzaXplfSN7aWYoJGltcG9ydGFudCwgIWltcG9ydGFudCwgbnVsbCl9O1xyXG4gICAgfSBAZWxzZSB7XHJcbiAgICAgIC8vIERvIEZsdWlkIGZvbnQgc3R1ZmZcclxuICAgIH1cclxuICB9IEBlbHNlIHtcclxuICAgIGZvbnQtc2l6ZTogI3skZm9udHNpemV9I3tpZigkaW1wb3J0YW50LCAhaW1wb3J0YW50LCBudWxsKX07XHJcbiAgfVxyXG59XHJcbiIsIi8vIHN0eWxlbGludC1kaXNhYmxlIHByb3BlcnR5LWJsYWNrbGlzdFxyXG4vL1xyXG4vLyBUcmFuc2l0aW9uIE1peGluXHJcbi8vXHJcblxyXG4vL1xyXG4vLyB0cmFuc2l0aW9uXHJcbi8vIE1peGluIHVzaW5nIHRyYW5zaXRpb24gZnVuY3Rpb24gdG8gb3B0aW1pemUgdHJhbnNpdGlvbiBhbmRcclxuLy8gZGlzYWJsZSB0cmFuc2l0aW9uIGF0IHByZWZlcnMtcmVkdWNlZC1tb3Rpb24tbWVkaWEtcXVlcnlcclxuLy9cclxuLy8gUGFyYW1ldGVyczpcclxuLy8ge1N0cmluZyxMaXN0fSAkdHJhbnNpdGlvbnMgLSB0cmFuc2l0aW9ucyBzdHJpbmdzXHJcbkBtaXhpbiB0cmFuc2l0aW9uKCR0cmFuc2l0aW9ucy4uLikge1xyXG4gIEBpZiAkZW5hYmxlLXRyYW5zaXRpb25zIHtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zaXRpb24oJHRyYW5zaXRpb25zKTtcclxuXHJcbiAgICBAaWYgJGVuYWJsZS1wcmVmZXJzLXJlZHVjZWQtbW90aW9uLW1lZGlhLXF1ZXJ5IHtcclxuICAgICAgQGV4dGVuZCAlcHJlZmVycy1yZWR1Y2VkLW1vdGlvbjtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vXHJcbi8vIGFuaW1hdGlvblxyXG4vLyBNaXhpbiBVc2VkIHRvIGdlbmVyYXRlIGFuaW1hdGlvblxyXG4vL1xyXG4vLyBBcmd1bWVudHM6XHJcbi8vIHtTdHJpbmd9ICRuYW1lIC0gTmFtZSBvZiB0aGUgYW5pbWF0aW9uXHJcbi8vIFtvcHRpb25hbF0ge0Jvb2xlYW59ICRpbmZpbml0ZSAtIHVzZWQgdG8gc2V0IGFuaW1hdGlvbiB0byBpbmZpbml0ZVxyXG4vLyBbb3B0aW9uYWxdIHtUaW1lfSAkZHVyYXRpb24gLSBEdXJhdGlvbiBvZiBhbmltYXRpb25cclxuLy8gW29wdGlvbmFsXSB7QW5pbWF0aW9uIGZ1bmN0aW9ufSAkZnVuY3Rpb24gLSBBbmltYXRpb24gZnVuY3Rpb25cclxuLy9cclxuQG1peGluIGFuaW1hdGlvbigkbmFtZSwgJGR1cmF0aW9uOiAxcywgJGZ1bmN0aW9uOiBlYXNlLW91dCwgJGluZmluaXRlOiBmYWxzZSwgJGZpbGxtb2RlOiBib3RoKSB7XHJcbiAgQGlmICRlbmFibGUtdHJhbnNpdGlvbnMge1xyXG4gICAgQGlmICgkbmFtZSA9PSBub25lKSB7XHJcbiAgICAgIGFuaW1hdGlvbjogbm9uZTtcclxuICAgIH0gQGVsc2Uge1xyXG4gICAgICBAaW5jbHVkZSBpbmNsdWRlLWtleWZyYW1lKCRuYW1lKTtcclxuICAgICAgJGluZmluaXRlOiBpZigkaW5maW5pdGUsIGluZmluaXRlLCBudWxsKTtcclxuICAgICAgYW5pbWF0aW9uOiAkbmFtZSAkZHVyYXRpb24gJGZ1bmN0aW9uICRpbmZpbml0ZSAkZmlsbG1vZGU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ka2V5ZnJhbWVzOiAoXHJcbiAgcmlwcGxlOiB0cnVlLFxyXG4gIHJpcHBsZS1ncmF5OiB0cnVlLFxyXG4gIGZsYXNoOiB0cnVlLFxyXG4gIGZhZGVpbjogdHJ1ZSxcclxuICBzcGluOiB0cnVlXHJcbikgIWRlZmF1bHQ7XHJcblxyXG5AbWl4aW4gaW5jbHVkZS1rZXlmcmFtZSgkbmFtZSkge1xyXG4gIEBpZiBtYXAtaGFzLWtleSgka2V5ZnJhbWVzLCAkbmFtZSkge1xyXG4gICAgQGlmIG1hcC1nZXQoJGtleWZyYW1lcywgJG5hbWUpIHtcclxuICAgICAgJGtleWZyYW1lczogbWFwLW1lcmdlKCRrZXlmcmFtZXMsICgkbmFtZSA6IGZhbHNlKSkgIWdsb2JhbDtcclxuICAgICAgQGlmICRuYW1lID09IHJpcHBsZSB7XHJcbiAgICAgICAgQGtleWZyYW1lcyByaXBwbGUge1xyXG4gICAgICAgICAgZnJvbSB7IGJveC1zaGFkb3c6ICN7Ym94LXNoYWRvdygwIDAgMCAwIGN1cnJlbnRDb2xvcil9OyB9XHJcbiAgICAgICAgICA3NSUgeyBib3gtc2hhZG93OiAje2JveC1zaGFkb3coMCAwIDAgKCRjb250cm9scy1mb2N1cy1ib3hzaGFkb3ctc2l6ZSAqIDEuNSkgdHJhbnNwYXJlbnQpfTsgfVxyXG4gICAgICAgICAgNzYlIHsgYm94LXNoYWRvdzogI3tib3gtc2hhZG93KG5vbmUpfTsgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSBAZWxzZSBpZiAkbmFtZSA9PSByaXBwbGUtZ3JheSB7XHJcbiAgICAgICAgQGtleWZyYW1lcyByaXBwbGUtZ3JheSB7XHJcbiAgICAgICAgICBmcm9tIHsgYm94LXNoYWRvdzogI3tib3gtc2hhZG93KDAgMCAwIDAgJGdyYXktNTAwKX07IH1cclxuICAgICAgICAgIDc1JSB7IGJveC1zaGFkb3c6ICN7Ym94LXNoYWRvdygwIDAgMCAoJGNvbnRyb2xzLWZvY3VzLWJveHNoYWRvdy1zaXplICogMS41KSB0cmFuc3BhcmVudCl9OyB9XHJcbiAgICAgICAgICA3NiUgeyBib3gtc2hhZG93OiAje2JveC1zaGFkb3cobm9uZSl9OyB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9IEBlbHNlIGlmICRuYW1lID09IGZsYXNoIHtcclxuICAgICAgICBAa2V5ZnJhbWVzIGZsYXNoIHtcclxuICAgICAgICAgIGZyb20sXHJcbiAgICAgICAgICA1MCUgeyBvcGFjaXR5OiAxOyB9XHJcblxyXG4gICAgICAgICAgMjUlLFxyXG4gICAgICAgICAgNzUlIHsgb3BhY2l0eTogMDsgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSBAZWxzZSBpZiAkbmFtZSA9PSBmYWRlaW4ge1xyXG4gICAgICAgIEBrZXlmcmFtZXMgZmFkZWluIHtcclxuICAgICAgICAgIGZyb20geyBvcGFjaXR5OiAwOyB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9IEBlbHNlIGlmICRuYW1lID09IHNwaW4ge1xyXG4gICAgICAgIEBrZXlmcmFtZXMgc3BpbiB7XHJcbiAgICAgICAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxyXG4gICAgICAgIH1cclxuICAgICAgfSBAZWxzZSB7XHJcbiAgICAgICAgQGVycm9yIFwia2V5ZnJhbWUgbmFtZSBgI3skbmFtZX1gIGV4aXN0IGluICRrZXlmcmFtZXMgYnV0IGFjdHVhbCBrZXlmcmFtZXMgYXJlIG5vdCBmb3VuZFwiO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAZXJyb3IgXCJhbmltYXRpb24ga2V5ZnJhbWUgZm9yIGFuaW1hdGlvbiBgI3skbmFtZX1gIG5vdCBmb3VuZC5cIjtcclxuICB9XHJcbn1cclxuIiwiLy9cclxuLy8gQm94LVNoYWRvdyBGdW5jdGlvblxyXG4vL1xyXG5cclxuLy9cclxuLy8gdHJhbnNpdGlvblxyXG4vLyBGdW5jdGlvbiB0byBvcHRpbWl6ZSwgY2hlY2sgYW5kIGNvbnRyb2wgdHJhbnNpdGlvblxyXG4vL1xyXG4vLyBQYXJhbWV0ZXJzOlxyXG4vLyB7U3RyaW5nLExpc3R9ICR0cmFuc2l0aW9ucyAtIHRyYW5zaXRpb25zIHN0cmluZ3NcclxuQGZ1bmN0aW9uIHRyYW5zaXRpb24oJHRyYW5zaXRpb25zLi4uKSB7XHJcbiAgJHRyYW5zaXRpb24tY29tYmluZWQ6ICgpO1xyXG4gICRmaXJzdC12YWx1ZTogbnRoKCR0cmFuc2l0aW9ucywgMSk7XHJcblxyXG4gIC8vIGlmIG5vIGlucHV0IGFyZ3VtZW50IGlzIGdpdmVcclxuICBAaWYgbGVuZ3RoKCR0cmFuc2l0aW9ucykgPT0gMCB7XHJcbiAgICAkdHJhbnNpdGlvbi1jb21iaW5lZDogYWxsIC4ycyBlYXNlLWluLW91dDsgLy8gRGVmYXVsdCB0cmFuc2l0aW9uXHJcbiAgfSBAZWxzZSBpZiBsZW5ndGgoJHRyYW5zaXRpb25zKSA9PSAxIGFuZCAoJGZpcnN0LXZhbHVlID09IG5vbmUgb3IgJGZpcnN0LXZhbHVlID09IG51bGwgb3IgJGZpcnN0LXZhbHVlID09IGF1dG8gb3IgJGZpcnN0LXZhbHVlID09IGluaGVyaXQpIHtcclxuICAgICR0cmFuc2l0aW9uLWNvbWJpbmVkOiAkZmlyc3QtdmFsdWU7XHJcbiAgfSBAZWxzZSB7XHJcbiAgICBAZWFjaCAkdHJhbnNpdGlvbiBpbiAkdHJhbnNpdGlvbnMge1xyXG4gICAgICBAaWYgbGlzdC1zZXBhcmF0b3IoJHRyYW5zaXRpb24pID09IGNvbW1hIHtcclxuICAgICAgICBAZWFjaCAkc3ViLXRyYW5zaXRpb24gaW4gJHRyYW5zaXRpb24ge1xyXG4gICAgICAgICAgLy8gcmVjbHVzaXZlbHkgY2hlY2sgZWFjaCB2YWx1ZSBpbiBsaXN0XHJcbiAgICAgICAgICAkdHJhbnNpdGlvbi1jb21iaW5lZDogc3VmZml4KCR0cmFuc2l0aW9uLWNvbWJpbmVkLCBcIixcIikgKyB0cmFuc2l0aW9uKCRzdWItdHJhbnNpdGlvbik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEByZXR1cm4gJHRyYW5zaXRpb24tY29tYmluZWQ7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIEBpZiBsZW5ndGgoJHRyYW5zaXRpb24pID09IDEge1xyXG4gICAgICAgICR0cmFuc2l0aW9uLWNvbWJpbmVkOiBzdWZmaXgoJHRyYW5zaXRpb24tY29tYmluZWQsIFwiLFwiKSArICR0cmFuc2l0aW9uIC4xNXMgZWFzZS1pbi1vdXQ7XHJcbiAgICAgIH0gQGVsc2Uge1xyXG4gICAgICAgICR0cmFuc2l0aW9uLWNvbWJpbmVkOiBzdWZmaXgoJHRyYW5zaXRpb24tY29tYmluZWQsIFwiLFwiKSArICR0cmFuc2l0aW9uO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIEByZXR1cm4gJHRyYW5zaXRpb24tY29tYmluZWQ7XHJcbn1cclxuIiwiLy8gc3R5bGVsaW50LWRpc2FibGUgc2VsZWN0b3ItcHNldWRvLWNsYXNzLWJsYWNrbGlzdFxyXG4vL1xyXG4vLyBTdGF0ZXNcclxuLy9cclxuLy8gVGhlc2UgbWl4aW5zIGFyZSB1c2VkIGZvciB2YXJpb3VzIGVsZW1lbnRzIHN0YXRlcy5cclxuLy8gVGhlc2UgbWl4aW5zIGFsbG93IHVzIHRvIHF1aWNrbHkgbW9kaWZ5IGNoYW5nZXMuXHJcblxyXG4vLyBBY3RpdmVcclxuLy8gR2VuZXJhdGUgYWN0aXZlIHN0YXRlXHJcbi8vXHJcbi8vIFBhcmFtZXRlcjpcclxuLy8gW29wdGlvbmFsXSB7TGlzdH0gJGV4dHJhLXNlbGVjdG9yczogbGlzdCBvZiBzZWxlY3RvcnMgYWxvbmcgd2l0aCBhY3RpdmUgc3RhdGVcclxuQG1peGluIGFjdGl2ZSgkZXh0cmEtc2VsZWN0b3JzLi4uKSB7XHJcbiAgJHNlbGVjdG9yczogbnVsbDtcclxuICBAZWFjaCAkc2VsZWN0b3IgaW4gJGV4dHJhLXNlbGVjdG9ycyB7XHJcbiAgICAkc2VsZWN0b3JzOiBwcmVmaXgoJHNlbGVjdG9yLCBcIiZcIik7XHJcbiAgICAkc2VsZWN0b3JzOiBzdWZmaXgoJHNlbGVjdG9ycywgXCIsXCIpO1xyXG4gIH1cclxuXHJcbiAgI3skc2VsZWN0b3JzfSAmOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKS5hY3RpdmUsXHJcbiAgJjpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCk6YWN0aXZlIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuLy8gSG92ZXJcclxuLy8gR2VuZXJhdGUgaG92ZXIgc3RhdGVcclxuQG1peGluIGhvdmVyKCkge1xyXG4gICYuaG92ZXIsXHJcbiAgJjpob3ZlciB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vIG5vdC1Ib3ZlclxyXG4vLyBHZW5lcmF0ZSBub3QgaG92ZXJpbmcgc3RhdGVcclxuQG1peGluIG5vdC1ob3ZlcigpIHtcclxuICAmOm5vdCguaG92ZXIpOm5vdCg6aG92ZXIpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuLy8gRm9jdXNcclxuLy8gR2VuZXJhdGUgZm9jdXMgc3RhdGVcclxuLy9cclxuLy8gUGFyYW1ldGVyOlxyXG4vLyBbb3B0aW9uYWxdIHtMaXN0fSAkZXh0cmEtc2VsZWN0b3JzOiBsaXN0IG9mIHNlbGVjdG9ycyBhbG9uZyB3aXRoIGZvY3VzIHN0YXRlXHJcbkBtaXhpbiBmb2N1cygkZXh0cmEtc2VsZWN0b3JzLi4uKSB7XHJcbiAgJHNlbGVjdG9yczogbnVsbDtcclxuICBAZWFjaCAkc2VsZWN0b3IgaW4gJGV4dHJhLXNlbGVjdG9ycyB7XHJcbiAgICAkc2VsZWN0b3JzOiBwcmVmaXgoJHNlbGVjdG9yLCBcIiZcIik7XHJcbiAgICAkc2VsZWN0b3JzOiBzdWZmaXgoJHNlbGVjdG9ycywgXCIsXCIpO1xyXG4gIH1cclxuXHJcbiAgI3skc2VsZWN0b3JzfSAmLmZvY3VzLFxyXG4gICY6Zm9jdXMge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBIb3ZlclxyXG4vLyBHZW5lcmF0ZSBob3ZlciBzdGF0ZVxyXG5AbWl4aW4gaG92ZXItZm9jdXMoKSB7XHJcbiAgJi5ob3ZlcixcclxuICAmOmhvdmVyLFxyXG4gICYuZm9jdXMsXHJcbiAgJjpmb2N1cyB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vIGZvY3VzLWFjdGl2ZVxyXG4vLyBHZW5lcmF0ZSBmb2N1cyBhbmQgYWN0aXZlIHN0YXRlXHJcbkBtaXhpbiBmb2N1cy1hY3RpdmUoKSB7XHJcbiAgJi5mb2N1cyxcclxuICAmOmZvY3VzLFxyXG4gICY6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpLmFjdGl2ZSxcclxuICAmOm5vdChbZGlzYWJsZWRdKTpub3QoOmRpc2FibGVkKTphY3RpdmUge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gaG92ZXItZm9jdXMtYWN0aXZlKCkge1xyXG4gICYuaG92ZXIsXHJcbiAgJjpob3ZlcixcclxuICAmLmZvY3VzLFxyXG4gICY6Zm9jdXMsXHJcbiAgJjpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkuYWN0aXZlLFxyXG4gICY6bm90KFtkaXNhYmxlZF0pOm5vdCg6ZGlzYWJsZWQpOmFjdGl2ZSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vIERpc2FibGVkXHJcbi8vIEdlbmVyYXRlIGRpc2FibGVkIHN0YXRlXHJcbi8vXHJcbi8vIFBhcmFtZXRlcjpcclxuLy8gW29wdGlvbmFsXSB7TGlzdH0gJGV4dHJhLXNlbGVjdG9yczogbGlzdCBvZiBzZWxlY3RvcnMgYWxvbmcgd2l0aCBkaXNhYmxlZCBzdGF0ZVxyXG5AbWl4aW4gZGlzYWJsZWQoJGV4dHJhLXNlbGVjdG9ycy4uLikge1xyXG4gICRzZWxlY3RvcnM6IG51bGw7XHJcbiAgQGVhY2ggJHNlbGVjdG9yIGluICRleHRyYS1zZWxlY3RvcnMge1xyXG4gICAgJHNlbGVjdG9yczogcHJlZml4KCRzZWxlY3RvciwgXCImXCIpO1xyXG4gICAgJHNlbGVjdG9yczogc3VmZml4KCRzZWxlY3RvcnMsIFwiLFwiKTtcclxuICB9XHJcblxyXG4gICN7JHNlbGVjdG9yc30gJltkaXNhYmxlZF0sXHJcbiAgJjpkaXNhYmxlZCB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vIERpc2FibGVkXHJcbi8vIEdlbmVyYXRlIG5vdCBkaXNhYmxlZCBzdGF0ZVxyXG4vL1xyXG4vLyBQYXJhbWV0ZXI6XHJcbi8vIFtvcHRpb25hbF0ge0xpc3R9ICRleHRyYS1zZWxlY3RvcnM6IGxpc3Qgb2Ygc2VsZWN0b3JzIGFsb25nIHdpdGggbm90IGRpc2FibGVkIHN0YXRlXHJcbkBtaXhpbiBub3QtZGlzYWJsZWQoJGV4dHJhLXNlbGVjdG9ycy4uLikge1xyXG4gICRzZWxlY3RvcnM6IG51bGw7XHJcbiAgQGVhY2ggJHNlbGVjdG9yIGluICRleHRyYS1zZWxlY3RvcnMge1xyXG4gICAgJHNlbGVjdG9yczogcHJlZml4KCRzZWxlY3RvciwgXCImXCIpO1xyXG4gICAgJHNlbGVjdG9yczogc3VmZml4KCRzZWxlY3RvcnMsIFwiLFwiKTtcclxuICB9XHJcblxyXG4gICN7JHNlbGVjdG9yc30gJjpub3QoW2Rpc2FibGVkXSk6bm90KDpkaXNhYmxlZCkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcbiIsIi8vXHJcbi8vIEJveC1TaGFkb3cgRnVuY3Rpb25cclxuLy9cclxuXHJcbi8vXHJcbi8vIGJveC1zaGFkb3dcclxuLy8gRnVuY3Rpb24gb3B0aW1pemUgYW5kIGNoZWNrIGJveC1zaGFkb3dcclxuLy9cclxuLy8gUGFyYW1ldGVyczpcclxuLy8ge0xpc3R9ICRzaGFkb3dzIC0gc2hhZG93cyBzdHJpbmdzXHJcbkBmdW5jdGlvbiBib3gtc2hhZG93KCRzaGFkb3dzLi4uKSB7XHJcbiAgJGZpcnN0LXZhbHVlOiBudGgoJHNoYWRvd3MsIDEpO1xyXG5cclxuICBAaWYgbGVuZ3RoKCRzaGFkb3dzKSA9PSAxIGFuZCAoJGZpcnN0LXZhbHVlID09IG5vbmUgb3IgJGZpcnN0LXZhbHVlID09IG51bGwpIHtcclxuICAgIEByZXR1cm4gJHNoYWRvd3M7XHJcbiAgfVxyXG5cclxuICAvLyBGaWx0ZXIgaW52YWxpZCB2YWx1ZXNcclxuICAvLyBmb3IgZXhhbXBsZSBgQGlmICRkZXNpZ24tc2hhZG93LWVsc2UtYm9yZGVyIHsgYm94LXNoYWRvdzogbm9uZSwgMCAwIGN1cnJlbnRDb2xvcjtgXHJcbiAgQGlmIGxlbmd0aCgkc2hhZG93cykgPiAxIG9yICgkZmlyc3QtdmFsdWUgIT0gbm9uZSBhbmQgJGZpcnN0LXZhbHVlICE9IG51bGwpIHtcclxuICAgICRyZXN1bHQ6ICgpO1xyXG5cclxuICAgIEBlYWNoICRzaGFkb3cgaW4gJHNoYWRvd3Mge1xyXG4gICAgICAvLyBpZ25vcmUgbm9uZSBhbmQgbnVsbCB2YWx1ZSBpbiBsaXN0IHdpdGggdmFsaWQgdmFsdWVzXHJcbiAgICAgIEBpZiAkc2hhZG93ICE9IG5vbmUgYW5kICRzaGFkb3cgIT0gbnVsbCB7XHJcbiAgICAgICAgLy8gaWYgbGlzdCBpcyBzdXBwbGllZCBhcyBhIHZhcmlhYmxlIHRvIHBhcmFtZXRlciAkc2hhZG93c1xyXG4gICAgICAgIEBpZiBsaXN0LXNlcGFyYXRvcigkc2hhZG93KSA9PSBjb21tYSB7XHJcbiAgICAgICAgICBAZWFjaCAkc3ViLXNoYWRvdyBpbiAkc2hhZG93IHtcclxuICAgICAgICAgICAgLy8gcmVjbHVzaXZlbHkgY2hlY2sgZWFjaCB2YWx1ZSBpbiBsaXN0XHJcbiAgICAgICAgICAgICRyZXN1bHQ6IHN1ZmZpeCgkcmVzdWx0LCBcIixcIikgKyBib3gtc2hhZG93KCRzdWItc2hhZG93KTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIEByZXR1cm4gJHJlc3VsdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBpZiB0eXBlLW9mKCRzaGFkb3cpICE9IFwibGlzdFwiIHtcclxuICAgICAgICAgIEBlcnJvciBcImludmFsaWQgdHlwZSBgI3t0eXBlLW9mKCRzaGFkb3cpfWAgb3IgdmFsdWUgYCN7JHNoYWRvd31gIG9mICRzaGFkb3cgaW5zaWRlICRzaGFkb3dzIGAje3NoYWRvd3N9YCAuIFR5cGUgbXVzdCBiZSBgbGlzdGAgb3IgdmFsdWUgbXVzdCBiZSB2YWxpZCBzaGFkb3cgdmFsdWVcIjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICRyZXN1bHQ6IHN1ZmZpeCgkcmVzdWx0LCBcIixcIikgKyAkc2hhZG93O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyBpZiB0aGVyZSBhcmUgc29tZSB2YWx1ZXMgbGVmdCBhZnRlciBjaGVja2luZ1xyXG4gICAgQGlmIGxlbmd0aCgkcmVzdWx0KSA+IDAge1xyXG4gICAgICBAcmV0dXJuICRyZXN1bHQ7XHJcbiAgICB9IEBlbHNlIHtcclxuICAgICAgLy8gYWZ0ZXIgY2hlY2tpbmcgYW5kIGZpbHRlcmluZyBlYWNoIHNoYWRvdyBpZiB0aGUgbm8gdmFsaWQgdmFsdWUgaXMgZm91bmRcclxuICAgICAgQGVycm9yIFwiaW52YWxpZCB2YWx1ZSBvZiAkc2hhZG93cyBgI3skc2hhZG93c31gXCI7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8vIGlmIHRoZSB2YWx1ZSBpcyBvdGhlciB0aGFuIG5vbmUgZS5nIGluaGVyaXRcclxuICBAZXJyb3IgXCJpbnZhbGlkIHZhbHVlIG9mICRzaGFkb3dzIGAjeyRzaGFkb3dzfWBcIjtcclxufVxyXG4iLCIvLyBzdHlsZWxpbnQtZGlzYWJsZSBzZWxlY3Rvci1wc2V1ZG8tZWxlbWVudC1ibGFja2xpc3RcclxuLy9cclxuLy8gUHNldWRvIGVsZW1lbnRzIE1peGluXHJcbi8vXHJcbi8vIFRoZXNlIG1peGlucyBhcmUgdXNlZCBmb3IgcHNldWRvLWVsZW1lbnRzXHJcblxyXG4vLyBiZWZvcmVcclxuLy8gR2VuZXJhdGUgYmVmb3JlIFBzZXVkbyBlbGVtZW50XHJcbkBtaXhpbiBiZWZvcmUoKSB7XHJcbiAgJjo6YmVmb3JlIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuLy8gYWZ0ZXJcclxuLy8gR2VuZXJhdGUgYWZ0ZXIgUHNldWRvIGVsZW1lbnRcclxuQG1peGluIGFmdGVyKCkge1xyXG4gICY6OmFmdGVyIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuLy8gYmVmb3JlICsgYWZ0ZXJcclxuLy8gR2VuZXJhdGUgYmVmb3JlIFBzZXVkbyBlbGVtZW50XHJcbkBtaXhpbiBiZWZvcmUtYWZ0ZXIoKSB7XHJcbiAgJjo6YmVmb3JlLFxyXG4gICY6OmFmdGVyIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG4iLCIvL1xyXG4vLyBjb252ZXJ0LXVuaXRcclxuLy8gY29udmVydCBhIG51bWJlciB2YWx1ZSBmcm9tIG9uZSB1bml0IHRvIGFub3RoZXJcclxuLy9cclxuLy8gTm90ZTpcclxuLy8gT25seSByZW0sIGVtLCBweCBhbmQgJSB1bml0IGFyZSBzdXBwb3J0ZWRcclxuLy9cclxuLy8gUGFyYW1ldGVyczpcclxuLy8ge051bWJlcn0gJHZhbHVlIC0gdmFsdWUgdG8gY29udmVydFxyXG4vLyB7U3RyaW5nfSAkdG9fdW5pdCAtIHVuaXQgdG8gY29udmVydCB2YWx1ZSB0b1xyXG4vLyBbb3B0aW9uYWxdIHtTdHJpbmd9ICRiYXNlX2ZvbnRzaXplIC0gZm9udCBzaXplIGF0IHJvb3QvYm9keS9wYXJlbnRcclxuLy9cclxuLy8gRXhhbXBsZSBvZiB1c2U6XHJcbi8vICRyZXN1bHQ6IGNvbnZlcnQtdW5pdCg3cHgsIHJlbSAsMTRweCkgPT4gICRyZXN1bHQ6IDAuNXJlbVxyXG4vLyAkcmVzdWx0OiBjb252ZXJ0LXVuaXQoMC41ZW0sIHB4ICwxNHB4KSA9PiAgJHJlc3VsdDogN3B4XHJcbi8vICRyZXN1bHQ6IGNvbnZlcnQtdW5pdCg3cHgsICUgLDE0cHgpID0+ICAkcmVzdWx0OiAwLjUlXHJcbi8vXHJcbi8vIFJldHVybjpcclxuLy8ge051bWJlcn0gTnVtYmVyIHdpdGggY29udmVydGVkIHVuaXRcclxuLy9cclxuQGZ1bmN0aW9uIGNvbnZlcnQtdW5pdCgkdmFsdWUsICR0b191bml0LCAkYmFzZV9mb250c2l6ZTogJGRlZmF1bHQtZm9udHNpemUpIHtcclxuICAkZnJvbV91bml0OiB1bml0KCR2YWx1ZSk7XHJcbiAgJHRvX3VuaXQ6IHVucXVvdGUoJHRvX3VuaXQpO1xyXG4gICRzdHJpcHBlZF92YWx1ZTogc3RyaXAtdW5pdCgkdmFsdWUpO1xyXG4gICRiYXNlX3ZhbHVlOiBzdHJpcC11bml0KCRiYXNlX2ZvbnRzaXplKTtcclxuXHJcbiAgQGlmICRmcm9tX3VuaXQgPT0gJHRvX3VuaXQge1xyXG4gICAgQGlmICRlbmFibGUtZGVidWdnaW5nIHtcclxuICAgICAgQGRlYnVnIFwiQ2Fubm90IGNvbnZlcnQgc2FtZSB1bml0cyBgI3skZnJvbV91bml0fWBcIjtcclxuICAgIH1cclxuICAgIEByZXR1cm4gJHZhbHVlO1xyXG4gIH1cclxuICBAaWYgdW5pdCgkYmFzZV9mb250c2l6ZSkgIT0gcHgge1xyXG4gICAgQGVycm9yIFwiTm90IHN1cHBvcnRlZCByb290IGZvbnQtc2l6ZSBgI3t1bml0KCRiYXNlX3ZhbHVlKX1gXCI7XHJcbiAgfVxyXG5cclxuICBAaWYgJGZyb21fdW5pdCA9PSBweCB7XHJcbiAgICBAaWYgJHRvX3VuaXQgPT0gXCJlbVwiIHtcclxuICAgICAgQHJldHVybiAoJHN0cmlwcGVkX3ZhbHVlIC8gJGJhc2VfdmFsdWUpICogMWVtO1xyXG4gICAgfSBAZWxzZSBpZiAkdG9fdW5pdCA9PSBcInJlbVwiIHtcclxuICAgICAgQHJldHVybiAoJHN0cmlwcGVkX3ZhbHVlIC8gJGJhc2VfdmFsdWUpICogMXJlbTtcclxuICAgIH0gQGVsc2UgaWYgJHRvX3VuaXQgPT0gXCIlXCIge1xyXG4gICAgICBAcmV0dXJuIHBlcmNlbnRhZ2UoJHN0cmlwcGVkX3ZhbHVlIC8gJGJhc2VfdmFsdWUpO1xyXG4gICAgfVxyXG4gIH0gQGVsc2UgaWYgJGZyb21fdW5pdCA9PSBlbSB7XHJcbiAgICBAaWYgJHRvX3VuaXQgPT0gXCJweFwiIHtcclxuICAgICAgQHJldHVybiAoJHN0cmlwcGVkX3ZhbHVlICogJGJhc2VfdmFsdWUpICogMXB4O1xyXG4gICAgfSBAZWxzZSBpZiAkdG9fdW5pdCA9PSBcInJlbVwiIHtcclxuICAgICAgQHJldHVybiAkc3RyaXBwZWRfdmFsdWUgKiAxcmVtO1xyXG4gICAgfSBAZWxzZSBpZiAkdG9fdW5pdCA9PSBcIiVcIiB7XHJcbiAgICAgIEByZXR1cm4gcGVyY2VudGFnZSgkc3RyaXBwZWRfdmFsdWUpO1xyXG4gICAgfVxyXG4gIH0gQGVsc2UgaWYgJGZyb21fdW5pdCA9PSByZW0ge1xyXG4gICAgQGlmICR0b191bml0ID09IFwicHhcIiB7XHJcbiAgICAgIEByZXR1cm4gKCRzdHJpcHBlZF92YWx1ZSAqICRiYXNlX3ZhbHVlKSAqIDFweDtcclxuICAgIH0gQGVsc2UgaWYgJHRvX3VuaXQgPT0gXCJlbVwiIHtcclxuICAgICAgQHJldHVybiAkc3RyaXBwZWRfdmFsdWUgKiAxZW07XHJcbiAgICB9IEBlbHNlIGlmICR0b191bml0ID09IFwiJVwiIHtcclxuICAgICAgQHJldHVybiBwZXJjZW50YWdlKCRzdHJpcHBlZF92YWx1ZSk7XHJcbiAgICB9XHJcbiAgfSBAZWxzZSBpZiAkZnJvbV91bml0ID09IFwiJVwiIHtcclxuICAgIEBpZiAkdG9fdW5pdCA9PSBcInB4XCIge1xyXG4gICAgICBAcmV0dXJuICgkc3RyaXBwZWRfdmFsdWUgKiAkYmFzZV92YWx1ZSAvIDEwMCkgKiAxcHg7XHJcbiAgICB9IEBlbHNlIGlmICR0b191bml0ID09IFwiZW1cIiB7XHJcbiAgICAgIEByZXR1cm4gKCRzdHJpcHBlZF92YWx1ZSAvIDEwMCkgKiAxZW07XHJcbiAgICB9IEBlbHNlIGlmICR0b191bml0ID09IFwicmVtXCIge1xyXG4gICAgICBAcmV0dXJuICgkc3RyaXBwZWRfdmFsdWUgLyAxMDApICogMXJlbTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBlcnJvciBcIkVycm9yIHdoZW4gY29udmVydGluZyBmcm9tIGAjeyR2YWx1ZX1gIHRvIHVuaXQgYCN7JHRvX3VuaXR9YFwiO1xyXG59XHJcbiIsIi8vXHJcbi8vIElucHV0IFNldHRpbmdzXHJcbi8vXHJcblxyXG4vL1xyXG4vLyBJbmhlcml0XHJcbi8vXHJcbiRsYWJlbC1tYXJnaW5ib3R0b206ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkc3BhY2UtdHlwb2dyYXBoeSAhZGVmYXVsdDtcclxuXHJcbi8vXHJcbi8vIFNldHRpbmdzXHJcbi8vXHJcbiRpbnB1dC1taW5oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoJGNvbnRyb2xzLWxpbmVoZWlnaHQgKiAxZW0pICsgKCRjb250cm9scy1wYWRkaW5nLXkgKiAyLjQpICFkZWZhdWx0O1xyXG4kaW5wdXQtYmFja2dyb3VuZDogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbnRyb2xzLWxhYmVsLWJhY2tncm91bmQgIWRlZmF1bHQ7XHJcbiRpbnB1dC1ib3JkZXJjb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkY29udHJvbHMtbGFiZWwtYm9yZGVyY29sb3IgIWRlZmF1bHQ7XHJcbiRpbnB1dC1ib3hzaGFkb3ctaW5uZXI6ICAgICAgICAgICAgICAgICAgICAgICAgICBpbnNldCAwIDFweCAycHggcmdiYShjbHItYXV0bygkaW5wdXQtYmFja2dyb3VuZCksIC4xKSAhZGVmYXVsdDtcclxuXHJcbiRpbnB1dC1wbGFjZWhvbGRlci1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAkY29udHJvbHMtbGFiZWwtYm9yZGVyY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kaW5wdXQtaWNvbi1zaXplOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMXJlbSAqIDEuMyAhZGVmYXVsdDtcclxuJGlucHV0LWljb24tcGFkZGluZzogICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEgKyBjb252ZXJ0LXVuaXQoJGNvbnRyb2xzLXBhZGRpbmcteCwgcmVtKSAqIDIgIWRlZmF1bHQ7XHJcbiRpbnB1dC1pY29uLXBvc2l0aW9uLXJpZ2h0OiAgICAgICAgICAgICAgICAgICAgICBjb252ZXJ0LXVuaXQoJGNvbnRyb2xzLXBhZGRpbmcteCwgcmVtKSAhZGVmYXVsdDtcclxuIiwiJWdyb3VwLW1hcmdpbi14IHtcclxuICBtYXJnaW4tcmlnaHQ6IC0kY29udHJvbHMtYm9yZGVyd2lkdGggLyAyO1xyXG4gIG1hcmdpbi1sZWZ0OiAtJGNvbnRyb2xzLWJvcmRlcndpZHRoIC8gMjtcclxufVxyXG5cclxuJWdyb3VwLW1hcmdpbi15IHtcclxuICBtYXJnaW4tdG9wOiAtJGNvbnRyb2xzLWJvcmRlcndpZHRoIC8gMjtcclxuICBtYXJnaW4tYm90dG9tOiAtJGNvbnRyb2xzLWJvcmRlcndpZHRoIC8gMjtcclxufVxyXG5cclxuJWdyb3VwLWJvcmRlci14LTAge1xyXG4gIGJvcmRlci1yaWdodDogMDsgLy8gYXZvaWQgdXNpbmcgQGZ1bmN0aW9uIGJvcmRlciwgdG8gcmVtb3ZlIGJvcmRlcnMgaW5kZXBlbmRlbnQgb2YgYCRkZXNpZ24tc2hhZG93LWVsc2UtYm9yZGVyYCBvcHRpb25cclxuICBib3JkZXItbGVmdDogMDsgLy8gYXZvaWQgdXNpbmcgQGZ1bmN0aW9uIGJvcmRlciwgdG8gcmVtb3ZlIGJvcmRlcnMgaW5kZXBlbmRlbnQgb2YgYCRkZXNpZ24tc2hhZG93LWVsc2UtYm9yZGVyYCBvcHRpb25cclxufVxyXG5cclxuJWdyb3VwLWJvcmRlci15LTAge1xyXG4gIGJvcmRlci10b3A6IDA7IC8vIGF2b2lkIHVzaW5nIEBmdW5jdGlvbiBib3JkZXIsIHRvIHJlbW92ZSBib3JkZXJzIGluZGVwZW5kZW50IG9mIGAkZGVzaWduLXNoYWRvdy1lbHNlLWJvcmRlcmAgb3B0aW9uXHJcbiAgYm9yZGVyLWJvdHRvbTogMDsgLy8gYXZvaWQgdXNpbmcgQGZ1bmN0aW9uIGJvcmRlciwgdG8gcmVtb3ZlIGJvcmRlcnMgaW5kZXBlbmRlbnQgb2YgYCRkZXNpZ24tc2hhZG93LWVsc2UtYm9yZGVyYCBvcHRpb25cclxufVxyXG5cclxuJWdyb3VwLWJvcmRlci10b3AtMCB7XHJcbiAgYm9yZGVyLXRvcDogMDsgLy8gYXZvaWQgdXNpbmcgQGZ1bmN0aW9uIGJvcmRlciwgdG8gcmVtb3ZlIGJvcmRlcnMgaW5kZXBlbmRlbnQgb2YgYCRkZXNpZ24tc2hhZG93LWVsc2UtYm9yZGVyYCBvcHRpb25cclxufVxyXG5cclxuJWdyb3VwLWJvcmRlci1yaWdodC0wIHtcclxuICBib3JkZXItcmlnaHQ6IDA7IC8vIGF2b2lkIHVzaW5nIEBmdW5jdGlvbiBib3JkZXIsIHRvIHJlbW92ZSBib3JkZXJzIGluZGVwZW5kZW50IG9mIGAkZGVzaWduLXNoYWRvdy1lbHNlLWJvcmRlcmAgb3B0aW9uXHJcbn1cclxuXHJcbiVncm91cC1ib3JkZXItYm90dG9tLTAge1xyXG4gIGJvcmRlci1ib3R0b206IDA7IC8vIGF2b2lkIHVzaW5nIEBmdW5jdGlvbiBib3JkZXIsIHRvIHJlbW92ZSBib3JkZXJzIGluZGVwZW5kZW50IG9mIGAkZGVzaWduLXNoYWRvdy1lbHNlLWJvcmRlcmAgb3B0aW9uXHJcbn1cclxuXHJcbiVncm91cC1ib3JkZXItbGVmdC0wIHtcclxuICBib3JkZXItbGVmdDogMDsgLy8gYXZvaWQgdXNpbmcgQGZ1bmN0aW9uIGJvcmRlciwgdG8gcmVtb3ZlIGJvcmRlcnMgaW5kZXBlbmRlbnQgb2YgYCRkZXNpZ24tc2hhZG93LWVsc2UtYm9yZGVyYCBvcHRpb25cclxufVxyXG5cclxuJWdyb3VwLWJvcmRlcnJhZGl1cy0wIHtcclxuICBib3JkZXItcmFkaXVzOiBib3JkZXItcmFkaXVzKDApO1xyXG59XHJcblxyXG4lZ3JvdXAtYm9yZGVycmFkaXVzLXRvcCB7XHJcbiAgQGluY2x1ZGUgYm9yZGVyLXJhZGl1cy10b3AoJGNvbnRyb2xzLWJvcmRlcnJhZGl1cyk7XHJcbn1cclxuXHJcbiVncm91cC1ib3JkZXJyYWRpdXMtcmlnaHQge1xyXG4gIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMtcmlnaHQoJGNvbnRyb2xzLWJvcmRlcnJhZGl1cyk7XHJcbn1cclxuXHJcbiVncm91cC1ib3JkZXJyYWRpdXMtYm90dG9tIHtcclxuICBAaW5jbHVkZSBib3JkZXItcmFkaXVzLWJvdHRvbSgkY29udHJvbHMtYm9yZGVycmFkaXVzKTtcclxufVxyXG5cclxuJWdyb3VwLWJvcmRlcnJhZGl1cy1sZWZ0IHtcclxuICBAaW5jbHVkZSBib3JkZXItcmFkaXVzLWxlZnQoJGNvbnRyb2xzLWJvcmRlcnJhZGl1cyk7XHJcbn1cclxuIiwiLy8gc3R5bGVsaW50LWRpc2FibGUgcHJvcGVydHktYmxhY2tsaXN0XHJcbi8vXHJcbi8vIEJvcmRlciBSYWRpdXNcclxuLy9cclxuXHJcbi8vIHRvcCBzaWRlIGJvcmRlciByYWRpdXNcclxuQG1peGluIGJvcmRlci1yYWRpdXMtdG9wKCRyYWRpdXM6ICRib3JkZXJyYWRpdXMtZGVmYXVsdCwgJGZhbGxiYWNrLXZhbHVlOiBudWxsKSB7XHJcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogYm9yZGVyLXJhZGl1cygkcmFkaXVzLCAkZmFsbGJhY2stdmFsdWUpO1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiBib3JkZXItcmFkaXVzKCRyYWRpdXMsICRmYWxsYmFjay12YWx1ZSk7XHJcbn1cclxuXHJcbi8vIHJpZ2h0IHNpZGUgYm9yZGVyIHJhZGl1c1xyXG5AbWl4aW4gYm9yZGVyLXJhZGl1cy1yaWdodCgkcmFkaXVzOiAkYm9yZGVycmFkaXVzLWRlZmF1bHQsICRmYWxsYmFjay12YWx1ZTogbnVsbCkge1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiBib3JkZXItcmFkaXVzKCRyYWRpdXMsICRmYWxsYmFjay12YWx1ZSk7XHJcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IGJvcmRlci1yYWRpdXMoJHJhZGl1cywgJGZhbGxiYWNrLXZhbHVlKTtcclxufVxyXG5cclxuLy8gYm90dG9tIHNpZGUgYm9yZGVyIHJhZGl1c1xyXG5AbWl4aW4gYm9yZGVyLXJhZGl1cy1ib3R0b20oJHJhZGl1czogJGJvcmRlcnJhZGl1cy1kZWZhdWx0LCAkZmFsbGJhY2stdmFsdWU6IG51bGwpIHtcclxuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogYm9yZGVyLXJhZGl1cygkcmFkaXVzLCAkZmFsbGJhY2stdmFsdWUpO1xyXG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IGJvcmRlci1yYWRpdXMoJHJhZGl1cywgJGZhbGxiYWNrLXZhbHVlKTtcclxufVxyXG5cclxuLy8gbGVmdCBzaWRlIGJvcmRlciByYWRpdXNcclxuQG1peGluIGJvcmRlci1yYWRpdXMtbGVmdCgkcmFkaXVzOiAkYm9yZGVycmFkaXVzLWRlZmF1bHQsICRmYWxsYmFjay12YWx1ZTogbnVsbCkge1xyXG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IGJvcmRlci1yYWRpdXMoJHJhZGl1cywgJGZhbGxiYWNrLXZhbHVlKTtcclxuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiBib3JkZXItcmFkaXVzKCRyYWRpdXMsICRmYWxsYmFjay12YWx1ZSk7XHJcbn1cclxuIiwiJWRyb3Bkb3duLWZpbGwtZ2FwcyB7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAtJGRyb3Bkb3duLW1lbnUtbWFyZ2luO1xyXG4gIHJpZ2h0OiAtJGRyb3Bkb3duLW1lbnUtbWFyZ2luO1xyXG4gIGJvdHRvbTogLSRkcm9wZG93bi1tZW51LW1hcmdpbjtcclxuICBsZWZ0OiAtJGRyb3Bkb3duLW1lbnUtbWFyZ2luO1xyXG4gIHotaW5kZXg6IC0xOyAvLyBwcmV2ZW50IGZyb20gb3ZlcnJpZGluZyBpbm5lciBlbGVtZW50c1xyXG5cclxuICBAaWYgJGVuYWJsZS1kZWJ1Z2dpbmcge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgkcmVkLCAuNSk7XHJcbiAgfVxyXG59XHJcbiIsIi8vXHJcbi8vIERyb3Bkb3duc1xyXG4vL1xyXG5cclxuLy9cclxuLy8gSW5oZXJpdFxyXG4vL1xyXG4kZHJvcGRvd24tbWVudS1ib3JkZXJyYWRpdXM6ICAgICAgICAkYm9yZGVycmFkaXVzLWRlZmF1bHQgIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1tZW51LWJveHNoYWRvdzogICAgICAgICAgICRib3hzaGFkb3ctcm91bmQgIWRlZmF1bHQ7XHJcblxyXG4kZHJvcGRvd24tdHJpZ2dlci1jYXJldC1zaXplOiAgICAgICAkbWVudS10cmlnZ2VyLWNhcmV0LXNpemUgIWRlZmF1bHQ7XHJcblxyXG4vL1xyXG4vLyBTZXR0aW5nXHJcbi8vXHJcbiRkcm9wZG93bi1tZW51LWJhY2tncm91bmQ6ICAgICAgICAgICR3aGl0ZSAhZGVmYXVsdDtcclxuJGRyb3Bkb3duLW1lbnUtcGFkZGluZy15OiAgICAgICAgICAgLjM1ZW0gIWRlZmF1bHQ7XHJcbiRkcm9wZG93bi1tZW51LW1hcmdpbjogICAgICAgICAgICAgIC4yNWVtICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tbWVudS1taW53aWR0aDogICAgICAgICAgICAxMDAlICFkZWZhdWx0O1xyXG4kZHJvcGRvd24tbWVudS16aW5kZXg6ICAgICAgICAgICAgICAxNCAhZGVmYXVsdDtcclxuXHJcbiRkcm9wZG93bi10cmlnZ2VyLWNhcmV0LWNvbG9yOiAgICAgIGN1cnJlbnRDb2xvciAhZGVmYXVsdDtcclxuIiwiLy9cclxuLy8gaW5wdXQgY29udHJvbHNcclxuLy9cclxuXHJcbi8vXHJcbi8vIEJhc2UgU3R5bGVcclxuLy9cclxuLmlucHV0IHtcclxuICBAZXh0ZW5kICVjb250cm9scztcclxuICBAZXh0ZW5kICVjb250cm9scy1hY3RpdmU7XHJcbiAgQGV4dGVuZCAlY29udHJvbHMtZm9jdXM7XHJcblxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGJvcmRlci1jb2xvcjogJGlucHV0LWJvcmRlcmNvbG9yO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRpbnB1dC1iYWNrZ3JvdW5kO1xyXG4gIGJveC1zaGFkb3c6IGJveC1zaGFkb3coJGlucHV0LWJveHNoYWRvdy1pbm5lcik7XHJcblxyXG4gIEBpbmNsdWRlIGhvdmVyIHtcclxuICAgIGJveC1zaGFkb3c6IGJveC1zaGFkb3coJGlucHV0LWJveHNoYWRvdy1pbm5lciwgJGNvbnRyb2xzLWZvY3VzLWJveHNoYWRvdyByZ2JhKCRjb250cm9scy10aGVtZSwgLjUpKTsgLy8gRml4OiBob3ZlciBzdGF0ZSBib3gtc2hhZG93IHRyYW5zaXRpb25cclxuICB9XHJcblxyXG4gIEBpbmNsdWRlIGZvY3VzIHtcclxuICAgIGJvcmRlci1jb2xvcjogY3VycmVudENvbG9yO1xyXG4gICAgYm94LXNoYWRvdzogYm94LXNoYWRvdyhub25lKTtcclxuICB9XHJcbn1cclxuXHJcbi8vXHJcbi8vIFRoZW1lIFZhcmlhbnRzXHJcbi8vXHJcblxyXG4vLyBtaW5pbWFsIGRlc2lnbiB2YXJpYW50XHJcbi5pbnB1dC5pcy1taW4ge1xyXG4gIHBhZGRpbmctYm90dG9tOiAkY29udHJvbHMtcGFkZGluZy15IC0gY29udmVydC11bml0KCRib3JkZXJ3aWR0aC13aWRlIC0gMiwgZW0pOyAvLyBkZWNyZWFzZSBwYWRkaW5nIGJvdHRvbSBieSB0aGUgc2FtZSB3aWR0aCB3ZSBhcmUgaW5jcmVhc2luZyBib3JkZXItYm90dG9tIHRvIG1ha2UgbGF5b3V0IHVuYWZmZWN0ZWQgYnkgZGVzaWduIGNoYW5nZVxyXG4gIGJvcmRlci13aWR0aDogMDtcclxuICBib3JkZXItYm90dG9tLXdpZHRoOiAkYm9yZGVyd2lkdGgtd2lkZTtcclxuICBib3JkZXItcmFkaXVzOiBib3JkZXItcmFkaXVzKDApO1xyXG5cclxuICBAaW5jbHVkZSBub3QtaG92ZXIge1xyXG4gICAgYm94LXNoYWRvdzogYm94LXNoYWRvdyhub25lKTsgLy8gcmVtb3ZlIGlubmVyIHNoYWRvdyB3aXRob3V0IG92ZXJyaWRpbmcgaG92ZXIgc2hhZG93XHJcbiAgfVxyXG59XHJcblxyXG4vLyBkaXNhYmxlZCBidXR0b24gbmVlZCB0byBiZSBhdCBlbmQgdG8gb3ZlcnJpZGUgcHJldmlvdXMgc2VsZWN0b3JzXHJcbi8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1kdXBsaWNhdGUtc2VsZWN0b3JzXHJcbi5pbnB1dCB7XHJcbiAgQGluY2x1ZGUgZGlzYWJsZWQge1xyXG4gICAgQGV4dGVuZCAlY29udHJvbHMtZGlzYWJsZWQ7XHJcbiAgfVxyXG59XHJcblxyXG50ZXh0YXJlYS5pbnB1dDpyZWFkLW9ubHksXHJcbmlucHV0LmlucHV0OnJlYWQtb25seSB7XHJcbiAgQGV4dGVuZCAlY29udHJvbHMtZGlzYWJsZWQ7XHJcbn1cclxuXHJcbi8vXHJcbi8vIENvbG9yIHZhcmlhbnRzXHJcbi8vXHJcbkBlYWNoICRjb2xvciwgJHZhbHVlIGluICR0aGVtZS1jb2xvcnMge1xyXG4gIC5pbnB1dC5pcy0jeyRjb2xvcn0ge1xyXG4gICAgQGluY2x1ZGUgaW5wdXQtdmFyaWFudCgkY29sb3IsICR2YWx1ZSk7XHJcbiAgfVxyXG59XHJcblxyXG4vLyBmb3JtIHZhbGlkYXRpb24gc3R5bGVcclxuLmlzLXZhbGlkYXRlZCAuaW5wdXQ6cmVxdWlyZWQge1xyXG4gICY6dmFsaWQge1xyXG4gICAgQGV4dGVuZCAuaW5wdXQuaXMtdmFsaWQ7XHJcbiAgICBAZXh0ZW5kIC5pbnB1dC5pcy12YWxpZC5oYXMtaWNvbjtcclxuICB9XHJcblxyXG4gICY6aW52YWxpZCB7XHJcbiAgICBAZXh0ZW5kIC5pbnB1dC5pcy1lcnJvcjtcclxuICAgIEBleHRlbmQgLmlucHV0LmlzLWVycm9yLmhhcy1pY29uO1xyXG4gIH1cclxufVxyXG5cclxuc2VsZWN0LmlucHV0IHtcclxuICAvLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJvcGVydHktbm8tdmVuZG9yLXByZWZpeFxyXG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcclxuICAvLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJvcGVydHktbm8tdmVuZG9yLXByZWZpeFxyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICBhcHBlYXJhbmNlOiBub25lO1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6ICRpY29uLWNhcmV0LWRvd247XHJcbiAgQGV4dGVuZCAlY29udHJvbHMtdmFsaWRhdGlvbi1pY29uO1xyXG5cclxuICAmW211bHRpcGxlXSxcclxuICAmW3NpemVdOm5vdChbc2l6ZT1cIjFcIl0pIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6ICRjb250cm9scy1wYWRkaW5nLXk7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xyXG4gIH1cclxuXHJcbiAgJjo6LW1zLWV4cGFuZCB7XHJcbiAgICBkaXNwbGF5OiBub25lOyAvLyBIaWRlIGNhcmV0IG9uIGA8c2VsZWN0PmBzIGluIElFXHJcbiAgfVxyXG5cclxuICAvLyBSZW1vdmUgYmx1ZSBiYWNrZ3JvdW5kIGluIElFXHJcbiAgJjo6LW1zLXZhbHVlIHtcclxuICAgIGNvbG9yOiAkY29udHJvbHMtY29sb3I7XHJcbiAgICBiYWNrZ3JvdW5kOiAkaW5wdXQtYmFja2dyb3VuZDtcclxuICB9XHJcbn1cclxuXHJcbi5pbnB1dDo6LW1zLWNsZWFyIHtcclxuICBjb2xvcjogJGNvbnRyb2xzLXRoZW1lOyAvLyBTZXQgSUUgY2xlYXIgZmllbGQgYnV0dG9uIGNvbG9yIHNvIHRoYXQgaXQgaXMgbm90IGFmZmVjdGVkIGJ5IC5pbnB1dCBjb2xvclxyXG59XHJcblxyXG4uaW5wdXQ6OnBsYWNlaG9sZGVyIHtcclxuICBvcGFjaXR5OiAxOyAvLyBvdmVycmlkZSBGaXJlZm94J3Mgb3BhY2l0eVxyXG4gIGNvbG9yOiAkaW5wdXQtcGxhY2Vob2xkZXItY29sb3I7XHJcbn1cclxuXHJcbnRleHRhcmVhLmlucHV0IHtcclxuICBoZWlnaHQ6IGF1dG87IC8vIHJldmVydCB0ZXh0YXJlYSBoZWlnaHRcclxuICBtaW4taGVpZ2h0OiAkaW5wdXQtbWluaGVpZ2h0OyAvLyBwcmV2ZW50IHVzZXIgZnJvbSBkZWNyZWFzaW5nIHNpemUgbG93ZXIgdGhhbiBvbmUgcm93XHJcbn1cclxuXHJcbi8vXHJcbi8vIElucHV0IENvbnRyb2xcclxuLy9cclxuLmNvbnRyb2wge1xyXG4gID4gLmlucHV0IHtcclxuICAgIEBpbmNsdWRlIGZvbnRzaXplKGluaGVyaXQpO1xyXG4gICAgZGlzcGxheTogZmxleDsgLy8gYWxpZ24gY29udGVudCBpbiBjZW50ZXIgYmFzZWQgb24gaGVpZ2h0XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyAvLyBhbGlnbiBjb250ZW50IGluIGNlbnRlciBiYXNlZCBvbiBoZWlnaHRcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcblxyXG4gICYuaGFzLWljb24tbGVmdCB7XHJcbiAgICA+IC5pbnB1dCB7XHJcbiAgICAgIH4gLmljb24ge1xyXG4gICAgICAgIHotaW5kZXg6ICRncm91cC1pdGVtcy1ob3Zlci1mb2N1cy16aW5kZXggKyAxO1xyXG4gICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAgIG9wYWNpdHk6ICRjb250cm9sLWlucHV0LWljb24tb3BhY2l0eTtcclxuICAgICAgfVxyXG5cclxuICAgICAgQGluY2x1ZGUgZm9jdXMge1xyXG4gICAgICAgIH4gLmljb24ge1xyXG4gICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gICYuaGFzLWZsb2F0aW5nLWxhYmVsID4gLmlucHV0W3BsYWNlaG9sZGVyPVwiIFwiXSB7XHJcbiAgICB+IC5sYWJlbCB7XHJcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgdG9wOiA1MCU7XHJcbiAgICAgIGxlZnQ6IGNvbnZlcnQtdW5pdCgkY29udHJvbHMtcGFkZGluZy14LCByZW0pO1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbiAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICBwYWRkaW5nOiAycHg7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRpbnB1dC1iYWNrZ3JvdW5kO1xyXG4gICAgICBsaW5lLWhlaWdodDogMTtcclxuICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbih0b3AsIGZvbnQtc2l6ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgZm9jdXMoXCI6bm90KDpwbGFjZWhvbGRlci1zaG93bilcIikge1xyXG4gICAgICB+IC5sYWJlbCB7XHJcbiAgICAgICAgdG9wOiAwJTtcclxuICAgICAgICBAaW5jbHVkZSBmb250c2l6ZSgkZGVmYXVsdC1zbWFsbC1xdWFudGl0eSAqIDFlbSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBzZWxlY3Rvci1uby12ZW5kb3ItcHJlZml4XHJcbiAgICAmOm5vdCg6LW1zLWlucHV0LXBsYWNlaG9sZGVyKSB7XHJcbiAgICAgIH4gLmxhYmVsIHtcclxuICAgICAgICB0b3A6IDAlO1xyXG4gICAgICAgIEBpbmNsdWRlIGZvbnRzaXplKCRkZWZhdWx0LXNtYWxsLXF1YW50aXR5ICogMWVtKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIvL1xyXG4vLyBpbnB1dHMgTWl4aW5cclxuLy9cclxuXHJcbi8vXHJcbi8vIFRoZW1lIFZhcmlhbnRzIE1peGluXHJcbi8vXHJcblxyXG5AbWl4aW4gaW5wdXQtdmFyaWFudCgkbmFtZSwgJGNvbG9yKSB7XHJcbiAgYm9yZGVyLWNvbG9yOiByZ2JhKCRjb2xvciwgLjUpO1xyXG4gIGNvbG9yOiAkY29sb3I7XHJcblxyXG4gIEBpbmNsdWRlIGhvdmVyIHtcclxuICAgIGJveC1zaGFkb3c6IGJveC1zaGFkb3coJGlucHV0LWJveHNoYWRvdy1pbm5lciwgJGNvbnRyb2xzLWZvY3VzLWJveHNoYWRvdyByZ2JhKCRjb2xvciwgLjUpKTtcclxuICB9XHJcblxyXG4gIEBpZiAkbmFtZSA9PSBcInZhbGlkXCIgb3IgJG5hbWUgPT0gXCJpbmZvXCIgb3IgJG5hbWUgPT0gXCJ3YXJuXCIgb3IgJG5hbWUgPT0gXCJlcnJvclwiIHtcclxuICAgICYuaGFzLWljb24ge1xyXG4gICAgICBAZXh0ZW5kICVjb250cm9scy12YWxpZGF0aW9uLWljb247XHJcbiAgICAgIEBpZiAkbmFtZSA9PSBcInZhbGlkXCIge1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6ICRpY29uLWNoZWNrO1xyXG4gICAgICB9IEBlbHNlIGlmICRuYW1lID09IFwiaW5mb1wiIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiAkaWNvbi1pbmZvO1xyXG4gICAgICB9IEBlbHNlIGlmICRuYW1lID09IFwid2FyblwiIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiAkaWNvbi13YXJuaW5nO1xyXG4gICAgICB9IEBlbHNlIGlmICRuYW1lID09IFwiZXJyb3JcIiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogJGljb24tY3Jvc3M7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5jb250cm9sID4gJiB+IC5pY29uIHtcclxuICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgfVxyXG5cclxuICAuY29udHJvbC5oYXMtZmxvYXRpbmctbGFiZWwgPiAmIH4gLmxhYmVsIHtcclxuICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgfVxyXG59XHJcbiIsIi8vXHJcbi8vIHN0ci1yZXBsYWNlXHJcbi8vIFJlcGxhY2Ugb2NjdXJyZW5jZSBvZiBhIHN0cmluZ1xyXG4vL1xyXG4vLyBQYXJhbWV0ZXJzOlxyXG4vLyB7U3RyaW5nfSAkc3RyaW5nIDogU3RyaW5nIGNvbnRhaW5pbmcgdGhlIHdvcmQgdG8gcmVwbGFjZVxyXG4vLyB7U3RyaW5nLCBNYXB9ICRzZWFyY2ggOiB3b3JkIHRvIHJlcGxhY2UgLCBpZiBtYXAgaXMgc3VwcGxpZWQga2V5KHMpIGNvbnRhaW4gc3RyaW5nIHRvIHJlcGxhY2UgYW5kIHZhbHVlKHMpIGNvbnRhaW4gc3RyaW5nIHRvIHJlcGxhY2Ugd2l0aFxyXG4vLyBbb3B0aW9uYWxdIHtTdHJpbmd9ICRyZXBsYWNlIDogU3RyaW5nIHRvIHJlcGxhY2Ugd2l0aCwgaWYgJHNlYXJjaCBpcyBhIHN0cmluZ1xyXG4vL1xyXG4vLyBFeGFtcGxlIG9mIHVzZTpcclxuLy8gJHJlc3VsdDogc3RyLXJlcGxhY2UoJ1RoaXMgaXMganVzdCBhbiBleGFtcGxlJywgJ2p1c3QnLCAnbm90JykgPT4gJHJlc3VsdDogVGhpcyBpcyBub3QgYW4gZXhhbXBsZVxyXG4vLyAkcmVzdWx0OiBzdHItcmVwbGFjZShcIlRoaXMgaXMganVzdCBhbiBleGFtcGxlXCIsIChcImp1c3RcIjpcIm5vdFwiLCBcImFuXCI6XCJhXCIsIFwiZXhhbXBsZVwiOlwiam9rZVwiKSkgPT4gJHJlc3VsdDogVGhpcyBpcyBub3QgYSBqb2tlXHJcbi8vXHJcbi8vIFJldHVybjpcclxuLy8ge1N0cmluZ30gU3RyaW5nIHdpdGggcmVwbGFjZWQgd29yZHNcclxuLy9cclxuQGZ1bmN0aW9uIHN0ci1yZXBsYWNlKCRzdHJpbmcsICRzZWFyY2gsICRyZXBsYWNlOiBcIiBcIikge1xyXG4gIEBpZiB0eXBlLW9mKCRzdHJpbmcpICE9IFwic3RyaW5nXCIge1xyXG4gICAgQGVycm9yIFwiVGhlIGFyZ3VtZW50ICRzdHJpbmc6IGAjeyRzdHJpbmd9YCBpcyBvZiBpbmNvcnJlY3QgdHlwZTogYCN7dHlwZS1vZigkc3RyaW5nKX1gLiBUeXBlIG9mIGBzdHJpbmdgIGlzIHJlcXVpcmVkIVwiO1xyXG4gIH0gQGVsc2UgaWYgdHlwZS1vZigkc2VhcmNoKSAhPSBcInN0cmluZ1wiIGFuZCB0eXBlLW9mKCRzZWFyY2gpICE9IFwibWFwXCIge1xyXG4gICAgQGVycm9yIFwiVGhlIGFyZ3VtZW50ICRzZWFyY2g6IGAjeyRzZWFyY2h9YCBpcyBvZiBpbmNvcnJlY3QgdHlwZTogYCN7dHlwZS1vZigkc2VhcmNoKX1gLiBUeXBlIG9mIGBzdHJpbmdgIG9yIGBtYXBgIGlzIHJlcXVpcmVkIVwiO1xyXG4gIH0gQGVsc2UgaWYgdHlwZS1vZigkcmVwbGFjZSkgIT0gXCJzdHJpbmdcIiBhbmQgdHlwZS1vZigkc2VhcmNoKSAhPSBcIm1hcFwiIHtcclxuICAgIEBlcnJvciBcIlRoZSBhcmd1bWVudCAkcmVwbGFjZTogYCN7JHJlcGxhY2V9YCBpcyBvZiBpbmNvcnJlY3QgdHlwZTogYCN7dHlwZS1vZigkcmVwbGFjZSl9YC4gVHlwZSBvZiBgc3RyaW5nYCBpcyByZXF1aXJlZCFcIjtcclxuICB9XHJcblxyXG4gIEBpZiB0eXBlLW9mKCRzZWFyY2gpID09IFwibWFwXCIge1xyXG4gICAgJHJlc3VsdDogJHN0cmluZztcclxuICAgIEBlYWNoICRrZXksICR2YWx1ZSBpbiAkc2VhcmNoIHtcclxuICAgICAgJHJlc3VsdDogc3RyLXJlcGxhY2UoJHJlc3VsdCwgJGtleSwgJHZhbHVlKTtcclxuICAgIH1cclxuICAgIEByZXR1cm4gJHJlc3VsdDtcclxuICB9XHJcblxyXG4gICRpbmRleDogc3RyLWluZGV4KCRzdHJpbmcsICRzZWFyY2gpO1xyXG5cclxuICBAaWYgJGluZGV4IHtcclxuICAgIEByZXR1cm4gc3RyLXNsaWNlKCRzdHJpbmcsIDEsICRpbmRleCAtIDEpICsgJHJlcGxhY2UgKyBzdHItcmVwbGFjZShzdHItc2xpY2UoJHN0cmluZywgJGluZGV4ICsgc3RyLWxlbmd0aCgkc2VhcmNoKSksICRzZWFyY2gsICRyZXBsYWNlKTtcclxuICB9XHJcblxyXG4gIEByZXR1cm4gJHN0cmluZztcclxufVxyXG4iLCIvL1xyXG4vLyBHcm91cCBTZXR0aW5nc1xyXG4vL1xyXG5cclxuLy9cclxuLy8gU2V0dGluZ1xyXG4vL1xyXG4kZ3JvdXAtaXRlbXMtaG92ZXItZm9jdXMtemluZGV4OiAgICAgICAgIDEwICFkZWZhdWx0O1xyXG5cclxuJGdyb3VwLWFkZG9uLWJhY2tncm91bmQ6ICAgICAgICAgICAgICAgICAkYm9keS1iYWNrZ3JvdW5kICFkZWZhdWx0O1xyXG4kZ3JvdXAtYWRkb24tYm9yZGVyY29sb3I6ICAgICAgICAgICAgICAgICRjb250cm9scy10aGVtZS1saWdodCAhZGVmYXVsdDtcclxuXHJcbiRncm91cC1sZy1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4kZ3JvdXAtbGctcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAgIDEuMjVyZW0gIWRlZmF1bHQ7XHJcbiIsIi8vXHJcbi8vIENvbnRyb2xcclxuLy9cclxuXHJcbi8vXHJcbi8vIFNldHRpbmdcclxuLy9cclxuJGNvbnRyb2wtaW5wdXQtaWNvbi1vcGFjaXR5OiAgICAgICAgICAgICAgICAgICAgICAgLjUgIWRlZmF1bHQ7XHJcblxyXG4kY29udHJvbC1mZWVkYmFjay1wYWRkaW5nOiAgICAgICAgICAgICAgICAgICAgICAgICAzcHggNnB4ICFkZWZhdWx0O1xyXG4kY29udHJvbC1mZWVkYmFjay1vZmZzZXQtYm90dG9tOiAgICAgICAgICAgICAgICAgICAxcHggIWRlZmF1bHQ7XHJcbiRjb250cm9sLWZlZWRiYWNrLWJhY2tncm91bmQ6ICAgICAgICAgICAgICAgICAgICAgICRkYXJrICFkZWZhdWx0O1xyXG4kY29udHJvbC1mZWVkYmFjay1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgICAgICBjbHItYXV0bygkY29udHJvbC1mZWVkYmFjay1iYWNrZ3JvdW5kKSAhZGVmYXVsdDtcclxuJGNvbnRyb2wtZmVlZGJhY2stc2hhZG93OiAgICAgICAgICAgICAgICAgICAgICAgICAgJGJveHNoYWRvdy1kZWZhdWx0ICFkZWZhdWx0O1xyXG5cclxuJGNvbnRyb2wtZmVlZGJhY2stYXJyb3ctc2l6ZTogICAgICAgICAgICAgICAgICAgICAgNnB4ICFkZWZhdWx0O1xyXG4kY29udHJvbC1mZWVkYmFjay1hcnJvdy1vZmZzZXQtcmlnaHQ6ICAgICAgICAgICAgICAxMHB4ICFkZWZhdWx0O1xyXG4iLCIvL1xyXG4vLyBCdXR0b25zXHJcbi8vXHJcblxyXG5AaWYgJGdlbmVyYXRlLWNvbXBvbmVudC1jbGFzc2VzIHtcclxuICAvL1xyXG4gIC8vIEJhc2Ugc3R5bGVzXHJcbiAgLy9cclxuXHJcbiAgLmJ0biB7XHJcbiAgICBAZXh0ZW5kICVjb250cm9scztcclxuICAgIEBleHRlbmQgJWNvbnRyb2xzLWFjdGl2ZTtcclxuICAgIEBleHRlbmQgJWNvbnRyb2xzLWhvdmVyO1xyXG4gICAgQGV4dGVuZCAlY29udHJvbHMtZm9jdXM7XHJcblxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgIEBpbmNsdWRlIG5vdC1kaXNhYmxlZCB7XHJcbiAgICAgIEBleHRlbmQgJWN1cnNvci1wb2ludGVyOyAvLyBhZGQgXCJoYW5kXCIgY3Vyc29yIHRvIG5vbi1kaXNhYmxlZCBidXR0b24gZWxlbWVudHMuXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvL1xyXG4gIC8vIFRoZW1lIFZhcmlhbnRzXHJcbiAgLy9cclxuXHJcbiAgLy8gU29saWQgVGhlbWVcclxuICAuYnRuLmlzLXNsZCB7XHJcbiAgICAvL1xyXG4gICAgLy8gRGVmYXVsdCBTb2xpZCBTdHlsZXNcclxuICAgIC8vXHJcbiAgICAkZm9jdXMtYmFja2dyb3VuZDogY2xyLXN0ZXAoJGJ1dHRvbi10aGVtZSwgLTIpO1xyXG4gICAgJGFjdGl2ZS1iYWNrZ3JvdW5kOiBjbHItc3RlcCgkYnV0dG9uLXRoZW1lLCA0KTtcclxuXHJcbiAgICBjb2xvcjogY2xyLWF1dG8oJGJ1dHRvbi10aGVtZSk7XHJcbiAgICBAaW5jbHVkZSBncmFkaWVudC1iZygkYnV0dG9uLXRoZW1lLCAxODBkZWcpO1xyXG5cclxuICAgIEBpbmNsdWRlIGhvdmVyIHtcclxuICAgICAgLy8gdG8gYXZvaWQgYWRkaW5nIGV4dHJhIGJveC1zaGFkb3cgb3ZlcnJpZGVcclxuICAgICAgLy8gLSBib3gtc2hhZG93KCRidXR0b24tZm9jdXMtYm94c2hhZG93IHJnYmEoJGJ1dHRvbi10aGVtZSwgMC41KSkgaXMgYWxyZWFkeSBpbnNpZGUgZGVmYXVsdCBjb250cm9sc1xyXG4gICAgICBAaWYgJGJ1dHRvbi1mb2N1cy1ib3hzaGFkb3cgIT0gJGNvbnRyb2xzLWZvY3VzLWJveHNoYWRvdyBhbmQgJGJ1dHRvbi10aGVtZSAhPSAkY29udHJvbHMtdGhlbWUge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IGJveC1zaGFkb3coJGJ1dHRvbi1mb2N1cy1ib3hzaGFkb3cgcmdiYSgkYnV0dG9uLXRoZW1lLCAuNSkpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgZm9jdXMge1xyXG4gICAgICBAaW5jbHVkZSBncmFkaWVudC1iZygkZm9jdXMtYmFja2dyb3VuZCwgMTgwZGVnKTtcclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBhY3RpdmUge1xyXG4gICAgICBjb2xvcjogY2xyLWF1dG8oJGFjdGl2ZS1iYWNrZ3JvdW5kKTtcclxuICAgICAgQGlmICRkZXNpZ24tc29saWQtZWxzZS1ncmFkaWVudHMge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRhY3RpdmUtYmFja2dyb3VuZDtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuaXMtbG9hZGluZyB7XHJcbiAgICAgIEBpbmNsdWRlIGxvYWRpbmctc3Bpbm5lci1jb2xvcihjbHItYXV0bygkYnV0dG9uLXRoZW1lKSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy9cclxuICAgIC8vIENvbG9yIHZhcmlhbnRzXHJcbiAgICAvL1xyXG4gICAgQGVhY2ggJGNvbG9yLCAkdmFsdWUgaW4gJHRoZW1lLWNvbG9ycyB7XHJcbiAgICAgICYuaXMtI3skY29sb3J9IHtcclxuICAgICAgICBAaW5jbHVkZSBidXR0b24tZGVzaWduLXNvbGlkLXZhcmlhbnQoJHZhbHVlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vXHJcbiAgICAvLyBTdGF0ZXNcclxuICAgIC8vXHJcbiAgICBAaW5jbHVkZSBmb2N1cyB7XHJcbiAgICAgIEBpbmNsdWRlIGFuaW1hdGlvbihyaXBwbGUtZ3JheSk7IC8vIHJpcHBsZSBhbmltYXRpb24gb24gY2xpY2sgZXZlbnRcclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBhY3RpdmUge1xyXG4gICAgICBAaWYgbm90ICRkZXNpZ24tc29saWQtZWxzZS1ncmFkaWVudHMge1xyXG4gICAgICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7IC8vIFJlbW92ZSB0aGUgZ3JhZGllbnQgZm9yIHRoZSBwcmVzc2VkL2FjdGl2ZSBzdGF0ZVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgZGlzYWJsZWQge1xyXG4gICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICBiYWNrZ3JvdW5kOiAkYnV0dG9uLWRpc2FibGVkLWJhY2tncm91bmQ7XHJcbiAgICAgIEBpZiBub3QgJGRlc2lnbi1zb2xpZC1lbHNlLWdyYWRpZW50cyB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTsgLy8gUmVtb3ZlIENTUyBncmFkaWVudHMgaWYgdGhleSdyZSBlbmFibGVkXHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIE91dGxpbmUgdGhlbWVcclxuICAuYnRuLmlzLW91dCB7XHJcbiAgICAvL1xyXG4gICAgLy8gRGVmYXVsdCBPdXRsaW5lIFN0eWxlc1xyXG4gICAgLy9cclxuICAgIGJvcmRlci1jb2xvcjogJGJ1dHRvbi10aGVtZS1saWdodDtcclxuICAgIGNvbG9yOiAkYnV0dG9uLXRoZW1lO1xyXG5cclxuICAgIEBpbmNsdWRlIGJ1dHRvbi1kZXNpZ24tb3V0bGluZS12YXJpYW50KCRidXR0b24tdGhlbWUpOyAvLyBEZWZhdWx0IGJ1dHRvbiB0aGVtZVxyXG5cclxuICAgIC8vIENvbG9yIHZhcmlhbnRzXHJcbiAgICBAZWFjaCAkY29sb3IsICR2YWx1ZSBpbiAkdGhlbWUtY29sb3JzIHtcclxuICAgICAgJi5pcy0jeyRjb2xvcn0ge1xyXG4gICAgICAgIEBpbmNsdWRlIGJ1dHRvbi1kZXNpZ24tb3V0bGluZS12YXJpYW50KCR2YWx1ZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBkaXNhYmxlZCB7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogJGJ1dHRvbi1kaXNhYmxlZC1iYWNrZ3JvdW5kO1xyXG4gICAgICBjb2xvcjogJGJ1dHRvbi10aGVtZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIE1pbmltYWwgdGhlbWVcclxuICAuYnRuLmlzLW1pbiB7XHJcbiAgICAvL1xyXG4gICAgLy8gRGVmYXVsdCBNaW5pbWFsIFN0eWxlc1xyXG4gICAgLy9cclxuICAgIGJvcmRlci1yaWdodDogMDsgLy8gcmVtb3ZlIGJvcmRlciB0byByZW1vdmUgYm9yZGVyIHNwYWNpbmcgYmV0d2VlbiBtaW5pbWFsIGJ1dHRvbiBncm91cHNcclxuICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRjb250cm9scy10aGVtZS1saWdodDtcclxuICAgIGJvcmRlci1sZWZ0OiAwOyAvLyByZW1vdmUgYm9yZGVyIHRvIHJlbW92ZSBib3JkZXIgc3BhY2luZyBiZXR3ZWVuIG1pbmltYWwgYnV0dG9uIGdyb3Vwc1xyXG4gICAgYm9yZGVyLXJhZGl1czogYm9yZGVyLXJhZGl1cygwKTtcclxuICAgIGJveC1zaGFkb3c6IGJveC1zaGFkb3cobm9uZSk7IC8vIHJlbW92ZSBmb2N1cyBib3ggc2hhZG93XHJcblxyXG4gICAgQGluY2x1ZGUgYmVmb3JlIHtcclxuICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICByaWdodDogMDtcclxuICAgICAgYm90dG9tOiAtMXB4O1xyXG4gICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcclxuICAgICAgd2lkdGg6IDA7XHJcbiAgICAgIGJvcmRlci1ib3R0b206ICRib3JkZXJ3aWR0aC1kZWZhdWx0ICogMiBzb2xpZDtcclxuICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbigkYnV0dG9uLXRyYW5zaXRpb24tbWluaW1hbC1iZWZvcmUpO1xyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIGJ1dHRvbi1kZXNpZ24tbWluaW1hbC12YXJpYW50KCRidXR0b24tdGhlbWUpOyAvLyBEZWZhdWx0IGJ1dHRvbiB0aGVtZVxyXG5cclxuICAgIC8vIENvbG9yIHZhcmlhbnRzXHJcbiAgICBAZWFjaCAkY29sb3IsICR2YWx1ZSBpbiAkdGhlbWUtY29sb3JzIHtcclxuICAgICAgJi5pcy0jeyRjb2xvcn0ge1xyXG4gICAgICAgIEBpbmNsdWRlIGJ1dHRvbi1kZXNpZ24tbWluaW1hbC12YXJpYW50KCR2YWx1ZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBhY3RpdmUge1xyXG4gICAgICBAaW5jbHVkZSBiZWZvcmUge1xyXG4gICAgICAgIEBpbmNsdWRlIGFuaW1hdGlvbihub25lKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEBpbmNsdWRlIGhvdmVyLWZvY3VzLWFjdGl2ZSB7XHJcbiAgICAgIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBmb2N1cyB7XHJcbiAgICAgIEBpbmNsdWRlIGFuaW1hdGlvbihub25lKTsgLy8gZGlzYWJsZSBhbmltYXRpb25zIGFuZCBwbGF5IGFnYWluIG9uIGNsaWNrIGV2ZW50XHJcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICBAaW5jbHVkZSBiZWZvcmUge1xyXG4gICAgICAgIEBpbmNsdWRlIGFuaW1hdGlvbihmbGFzaCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAaW5jbHVkZSBkaXNhYmxlZCB7XHJcbiAgICAgIGNvbG9yOiAkYnV0dG9uLXRoZW1lO1xyXG4gICAgICBAaW5jbHVkZSBiZWZvcmUge1xyXG4gICAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRidXR0b24tZGlzYWJsZWQtYmFja2dyb3VuZDtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gZGlzYWJsZWQgYnV0dG9uIG5lZWQgdG8gYmUgYXQgZW5kIHRvIG92ZXJyaWRlIHByZXZpb3VzIHNlbGVjdG9yc1xyXG4gIC8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1kdXBsaWNhdGUtc2VsZWN0b3JzXHJcbiAgLmJ0biB7XHJcbiAgICBAaW5jbHVkZSBkaXNhYmxlZCB7XHJcbiAgICAgIEBleHRlbmQgJWNvbnRyb2xzLWRpc2FibGVkO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy9cclxuICAvLyBMb2FkaW5nIEFuaW1hdGlvblxyXG4gIC8vXHJcblxyXG4gIC5idG4uaXMtbG9hZGluZyB7XHJcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgIC8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBkZWNsYXJhdGlvbi1uby1pbXBvcnRhbnRcclxuICAgIGNvbG9yOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O1xyXG4gICAgQGluY2x1ZGUgbG9hZGluZy1zcGlubmVyKCRidXR0b24tdGhlbWUpO1xyXG4gIH1cclxuXHJcbiAgLy9cclxuICAvLyBCbG9ja1xyXG4gIC8vXHJcblxyXG4gIC5idG4uaXMtYmxvY2sge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuICAvL1xyXG4gIC8vIFJvdW5kIENpcmNsZVxyXG4gIC8vXHJcblxyXG4gIC8vIHVzZWZ1bCBmb3IgYnV0dG9uIHdpdGggb25seSBpY29uc1xyXG4gIC5idG4uaXMtY2lyY2xlIHtcclxuICAgIHdpZHRoOiAkYnV0dG9uLWlzY2lyY2xlLXNpemU7XHJcbiAgICBoZWlnaHQ6ICRidXR0b24taXNjaXJjbGUtc2l6ZTtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG59XHJcbiIsIi8vXHJcbi8vIEdyYWRpZW50cyBNaXhpblxyXG4vL1xyXG5cclxuLy9cclxuLy8gZ3JhZGllbnQtYmdcclxuLy8gR2VuZXJhdGUgZ3JhZGllbnQgYmFja2dyb3VuZCBpZiBncmFkaWVudCBzdHlsZSBpcyBlbmFibGVkIGluIFNldHRpbmdzXHJcbi8vIGVsc2Ugc29saWQgYmFja2dyb3VuZCBpcyBnZW5lcmF0ZWRcclxuLy9cclxuLy8gUGFyYW1ldGVyczpcclxuLy8ge0NvbG9yfSAkY29sb3IgOiBjb2xvciB1c2VkIHRvIGdlbmVyYXRlIGdyYWRpZW50XHJcbi8vIHtSb3RhdGlvbn0gJGFuZ2xlIDogYW5nbGUgYXQgd2hpY2ggZ3JhZGllbnQgd2lsbCBiZSBnZW5lcmF0ZWRcclxuLy9cclxuQG1peGluIGdyYWRpZW50LWJnKCRjb2xvci12YWx1ZSwgJGFuZ2xlKSB7XHJcbiAgJGdyYWRpZW50OiBncmFkaWVudCgkY29sb3ItdmFsdWUsICRhbmdsZSk7XHJcblxyXG4gIEBpZiAkZ3JhZGllbnQgIT0gJGNvbG9yLXZhbHVlIHtcclxuICAgIGJhY2tncm91bmQ6ICRncmFkaWVudDtcclxuICB9IEBlbHNlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRncmFkaWVudDtcclxuICB9XHJcbn1cclxuXHJcbi8vXHJcbi8vIGdyYWRpZW50LXN0cmlwZWQtYmdcclxuLy8gR2VuZXJhdGUgc3RyaXBlZCBncmFkaWVudCBiYWNrZ3JvdW5kXHJcbi8vXHJcbi8vIFBhcmFtZXRlcnM6XHJcbi8vIHtDb2xvcn0gJGNvbG9yIDogY29sb3IgdXNlZCB0byBnZW5lcmF0ZSBncmFkaWVudFxyXG4vLyB7Um90YXRpb259ICRhbmdsZSA6IGFuZ2xlIGF0IHdoaWNoIGdyYWRpZW50IHdpbGwgYmUgZ2VuZXJhdGVkXHJcbi8vXHJcbkBtaXhpbiBncmFkaWVudC1zdHJpcGVkLWJnKCRjb2xvciwgJGFuZ2xlKSB7XHJcbiAgJGNvbG9yLXRyYW5zOiByZ2JhKCRjb2xvciwgLjE1KTtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoJGFuZ2xlLCAkY29sb3ItdHJhbnMgMjUlLCB0cmFuc3BhcmVudCAyNSUsIHRyYW5zcGFyZW50IDUwJSwgJGNvbG9yLXRyYW5zIDUwJSwgJGNvbG9yLXRyYW5zIDc1JSwgdHJhbnNwYXJlbnQgNzUlLCB0cmFuc3BhcmVudCk7XHJcbn1cclxuIiwiLy9cclxuLy8gQ29sb3Igc3RlcFxyXG4vL1xyXG5cclxuLy9cclxuLy8gY2xyLXN0ZXBcclxuLy8gRnVuY3Rpb25zIHVzZWQgdG8gcmV0dXJuIHN0ZXAgb2YgYSBnaXZlbiBjb2xvci5cclxuLy9cclxuLy8gUGFyYW1ldGVyczpcclxuLy8ge0NvbG9yfSAkY29sb3IgLSBDb2xvclxyXG4vLyB7TnVtYmVyfSAkc3RlcCAtIGNvbG9yIHN0ZXAgbnVtYmVyXHJcbi8vIFtvcHRpb25hbF0ge051bWJlcn0gJGNvbG9yLXN0ZXAtaW50ZXJ2YWwgLSBIb3cgbXVjaCB0byBtaXggJGJhc2UtY29sb3IgaW50byAkY29sb3IgaW4gZWFjaCBzdGVwXHJcbi8vXHJcbi8vIFJldHVybjpcclxuLy8ge0NvbG9yfSB2YWx1ZSBvZiBjb2xvciBzdGVwXHJcbi8vXHJcbkBmdW5jdGlvbiBjbHItc3RlcCgkY29sb3IsICRzdGVwLCAkY29sb3Itc3RlcC1pbnRlcnZhbDogMTAlKSB7XHJcbiAgQGlmIHVuaXQoJGNvbG9yLXN0ZXAtaW50ZXJ2YWwpICE9IFwiJVwiIHtcclxuICAgIEBlcnJvciBcImludmFsaWQgdmFsdWUgb2YgJGNvbG9yLXN0ZXAtaW50ZXJ2YWwgYCN7JGNvbG9yLXN0ZXAtaW50ZXJ2YWx9YCAsIFRoZSB2YWx1ZSB1bml0IG11c3QgYmUgYCVgXCI7XHJcbiAgfVxyXG4gIEBpZiBub3QgdW5pdGxlc3MoJHN0ZXApIHtcclxuICAgIEBlcnJvciBcImludmFsaWQgdmFsdWUgb2YgJHN0ZXAgYCN7JHN0ZXB9YCAsIFRoZSB2YWx1ZSBtdXN0IG5vdCBoYXZlIGEgdW5pdFwiO1xyXG4gIH1cclxuICBAaWYgJHN0ZXAgKiAkY29sb3Itc3RlcC1pbnRlcnZhbCA+IDEwMCBvciAkc3RlcCAqICRjb2xvci1zdGVwLWludGVydmFsIDwgLTEwMCB7XHJcbiAgICBAZXJyb3IgXCJpbnZhbGlkIHZhbHVlIG9mICRzdGVwIGAjeyRzdGVwfWAgLCBUaGUgdmFsdWUgbXVzdCBiZSBpbi1iZXR3ZWVuIGAjezEwMCUgLyAkY29sb3Itc3RlcC1pbnRlcnZhbH1gIC0gYCN7LTEgKiAxMDAlIC8gJGNvbG9yLXN0ZXAtaW50ZXJ2YWwgfWBcIjtcclxuICB9XHJcblxyXG4gIC8vIGludmVydCBjbHItc3RlcCBmdW5jdGlvbiBvdXRwdXQgZGVwZW5kaW5nIG9uICRkZXNpZ24tdGhlbWVcclxuICAkdGhlbWUtY29sb3I6IGlmKCRkZXNpZ24tdGhlbWUgPT0gbGlnaHQsIDEsIC0xKTtcclxuICAkc3RlcDogJHN0ZXAgKiAkdGhlbWUtY29sb3I7XHJcblxyXG4gICRiYXNlLWNvbG9yOiBpZigkc3RlcCA+IDAsICRibGFjaywgJHdoaXRlKTtcclxuICAkc3RlcDogYWJzKCRzdGVwKTtcclxuICBAcmV0dXJuIG1peCgkYmFzZS1jb2xvciwgJGNvbG9yLCAkc3RlcCAqICRjb2xvci1zdGVwLWludGVydmFsKTtcclxufVxyXG4iLCIvL1xyXG4vLyBBbmltYXRlZCBTaGFwZXNcclxuLy9cclxuXHJcbi8vIExvYWRpbmcgU3Bpbm5lciBTaGFwZSB0byBpbmRpY2F0ZSBsb2FkaW5nIHByb2Nlc3NcclxuQG1peGluIGxvYWRpbmctc3Bpbm5lcigkY29sb3I6ICRwcmltYXJ5KSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiBjYWxjKDUwJSAtICgxZW0gLyAyKSk7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IGNhbGMoNTAlIC0gKDFlbSAvIDIpKTtcclxuICAgIHRyYW5zZm9ybTogaW5oZXJpdDsgLy8gcmVzZXQgdHJhbnNmb3JtIHN0eWxlXHJcbiAgICB3aWR0aDogMWVtO1xyXG4gICAgaGVpZ2h0OiAxZW07XHJcbiAgICBib3JkZXI6IC4xNWVtIHNvbGlkIGN1cnJlbnRDb2xvcjtcclxuICAgIGJvcmRlci1yaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICAvLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJvcGVydHktYmxhY2tsaXN0XHJcbiAgICBhbmltYXRpb246IHNwaW4gMXMgaW5maW5pdGUgbGluZWFyOyAvLyBhdm9pZCB1c2luZyBAbWl4aW4gYW5pbWF0aW9uIHRvIGdlbmVyYXRlIHJhZGl1cyBpbmRlcGVuZGVudCBvZiBgJGVuYWJsZS10cmFuc2l0aW9uc2Agb3B0aW9uXHJcbiAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgQGluY2x1ZGUgaW5jbHVkZS1rZXlmcmFtZShzcGluKTtcclxuICB9XHJcbn1cclxuXHJcbi8vIE1peGluIHRvIG92ZXJyaWRlIExvYWRpbmcgc3Bpbm5lciBzaGFwZSBjb2xvclxyXG5AbWl4aW4gbG9hZGluZy1zcGlubmVyLWNvbG9yKCRjb2xvcikge1xyXG4gIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICBjb2xvcjogJGNvbG9yO1xyXG4gIH1cclxufVxyXG4iLCIvL1xyXG4vLyBCdXR0b25zIE1peGluXHJcbi8vXHJcblxyXG4vL1xyXG4vLyBUaGVtZSBWYXJpYW50cyBNaXhpblxyXG4vL1xyXG5cclxuLy8gU29saWQgZGVzaWduIHZhcmlhbnRcclxuQG1peGluIGJ1dHRvbi1kZXNpZ24tc29saWQtdmFyaWFudCgkY29sb3IpIHtcclxuICAkZm9jdXMtYmFja2dyb3VuZDogY2xyLXN0ZXAoJGNvbG9yLCAtMik7XHJcbiAgJGFjdGl2ZS1iYWNrZ3JvdW5kOiBjbHItc3RlcCgkY29sb3IsIDQpO1xyXG5cclxuICAkYWN0aXZlLWRlZmF1bHQ6IGNsci1zdGVwKCRidXR0b24tdGhlbWUsIDQpO1xyXG5cclxuICAvLyB0byBhdm9pZCBhZGRpbmcgZXh0cmEgY29sb3Igb3ZlcnJpZGVcclxuICAvLyAtIGNsci1hdXRvKCRidXR0b24tdGhlbWUpIGlzIGFscmVhZHkgaW5zaWRlIGRlZmF1bHQgaXMtc29saWQgYnV0dG9uXHJcbiAgY29sb3I6IGlmKGNsci1hdXRvKCRjb2xvcikgIT0gY2xyLWF1dG8oJGJ1dHRvbi10aGVtZSksIGNsci1hdXRvKCRjb2xvciksIG51bGwpO1xyXG4gIEBpbmNsdWRlIGdyYWRpZW50LWJnKCRjb2xvciwgMTgwZGVnKTtcclxuXHJcbiAgQGluY2x1ZGUgaG92ZXIge1xyXG4gICAgYm94LXNoYWRvdzogYm94LXNoYWRvdygkYnV0dG9uLWZvY3VzLWJveHNoYWRvdyByZ2JhKCRjb2xvciwgLjUpKTtcclxuICB9XHJcblxyXG4gIEBpbmNsdWRlIGZvY3VzIHtcclxuICAgIEBpbmNsdWRlIGdyYWRpZW50LWJnKCRmb2N1cy1iYWNrZ3JvdW5kLCAxODBkZWcpO1xyXG4gIH1cclxuXHJcbiAgQGluY2x1ZGUgYWN0aXZlIHtcclxuICAgIC8vIHRvIGF2b2lkIGFkZGluZyBleHRyYSBjb2xvciBvdmVycmlkZVxyXG4gICAgLy8gLSBjbHItYXV0byhjbHItc3RlcCgkYnV0dG9uLXRoZW1lLCA0KSkgaXMgYWxyZWFkeSBpbnNpZGUgZGVmYXVsdCBpcy1zb2xpZCBidXR0b25cclxuICAgIGNvbG9yOiBpZihjbHItYXV0bygkY29sb3IpICE9IGNsci1hdXRvKCRhY3RpdmUtZGVmYXVsdCksIGNsci1hdXRvKCRhY3RpdmUtYmFja2dyb3VuZCksIG51bGwpO1xyXG4gICAgQGlmICRkZXNpZ24tc29saWQtZWxzZS1ncmFkaWVudHMge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWN0aXZlLWJhY2tncm91bmQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmLmlzLWxvYWRpbmcge1xyXG4gICAgLy8gdG8gYXZvaWQgYWRkaW5nIGV4dHJhIGNvbG9yIG92ZXJyaWRlXHJcbiAgICAvLyAtIGNsci1hdXRvKCRidXR0b24tdGhlbWUpIGlzIGFscmVhZHkgaW5zaWRlIGRlZmF1bHQgaXMtc29saWQgYnV0dG9uXHJcbiAgICBAaWYgY2xyLWF1dG8oJGNvbG9yKSAhPSBjbHItYXV0bygkYnV0dG9uLXRoZW1lKSB7XHJcbiAgICAgIEBpbmNsdWRlIGxvYWRpbmctc3Bpbm5lci1jb2xvcihjbHItYXV0bygkY29sb3IpKTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIG91dGxpbmUgZGVzaWduIHZhcmlhbnRcclxuQG1peGluIGJ1dHRvbi1kZXNpZ24tb3V0bGluZS12YXJpYW50KCRjb2xvcikge1xyXG4gICRhY3RpdmUtYm9yZGVyOiBjbHItc3RlcCgkY29sb3IsIDQpO1xyXG5cclxuICBAaW5jbHVkZSBob3ZlciB7XHJcbiAgICBib3JkZXItY29sb3I6ICRjb2xvcjtcclxuICAgIGJveC1zaGFkb3c6IGJveC1zaGFkb3coJGJ1dHRvbi1mb2N1cy1ib3hzaGFkb3cgcmdiYSgkY29sb3IsIC41KSk7XHJcbiAgfVxyXG5cclxuICBAaW5jbHVkZSBmb2N1cyB7XHJcbiAgICBib3JkZXItY29sb3I6ICRjb2xvcjtcclxuICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgfVxyXG5cclxuICBAaW5jbHVkZSBhY3RpdmUge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAkYWN0aXZlLWJvcmRlcjtcclxuICAgIGNvbG9yOiAkYWN0aXZlLWJvcmRlcjtcclxuICB9XHJcbn1cclxuXHJcbi8vIG1pbmltYWwgZGVzaWduIHZhcmlhbnRcclxuQG1peGluIGJ1dHRvbi1kZXNpZ24tbWluaW1hbC12YXJpYW50KCRjb2xvcikge1xyXG4gICRhY3RpdmUtYm9yZGVyOiBjbHItc3RlcCgkY29sb3IsIDQpO1xyXG5cclxuICBAaW5jbHVkZSBob3Zlci1mb2N1cyB7XHJcbiAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgQGluY2x1ZGUgYmVmb3JlIHtcclxuICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQGluY2x1ZGUgYWN0aXZlIHtcclxuICAgIGNvbG9yOiAkYWN0aXZlLWJvcmRlcjtcclxuICAgIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6ICRhY3RpdmUtYm9yZGVyO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJi5pcy1sb2FkaW5nIHtcclxuICAgIEBpbmNsdWRlIGxvYWRpbmctc3Bpbm5lci1jb2xvcigkY29sb3IpO1xyXG4gIH1cclxufVxyXG4iLCIvL1xyXG4vLyBCdXR0b24gU2V0dGluZ3NcclxuLy9cclxuXHJcbi8vXHJcbi8vIEluaGVyaXRcclxuLy9cclxuJGJ1dHRvbi1mb2N1cy1ib3hzaGFkb3c6ICAgICAgICAgICAgICAgICAgICAgICAgICRjb250cm9scy1mb2N1cy1ib3hzaGFkb3cgIWRlZmF1bHQ7XHJcblxyXG4kYnV0dG9uLWlzY2lyY2xlLXNpemU6ICAgICAgICAgICAgICAgICAgICAgICAgICAgMi4zNWVtICFkZWZhdWx0O1xyXG5cclxuLy9cclxuLy8gU2V0dGluZ1xyXG4vL1xyXG4kYnV0dG9uLXRoZW1lOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbnRyb2xzLXRoZW1lICFkZWZhdWx0O1xyXG4kYnV0dG9uLXRoZW1lLWxpZ2h0OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbnRyb2xzLXRoZW1lLWxpZ2h0ICFkZWZhdWx0O1xyXG4kYnV0dG9uLXRyYW5zaXRpb24tbWluaW1hbC1iZWZvcmU6ICAgICAgICAgICAgICAgd2lkdGgsIGJvcmRlci1ib3R0b20tY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kYnV0dG9uLWRpc2FibGVkLWJhY2tncm91bmQ6ICAgICAgICAgICAgICAgICAgICAgJGNvbnRyb2xzLWRpc2FibGVkLWJhY2tncm91bmQgIWRlZmF1bHQ7XHJcbiIsIi8vXHJcbi8vIEZpbGUgQ29udHJvbFxyXG4vL1xyXG4uY29udHJvbCB7XHJcbiAgPiAuZmlsZSB7XHJcbiAgICBAZXh0ZW5kICVjb250cm9scy1oaWRlO1xyXG5cclxuICAgIH4gLmxhYmVsIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMDsgLy8gb3ZlcnJpZGUgbGFiZWwgc3R5bGUgaW5zaWRlIGNvbnRyb2xcclxuICAgIH1cclxuXHJcbiAgICAvLyB3ZSBkb24ndCBzdHlsZSBmaWxlIGlucHV0cyBsYWJlbCBpbnRlbnRpb25hbGx5IHRvIGFsbG93IHVzZXJzIHRvIHN0eWxlIHRoZW0gYXMgdGhleSB3YW50XHJcbiAgICAvL1xyXG4gICAgLy8gRS5nIHRoZXkgY2FuIHN0eWxlIHRoZW0gdXNpbmcgLmlucHV0IGNsYXNzIHRvIG1ha2UgaXQgbG9vayBsaWtlIGlucHV0IHdpdGggdGV4dCBpbnNpZGUgb3JcclxuICAgIC8vIG1ha2UgdGhlbSBsb29rIGxpa2UgYnV0dG9uIHdpdGggLmJ0biBjbGFzcyBhbmQgaXRzIG1vZGlmaWVyc1xyXG5cclxuICAgIC8vIFNuaXBwZXQ6IGZpbGUgdXBsb2FkIGFzIEJ1dHRvblxyXG4gICAgLy9cclxuICAgIC8vIDxkaXYgY2xhc3M9XCJjb250cm9sXCI+XHJcbiAgICAvLyAgIDxpbnB1dCBjbGFzcz1cImZpbGVcIiBpZD1cImZpbGVcIiB0eXBlPVwiZmlsZVwiPlxyXG4gICAgLy8gICA8bGFiZWwgY2xhc3M9XCJsYWJlbCBidG4gaXMtc2xkIGlzLXByaW1hcnlcIiBmb3I9XCJmaWxlXCI+XHJcbiAgICAvLyAgICAgPGRpdiBjbGFzcz1cImljb24gaXMtbGVmdFwiPjxpIGNsYXNzPVwiZmFzIGZhLWZpbGUtdXBsb2FkXCI+PC9pPjwvZGl2PlxyXG4gICAgLy8gICAgIFVwbG9hZFxyXG4gICAgLy8gICA8L2xhYmVsPlxyXG4gICAgLy8gPC9kaXY+XHJcblxyXG4gICAgLy8gU25pcHBldDogZmlsZSB1cGxvYWQgYXMgSW5wdXQgd2l0aCBidXR0b25cclxuICAgIC8vIGh0dHBzOi8vanNmaWRkbGUubmV0L2FzaGZhaGFuL2pjb2UybnlnL1xyXG4gICAgLy9cclxuICAgIC8vIEhUTUw6XHJcbiAgICAvLyA8ZGl2IGNsYXNzPVwiZ3JvdXBcIj5cclxuICAgIC8vICAgPGRpdiBjbGFzcz1cImNvbnRyb2xcIj5cclxuICAgIC8vICAgICA8aW5wdXQgY2xhc3M9XCJmaWxlXCIgaWQ9XCJmaWxlXCIgdHlwZT1cImZpbGVcIj5cclxuICAgIC8vICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbCBpbnB1dFwiIGZvcj1cImZpbGVcIj5cclxuICAgIC8vICAgICAgIFVwbG9hZCBGaWxlXHJcbiAgICAvLyAgICAgPC9sYWJlbD5cclxuICAgIC8vICAgPC9kaXY+XHJcbiAgICAvLyAgIDxidXR0b24gY2xhc3M9XCJidG4gaXMtb3V0IGlzLXByaW1hcnlcIj5cclxuICAgIC8vICAgICA8ZGl2IGNsYXNzPVwiaWNvbiBpcy1sZWZ0XCI+PGkgY2xhc3M9XCJmYXMgZmEtZmlsZS11cGxvYWRcIj48L2k+PC9kaXY+XHJcbiAgICAvLyAgICAgVXBsb2FkXHJcbiAgICAvLyAgIDwvYnV0dG9uPlxyXG4gICAgLy8gPC9kaXY+XHJcbiAgICAvL1xyXG4gICAgLy8gSmF2YSBTY3JpcHQgOiAob3B0aW9uYWwpIHRvIHVwZGF0ZSBsYWJlbCB0ZXh0IGZyb20gc2VsZWN0ZWQgZmlsZSB0byB1cGxvYWRcclxuICAgIC8vICQoXCJpbnB1dFt0eXBlPWZpbGVdXCIpLm9uY2hhbmdlID0gKCkgPT4ge1xyXG4gICAgLy8gICBpZiAoZWxlbWVudC5maWxlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAvLyAgICAgY29uc3QgbGFiZWwgPSAkKCdsYWJlbFtmb3I9XCInICsgJCh0aGlzKS5hdHRyKFwiaWRcIikgKyAnXCJdJyk7XHJcbiAgICAvLyAgICAgJChsYWJlbCkudGV4dChlbGVtZW50LmZpbGVzWzBdLm5hbWUpO1xyXG4gICAgLy8gICB9XHJcbiAgICAvLyB9O1xyXG5cclxuICAgIC8vIFNuaXBwZXQ6IGZpbGUgdXBsb2FkIGFzIGJ1dHRvbiB3aXRoIElucHV0IGluc2lkZSBpdFxyXG4gICAgLy9cclxuICAgIC8vIDxkaXYgY2xhc3M9XCJjb250cm9sXCI+XHJcbiAgICAvLyAgIDxpbnB1dCBjbGFzcz1cImZpbGVcIiBpZD1cImZpbGVcIiB0eXBlPVwiZmlsZVwiIHJlcXVpcmVkPlxyXG4gICAgLy8gICA8bGFiZWwgY2xhc3M9XCJsYWJlbCBidG4gaXMtc2xkIGlzLXByaW1hcnlcIiBmb3I9XCJmaWxlXCI+XHJcbiAgICAvLyAgICAgPGRpdiBjbGFzcz1cIm1iLTVcIj5cclxuICAgIC8vICAgICAgIDxkaXYgY2xhc3M9XCJpY29uIGlzLWxlZnRcIj48aSBjbGFzcz1cImZhciBmYS1jb2ZmZWVcIj48L2k+PC9kaXY+XHJcbiAgICAvLyAgICAgICBVcGxvYWRcclxuICAgIC8vICAgICA8L2Rpdj5cclxuICAgIC8vICAgICA8ZGl2IGNsYXNzPVwiZmlsZW5hbWUgaW5wdXRcIj5cclxuICAgIC8vICAgICAgIEZpbGUgTmFtZVxyXG4gICAgLy8gICAgIDwvZGl2PlxyXG4gICAgLy8gICA8L2xhYmVsPlxyXG4gICAgLy8gPC9kaXY+XHJcbiAgICAvL1xyXG4gICAgLy8gSmF2YSBTY3JpcHQgOiAob3B0aW9uYWwpIHRvIHVwZGF0ZSBsYWJlbCB0ZXh0IGZyb20gc2VsZWN0ZWQgZmlsZSB0byB1cGxvYWRcclxuICAgIC8vICQoXCJpbnB1dFt0eXBlPWZpbGVdXCIpLm9uY2hhbmdlID0gKCkgPT4ge1xyXG4gICAgLy8gICAgIGlmIChlbGVtZW50LmZpbGVzLmxlbmd0aCA+IDApIHtcclxuICAgIC8vICAgICAgIGNvbnN0IGxhYmVsID0gJCgnLmZpbGVuYW1lJyk7XHJcbiAgICAvLyAgICAgICAkKGxhYmVsKS50ZXh0KGVsZW1lbnQuZmlsZXNbMF0ubmFtZSk7XHJcbiAgICAvLyAgIH07XHJcbiAgICAvLyB9O1xyXG4gIH1cclxufVxyXG5cclxuLy8gZm9ybSB2YWxpZGF0aW9uIHN0eWxlXHJcbi5pcy12YWxpZGF0ZWQgLmZpbGU6cmVxdWlyZWQge1xyXG4gICY6dmFsaWQgfiAuaW5wdXQubGFiZWwge1xyXG4gICAgQGV4dGVuZCAuaW5wdXQuaXMtdmFsaWQ7XHJcbiAgICBAZXh0ZW5kIC5pbnB1dC5pcy12YWxpZC5oYXMtaWNvbjtcclxuICB9XHJcblxyXG4gICY6aW52YWxpZCB+IC5pbnB1dC5sYWJlbCB7XHJcbiAgICBAZXh0ZW5kIC5pbnB1dC5pcy1lcnJvcjtcclxuICAgIEBleHRlbmQgLmlucHV0LmlzLWVycm9yLmhhcy1pY29uO1xyXG4gIH1cclxufVxyXG4iLCIvL1xyXG4vLyBSYWRpbyBDb250cm9sXHJcbi8vXHJcbi5jb250cm9sIHtcclxuICA+IC5yYWRpbyB7XHJcbiAgICBAZXh0ZW5kICVjb250cm9scy1oaWRlO1xyXG4gICAgQGV4dGVuZCAlY29udHJvbHMtbGFiZWw7XHJcblxyXG4gICAgJjpjaGVja2VkIHtcclxuICAgICAgfiAubGFiZWwge1xyXG4gICAgICAgIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICAgICAgICBib3JkZXItd2lkdGg6ICRyYWRpby1jaGVja2VkLWJvcmRlcndpZHRoO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGNvbnRyb2xzLWxhYmVsLWJhY2tncm91bmQ7IC8vIG92ZXJyaWRlIGNvbnRyb2xzLWxhYmVsIGFjdGl2ZSBhbmQgY2hlY2tlZCBzdGF0ZSBwcm9wZXJ0eVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIH4gLmxhYmVsIHtcclxuICAgICAgQGluY2x1ZGUgYmVmb3JlIHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiBib3JkZXItcmFkaXVzKCRib3JkZXJyYWRpdXMtY2lyY2xlLCAwKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIvL1xyXG4vLyBSYWRpb1xyXG4vL1xyXG5cclxuLy9cclxuLy8gU2V0dGluZ1xyXG4vL1xyXG4kcmFkaW8tY2hlY2tlZC1ib3JkZXJ3aWR0aDogICAgICAgICAgICAgIC4zNWVtICFkZWZhdWx0O1xyXG4iLCIvL1xyXG4vLyBDaGVja2JveCBDb250cm9sXHJcbi8vXHJcbi5jb250cm9sIHtcclxuICA+IC5jaGVja2JveCB7XHJcbiAgICBAZXh0ZW5kICVjb250cm9scy1oaWRlO1xyXG4gICAgQGV4dGVuZCAlY29udHJvbHMtbGFiZWw7XHJcblxyXG4gICAgJjpjaGVja2VkIHtcclxuICAgICAgfiAubGFiZWwge1xyXG4gICAgICAgIEBpbmNsdWRlIGFmdGVyIHtcclxuICAgICAgICAgIHRvcDogJGNoZWNrYm94LWNoZWNrZWQtYXJyb3ctdG9wO1xyXG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkgcm90YXRlKDQ1ZGVnKTtcclxuICAgICAgICAgIHdpZHRoOiAkY2hlY2tib3gtY2hlY2tlZC1hcnJvdy1zaXplIC8gMjtcclxuICAgICAgICAgIGhlaWdodDogJGNoZWNrYm94LWNoZWNrZWQtYXJyb3ctc2l6ZTtcclxuICAgICAgICAgIGJvcmRlcjogJGNoZWNrYm94LWNoZWNrZWQtYXJyb3ctYm9yZGVyd2lkdGggc29saWQgJGNoZWNrYm94LWNoZWNrZWQtYXJyb3ctY29sb3I7XHJcbiAgICAgICAgICBib3JkZXItdG9wLXdpZHRoOiAwO1xyXG4gICAgICAgICAgYm9yZGVyLWxlZnQtd2lkdGg6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJjppbmRldGVybWluYXRlIHtcclxuICAgICAgfiAubGFiZWwge1xyXG4gICAgICAgIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICAgICAgICBib3JkZXItY29sb3I6IGN1cnJlbnRDb2xvcjtcclxuICAgICAgICAgIGJhY2tncm91bmQ6IGN1cnJlbnRDb2xvcjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIGFmdGVyIHtcclxuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICB0b3A6IDUwJTtcclxuICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xyXG4gICAgICAgICAgd2lkdGg6ICRjaGVja2JveC1pbmRldGVybWluYXRlLXdpZHRoO1xyXG4gICAgICAgICAgaGVpZ2h0OiAkY2hlY2tib3gtaW5kZXRlcm1pbmF0ZS1oZWlnaHQ7XHJcbiAgICAgICAgICBiYWNrZ3JvdW5kOiAkY2hlY2tib3gtaW5kZXRlcm1pbmF0ZS1iYWNrZ3JvdW5kO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIH4gLmxhYmVsIHtcclxuICAgICAgQGluY2x1ZGUgYWZ0ZXIge1xyXG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIGxlZnQ6ICRjb250cm9scy1sYWJlbC1iZWZvcmUtc2l6ZSAvIDI7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLy9cclxuLy8gQ2hlY2tib3hcclxuLy9cclxuXHJcbi8vXHJcbi8vIFNldHRpbmdcclxuLy9cclxuJGNoZWNrYm94LWNoZWNrZWQtYXJyb3ctc2l6ZTogICAgICAgICAgICAgICAgICAgICRjb250cm9scy1sYWJlbC1iZWZvcmUtc2l6ZSAvIDIgIWRlZmF1bHQ7XHJcbiRjaGVja2JveC1jaGVja2VkLWFycm93LXRvcDogICAgICAgICAgICAgICAgICAgICA0NSUgIWRlZmF1bHQ7IC8vIHNsaWdodGx5IGxlc3NlciB0aGFuIDUwJSB0byBhbGlnbiBhcnJvdyBpbiBjZW50ZXIgYnkgc2hhcGVcclxuJGNoZWNrYm94LWNoZWNrZWQtYXJyb3ctYm9yZGVyd2lkdGg6ICAgICAgICAgICAgIC4xMmVtICFkZWZhdWx0O1xyXG4kY2hlY2tib3gtY2hlY2tlZC1hcnJvdy1jb2xvcjogICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG5cclxuJGNoZWNrYm94LWluZGV0ZXJtaW5hdGUtd2lkdGg6ICAgICAgICAgICAgICAgICAgICRjb250cm9scy1sYWJlbC1iZWZvcmUtc2l6ZSAvIDIgIWRlZmF1bHQ7XHJcbiRjaGVja2JveC1pbmRldGVybWluYXRlLWhlaWdodDogICAgICAgICAgICAgICAgICAycHggIWRlZmF1bHQ7XHJcbiRjaGVja2JveC1pbmRldGVybWluYXRlLWJhY2tncm91bmQ6ICAgICAgICAgICAgICAkY2hlY2tib3gtY2hlY2tlZC1hcnJvdy1jb2xvciAhZGVmYXVsdDtcclxuIiwiLy9cclxuLy8gUmFuZ2UgQ29udHJvbFxyXG4vL1xyXG5cclxuLnJhbmdlIHtcclxuICBAZXh0ZW5kICVjb250cm9scztcclxuXHJcbiAgZGlzcGxheTogYmxvY2s7IC8vIG92ZXJyaWRlICVjb250cm9scyBzdHlsZVxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMS41ZW07IC8vIG1hdGNoIGhlaWdodCB3aXRoIG90aGVyIGNvbnRyb2xzIGxpa2UgY2hlY2tib3gsIHN3aXRjaCwgcmFuZ2VcclxuICBwYWRkaW5nOiAwOyAvLyBvdmVycmlkZSAlY29udHJvbHMgc3R5bGVcclxuICAvLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJvcGVydHktbm8tdmVuZG9yLXByZWZpeFxyXG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcclxuICAvLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJvcGVydHktbm8tdmVuZG9yLXByZWZpeFxyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICBhcHBlYXJhbmNlOiBub25lO1xyXG5cclxuICBAaW5jbHVkZSBmb2N1cyB7XHJcbiAgICBvdXRsaW5lOiAwO1xyXG4gIH1cclxuXHJcbiAgLy8gTm90ZSA6IFVzaW5nIE1peGluIGluc3RlYWQgb2YgcGxhY2Vob2xkZXIgdG8gc3BsaXQgc3R5bGVzIGFjcm9zcyBtdWx0aXBsZSBydWxlc2V0cyB0byBoYXZlIGFuIGVmZmVjdC5cclxuXHJcbiAgLy8gVGh1bWJcclxuICAmOjotd2Via2l0LXNsaWRlci10aHVtYiB7XHJcbiAgICBAaW5jbHVkZSByYW5nZS10aHVtYjtcclxuICB9XHJcblxyXG4gICY6Oi1tb3otcmFuZ2UtdGh1bWIge1xyXG4gICAgQGluY2x1ZGUgcmFuZ2UtdGh1bWI7XHJcbiAgfVxyXG5cclxuICAmOjotbXMtdGh1bWIge1xyXG4gICAgQGluY2x1ZGUgcmFuZ2UtdGh1bWI7XHJcbiAgfVxyXG5cclxuICBAaW5jbHVkZSBob3ZlciB7XHJcbiAgICAmOjotd2Via2l0LXNsaWRlci10aHVtYiB7XHJcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoJHJhbmdlLXRodW1iLWhvdmVyLWZvY3VzLXNjYWxlKTtcclxuICAgICAgYm9yZGVyLXdpZHRoOiAkcmFuZ2UtdGh1bWItaG92ZXItZm9jdXMtYm9yZGVyd2lkdGg7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6LW1vei1yYW5nZS10aHVtYiB7XHJcbiAgICAgIHRyYW5zZm9ybTogc2NhbGUoJHJhbmdlLXRodW1iLWhvdmVyLWZvY3VzLXNjYWxlKTtcclxuICAgICAgYm9yZGVyLXdpZHRoOiAkcmFuZ2UtdGh1bWItaG92ZXItZm9jdXMtYm9yZGVyd2lkdGg7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6LW1zLXRodW1iIHtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgkcmFuZ2UtdGh1bWItaG92ZXItZm9jdXMtc2NhbGUpO1xyXG4gICAgICBib3JkZXItd2lkdGg6ICRyYW5nZS10aHVtYi1ob3Zlci1mb2N1cy1ib3JkZXJ3aWR0aDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIFRyYWNrXHJcbiAgJjo6LW1vei1yYW5nZS10cmFjayB7XHJcbiAgICBAaW5jbHVkZSByYW5nZS10cmFjaztcclxuICB9XHJcblxyXG4gICY6Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrIHtcclxuICAgIEBpbmNsdWRlIHJhbmdlLXRyYWNrO1xyXG4gIH1cclxuXHJcbiAgJjo6LW1zLXRyYWNrIHtcclxuICAgIGNvbG9yOiB0cmFuc3BhcmVudDsgLy8gcmVtb3ZlIHN0cmlwcGVkIGxpbmVcclxuICAgIEBpbmNsdWRlIHJhbmdlLXRyYWNrO1xyXG4gIH1cclxuXHJcbiAgJjo6LW1zLWZpbGwtbG93ZXIge1xyXG4gICAgYmFja2dyb3VuZDogJGNvbnRyb2xzLXRoZW1lO1xyXG4gIH1cclxuXHJcbiAgQGluY2x1ZGUgZm9jdXMtYWN0aXZlIHtcclxuICAgICY6Oi1tb3otcmFuZ2UtdHJhY2sge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6LXdlYmtpdC1zbGlkZXItcnVubmFibGUtdHJhY2sge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjdXJyZW50Q29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgJjo6LW1zLWZpbGwtbG93ZXIge1xyXG4gICAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgICAgYmFja2dyb3VuZDogY3VycmVudENvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQGluY2x1ZGUgZGlzYWJsZWQge1xyXG4gICAgQGV4dGVuZCAlY29udHJvbHMtZGlzYWJsZWQ7XHJcbiAgfVxyXG59XHJcblxyXG4vL1xyXG4vLyBDb2xvciB2YXJpYW50c1xyXG4vL1xyXG5AZWFjaCAkY29sb3IsICR2YWx1ZSBpbiAkdGhlbWUtY29sb3JzIHtcclxuICAucmFuZ2UuaXMtI3skY29sb3J9IHtcclxuICAgIGNvbG9yOiAkdmFsdWU7XHJcbiAgfVxyXG59XHJcbiIsIkBtaXhpbiByYW5nZS10cmFjaygpIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAkcmFuZ2UtdHJhY2staGVpZ2h0O1xyXG4gIG1hcmdpbjogMDtcclxuICBib3JkZXI6IDA7XHJcbiAgYm9yZGVyLXJhZGl1czogYm9yZGVyLXJhZGl1cygkYm9yZGVycmFkaXVzLXBpbGwsIDApO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICRyYW5nZS10cmFjay1iYWNrZ3JvdW5kO1xyXG4gIGJveC1zaGFkb3c6IGJveC1zaGFkb3coJHJhbmdlLXRyYWNrLWJveHNoYWRvdyk7XHJcbiAgQGluY2x1ZGUgdHJhbnNpdGlvbigkcmFuZ2UtdHJhY2stdHJhbnNpdGlvbik7XHJcbn1cclxuXHJcbkBtaXhpbiByYW5nZS10aHVtYigpIHtcclxuICB3aWR0aDogJHJhbmdlLXRodW1iLXdpZHRoO1xyXG4gIGhlaWdodDogJHJhbmdlLXRodW1iLWhlaWdodDtcclxuICBib3JkZXI6ICRyYW5nZS10aHVtYi1ib3JkZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogYm9yZGVyLXJhZGl1cygkYm9yZGVycmFkaXVzLWNpcmNsZSwgMCk7XHJcbiAgLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHByb3BlcnR5LW5vLXZlbmRvci1wcmVmaXhcclxuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHByb3BlcnR5LW5vLXZlbmRvci1wcmVmaXhcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgYXBwZWFyYW5jZTogbm9uZTtcclxuICBiYWNrZ3JvdW5kOiAkcmFuZ2UtdGh1bWItYmFja2dyb3VuZDtcclxuICBib3gtc2hhZG93OiBib3gtc2hhZG93KCRyYW5nZS10aHVtYi1ib3hzaGFkb3cpO1xyXG4gIEBpbmNsdWRlIHRyYW5zaXRpb24oJHJhbmdlLXRodW1iLXRyYW5zaXRpb24pO1xyXG59XHJcbiIsIi8vXHJcbi8vIFJhbmdlXHJcbi8vXHJcblxyXG4vL1xyXG4vLyBJbmhlcml0XHJcbi8vXHJcbiRyYW5nZS10aHVtYi1ob3Zlci1mb2N1cy1ib3JkZXJ3aWR0aDogICAgICAgICAgICAgICAgICAgJGJvcmRlcndpZHRoLXdpZGUgIWRlZmF1bHQ7XHJcblxyXG4vL1xyXG4vLyBTZXR0aW5nXHJcbi8vXHJcbiRyYW5nZS10cmFjay1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLjIycmVtICFkZWZhdWx0O1xyXG4kcmFuZ2UtdHJhY2stYmFja2dyb3VuZDogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRjb250cm9scy10aGVtZS1saWdodCAhZGVmYXVsdDtcclxuJHJhbmdlLXRyYWNrLWJveHNoYWRvdzogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnNldCAwIDFweCAycHggcmdiYShjbHItYXV0bygkcmFuZ2UtdHJhY2stYmFja2dyb3VuZCksIC4yKSAhZGVmYXVsdDtcclxuJHJhbmdlLXRyYWNrLXRyYW5zaXRpb246ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kICFkZWZhdWx0O1xyXG5cclxuJHJhbmdlLXRodW1iLXdpZHRoOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxZW0gIWRlZmF1bHQ7XHJcbiRyYW5nZS10aHVtYi1iYWNrZ3JvdW5kOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHdoaXRlICFkZWZhdWx0O1xyXG4kcmFuZ2UtdGh1bWItYm9yZGVyOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDFweCBzb2xpZCBjdXJyZW50Q29sb3IgIWRlZmF1bHQ7XHJcbiRyYW5nZS10aHVtYi1ib3hzaGFkb3c6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMXB4IDFweCAycHggMCByZ2JhKDAsIDAsIDAsIC4xNSkgIWRlZmF1bHQ7XHJcbiRyYW5nZS10aHVtYi10cmFuc2l0aW9uOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLCBib3JkZXIgIWRlZmF1bHQ7XHJcblxyXG4vL1xyXG4vLyBEZXJpdmVkXHJcbi8vXHJcbiRyYW5nZS10aHVtYi1ob3Zlci1mb2N1cy1zY2FsZTogICAgICAgICAgICAgICAgICAgICAgICAgMS4xICFkZWZhdWx0O1xyXG4kcmFuZ2UtdGh1bWItaGVpZ2h0OiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyYW5nZS10aHVtYi13aWR0aCAhZGVmYXVsdDtcclxuIiwiLy9cclxuLy8gU3dpdGNoIENvbnRyb2xcclxuLy9cclxuLmNvbnRyb2wge1xyXG4gID4gLnN3aXRjaCB7XHJcbiAgICBAZXh0ZW5kICVjb250cm9scy1oaWRlO1xyXG4gICAgQGV4dGVuZCAlY29udHJvbHMtbGFiZWw7XHJcblxyXG4gICAgJjpjaGVja2VkIHtcclxuICAgICAgfiAubGFiZWwge1xyXG4gICAgICAgIEBpbmNsdWRlIGFmdGVyIHtcclxuICAgICAgICAgIGxlZnQ6ICRzd2l0Y2gtd2lkdGggLSAkc3dpdGNoLWNpcmNsZS1zaXplO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHN3aXRjaC1hY3RpdmUtY2lyY2xlLWJhY2tncm91bmQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgfiAubGFiZWwge1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6ICRzd2l0Y2gtbGFiZWwtcGFkZGluZ2xlZnQ7XHJcbiAgICAgIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICAgICAgd2lkdGg6ICRzd2l0Y2gtd2lkdGg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogYm9yZGVyLXJhZGl1cygkYm9yZGVycmFkaXVzLXBpbGwsIDApO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBAaW5jbHVkZSBhZnRlciB7XHJcbiAgICAgICAgY29udGVudDogXCJcIjtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgbGVmdDogMDtcclxuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSkgc2NhbGUoJHN3aXRjaC1jaXJjbGUtdHJhbmZvcm0tc2NhbGUpO1xyXG4gICAgICAgIHdpZHRoOiAkc3dpdGNoLWNpcmNsZS1zaXplO1xyXG4gICAgICAgIGhlaWdodDogJHN3aXRjaC1jaXJjbGUtc2l6ZTtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiBib3JkZXItcmFkaXVzKCRib3JkZXJyYWRpdXMtY2lyY2xlLCAwKTtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAkc3dpdGNoLWNpcmNsZS1ib3JkZXJjb2xvcjtcclxuICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKCRzd2l0Y2gtY2lyY2xlLXRyYW5zaXRpb24pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi8vXHJcbi8vIFN3aXRjaFxyXG4vL1xyXG5cclxuLy9cclxuLy8gU2V0dGluZ1xyXG4vL1xyXG4kc3dpdGNoLXdpZHRoOiAgICAgICAgICAgICAgICAgICAgICAgICAgJGNvbnRyb2xzLWxhYmVsLWJlZm9yZS1zaXplICogMiAhZGVmYXVsdDtcclxuXHJcbiRzd2l0Y2gtY2lyY2xlLXNpemU6ICAgICAgICAgICAgICAgICAgICBjb252ZXJ0LXVuaXQoMTZweCwgZW0pICFkZWZhdWx0O1xyXG4kc3dpdGNoLWNpcmNsZS10cmFuZm9ybS1zY2FsZTogICAgICAgICAgLjcgIWRlZmF1bHQ7XHJcbiRzd2l0Y2gtY2lyY2xlLXRyYW5zaXRpb246ICAgICAgICAgICAgICBsZWZ0IC4ycyBlYXNlLWluLW91dCwgYmFja2dyb3VuZC1jb2xvciAuMnMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XHJcbiRzd2l0Y2gtY2lyY2xlLWJvcmRlcmNvbG9yOiAgICAgICAgICAgICAkY29udHJvbHMtbGFiZWwtYm9yZGVyY29sb3IgIWRlZmF1bHQ7XHJcblxyXG4kc3dpdGNoLWFjdGl2ZS1jaXJjbGUtYmFja2dyb3VuZDogICAgICAgJGNvbnRyb2xzLWxhYmVsLWJhY2tncm91bmQgIWRlZmF1bHQ7XHJcblxyXG4vL1xyXG4vLyBEZXJpdmVkXHJcbi8vXHJcbiRzd2l0Y2gtbGFiZWwtcGFkZGluZ2xlZnQ6ICAgICAgICAgICAgICAkY29udHJvbHMtbGFiZWwtcGFkZGluZ2xlZnQgKyAkc3dpdGNoLXdpZHRoIC8gMiAhZGVmYXVsdDtcclxuIiwiLy9cclxuLy8gTWVudVxyXG4vL1xyXG5cclxuLm1lbnUge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBhZGRpbmc6IDA7IC8vIHJlc2V0IGxpc3Qgc3R5bGVcclxuICBtYXJnaW46IDA7IC8vIHJlc2V0IGxpc3Qgc3R5bGVcclxuICBAaW5jbHVkZSBmb250c2l6ZSgkZm9udHNpemUtbm9ybWFsKTtcclxuICBAaW5jbHVkZSBtZW51LXZhcmlhbnQoJGNvbnRyb2xzLXRoZW1lKTsgLy8gZGVmYXVsdCBNZW51IHZhcmlhbnQgc3R5bGVzXHJcbn1cclxuXHJcbi8vXHJcbi8vIE1lbnUgaXRlbXNcclxuLy9cclxuLm1lbnUtaXRlbSB7XHJcbiAgQGV4dGVuZCAlY29udHJvbHM7XHJcbiAgZGlzcGxheTogYmxvY2s7IC8vIHJlc2V0IGJ1dHRvbiBzdHlsZXNcclxuICB3aWR0aDogMTAwJTsgLy8gcmVzZXQgYnV0dG9uIHN0eWxlXHJcbiAgcGFkZGluZy1sZWZ0OiAkbmVzdGVkTWVudS1pbmRlbnQ7IC8vIGluZGVudCAubWVudS1pdGVtIGluIC5tZW51XHJcbiAgYm9yZGVyOiAwOyAvLyByZXNldCBidXR0b24gc3R5bGUgLy8gb3ZlcnJpZGUgJWNvbnRyb2xzIHN0eWxlXHJcbiAgYm9yZGVyLXJhZGl1czogYm9yZGVyLXJhZGl1cygwKTsgLy8gb3ZlcnJpZGUgJWNvbnRyb2xzIHN0eWxlXHJcbiAgY29sb3I6IGluaGVyaXQ7IC8vIG92ZXJyaWRlICVjb250cm9scyBzdHlsZVxyXG4gIHRleHQtYWxpZ246IGluaGVyaXQ7IC8vIHJlc2V0IGJ1dHRvbiBzdHlsZVxyXG4gIEBpbmNsdWRlIGZvbnRzaXplKGluaGVyaXQpOyAvLyBvdmVycmlkZSAlY29udHJvbHMgc3R5bGVcclxuXHJcbiAgQGluY2x1ZGUgYmVmb3JlIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgYm9yZGVyLWxlZnQ6IDAgc29saWQ7XHJcbiAgICBib3JkZXItbGVmdC1jb2xvcjogaW5oZXJpdDtcclxuICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oJG1lbnUtaXRlbS1iZWZvcmUtdHJhbnNpdGlvbiwgYm9yZGVyLWNvbG9yIDFzIGN1YmljLWJlemllcigxLCAwLCAxLCAwKSk7IC8vIHJldGFpbiBib3JkZXItY29sb3IgdGlsbCBib3JkZXIgd2lkdGggYmUgMFxyXG4gIH1cclxuXHJcbiAgJjpub3QoLmFjdGl2ZSkge1xyXG4gICAgLy8gU3R5bGUgZm9jdXMgc3RhdGUgdG8gc2hvdyBlbGVtZW50cyBpbiB0aGVyZSBmb2N1cyBzdGF0ZSBsaWtlIGJ1dHRvbiBvciBhbmNob3JzIHdpdGggaHJlZlxyXG4gICAgQGluY2x1ZGUgaG92ZXItZm9jdXMge1xyXG4gICAgICBAaW5jbHVkZSBiZWZvcmUge1xyXG4gICAgICAgIEBpbmNsdWRlIHRyYW5zaXRpb24oJG1lbnUtaXRlbS1iZWZvcmUtdHJhbnNpdGlvbik7IC8vIHJlbW92ZSBib3JkZXItY29sb3IgYW5kIGNvbG9yIHRyYW5zaXRpb24gdG8gcXVpY2tseSBjaGFuZ2UgYm9yZGVyLWNvbG9yIGFzIGJvcmRlciBhcHBlYXJcclxuICAgICAgICBib3JkZXItbGVmdC13aWR0aDogJG1lbnUtaXRlbS1iZWZvcmUtYm9yZGVyd2lkdGg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBpbmNsdWRlIGhvdmVyIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgLy8gcmVzZXQgYW5jaG9yIGRlY29yYXRpb25cclxuICB9XHJcblxyXG4gIEBpbmNsdWRlIGZvY3VzIHtcclxuICAgIG91dGxpbmU6IDA7IC8vIHJlc2V0IGJ1dHRvbiBzdHlsZVxyXG4gIH1cclxuXHJcbiAgQGluY2x1ZGUgbm90LWRpc2FibGVkIHtcclxuICAgIEBleHRlbmQgJWN1cnNvci1wb2ludGVyOyAvLyBhZGQgXCJoYW5kXCIgY3Vyc29yIHRvIG5vbi1kaXNhYmxlZCBidXR0b24gZWxlbWVudHMuXHJcbiAgfVxyXG5cclxuICBAaW5jbHVkZSBkaXNhYmxlZCB7XHJcbiAgICBAZXh0ZW5kICVjb250cm9scy1kaXNhYmxlZDtcclxuICB9XHJcbn1cclxuXHJcbi8vXHJcbi8vIENvbG9yIHZhcmlhbnRzXHJcbi8vXHJcbkBlYWNoICRjb2xvciwgJHZhbHVlIGluICR0aGVtZS1jb2xvcnMge1xyXG4gIC5tZW51LmlzLSN7JGNvbG9yfSB7XHJcbiAgICBAaW5jbHVkZSBtZW51LXZhcmlhbnQoJHZhbHVlKTtcclxuICB9XHJcbn1cclxuXHJcbi8vXHJcbi8vIE5lc3RlZCBNZW51XHJcbi8vXHJcbi8vIEltcGxlbWVudGF0aW9uIG9mIE5lc3RlZCBtZW51IGlzIG5vdCBpbmNsdWRlZCBhcyBpdCByZXF1aXJlcyBhIGJpdCBvZiBKYXZhU2NyaXB0XHJcbi8vIEZvbGxvd2luZyBKYXZhU2NyaXB0IENvZGUgaW1wbGVtZW50cyBuZXN0ZWQgTWVudSBpbnRlcmFjdGlvbiBhbmQgd29yayB3aXRoIG1ham9yIExhdGVzdCBCcm93c2Vyc1xyXG4vL1xyXG4vLyB2YXIgbWVudXRyaWdnZXJzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcIm1lbnUtdHJpZ2dlclwiKTtcclxuLy8gT2JqZWN0LmtleXMobWVudXRyaWdnZXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XHJcbi8vICAgbWVudXRyaWdnZXJzW2tdLm9uY2xpY2sgPSBmdW5jdGlvbiAoZSkge1xyXG4vLyAgICAgZS50YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZVwiKTtcclxuLy8gICB9O1xyXG4vLyB9KTtcclxuLy9cclxuXHJcbi8vIE5lc3RlZCBNZW51IFN1cHBvcnRcclxuLm1lbnUgPiAubWVudSB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgLy8gUHJldmVudCAubWVudS1pdGVtIGZyb20gZ29pbmcgb3V0c2l6ZSBtZW51IGFmdGVyIGFwcGx5aW5nIG1hcmdpbi1sZWZ0XHJcbiAgQGluY2x1ZGUgZm9udHNpemUoaW5oZXJpdCk7XHJcblxyXG4gIC8vIE5lc3RlZCBtZW51IGl0ZW1zXHJcbiAgPiAqIHtcclxuICAgIHBhZGRpbmctcmlnaHQ6ICRuZXN0ZWRNZW51LWluZGVudCArICRjb250cm9scy1wYWRkaW5nLXg7IC8vIGFkZCBwYWRkaW5nIHRvIHByZXZlbnQgY29udGVudCBmcm9tIGdvaW5nIG91dHNpZGUgbWVudSBhZnRlciBhcHBseWluZyBtYXJnaW4tbGVmdFxyXG4gICAgbWFyZ2luLWxlZnQ6ICRuZXN0ZWRNZW51LWluZGVudDsgLy8gaW5kZW50IG5lc3RlZCBtZW51IGl0ZW1zXHJcbiAgfVxyXG5cclxuICA+IC5tZW51IHtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDA7IC8vIHJlbW92ZSBwYWRkaW5nIG9uIG5lc3RlZCBtZW51XHJcbiAgfVxyXG5cclxuICA+IC5tZW51LXRyaWdnZXIge1xyXG4gICAgcGFkZGluZy1yaWdodDogJGNvbnRyb2xzLXBhZGRpbmcteDsgLy8gcmVzdG9yZSBwYWRkaW5nIHRvIGRlZmF1bHQgdmFsdWVcclxuICAgIG1hcmdpbi1sZWZ0OiAwOyAvLyBvdmVycmlkZSBzdHlsZSBmcm9tIG5lc3RlZCBtZW51IGl0ZW1zXHJcbiAgfVxyXG59XHJcblxyXG4vLyAubWVudS10cmlnZ2VyIE5lZWRzIHRvIGJlIEZpcnN0IGVsZW1lbnQgaW4gbmVzdGVkIG1lbnVcclxuLm1lbnUtdHJpZ2dlciB7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcblxyXG4gIEBpbmNsdWRlIGFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tbGVmdDogYXV0bzsgLy8gYWxpZ24gLm1lbnUtdHJpZ2dlciBjYXJldCB0byBlbmQgb2YgZmxleFxyXG4gICAgQGluY2x1ZGUgdHJpYW5nbGUoYm90dG9tLCAkbWVudS10cmlnZ2VyLWNhcmV0LXNpemUsICRtZW51LXRyaWdnZXItY2FyZXQtY29sb3IpO1xyXG4gIH1cclxuXHJcbiAgJi5hY3RpdmUge1xyXG4gICAgQGluY2x1ZGUgYWZ0ZXIge1xyXG4gICAgICB0cmFuc2Zvcm06IHNjYWxlKC0xKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIH4gKiB7XHJcbiAgICBAaW5jbHVkZSBhbmltYXRpb24oJG5lc3RlZE1lbnUtYW5pbWF0aW9ubmFtZSwgJG5lc3RlZE1lbnUtYW5pbWF0aW9uZHVyYXRpb24pO1xyXG4gIH1cclxuXHJcbiAgJjpub3QoLmFjdGl2ZSkge1xyXG4gICAgLy8gSGlkZSBldmVyeXRoaW5nIGVsc2UgaW5zaWRlIG1lbnVcclxuICAgIH4gKiB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi8vXHJcbi8vIE1lbnUgTWl4aW5cclxuLy9cclxuXHJcbi8vXHJcbi8vIFRoZW1lIFZhcmlhbnQgTWl4aW5cclxuLy9cclxuQG1peGluIG1lbnUtdmFyaWFudCgkY29sb3IpIHtcclxuICAubWVudS1pdGVtIHtcclxuICAgIC8vIFN0eWxlIGZvY3VzIHN0YXRlIHRvIHNob3cgZWxlbWVudHMgaXMgaW4gZm9jdXMgc3RhdGUgdXNpbmcgdGFiXHJcbiAgICBAaW5jbHVkZSBob3Zlci1mb2N1cyB7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogJGNvbG9yO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBjbHItc3RlcCgkY29sb3IsIC04KTtcclxuICAgIH1cclxuXHJcbiAgICAmLmFjdGl2ZSB7XHJcbiAgICAgIGNvbG9yOiBjbHItYXV0bygkY29sb3IpO1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3I7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiIsIi8vXHJcbi8vIE1lbnVcclxuLy9cclxuXHJcbi8vXHJcbi8vIGluaGVyaXRcclxuLy9cclxuXHJcbiRtZW51LXRyaWdnZXItY2FyZXQtc2l6ZTogICAgICAgICAgICAgICAgICRjb250cm9sLWZlZWRiYWNrLWFycm93LXNpemUgIWRlZmF1bHQ7XHJcblxyXG4kbWVudS1pdGVtLWJlZm9yZS1ib3JkZXJ3aWR0aDogICAgICAgICAgICAkYm9yZGVyd2lkdGgtd2lkZSAhZGVmYXVsdDtcclxuXHJcbi8vXHJcbi8vIFNldHRpbmdcclxuLy9cclxuJG1lbnUtdHJpZ2dlci1jYXJldC1jb2xvcjogICAgICAgICAgICAgICAgY3VycmVudENvbG9yICFkZWZhdWx0O1xyXG5cclxuJG1lbnUtaXRlbS1iZWZvcmUtdHJhbnNpdGlvbjogICAgICAgICAgICAgYm9yZGVyLXdpZHRoIC4xNXMgbGluZWFyICFkZWZhdWx0O1xyXG5cclxuJG5lc3RlZE1lbnUtaW5kZW50OiAgICAgICAgICAgICAgICAgICAgICAgJGNvbnRyb2xzLXBhZGRpbmcteCAqIDIgIWRlZmF1bHQ7XHJcbiRuZXN0ZWRNZW51LWFuaW1hdGlvbm5hbWU6ICAgICAgICAgICAgICAgIGZhZGVpbiAhZGVmYXVsdDtcclxuJG5lc3RlZE1lbnUtYW5pbWF0aW9uZHVyYXRpb246ICAgICAgICAgICAgLjNzICFkZWZhdWx0O1xyXG4iLCIvL1xyXG4vLyBCYXNpYyBTaGFwZXNcclxuLy9cclxuQG1peGluIHRyaWFuZ2xlKCRkaXJlY3Rpb246IGJvdHRvbSwgJHNpemU6IDZweCwgJGNvbG9yOiBjdXJyZW50Q29sb3IpIHtcclxuICAkZGlyZWN0aW9uLWludmVyc2UtbWFwOiAoXHJcbiAgICB0b3A6IGJvdHRvbSxcclxuICAgIHJpZ2h0OiBsZWZ0LFxyXG4gICAgYm90dG9tOiB0b3AsXHJcbiAgICBsZWZ0OiByaWdodFxyXG4gICk7XHJcblxyXG4gICRkaXJlY3Rpb24taW52ZXJzZTogbWFwLWdldCgkZGlyZWN0aW9uLWludmVyc2UtbWFwLCAkZGlyZWN0aW9uKTtcclxuXHJcbiAgYm9yZGVyOiAkc2l6ZSBzb2xpZCB0cmFuc3BhcmVudDtcclxuICBib3JkZXItI3skZGlyZWN0aW9uLWludmVyc2V9LWNvbG9yOiAkY29sb3I7XHJcbiAgYm9yZGVyLSN7JGRpcmVjdGlvbn06IDA7XHJcbn1cclxuIiwiLy9cclxuLy8gRHJvcGRvd25cclxuLy9cclxuXHJcbi5kcm9wZG93biB7XHJcbiAgQGV4dGVuZCAlcG9zaXRpb24tcmVsYXRpdmU7XHJcbiAgQGV4dGVuZCAlZGlzcGxheS1pbmxpbmVibG9jaztcclxuXHJcbiAgPiAubWVudSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDEwMCU7XHJcbiAgICB6LWluZGV4OiAkZHJvcGRvd24tbWVudS16aW5kZXg7XHJcbiAgICBkaXNwbGF5OiBub25lOyAvLyBIaWRlIG1lbnUgdG8gZGlzcGxheSBvdmVyIGludGVyYWN0aW9uXHJcbiAgICBtaW4td2lkdGg6ICRkcm9wZG93bi1tZW51LW1pbndpZHRoO1xyXG4gICAgcGFkZGluZzogJGRyb3Bkb3duLW1lbnUtcGFkZGluZy15IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAkZHJvcGRvd24tbWVudS1tYXJnaW47XHJcbiAgICBib3JkZXItcmFkaXVzOiBib3JkZXItcmFkaXVzKCk7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZHJvcGRvd24tbWVudS1iYWNrZ3JvdW5kO1xyXG4gICAgYm94LXNoYWRvdzogYm94LXNoYWRvdygkZHJvcGRvd24tbWVudS1ib3hzaGFkb3cpO1xyXG4gICAgQGluY2x1ZGUgZm9udHNpemUoaW5oZXJpdCk7XHJcbiAgICBAaW5jbHVkZSBhbmltYXRpb24oZmFkZWluLCAkbmVzdGVkTWVudS1hbmltYXRpb25kdXJhdGlvbik7XHJcbiAgfVxyXG5cclxuICAuZHJvcGRvd24ge1xyXG4gICAgd2lkdGg6IDEwMCU7IC8vIGV4cGVuZCBuZXN0ZWQgZHJvcGRvd24gYXZhaWxhYmxlIHNwYWNlXHJcbiAgfVxyXG5cclxuICAmOm5vdCguaXMtbWVnYSkge1xyXG4gICAgLm1lbnUtaXRlbSB7XHJcbiAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7IC8vIHByZXZlbnQgd3JhcHBpbmcgb2YgdGV4dFxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy8gaXRzIHJlY29tbWVuZGVkIHRvIHVzZSBKYXZhU2NyaXB0IGZvciBJbXBsZW1lbnRhdGlvbiBvZiBkcm9wZG93biBidXQgaXMgb3B0aW9uYWxcclxuLy8gRm9sbG93aW5nIEphdmFTY3JpcHQgQ29kZSBpbXBsZW1lbnRzIGRyb3Bkb3duIGludGVyYWN0aW9uIGFuZCB3b3JrIHdpdGggbWFqb3IgTGF0ZXN0IEJyb3dzZXJzXHJcbi8vXHJcbi8vIHZhciBkcm9wZG93bnRyaWdnZXJzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImRyb3Bkb3duLXRyaWdnZXJcIik7XHJcbi8vIE9iamVjdC5rZXlzKGRyb3Bkb3dudHJpZ2dlcnMpLmZvckVhY2goZnVuY3Rpb24gKGspIHtcclxuLy8gICBkcm9wZG93bnRyaWdnZXJzW2tdLm9uY2xpY2sgPSBmdW5jdGlvbiAoZSkge1xyXG4vLyAgICAgZS50YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZShcImFjdGl2ZVwiKTtcclxuLy8gICB9O1xyXG4vLyB9KTtcclxuLy9cclxuLmRyb3Bkb3duLXRyaWdnZXIge1xyXG4gIEBpbmNsdWRlIGZvbnRzaXplKGluaGVyaXQpO1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG5cclxuICBAaW5jbHVkZSBhZnRlciB7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKCRkcm9wZG93bi10cmlnZ2VyLWNhcmV0LXNpemUgLyAyKTsgLy8gdXNpbmcgdHJhbnNmb3JtIGluIGNvbWJpbmF0aW9uIHdpdGggbWFyZ2luLXJpZ2h0IHRvIG9mZnNldCB3aGVuIHBhcmVudCBlbGVtZW50IGhhcyBkaXNwbGF5IGlubGluZS1ibG9jaywgYmVjYXVzZSB3ZSBoYXZlIGFscmVhZHkgdXNlZCBtYXJnaW4tbGVmdCB2YWx1ZSBmb3IgZmxleCBwYXJlbnQgZWxlbWVudCBoYXZpbmcgZGlzcGxheSBmbGV4XHJcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7IC8vIGFsaWduIGF0IG1pZGRsZSB3aGVuIHBhcmVudCBlbGVtZW50IGhhcyBkaXNwbGF5IGZsZXggZS5nIC5tZW51LWl0ZW1cclxuICAgIG1hcmdpbi1yaWdodDogJGRyb3Bkb3duLXRyaWdnZXItY2FyZXQtc2l6ZSAvIDI7IC8vIHVzaW5nIHRyYW5zZm9ybSBpbiBjb21iaW5hdGlvbiB3aXRoIG1hcmdpbi1yaWdodCB0byBvZmZzZXQgd2hlbiBwYXJlbnQgZWxlbWVudCBoYXMgZGlzcGxheSBpbmxpbmUtYmxvY2ssIGJlY2F1c2Ugd2UgaGF2ZSBhbHJlYWR5IHVzZWQgbWFyZ2luLWxlZnQgdmFsdWUgZm9yIGZsZXggcGFyZW50IGVsZW1lbnQgaGF2aW5nIGRpc3BsYXkgZmxleFxyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87IC8vIGFsaWduIGF0IGVuZCB3aGVuIHBhcmVudCBlbGVtZW50IGhhcyBkaXNwbGF5IGZsZXggZS5nIC5tZW51LWl0ZW1cclxuICAgIEBpbmNsdWRlIHRyaWFuZ2xlKGJvdHRvbSwgJGRyb3Bkb3duLXRyaWdnZXItY2FyZXQtc2l6ZSwgJGRyb3Bkb3duLXRyaWdnZXItY2FyZXQtY29sb3IpO1xyXG4gIH1cclxuXHJcbiAgJi5hY3RpdmUgfiAubWVudSB7XHJcbiAgICBAZXh0ZW5kICVkaXNwbGF5LWJsb2NrOyAvLyBTaG93IG1lbnUgd2hlbiBhY3RpdmVcclxuICB9XHJcbn1cclxuXHJcbi8vXHJcbi8vIERyb3Bkb3duIG1lbnUgZGlyZWN0aW9uXHJcbi8vXHJcbi5kcm9wZG93bi5pcy10b3Age1xyXG4gID4gLm1lbnUge1xyXG4gICAgdG9wOiBhdXRvO1xyXG4gICAgYm90dG9tOiAxMDAlO1xyXG4gICAgbWFyZ2luOiAwIDAgJGRyb3Bkb3duLW1lbnUtbWFyZ2luIDA7XHJcbiAgfVxyXG5cclxuICA+IC5kcm9wZG93bi10cmlnZ2VyIHtcclxuICAgIEBpbmNsdWRlIGFmdGVyIHtcclxuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgtMSkgdHJhbnNsYXRlWCgtJGRyb3Bkb3duLXRyaWdnZXItY2FyZXQtc2l6ZSAvIDIpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmRyb3Bkb3duLmlzLXJpZ2h0IHtcclxuICA+IC5tZW51IHtcclxuICAgIHRvcDogMDtcclxuICAgIGxlZnQ6IDEwMCU7XHJcbiAgICBtYXJnaW46IDAgMCAwICRkcm9wZG93bi1tZW51LW1hcmdpbjtcclxuICB9XHJcblxyXG4gID4gLmRyb3Bkb3duLXRyaWdnZXIge1xyXG4gICAgQGluY2x1ZGUgYWZ0ZXIge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgyNzBkZWcpIHRyYW5zbGF0ZVkoJGRyb3Bkb3duLXRyaWdnZXItY2FyZXQtc2l6ZSAvIDIpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmRyb3Bkb3duLmlzLWxlZnQge1xyXG4gID4gLm1lbnUge1xyXG4gICAgdG9wOiAwO1xyXG4gICAgcmlnaHQ6IDEwMCU7XHJcbiAgICBtYXJnaW46IDAgJGRyb3Bkb3duLW1lbnUtbWFyZ2luIDAgMDtcclxuICB9XHJcblxyXG4gID4gLmRyb3Bkb3duLXRyaWdnZXIge1xyXG4gICAgQGluY2x1ZGUgYWZ0ZXIge1xyXG4gICAgICB0cmFuc2Zvcm06IHJvdGF0ZSg5MGRlZykgdHJhbnNsYXRlWSgtJGRyb3Bkb3duLXRyaWdnZXItY2FyZXQtc2l6ZSAvIDIpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLy9cclxuLy8gUHVyZSBDU1MgYXBwcm9hY2gvaW50ZXJhY3Rpb25cclxuLy9cclxuLy8gQ3NzIGFwcHJvYWNoIHdvcmtzIGZpbmUgd2l0aCBzaW1wbGUgZHJvcGRvd24gYnV0IHRoZXkgYXJlIG5vdCByZWNvbW1lbmRlZCBmb3IgY29tcGxleCBzdHJ1Y3R1cmUgYW5kIHRoZXkgYnJlYWsgVVhcclxuLy8gZS5nIFdoZW4gdXNlZCB3aXRoIG1lZ2EgZHJvcGRvd24gaW5zaWRlIC5seXQtaGVhZGVyLCBtZW51IGNsb3NlcyBiZWZvcmUgdXNlciBjYW4gaW50ZXJhY3Qgd2l0aCBpdC4gaXRzIGJlY2F1c2VcclxuLy8gYXMgc29vbiBhcyB1c2VyIG1vdmVzIGN1cnNvciB0byBpbnRlcmFjdCB3aXRoIG1lbnUgaGUgbG9zZXMgLmRyb3Bkb3duIGhvdmVyIHN0YXRlIGFuZCBtZW51IGNsb3Nlcy5cclxuLmRyb3Bkb3duLm9uLWhvdmVyIHtcclxuICAvLyB0byBpbnRlcmFjdCB3aXRoIG5lc3RlZCBtZW51XHJcbiAgLmRyb3Bkb3duIHtcclxuICAgIEBpbmNsdWRlIGhvdmVyIHtcclxuICAgICAgPiAubWVudSB7XHJcbiAgICAgICAgQGV4dGVuZCAlZGlzcGxheS1ibG9jaztcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIFByZXZlbnQgZHJvcGRvd24gZnJvbSBjbG9zaW5nIGJldHdlZW4gZ2FwcyBieSBjcmVhdGluZyBhZGRpdGlvbmFsIGFyZWEgYXJvdW5kIGRyb3Bkb3duXHJcbiAgICA+IC5tZW51IHtcclxuICAgICAgQGluY2x1ZGUgYmVmb3JlIHtcclxuICAgICAgICBAZXh0ZW5kICVkcm9wZG93bi1maWxsLWdhcHM7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIHRvIGludGVyYWN0IHdpdGggaW5uZXIgbWVudVxyXG4gIEBpbmNsdWRlIGhvdmVyIHtcclxuICAgID4gLm1lbnUge1xyXG4gICAgICBAZXh0ZW5kICVkaXNwbGF5LWJsb2NrO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gUHJldmVudCBkcm9wZG93biBmcm9tIGNsb3NpbmcgYmV0d2VlbiBnYXBzIGJ5IGNyZWF0aW5nIGFkZGl0aW9uYWwgYXJlYSBhcm91bmQgZHJvcGRvd25cclxuICA+IC5tZW51IHtcclxuICAgIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICAgIEBleHRlbmQgJWRyb3Bkb3duLWZpbGwtZ2FwcztcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vXHJcbi8vIERyb3Bkb3duIE1lZ2FcclxuLy9cclxuLmRyb3Bkb3duLmlzLW1lZ2Ege1xyXG4gIHBvc2l0aW9uOiBzdGF0aWM7XHJcblxyXG4gID4gLm1lbnUge1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxufVxyXG4iLCIvL1xyXG4vLyBCbG9ja3F1b3RlXHJcbi8vXHJcblxyXG4uYmxvY2txdW90ZSB7XHJcbiAgcGFkZGluZzogLjRyZW0gLjhyZW07XHJcbiAgYm9yZGVyLWxlZnQ6ICRib3JkZXJ3aWR0aC13aWRlIHNvbGlkICRwcmltYXJ5O1xyXG59XHJcbiIsIi8vXHJcbi8vIExpc3RcclxuLy9cclxuXHJcbkBpZiAkZ2VuZXJhdGUtY29tcG9uZW50LWNsYXNzZXMge1xyXG4gIC5saXN0IHtcclxuICAgIHBhZGRpbmctbGVmdDogMDtcclxuXHJcbiAgICA+IGxpIHtcclxuICAgICAgQGV4dGVuZCAlZGlzcGxheS1ibG9jazsgLy8gbm8gbmVlZCB0byBzZXQgbGlzdC1zdHlsZSB0byBub25lIGFzIHRoZSBsaXN0IGl0ZW1zIGFyZSBhbHJlYWR5IHNldCB0byBkaXNwbGF5IGJsb2NrIGluc3RlYWQgb2YgZGlzcGxheSBsaXN0XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGlzdC5pcy1pbmxpbmUge1xyXG4gICAgQGV4dGVuZCAlZGlzcGxheS1ibG9jaztcclxuXHJcbiAgICA+IGxpIHtcclxuICAgICAgQGV4dGVuZCAlZGlzcGxheS1pbmxpbmVibG9jaztcclxuXHJcbiAgICAgICY6bm90KDpsYXN0LWNoaWxkKSB7XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAkbGlzdC1pbmxpbmUtcGFkZGluZztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iLCIvL1xyXG4vLyBMaXN0IFNldHRpbmdzXHJcbi8vXHJcblxyXG4vL1xyXG4vLyBTZXR0aW5nXHJcbi8vXHJcbiRsaXN0LWlubGluZS1wYWRkaW5nOiAgICAgICAgICAgICAgICAgICAgLjVlbSAhZGVmYXVsdDtcclxuIiwiLy9cclxuLy8gQ29udHJvbFxyXG4vL1xyXG4vLyBVc2VkIHRvIGNvbWJpbmUgZGlmZmVyZW50IGNvbXBvbmVudHMgYW5kIG9iamVjdHMgaW50byBvbmUgY29udHJvbFxyXG4vLyBUaGUgbWFpbiBjb250cm9sIG5lZWRzIHRvIGJlIHRoZSBmaXJzdCBjaGlsZCBvZiBDb250cm9sIGNsYXNzIHRvIHdvcmsgcHJvcGVybHlcclxuXHJcbi5jb250cm9sIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgQGluY2x1ZGUgZm9udHNpemUoJGZvbnRzaXplLW5vcm1hbCk7XHJcbn1cclxuXHJcbmxhYmVsLmNvbnRyb2wge1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbn1cclxuXHJcbi8vXHJcbi8vIGZlZWRiYWNrIGluc2lkZSBjb250cm9sXHJcbi8vXHJcbi5jb250cm9sID4gLmZlZWRiYWNrIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYm90dG9tOiAxMDAlO1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgcGFkZGluZzogJGNvbnRyb2wtZmVlZGJhY2stcGFkZGluZztcclxuICBtYXJnaW4tYm90dG9tOiAkY29udHJvbC1mZWVkYmFjay1hcnJvdy1zaXplICsgJGNvbnRyb2wtZmVlZGJhY2stb2Zmc2V0LWJvdHRvbTtcclxuICBib3JkZXItcmFkaXVzOiBib3JkZXItcmFkaXVzKCk7XHJcbiAgY29sb3I6ICRjb250cm9sLWZlZWRiYWNrLWNvbG9yO1xyXG4gIGJveC1zaGFkb3c6IGJveC1zaGFkb3coJGNvbnRyb2wtZmVlZGJhY2stc2hhZG93KTtcclxuICBAaW5jbHVkZSBncmFkaWVudC1iZygkY29udHJvbC1mZWVkYmFjay1iYWNrZ3JvdW5kLCAxODBkZWcpO1xyXG5cclxuICBAaW5jbHVkZSBiZWZvcmUge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMTAwJTtcclxuICAgIHJpZ2h0OiAkY29udHJvbC1mZWVkYmFjay1hcnJvdy1vZmZzZXQtcmlnaHQ7XHJcbiAgICBAaW5jbHVkZSB0cmlhbmdsZShib3R0b20sICRjb250cm9sLWZlZWRiYWNrLWFycm93LXNpemUsICRjb250cm9sLWZlZWRiYWNrLWJhY2tncm91bmQpO1xyXG4gIH1cclxufVxyXG5cclxuLmNvbnRyb2wuaXMtdmFsaWQgPiAuZmVlZGJhY2suaXMtdmFsaWQge1xyXG4gIEBleHRlbmQgJWRpc3BsYXktYmxvY2s7XHJcbn1cclxuXHJcbi5jb250cm9sLmlzLWludmFsaWQgPiAuZmVlZGJhY2suaXMtaW52YWxpZCB7XHJcbiAgQGV4dGVuZCAlZGlzcGxheS1ibG9jaztcclxufVxyXG5cclxuLmlzLXZhbGlkYXRlZCAuY29udHJvbCB7XHJcbiAgPiAuZmlsZTpyZXF1aXJlZCxcclxuICA+IC5pbnB1dDpyZXF1aXJlZCB7XHJcbiAgICAmOnZhbGlkIH4gLmZlZWRiYWNrLmlzLXZhbGlkIHtcclxuICAgICAgQGV4dGVuZCAlZGlzcGxheS1ibG9jaztcclxuICAgIH1cclxuXHJcbiAgICAmOmludmFsaWQgfiAuZmVlZGJhY2suaXMtaW52YWxpZCB7XHJcbiAgICAgIEBleHRlbmQgJWRpc3BsYXktYmxvY2s7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICA+IGlucHV0W3R5cGU9XCJjaGVja2JveFwiXTpyZXF1aXJlZCB7XHJcbiAgICAmOmNoZWNrZWQgfiAuZmVlZGJhY2suaXMtdmFsaWQge1xyXG4gICAgICBAZXh0ZW5kICVkaXNwbGF5LWJsb2NrO1xyXG4gICAgfVxyXG5cclxuICAgICY6bm90KDpjaGVja2VkKSB+IC5mZWVkYmFjay5pcy1pbnZhbGlkIHtcclxuICAgICAgQGV4dGVuZCAlZGlzcGxheS1ibG9jaztcclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLy9cclxuLy8gR3JvdXBcclxuLy9cclxuLy8gVXNlZCB0byBjb21iaW5lIHZhcmlvdXMgY29udHJvbHMgdG9nZXRoZXJcclxuXHJcbkBpZiAkZ2VuZXJhdGUtY29tcG9uZW50LWNsYXNzZXMge1xyXG4gIC8vIEdyb3VwIGFkZG9uc1xyXG4gIC5hZGRvbiB7XHJcbiAgICBAZXh0ZW5kICVjb250cm9scztcclxuICAgIGRpc3BsYXk6IGZsZXg7IC8vIG92ZXJyaWRlICVjb250cm9scyBzdHlsZSB0byB1c2UgYWxpZ24taXRlbXNcclxuICAgIHVzZXItc2VsZWN0OiBhdXRvOyAvLyBhbGxvdyB1c2VyIHRvIHNlbGVjdCB0ZXh0IGluc2lkZSBhZGRvblxyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjsgLy8gQ2VudGVyIGFsaWduIGNvbnRlbnQgaW4gYWRkb25cclxuICAgIGJvcmRlci1jb2xvcjogJGdyb3VwLWFkZG9uLWJvcmRlcmNvbG9yO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGdyb3VwLWFkZG9uLWJhY2tncm91bmQ7XHJcbiAgfVxyXG5cclxuICAvL1xyXG4gIC8vIEJhc2Ugc3R5bGVzXHJcbiAgLy9cclxuICAvLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tZHVwbGljYXRlLXNlbGVjdG9yc1xyXG4gIC5ncm91cCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICAgICYuaXMtbGcge1xyXG4gICAgICA+IC5hZGRvbixcclxuICAgICAgPiAuYnRuIHtcclxuICAgICAgICBwYWRkaW5nOiAkZ3JvdXAtbGctcGFkZGluZy15ICRncm91cC1sZy1wYWRkaW5nLXg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICA+IC5pbnB1dCxcclxuICAgID4gLmNvbnRyb2wsXHJcbiAgICA+IC5hZGRvbixcclxuICAgID4gLmJ0biB7XHJcbiAgICAgIEBpbmNsdWRlIGhvdmVyLWZvY3VzIHtcclxuICAgICAgICB6LWluZGV4OiAkZ3JvdXAtaXRlbXMtaG92ZXItZm9jdXMtemluZGV4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgPiAuaW5wdXQsXHJcbiAgICA+IC5jb250cm9sOm5vdCguYWRkb24pIHtcclxuICAgICAgZmxleDogMSAxIDAlOyAvLyBleHBhbmQgdG8gbWF4IHNwYWNlIGF2YWlsYWJsZSB3aXRob3V0IG92ZXJmbG93IGZyb20gZ3JvdXBcclxuICAgIH1cclxuXHJcbiAgICAmOm5vdCguaXMteSkge1xyXG4gICAgICA+IC5jb250cm9sIHtcclxuICAgICAgICBAZXh0ZW5kICVncm91cC1tYXJnaW4teDtcclxuXHJcbiAgICAgICAgPiAuaW5wdXQge1xyXG4gICAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVycmFkaXVzLTAgIW9wdGlvbmFsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpmaXJzdC1jaGlsZCA+IC5pbnB1dDpub3QoLmlzLW1pbikge1xyXG4gICAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVycmFkaXVzLWxlZnQgIW9wdGlvbmFsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpsYXN0LWNoaWxkID4gLmlucHV0Om5vdCguaXMtbWluKSB7XHJcbiAgICAgICAgICBAZXh0ZW5kICVncm91cC1ib3JkZXJyYWRpdXMtcmlnaHQgIW9wdGlvbmFsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG5cclxuICAgICAgPiAuaW5wdXQsXHJcbiAgICAgID4gLmFkZG9uLFxyXG4gICAgICA+IC5idG4ge1xyXG4gICAgICAgIEBleHRlbmQgJWdyb3VwLW1hcmdpbi14O1xyXG4gICAgICAgIEBleHRlbmQgJWdyb3VwLWJvcmRlcnJhZGl1cy0wICFvcHRpb25hbDtcclxuXHJcbiAgICAgICAgJjpmaXJzdC1jaGlsZDpub3QoLmlzLW1pbikge1xyXG4gICAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVycmFkaXVzLWxlZnQgIW9wdGlvbmFsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJjpsYXN0LWNoaWxkOm5vdCguaXMtbWluKSB7XHJcbiAgICAgICAgICBAZXh0ZW5kICVncm91cC1ib3JkZXJyYWRpdXMtcmlnaHQgIW9wdGlvbmFsO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYuaXMteSB7XHJcbiAgICAgID4gLmNvbnRyb2wge1xyXG4gICAgICAgIEBleHRlbmQgJWdyb3VwLW1hcmdpbi15O1xyXG5cclxuICAgICAgICA+IC5pbnB1dCB7XHJcbiAgICAgICAgICBAZXh0ZW5kICVncm91cC1ib3JkZXJyYWRpdXMtMCAhb3B0aW9uYWw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmOmZpcnN0LWNoaWxkID4gLmlucHV0Om5vdCguaXMtbWluKSB7XHJcbiAgICAgICAgICBAZXh0ZW5kICVncm91cC1ib3JkZXJyYWRpdXMtdG9wICFvcHRpb25hbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6bGFzdC1jaGlsZCA+IC5pbnB1dDpub3QoLmlzLW1pbikge1xyXG4gICAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVycmFkaXVzLWJvdHRvbSAhb3B0aW9uYWw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICA+IC5pbnB1dCxcclxuICAgICAgPiAuYWRkb24sXHJcbiAgICAgID4gLmJ0biB7XHJcbiAgICAgICAgQGV4dGVuZCAlZ3JvdXAtbWFyZ2luLXk7XHJcbiAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVycmFkaXVzLTAgIW9wdGlvbmFsO1xyXG5cclxuICAgICAgICAmOmZpcnN0LWNoaWxkOm5vdCguaXMtbWluKSB7XHJcbiAgICAgICAgICBAZXh0ZW5kICVncm91cC1ib3JkZXJyYWRpdXMtdG9wICFvcHRpb25hbDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICY6bGFzdC1jaGlsZDpub3QoLmlzLW1pbikge1xyXG4gICAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVycmFkaXVzLWJvdHRvbSAhb3B0aW9uYWw7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJi5pcy1ib3JkZXJsZXNzIHtcclxuICAgICAgJjpub3QoLmlzLXkpIHtcclxuICAgICAgICA+IC5jb250cm9sIHtcclxuICAgICAgICAgID4gLmlucHV0IHtcclxuICAgICAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVyLXktMDtcclxuICAgICAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVycmFkaXVzLTAgIW9wdGlvbmFsO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICY6Zmlyc3QtY2hpbGQgPiAuaW5wdXQge1xyXG4gICAgICAgICAgICBAZXh0ZW5kICVncm91cC1ib3JkZXItbGVmdC0wO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICY6bGFzdC1jaGlsZCA+IC5pbnB1dCB7XHJcbiAgICAgICAgICAgIEBleHRlbmQgJWdyb3VwLWJvcmRlci1yaWdodC0wO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgPiAuaW5wdXQsXHJcbiAgICAgICAgPiAuYWRkb24sXHJcbiAgICAgICAgPiAuYnRuIHtcclxuICAgICAgICAgIEBleHRlbmQgJWdyb3VwLWJvcmRlci15LTA7XHJcbiAgICAgICAgICBAZXh0ZW5kICVncm91cC1ib3JkZXJyYWRpdXMtMCAhb3B0aW9uYWw7XHJcblxyXG4gICAgICAgICAgJjpmaXJzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgIEBleHRlbmQgJWdyb3VwLWJvcmRlci1sZWZ0LTA7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjpsYXN0LWNoaWxkIHtcclxuICAgICAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVyLXJpZ2h0LTA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcblxyXG4gICAgICAmLmlzLXkge1xyXG4gICAgICAgID4gLmNvbnRyb2wge1xyXG4gICAgICAgICAgPiAuaW5wdXQge1xyXG4gICAgICAgICAgICBAZXh0ZW5kICVncm91cC1ib3JkZXIteC0wO1xyXG4gICAgICAgICAgICBAZXh0ZW5kICVncm91cC1ib3JkZXJyYWRpdXMtMCAhb3B0aW9uYWw7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgJjpmaXJzdC1jaGlsZCA+IC5pbnB1dCB7XHJcbiAgICAgICAgICAgIEBleHRlbmQgJWdyb3VwLWJvcmRlci10b3AtMDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAmOmxhc3QtY2hpbGQgPiAuaW5wdXQge1xyXG4gICAgICAgICAgICBAZXh0ZW5kICVncm91cC1ib3JkZXItYm90dG9tLTA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICA+IC5pbnB1dCxcclxuICAgICAgICA+IC5hZGRvbixcclxuICAgICAgICA+IC5idG4ge1xyXG4gICAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVyLXgtMDtcclxuICAgICAgICAgIEBleHRlbmQgJWdyb3VwLWJvcmRlcnJhZGl1cy0wICFvcHRpb25hbDtcclxuXHJcbiAgICAgICAgICAmOmZpcnN0LWNoaWxkIHtcclxuICAgICAgICAgICAgQGV4dGVuZCAlZ3JvdXAtYm9yZGVyLXRvcC0wO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgICAgICAgIEBleHRlbmQgJWdyb3VwLWJvcmRlci1ib3R0b20tMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5ncm91cC5idXR0b25zIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4OyAvLyBvdmVycmlkZSBkaXNwbGF5IHByb3BlcnR5IGZvciBidXR0b25zIGdyb3VwXHJcbiAgfVxyXG59XHJcbiIsIi8vXHJcbi8vIExheW91dCBTZXR0aW5nc1xyXG4vL1xyXG4vLyBVc2luZyBweCB1bml0IHRvIGtlZXAgc3BhY2luZyBjb25zdGFudCByZWdhcmRsZXNzIG9mIGZvbnQtc2l6ZVxyXG5cclxuLy9cclxuLy8gU2V0dGluZ1xyXG4vL1xyXG4vLyBIZWFkZXJcclxuJGhlYWRlci1iYWNrZ3JvdW5kOiAgICAgICAgICAgICAgICAgIGlmKCRkZXNpZ24tdGhlbWUgPT0gbGlnaHQsICR3aGl0ZSwgJGdyYXktODAwKSAhZGVmYXVsdDtcclxuJGhlYWRlci1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgIGNsci1hdXRvKCRoZWFkZXItYmFja2dyb3VuZCkgIWRlZmF1bHQ7XHJcbiRoZWFkZXItYm9yZGVydG9wOiAgICAgICAgICAgICAgICAgICAkYm9yZGVyd2lkdGgtd2lkZSBzb2xpZCAkcHJpbWFyeSAhZGVmYXVsdDtcclxuJGhlYWRlci1oZWlnaHQ6ICAgICAgICAgICAgICAgICAgICAgIDY0cHggIWRlZmF1bHQ7XHJcbiRoZWFkZXItcGFkZGluZy14OiAgICAgICAgICAgICAgICAgICAyNHB4ICFkZWZhdWx0O1xyXG4kaGVhZGVyLXppbmRleDogICAgICAgICAgICAgICAgICAgICAgMTUgIWRlZmF1bHQ7XHJcbiRoZWFkZXItdHJhbnNpdGlvbjogICAgICAgICAgICAgICAgICBtaW4taGVpZ2h0IC4zNXMgZWFzZS1pbi1vdXQsIGxpbmUtaGVpZ2h0IC4zNXMgZWFzZS1pbi1vdXQgIWRlZmF1bHQ7XHJcblxyXG4vLyBtYWluIGFuZCBib2R5IGxheW91dFxyXG4kYm9keS1iYWNrZ3JvdW5kOiAgICAgICAgICAgICAgICAgICAgaWYoJGRlc2lnbi10aGVtZSA9PSBsaWdodCwgaHNsKDAsIDAlLCA5OCUpLCAkZGFyaykgIWRlZmF1bHQ7XHJcbiRib2R5LWNvbG9yOiAgICAgICAgICAgICAgICAgICAgICAgICBjbHItYXV0bygkYm9keS1iYWNrZ3JvdW5kLCAkd2hpdGUsICRkYXJrKSAhZGVmYXVsdDtcclxuJG1haW4tYmFja2dyb3VuZDogICAgICAgICAgICAgICAgICAgICRib2R5LWJhY2tncm91bmQgIWRlZmF1bHQ7XHJcbiRtYWluLXppbmRleDogICAgICAgICAgICAgICAgICAgICAgICAxICFkZWZhdWx0O1xyXG5cclxuLy8gRm9vdGVyXHJcbiRmb290ZXItYmFja2dyb3VuZDogICAgICAgICAgICAgICAgICAkZ3JheS05MDAgIWRlZmF1bHQ7XHJcbiRmb290ZXItY29sb3I6ICAgICAgICAgICAgICAgICAgICAgICBjbHItYXV0bygkZm9vdGVyLWJhY2tncm91bmQsICR3aGl0ZSwgJGRhcmspICFkZWZhdWx0O1xyXG4kZm9vdGVyLXBhZGRpbmcteDogICAgICAgICAgICAgICAgICAgMjRweCAhZGVmYXVsdDtcclxuJGZvb3Rlci1wYWRkaW5nLXk6ICAgICAgICAgICAgICAgICAgIDQ4cHggIWRlZmF1bHQ7XHJcbiRmb290ZXItemluZGV4OiAgICAgICAgICAgICAgICAgICAgICAwICFkZWZhdWx0O1xyXG5cclxuLy8gU2lkZWJhclxyXG4kc2lkZWJhci1iYWNrZ3JvdW5kOiAgICAgICAgICAgICAgICAgaWYoJGRlc2lnbi10aGVtZSA9PSBsaWdodCwgJHdoaXRlLCAkZ3JheS04MDApICFkZWZhdWx0O1xyXG4kc2lkZWJhci1jb2xvcjogICAgICAgICAgICAgICAgICAgICAgY2xyLWF1dG8oJHNpZGViYXItYmFja2dyb3VuZCwgJHdoaXRlLCAkZGFyaykgIWRlZmF1bHQ7XHJcbiRzaWRlYmFyLXppbmRleDogICAgICAgICAgICAgICAgICAgICAyMCAhZGVmYXVsdDtcclxuJHNpZGViYXItdHJhbnNpdGlvbjogICAgICAgICAgICAgICAgIGxlZnQgLjVzIGVhc2UtaW4tb3V0ICFkZWZhdWx0O1xyXG4kc2lkZWJhci1taW53aWR0aDogICAgICAgICAgICAgICAgICAgMjUwcHggIWRlZmF1bHQ7XHJcbiRzaWRlYmFyLW1heHdpZHRoOiAgICAgICAgICAgICAgICAgICA2MHZ3ICFkZWZhdWx0O1xyXG5cclxuJG92ZXJsYXktYmFja2dyb3VuZDogICAgICAgICAgICAgICAgIHJnYmEoJGJsYWNrLCAuNzUpICFkZWZhdWx0O1xyXG4kb3ZlcmxheS16aW5kZXg6ICAgICAgICAgICAgICAgICAgICAgMTkgIWRlZmF1bHQ7XHJcbiRvdmVybGF5LXRyYW5zaXRpb246ICAgICAgICAgICAgICAgICBvcGFjaXR5IC4zNXMgZWFzZS1pbi1vdXQsIHZpc2liaWxpdHkgLjM1cyBlYXNlLWluLW91dCAhZGVmYXVsdDtcclxuXHJcbi8vXHJcbi8vIERlcml2ZWRcclxuLy9cclxuLy8gSGVhZGVyXHJcbiRoZWFkZXItaGVpZ2h0LWNvbGxhcHNlZDogICAgICAgICAgICAkaGVhZGVyLWhlaWdodCAqICRkZWZhdWx0LXNtYWxsLXF1YW50aXR5ICFkZWZhdWx0O1xyXG4iLCIvL1xyXG4vLyBFbWJlZFxyXG4vL1xyXG5cclxuQGlmICRnZW5lcmF0ZS1jb21wb25lbnQtY2xhc3NlcyB7XHJcbiAgLy9cclxuICAvLyBEb2MgOiBhZGQgRG9jXHJcbiAgLy9cclxuXHJcbiAgLmVtYmVkIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMDtcclxuXHJcbiAgICBAaW5jbHVkZSBiZWZvcmUge1xyXG4gICAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgJEVNQkVELVJBVElPLURFRkFVTFQ6IG1hcC1nZXQoJGFzcGVjdC1yYXRpb3MsICRlbWJlZC1yYXRpby1kZWZhdWx0KTsgLy8gZ2V0IGRlZmF1bHQgZW1iZWQgcmF0aW8gZnJvbSBtYXAgJGFzcGVjdC1yYXRpb1xyXG4gICAgICBwYWRkaW5nLXRvcDogcGVyY2VudGFnZShtYXAtZ2V0KCRFTUJFRC1SQVRJTy1ERUZBVUxULCB4KSAvIG1hcC1nZXQoJEVNQkVELVJBVElPLURFRkFVTFQsIHkpKTsgLy8gZ2V0IGNvLW9yZGluYXRlcyBvZiBkZWZhdWx0IGVtYmVkIHJhdGlvXHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAuZW1iZWQtaXRlbSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgfVxyXG5cclxuICAkQVNQRUNULVJBVElPUzogbWFwLXJlbW92ZSgkYXNwZWN0LXJhdGlvcywgJGVtYmVkLXJhdGlvLWRlZmF1bHQpOyAvLyByZW1vdmUgZGVmYXVsdCBlbWJlZC1yYXRpbyBhcyBpdHMgYWxyZWFkeSBzZXQgb24gZW1iZWRcclxuICBAZWFjaCAka2V5LCAkcmF0aW8gaW4gJEFTUEVDVC1SQVRJT1Mge1xyXG4gICAgLmVtYmVkLmlzLSN7JGtleX0ge1xyXG4gICAgICBAaW5jbHVkZSBiZWZvcmUge1xyXG4gICAgICAgIHBhZGRpbmctdG9wOiBwZXJjZW50YWdlKG1hcC1nZXQoJHJhdGlvLCB5KSAvIG1hcC1nZXQoJHJhdGlvLCB4KSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLy9cclxuLy8gQnJlYWRjcnVtYlxyXG4vL1xyXG5cclxuQGlmICRnZW5lcmF0ZS1jb21wb25lbnQtY2xhc3NlcyB7XHJcbiAgLy9cclxuICAvLyBCYXNlIHN0eWxlc1xyXG4gIC8vXHJcblxyXG4gIC5icmVhZGNydW1iIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgcGFkZGluZzogJGJyZWFkY3J1bWItcGFkZGluZy15ICRicmVhZGNydW1iLXBhZGRpbmcteDtcclxuICAgIG1hcmdpbi1ib3R0b206ICRicmVhZGNydW1iLW1hcmdpbmJvdHRvbTtcclxuICAgIEBpbmNsdWRlIGZvbnRzaXplKCk7XHJcblxyXG4gICAgYSB7XHJcbiAgICAgIEBpbmNsdWRlIGhvdmVyIHtcclxuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5icmVhZGNydW1iLWl0ZW0ge1xyXG4gICAgcGFkZGluZy1yaWdodDogJGJyZWFkY3J1bWItaXRlbS1wYWRkaW5nLXg7XHJcblxyXG4gICAgJjpub3QoOmZpcnN0LWNoaWxkKSB7XHJcbiAgICAgIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICAgICAgY29udGVudDogcXVvdGUoJGJyZWFkY3J1bWItZGl2aWRlcik7XHJcbiAgICAgICAgcGFkZGluZy1yaWdodDogJGJyZWFkY3J1bWItaXRlbS1wYWRkaW5nLXggLyAyO1xyXG4gICAgICAgIGNvbG9yOiAkYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQGluY2x1ZGUgYWN0aXZlIHtcclxuICAgICAgY29sb3I6ICRicmVhZGNydW1iLWFjdGl2ZS1jb2xvcjtcclxuICAgIH1cclxuXHJcbiAgICAmW2RhdGEtc2VwYXJhdG9yXSB7XHJcbiAgICAgICY6bm90KDpmaXJzdC1jaGlsZCkge1xyXG4gICAgICAgIEBpbmNsdWRlIGJlZm9yZSB7XHJcbiAgICAgICAgICBjb250ZW50OiBhdHRyKGRhdGEtc2VwYXJhdG9yKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIiwiLy9cclxuLy8gQnJlYWRjcnVtYnMgc2V0dGluZ3NcclxuLy9cclxuXHJcbi8vXHJcbi8vIFNldHRpbmdcclxuLy9cclxuJGJyZWFkY3J1bWItcGFkZGluZy15OiAgICAgICAgICAgICAgLjc1cmVtICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1wYWRkaW5nLXg6ICAgICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1pdGVtLXBhZGRpbmcteDogICAgICAgICAuNWVtICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1tYXJnaW5ib3R0b206ICAgICAgICAgICAxcmVtICFkZWZhdWx0O1xyXG4kYnJlYWRjcnVtYi1kaXZpZGVyLWNvbG9yOiAgICAgICAgICAkZGlzYWJsZWQgIWRlZmF1bHQ7XHJcbiRicmVhZGNydW1iLWRpdmlkZXI6ICAgICAgICAgICAgICAgIFwi8J+gmlwiICFkZWZhdWx0O1xyXG5cclxuJGJyZWFkY3J1bWItYWN0aXZlLWNvbG9yOiAgICAgICAgICAgJGJyZWFkY3J1bWItZGl2aWRlci1jb2xvciAhZGVmYXVsdDtcclxuIiwiLy8gUGxhY2Vob2xkZXIgZm9yIHByZWZlcnMtcmVkdWNlZC1tb3Rpb24gcXVlcnlcclxuJXByZWZlcnMtcmVkdWNlZC1tb3Rpb24ge1xyXG4gIEBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKSB7XHJcbiAgICAvLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJvcGVydHktYmxhY2tsaXN0XHJcbiAgICB0cmFuc2l0aW9uOiBub25lO1xyXG4gIH1cclxufVxyXG4iXX0= */