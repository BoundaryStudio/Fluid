@charset "UTF-8";
/**
 * Fluid Components v0.18.0
 * Copyright (c) 2019-2027 Fluid Framework
 * Copyright (c) 2019-2027 Ashfahan
 * Licensed under MIT (https://github.com/fluid-framework/Fluid/blob/master/LICENSE)
*/
.list > .list-item, .list.is-inline, .control.is-valid > .feedback.is-valid, .control.is-invalid > .feedback.is-invalid, .is-validated .control > .input:required:valid ~ .feedback.is-valid, .is-validated .control > .input:required:invalid ~ .feedback.is-invalid, .is-validated .control > input[type="checkbox"]:required:checked ~ .feedback.is-valid, .is-validated .control > input[type="checkbox"]:required:not(:checked) ~ .feedback.is-invalid {
  display: block;
}

.list.is-inline > .list-item {
  display: inline-block;
}

.btn:not([disabled]):not(:disabled), .menu-item:not([disabled]):not(:disabled) {
  cursor: pointer;
}

.control > .radio ~ label::before, .control > .checkbox ~ label::before, .control > .switch ~ label::before, .input, .btn, .range, .menu-item, .addon {
  position: relative;
  display: inline-block;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  padding: 0.375em 0.75em;
  border: 1px solid transparent;
  border-radius: 0.25em;
  color: #474747;
  background-color: transparent;
  vertical-align: middle;
  text-decoration: none;
  font-weight: 400;
  line-height: 1.5;
  font-size: 1rem;
  transition: color 0.15s ease-in-out,background-color 0.15s ease-in-out,border 0.15s ease-in-out,box-shadow 0.15s ease-in-out;
}

.control > .radio ~ label:not([disabled]):not(:disabled).active::before, .control > .checkbox ~ label:not([disabled]):not(:disabled).active::before, .control > .switch ~ label:not([disabled]):not(:disabled).active::before, .input:not([disabled]):not(:disabled).active, .btn:not([disabled]):not(:disabled).active, .control > .radio ~ label:not([disabled]):not(:disabled):active::before, .control > .checkbox ~ label:not([disabled]):not(:disabled):active::before, .control > .switch ~ label:not([disabled]):not(:disabled):active::before, .input:not([disabled]):not(:disabled):active, .btn:not([disabled]):not(:disabled):active {
  -webkit-animation: none;
          animation: none;
  box-shadow: none;
}

.control > .radio ~ label.hover::before, .control > .checkbox ~ label.hover::before, .control > .switch ~ label.hover::before, .hover.btn, .control > .radio ~ label:hover::before, .control > .checkbox ~ label:hover::before, .control > .switch ~ label:hover::before, .btn:hover {
  box-shadow: 0 0 0 0.2rem rgba(99, 99, 99, 0.5);
}

.control > .radio ~ label.focus::before, .control > .checkbox ~ label.focus::before, .control > .switch ~ label.focus::before, .focus.input, .focus.btn, .control > .radio ~ label:focus::before, .control > .checkbox ~ label:focus::before, .control > .switch ~ label:focus::before, .input:focus, .btn:focus {
  -webkit-animation: ripple 1s ease-out both;
          animation: ripple 1s ease-out both;
  outline: 0;
}

@-webkit-keyframes ripple {
  from {
    box-shadow: 0 0 0 0 currentColor;
  }
  75% {
    box-shadow: 0 0 0 0.3rem transparent;
  }
  76% {
    box-shadow: none;
  }
}

@keyframes ripple {
  from {
    box-shadow: 0 0 0 0 currentColor;
  }
  75% {
    box-shadow: 0 0 0 0.3rem transparent;
  }
  76% {
    box-shadow: none;
  }
}

.control > .radio:not([disabled]):not(:disabled).active ~ label::before, .control > .checkbox:not([disabled]):not(:disabled).active ~ label::before, .control > .switch:not([disabled]):not(:disabled).active ~ label::before, .control > .radio:not([disabled]):not(:disabled):active ~ label::before, .control > .checkbox:not([disabled]):not(:disabled):active ~ label::before, .control > .switch:not([disabled]):not(:disabled):active ~ label::before {
  opacity: .5;
}

.control > .radio:checked ~ label::before, .control > .checkbox:checked ~ label::before, .control > .switch:checked ~ label::before {
  border-color: currentColor;
  background: currentColor;
  -webkit-animation: none;
          animation: none;
}

.control > .focus.radio ~ label::before, .control > .focus.checkbox ~ label::before, .control > .focus.switch ~ label::before, .control > .radio:focus ~ label::before, .control > .checkbox:focus ~ label::before, .control > .switch:focus ~ label::before {
  -webkit-animation: ripple 1s ease-out both;
          animation: ripple 1s ease-out both;
}

.control > .radio ~ label, .control > .checkbox ~ label, .control > .switch ~ label {
  position: relative;
  cursor: pointer;
  padding-left: 1.71429em;
  margin-bottom: 0;
}

.control > .radio ~ label :not(:empty), .control > .checkbox ~ label :not(:empty), .control > .switch ~ label :not(:empty) {
  padding-right: .5rem;
  padding-left: 1.71429em;
}

.control > .radio ~ label::before, .control > .checkbox ~ label::before, .control > .switch ~ label::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%);
  width: 1.14286em;
  height: 1.14286em;
  padding: 0;
  border-color: #b8b8b8;
  background-color: #fff;
  font-size: inherit;
}

.control > .is-primary.radio ~ label::before, .control > .is-primary.checkbox ~ label::before, .control > .is-primary.switch ~ label::before {
  color: #805ad5;
}

.control > .is-secondary.radio ~ label::before, .control > .is-secondary.checkbox ~ label::before, .control > .is-secondary.switch ~ label::before {
  color: gray;
}

.control > .is-valid.radio ~ label::before, .control > .is-valid.checkbox ~ label::before, .control > .is-valid.switch ~ label::before {
  color: #52c41a;
}

.control > .is-info.radio ~ label::before, .control > .is-info.checkbox ~ label::before, .control > .is-info.switch ~ label::before {
  color: #13c2c2;
}

.control > .is-warn.radio ~ label::before, .control > .is-warn.checkbox ~ label::before, .control > .is-warn.switch ~ label::before {
  color: #fadb14;
}

.control > .is-error.radio ~ label::before, .control > .is-error.checkbox ~ label::before, .control > .is-error.switch ~ label::before {
  color: #f5222d;
}

.control > .is-light.radio ~ label::before, .control > .is-light.checkbox ~ label::before, .control > .is-light.switch ~ label::before {
  color: #fafafa;
}

.control > .is-dark.radio ~ label::before, .control > .is-dark.checkbox ~ label::before, .control > .is-dark.switch ~ label::before {
  color: #474747;
}

.control > .radio[disabled] ~ label, .control > .checkbox[disabled] ~ label, .control > .switch[disabled] ~ label, .control > .radio:disabled ~ label, .control > .checkbox:disabled ~ label, .control > .switch:disabled ~ label {
  pointer-events: none;
  opacity: 0.5;
}

.control > .radio[disabled] ~ label::before, .control > .checkbox[disabled] ~ label::before, .control > .switch[disabled] ~ label::before, .control > .radio:disabled ~ label::before, .control > .checkbox:disabled ~ label::before, .control > .switch:disabled ~ label::before {
  color: #b8b8b8 !important;
}

.control > .file, .control > .radio, .control > .checkbox, .control > .switch {
  position: absolute;
  z-index: -1;
  opacity: 0;
}

.input[disabled], .input:disabled, textarea.input:-moz-read-only,
input.input:-moz-read-only, .btn[disabled], .btn:disabled, .range[disabled], .range:disabled, .menu-item[disabled], .menu-item:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.input[disabled], .input:disabled, textarea.input:read-only,
input.input:read-only, .btn[disabled], .btn:disabled, .range[disabled], .range:disabled, .menu-item[disabled], .menu-item:disabled {
  pointer-events: none;
  opacity: 0.5;
}

.input.is-valid.has-icon, .is-validated .input:required:valid, .input.is-info.has-icon, .input.is-warn.has-icon, .input.is-error.has-icon, .is-validated .input:required:invalid, select.input {
  padding-right: 2.5rem;
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 1.3rem 1.3rem;
}

.group:not(.is-y) > .control, .group:not(.is-y) > .input,
.group:not(.is-y) > .addon,
.group:not(.is-y) > .btn {
  margin-right: -0.5px;
  margin-left: -0.5px;
}

.group.is-y > .control, .group.is-y > .input,
.group.is-y > .addon,
.group.is-y > .btn {
  margin-top: -0.5px;
  margin-bottom: -0.5px;
}

.group.is-borderless.is-y > .control > .input, .group.is-borderless.is-y > .input,
.group.is-borderless.is-y > .addon,
.group.is-borderless.is-y > .btn {
  border-right: 0;
  border-left: 0;
}

.group.is-borderless:not(.is-y) > .control > .input, .group.is-borderless:not(.is-y) > .input,
.group.is-borderless:not(.is-y) > .addon,
.group.is-borderless:not(.is-y) > .btn {
  border-top: 0;
  border-bottom: 0;
}

.group.is-borderless.is-y > .control:first-child > .input, .group.is-borderless.is-y > .input:first-child,
.group.is-borderless.is-y > .addon:first-child,
.group.is-borderless.is-y > .btn:first-child {
  border-top: 0;
}

.group.is-borderless:not(.is-y) > .control:last-child > .input, .group.is-borderless:not(.is-y) > .input:last-child,
.group.is-borderless:not(.is-y) > .addon:last-child,
.group.is-borderless:not(.is-y) > .btn:last-child {
  border-right: 0;
}

.group.is-borderless.is-y > .control:last-child > .input, .group.is-borderless.is-y > .input:last-child,
.group.is-borderless.is-y > .addon:last-child,
.group.is-borderless.is-y > .btn:last-child {
  border-bottom: 0;
}

.group.is-borderless:not(.is-y) > .control:first-child > .input, .group.is-borderless:not(.is-y) > .input:first-child,
.group.is-borderless:not(.is-y) > .addon:first-child,
.group.is-borderless:not(.is-y) > .btn:first-child {
  border-left: 0;
}

.group:not(.is-y) > .control > .input, .group:not(.is-y) > .input,
.group:not(.is-y) > .addon,
.group:not(.is-y) > .btn, .group.is-y > .control > .input, .group.is-y > .input,
.group.is-y > .addon,
.group.is-y > .btn, .group.is-borderless:not(.is-y) > .control > .input, .group.is-borderless:not(.is-y) > .input,
.group.is-borderless:not(.is-y) > .addon,
.group.is-borderless:not(.is-y) > .btn, .group.is-borderless.is-y > .control > .input, .group.is-borderless.is-y > .input,
.group.is-borderless.is-y > .addon,
.group.is-borderless.is-y > .btn {
  border-radius: 0;
}

.group.is-y > .control:first-child > .input:not(.is-min), .group.is-y > .input:first-child:not(.is-min),
.group.is-y > .addon:first-child:not(.is-min),
.group.is-y > .btn:first-child:not(.is-min) {
  border-top-left-radius: 0.25em;
  border-top-right-radius: 0.25em;
}

.group:not(.is-y) > .control:last-child > .input:not(.is-min), .group:not(.is-y) > .input:last-child:not(.is-min),
.group:not(.is-y) > .addon:last-child:not(.is-min),
.group:not(.is-y) > .btn:last-child:not(.is-min) {
  border-top-right-radius: 0.25em;
  border-bottom-right-radius: 0.25em;
}

.group.is-y > .control:last-child > .input:not(.is-min), .group.is-y > .input:last-child:not(.is-min),
.group.is-y > .addon:last-child:not(.is-min),
.group.is-y > .btn:last-child:not(.is-min) {
  border-bottom-right-radius: 0.25em;
  border-bottom-left-radius: 0.25em;
}

.group:not(.is-y) > .control:first-child > .input:not(.is-min), .group:not(.is-y) > .input:first-child:not(.is-min),
.group:not(.is-y) > .addon:first-child:not(.is-min),
.group:not(.is-y) > .btn:first-child:not(.is-min) {
  border-top-left-radius: 0.25em;
  border-bottom-left-radius: 0.25em;
}

.input {
  width: 100%;
  border-color: #b8b8b8;
  background-color: #fff;
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1);
}

.input.hover, .input:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(99, 99, 99, 0.5);
}

.input.focus, .input:focus {
  border-color: currentColor;
  box-shadow: none;
}

.input.is-min {
  padding-bottom: 0.30357em;
  border-width: 0;
  border-bottom-width: 3px;
  border-radius: 0;
}

.input.is-min:not(.hover):not(:hover) {
  box-shadow: none;
}

.input.is-primary {
  border-color: rgba(128, 90, 213, 0.5);
  color: #805ad5;
}

.input.is-primary.hover, .input.is-primary:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(128, 90, 213, 0.5);
}

.control > .input.is-primary ~ .icon {
  color: #805ad5;
}

.control.has-floating-label > .input.is-primary ~ label {
  color: #805ad5;
}

.input.is-secondary {
  border-color: rgba(128, 128, 128, 0.5);
  color: gray;
}

.input.is-secondary.hover, .input.is-secondary:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(128, 128, 128, 0.5);
}

.control > .input.is-secondary ~ .icon {
  color: gray;
}

.control.has-floating-label > .input.is-secondary ~ label {
  color: gray;
}

.input.is-valid, .is-validated .input:required:valid {
  border-color: rgba(82, 196, 26, 0.5);
  color: #52c41a;
}

.input.is-valid.hover, .is-validated .hover.input:required:valid, .input.is-valid:hover, .is-validated .input:hover:required:valid {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(82, 196, 26, 0.5);
}

.input.is-valid.has-icon, .is-validated .input:required:valid {
  background-image: url("data:image/svg+xml,%3Csvg style='stroke:%2352c41a;stroke-linecap:round;stroke-linejoin:round;fill:none;stroke-width:2;fill-rule:evenodd' viewbox='0 0 21 21' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m15.71 4.55-9 9-4.13-4.13'/%3E%3C/svg%3E");
}

.control > .input.is-valid ~ .icon, .is-validated .control > .input:required:valid ~ .icon {
  color: #52c41a;
}

.control.has-floating-label > .input.is-valid ~ label, .is-validated .control.has-floating-label > .input:required:valid ~ label {
  color: #52c41a;
}

.input.is-info {
  border-color: rgba(19, 194, 194, 0.5);
  color: #13c2c2;
}

.input.is-info.hover, .input.is-info:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(19, 194, 194, 0.5);
}

.input.is-info.has-icon {
  background-image: url("data:image/svg+xml,%3Csvg style='stroke:%2313c2c2;stroke-linecap:round;stroke-linejoin:round;fill:none;stroke-width:1.7;fill-rule:evenodd' viewbox='0 0 21 21' xmlns='http://www.w3.org/2000/svg'%3E%3Cg%3E%3Ccircle cx='9' cy='9' r='8'/%3E%3Cpath d='m9 13.67v-5.48'/%3E%3Ccircle cx='9' cy='5.4' r='.43' stroke-width='0.85'/%3E%3C/g%3E%3C/svg%3E");
}

.control > .input.is-info ~ .icon {
  color: #13c2c2;
}

.control.has-floating-label > .input.is-info ~ label {
  color: #13c2c2;
}

.input.is-warn {
  border-color: rgba(250, 219, 20, 0.5);
  color: #fadb14;
}

.input.is-warn.hover, .input.is-warn:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(250, 219, 20, 0.5);
}

.input.is-warn.has-icon {
  background-image: url("data:image/svg+xml,%3Csvg style='stroke:%23fadb14;stroke-linecap:round;stroke-linejoin:round;fill:none;stroke-width:1.7;fill-rule:evenodd' viewbox='0 0 21 21' xmlns='http://www.w3.org/2000/svg'%3E%3Cg%3E%3Cpath d='m9 7v4.2'/%3E%3Ccircle cx='9' cy='13.67' r='.43' stroke-width='0.85'/%3E%3Cpath d='m10.45 2.52-8.83 15.37h17.67z' stroke-width='2' transform='matrix(.87 0 0 .87 -.06 .1)'/%3E%3C/g%3E%3C/svg%3E");
}

.control > .input.is-warn ~ .icon {
  color: #fadb14;
}

.control.has-floating-label > .input.is-warn ~ label {
  color: #fadb14;
}

.input.is-error, .is-validated .input:required:invalid {
  border-color: rgba(245, 34, 45, 0.5);
  color: #f5222d;
}

.input.is-error.hover, .is-validated .hover.input:required:invalid, .input.is-error:hover, .is-validated .input:hover:required:invalid {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(245, 34, 45, 0.5);
}

.input.is-error.has-icon, .is-validated .input:required:invalid {
  background-image: url("data:image/svg+xml,%3Csvg style='stroke:%23f5222d;stroke-linecap:round;stroke-linejoin:round;fill:none;stroke-width:2;fill-rule:evenodd' viewbox='0 0 21 21' xmlns='http://www.w3.org/2000/svg'%3E%3Cg%3E%3Cpath d='m3.88 3.88 10.42 10.42'/%3E%3Cpath d='m14.3 3.88-10.42 10.42'/%3E%3C/g%3E%3C/svg%3E");
}

.control > .input.is-error ~ .icon, .is-validated .control > .input:required:invalid ~ .icon {
  color: #f5222d;
}

.control.has-floating-label > .input.is-error ~ label, .is-validated .control.has-floating-label > .input:required:invalid ~ label {
  color: #f5222d;
}

.input.is-light {
  border-color: rgba(250, 250, 250, 0.5);
  color: #fafafa;
}

.input.is-light.hover, .input.is-light:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(250, 250, 250, 0.5);
}

.control > .input.is-light ~ .icon {
  color: #fafafa;
}

.control.has-floating-label > .input.is-light ~ label {
  color: #fafafa;
}

.input.is-dark {
  border-color: rgba(71, 71, 71, 0.5);
  color: #474747;
}

.input.is-dark.hover, .input.is-dark:hover {
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.1),0 0 0 0.2rem rgba(71, 71, 71, 0.5);
}

.control > .input.is-dark ~ .icon {
  color: #474747;
}

.control.has-floating-label > .input.is-dark ~ label {
  color: #474747;
}

select.input {
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg style='stroke:%23636363;stroke-linecap:round;stroke-linejoin:round;fill:none;stroke-width:1.7;fill-rule:evenodd' viewbox='0 0 21 21' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='m4.75 7.12 4.75 4.75 4.75-4.75'/%3E%3C/svg%3E");
}

select.input[multiple], select.input[size]:not([size="1"]) {
  padding-right: 0.375em;
  background-image: none;
}

select.input::-ms-expand {
  display: none;
}

select.input::-ms-value {
  color: #474747;
  background: #fff;
}

.input::-ms-clear {
  color: #636363;
}

.input::-webkit-input-placeholder {
  opacity: 1;
  color: #b8b8b8;
}

.input::-moz-placeholder {
  opacity: 1;
  color: #b8b8b8;
}

.input:-ms-input-placeholder {
  opacity: 1;
  color: #b8b8b8;
}

.input::-ms-input-placeholder {
  opacity: 1;
  color: #b8b8b8;
}

.input::placeholder {
  opacity: 1;
  color: #b8b8b8;
}

textarea.input {
  height: auto;
  min-height: 2.4em;
}

.control > .input {
  font-size: inherit;
  display: flex;
  align-items: center;
  height: 100%;
}

.control.has-icon-left > .input ~ .icon {
  z-index: 11;
  pointer-events: none;
  opacity: 0.5;
}

.control.has-icon-left > .input.focus ~ .icon, .control.has-icon-left > .input:focus ~ .icon {
  opacity: 1;
}

.control.has-floating-label > .input[placeholder=" "] ~ label {
  position: absolute;
  top: 50%;
  left: 0.75rem;
  transform: translateY(-50%);
  pointer-events: none;
  padding: 2px;
  background-color: #fff;
  line-height: 1;
  transition: top 0.15s ease-in-out,font-size 0.15s ease-in-out;
}

.control.has-floating-label > .input[placeholder=" "]:not(:placeholder-shown) ~ label, .control.has-floating-label > .input[placeholder=" "].focus ~ label, .control.has-floating-label > .input[placeholder=" "]:focus ~ label {
  top: 0%;
  font-size: 0.75em;
}

.control.has-floating-label > .input[placeholder=" "]:not(:-ms-input-placeholder) ~ label {
  top: 0%;
  font-size: 0.75em;
}

.btn {
  text-align: center;
}

.btn.is-sld {
  color: #fff;
  background-color: #636363;
}

.btn.is-sld.focus, .btn.is-sld:focus {
  background-color: #838383;
}

.btn.is-sld:not([disabled]):not(:disabled).active, .btn.is-sld:not([disabled]):not(:disabled):active {
  color: #fff;
  background-color: #3c3c3c;
}

.btn.is-sld.is-loading::before {
  color: #fff;
}

.btn.is-sld.is-primary {
  background-color: #805ad5;
}

.btn.is-sld.is-primary.hover, .btn.is-sld.is-primary:hover {
  box-shadow: 0 0 0 0.2rem rgba(128, 90, 213, 0.5);
}

.btn.is-sld.is-primary.focus, .btn.is-sld.is-primary:focus {
  background-color: #997bdd;
}

.btn.is-sld.is-primary:not([disabled]):not(:disabled).active, .btn.is-sld.is-primary:not([disabled]):not(:disabled):active {
  background-color: #4d3680;
}

.btn.is-sld.is-secondary {
  background-color: gray;
}

.btn.is-sld.is-secondary.hover, .btn.is-sld.is-secondary:hover {
  box-shadow: 0 0 0 0.2rem rgba(128, 128, 128, 0.5);
}

.btn.is-sld.is-secondary.focus, .btn.is-sld.is-secondary:focus {
  background-color: #999999;
}

.btn.is-sld.is-secondary:not([disabled]):not(:disabled).active, .btn.is-sld.is-secondary:not([disabled]):not(:disabled):active {
  background-color: #4d4d4d;
}

.btn.is-sld.is-valid {
  color: #0f0f0f;
  background-color: #52c41a;
}

.btn.is-sld.is-valid.hover, .btn.is-sld.is-valid:hover {
  box-shadow: 0 0 0 0.2rem rgba(82, 196, 26, 0.5);
}

.btn.is-sld.is-valid.focus, .btn.is-sld.is-valid:focus {
  background-color: #75d048;
}

.btn.is-sld.is-valid:not([disabled]):not(:disabled).active, .btn.is-sld.is-valid:not([disabled]):not(:disabled):active {
  color: #fff;
  background-color: #317610;
}

.btn.is-sld.is-valid.is-loading::before {
  color: #0f0f0f;
}

.btn.is-sld.is-info {
  color: #0f0f0f;
  background-color: #13c2c2;
}

.btn.is-sld.is-info.hover, .btn.is-sld.is-info:hover {
  box-shadow: 0 0 0 0.2rem rgba(19, 194, 194, 0.5);
}

.btn.is-sld.is-info.focus, .btn.is-sld.is-info:focus {
  background-color: #42cece;
}

.btn.is-sld.is-info:not([disabled]):not(:disabled).active, .btn.is-sld.is-info:not([disabled]):not(:disabled):active {
  color: #fff;
  background-color: #0b7474;
}

.btn.is-sld.is-info.is-loading::before {
  color: #0f0f0f;
}

.btn.is-sld.is-warn {
  color: #0f0f0f;
  background-color: #fadb14;
}

.btn.is-sld.is-warn.hover, .btn.is-sld.is-warn:hover {
  box-shadow: 0 0 0 0.2rem rgba(250, 219, 20, 0.5);
}

.btn.is-sld.is-warn.focus, .btn.is-sld.is-warn:focus {
  background-color: #fbe243;
}

.btn.is-sld.is-warn:not([disabled]):not(:disabled).active, .btn.is-sld.is-warn:not([disabled]):not(:disabled):active {
  color: #fff;
  background-color: #96830c;
}

.btn.is-sld.is-warn.is-loading::before {
  color: #0f0f0f;
}

.btn.is-sld.is-error {
  color: #0f0f0f;
  background-color: #f5222d;
}

.btn.is-sld.is-error.hover, .btn.is-sld.is-error:hover {
  box-shadow: 0 0 0 0.2rem rgba(245, 34, 45, 0.5);
}

.btn.is-sld.is-error.focus, .btn.is-sld.is-error:focus {
  background-color: #f74e57;
}

.btn.is-sld.is-error:not([disabled]):not(:disabled).active, .btn.is-sld.is-error:not([disabled]):not(:disabled):active {
  color: #fff;
  background-color: #93141b;
}

.btn.is-sld.is-error.is-loading::before {
  color: #0f0f0f;
}

.btn.is-sld.is-light {
  color: #0f0f0f;
  background-color: #fafafa;
}

.btn.is-sld.is-light.hover, .btn.is-sld.is-light:hover {
  box-shadow: 0 0 0 0.2rem rgba(250, 250, 250, 0.5);
}

.btn.is-sld.is-light.focus, .btn.is-sld.is-light:focus {
  background-color: #fbfbfb;
}

.btn.is-sld.is-light:not([disabled]):not(:disabled).active, .btn.is-sld.is-light:not([disabled]):not(:disabled):active {
  color: #0f0f0f;
  background-color: #969696;
}

.btn.is-sld.is-light.is-loading::before {
  color: #0f0f0f;
}

.btn.is-sld.is-dark {
  background-color: #474747;
}

.btn.is-sld.is-dark.hover, .btn.is-sld.is-dark:hover {
  box-shadow: 0 0 0 0.2rem rgba(71, 71, 71, 0.5);
}

.btn.is-sld.is-dark.focus, .btn.is-sld.is-dark:focus {
  background-color: #6c6c6c;
}

.btn.is-sld.is-dark:not([disabled]):not(:disabled).active, .btn.is-sld.is-dark:not([disabled]):not(:disabled):active {
  background-color: #2b2b2b;
}

.btn.is-sld.focus, .btn.is-sld:focus {
  -webkit-animation: ripple-gray 1s ease-out both;
          animation: ripple-gray 1s ease-out both;
}

@-webkit-keyframes ripple-gray {
  from {
    box-shadow: 0 0 0 0 gray;
  }
  75% {
    box-shadow: 0 0 0 0.3rem transparent;
  }
  76% {
    box-shadow: none;
  }
}

@keyframes ripple-gray {
  from {
    box-shadow: 0 0 0 0 gray;
  }
  75% {
    box-shadow: 0 0 0 0.3rem transparent;
  }
  76% {
    box-shadow: none;
  }
}

.btn.is-sld[disabled], .btn.is-sld:disabled {
  color: #fff;
  background: #636363;
}

.btn.is-out {
  border-color: #b8b8b8;
  color: #636363;
}

.btn.is-out.hover, .btn.is-out:hover {
  border-color: #636363;
  box-shadow: 0 0 0 0.2rem rgba(99, 99, 99, 0.5);
}

.btn.is-out.focus, .btn.is-out:focus {
  border-color: #636363;
  color: #636363;
}

.btn.is-out:not([disabled]):not(:disabled).active, .btn.is-out:not([disabled]):not(:disabled):active {
  border-color: #3c3c3c;
  color: #3c3c3c;
}

.btn.is-out.is-primary.hover, .btn.is-out.is-primary:hover {
  border-color: #805ad5;
  box-shadow: 0 0 0 0.2rem rgba(128, 90, 213, 0.5);
}

.btn.is-out.is-primary.focus, .btn.is-out.is-primary:focus {
  border-color: #805ad5;
  color: #805ad5;
}

.btn.is-out.is-primary:not([disabled]):not(:disabled).active, .btn.is-out.is-primary:not([disabled]):not(:disabled):active {
  border-color: #4d3680;
  color: #4d3680;
}

.btn.is-out.is-secondary.hover, .btn.is-out.is-secondary:hover {
  border-color: gray;
  box-shadow: 0 0 0 0.2rem rgba(128, 128, 128, 0.5);
}

.btn.is-out.is-secondary.focus, .btn.is-out.is-secondary:focus {
  border-color: gray;
  color: gray;
}

.btn.is-out.is-secondary:not([disabled]):not(:disabled).active, .btn.is-out.is-secondary:not([disabled]):not(:disabled):active {
  border-color: #4d4d4d;
  color: #4d4d4d;
}

.btn.is-out.is-valid.hover, .btn.is-out.is-valid:hover {
  border-color: #52c41a;
  box-shadow: 0 0 0 0.2rem rgba(82, 196, 26, 0.5);
}

.btn.is-out.is-valid.focus, .btn.is-out.is-valid:focus {
  border-color: #52c41a;
  color: #52c41a;
}

.btn.is-out.is-valid:not([disabled]):not(:disabled).active, .btn.is-out.is-valid:not([disabled]):not(:disabled):active {
  border-color: #317610;
  color: #317610;
}

.btn.is-out.is-info.hover, .btn.is-out.is-info:hover {
  border-color: #13c2c2;
  box-shadow: 0 0 0 0.2rem rgba(19, 194, 194, 0.5);
}

.btn.is-out.is-info.focus, .btn.is-out.is-info:focus {
  border-color: #13c2c2;
  color: #13c2c2;
}

.btn.is-out.is-info:not([disabled]):not(:disabled).active, .btn.is-out.is-info:not([disabled]):not(:disabled):active {
  border-color: #0b7474;
  color: #0b7474;
}

.btn.is-out.is-warn.hover, .btn.is-out.is-warn:hover {
  border-color: #fadb14;
  box-shadow: 0 0 0 0.2rem rgba(250, 219, 20, 0.5);
}

.btn.is-out.is-warn.focus, .btn.is-out.is-warn:focus {
  border-color: #fadb14;
  color: #fadb14;
}

.btn.is-out.is-warn:not([disabled]):not(:disabled).active, .btn.is-out.is-warn:not([disabled]):not(:disabled):active {
  border-color: #96830c;
  color: #96830c;
}

.btn.is-out.is-error.hover, .btn.is-out.is-error:hover {
  border-color: #f5222d;
  box-shadow: 0 0 0 0.2rem rgba(245, 34, 45, 0.5);
}

.btn.is-out.is-error.focus, .btn.is-out.is-error:focus {
  border-color: #f5222d;
  color: #f5222d;
}

.btn.is-out.is-error:not([disabled]):not(:disabled).active, .btn.is-out.is-error:not([disabled]):not(:disabled):active {
  border-color: #93141b;
  color: #93141b;
}

.btn.is-out.is-light.hover, .btn.is-out.is-light:hover {
  border-color: #fafafa;
  box-shadow: 0 0 0 0.2rem rgba(250, 250, 250, 0.5);
}

.btn.is-out.is-light.focus, .btn.is-out.is-light:focus {
  border-color: #fafafa;
  color: #fafafa;
}

.btn.is-out.is-light:not([disabled]):not(:disabled).active, .btn.is-out.is-light:not([disabled]):not(:disabled):active {
  border-color: #969696;
  color: #969696;
}

.btn.is-out.is-dark.hover, .btn.is-out.is-dark:hover {
  border-color: #474747;
  box-shadow: 0 0 0 0.2rem rgba(71, 71, 71, 0.5);
}

.btn.is-out.is-dark.focus, .btn.is-out.is-dark:focus {
  border-color: #474747;
  color: #474747;
}

.btn.is-out.is-dark:not([disabled]):not(:disabled).active, .btn.is-out.is-dark:not([disabled]):not(:disabled):active {
  border-color: #2b2b2b;
  color: #2b2b2b;
}

.btn.is-out[disabled], .btn.is-out:disabled {
  border-color: #636363;
  color: #636363;
}

.btn.is-min {
  border-right: 0;
  border-bottom-color: #b8b8b8;
  border-left: 0;
  border-radius: 0;
  box-shadow: none;
}

.btn.is-min::before {
  content: "";
  position: absolute;
  right: 0;
  bottom: -1px;
  left: 50%;
  transform: translateX(-50%);
  width: 0;
  border-bottom: 2px solid;
  transition: width 0.15s ease-in-out;
}

.btn.is-min::before {
  border-bottom-color: #636363;
}

.btn.is-min.hover, .btn.is-min:hover, .btn.is-min.focus, .btn.is-min:focus {
  color: #636363;
}

.btn.is-min.hover::before, .btn.is-min:hover::before, .btn.is-min.focus::before, .btn.is-min:focus::before {
  border-bottom-color: #636363;
}

.btn.is-min.is-loading::before {
  color: #636363;
}

.btn.is-min.is-primary::before {
  border-bottom-color: #805ad5;
}

.btn.is-min.is-primary.hover, .btn.is-min.is-primary:hover, .btn.is-min.is-primary.focus, .btn.is-min.is-primary:focus {
  color: #805ad5;
}

.btn.is-min.is-primary.hover::before, .btn.is-min.is-primary:hover::before, .btn.is-min.is-primary.focus::before, .btn.is-min.is-primary:focus::before {
  border-bottom-color: #805ad5;
}

.btn.is-min.is-primary.is-loading::before {
  color: #805ad5;
}

.btn.is-min.is-secondary::before {
  border-bottom-color: gray;
}

.btn.is-min.is-secondary.hover, .btn.is-min.is-secondary:hover, .btn.is-min.is-secondary.focus, .btn.is-min.is-secondary:focus {
  color: gray;
}

.btn.is-min.is-secondary.hover::before, .btn.is-min.is-secondary:hover::before, .btn.is-min.is-secondary.focus::before, .btn.is-min.is-secondary:focus::before {
  border-bottom-color: gray;
}

.btn.is-min.is-secondary.is-loading::before {
  color: gray;
}

.btn.is-min.is-valid::before {
  border-bottom-color: #52c41a;
}

.btn.is-min.is-valid.hover, .btn.is-min.is-valid:hover, .btn.is-min.is-valid.focus, .btn.is-min.is-valid:focus {
  color: #52c41a;
}

.btn.is-min.is-valid.hover::before, .btn.is-min.is-valid:hover::before, .btn.is-min.is-valid.focus::before, .btn.is-min.is-valid:focus::before {
  border-bottom-color: #52c41a;
}

.btn.is-min.is-valid.is-loading::before {
  color: #52c41a;
}

.btn.is-min.is-info::before {
  border-bottom-color: #13c2c2;
}

.btn.is-min.is-info.hover, .btn.is-min.is-info:hover, .btn.is-min.is-info.focus, .btn.is-min.is-info:focus {
  color: #13c2c2;
}

.btn.is-min.is-info.hover::before, .btn.is-min.is-info:hover::before, .btn.is-min.is-info.focus::before, .btn.is-min.is-info:focus::before {
  border-bottom-color: #13c2c2;
}

.btn.is-min.is-info.is-loading::before {
  color: #13c2c2;
}

.btn.is-min.is-warn::before {
  border-bottom-color: #fadb14;
}

.btn.is-min.is-warn.hover, .btn.is-min.is-warn:hover, .btn.is-min.is-warn.focus, .btn.is-min.is-warn:focus {
  color: #fadb14;
}

.btn.is-min.is-warn.hover::before, .btn.is-min.is-warn:hover::before, .btn.is-min.is-warn.focus::before, .btn.is-min.is-warn:focus::before {
  border-bottom-color: #fadb14;
}

.btn.is-min.is-warn.is-loading::before {
  color: #fadb14;
}

.btn.is-min.is-error::before {
  border-bottom-color: #f5222d;
}

.btn.is-min.is-error.hover, .btn.is-min.is-error:hover, .btn.is-min.is-error.focus, .btn.is-min.is-error:focus {
  color: #f5222d;
}

.btn.is-min.is-error.hover::before, .btn.is-min.is-error:hover::before, .btn.is-min.is-error.focus::before, .btn.is-min.is-error:focus::before {
  border-bottom-color: #f5222d;
}

.btn.is-min.is-error.is-loading::before {
  color: #f5222d;
}

.btn.is-min.is-light::before {
  border-bottom-color: #fafafa;
}

.btn.is-min.is-light.hover, .btn.is-min.is-light:hover, .btn.is-min.is-light.focus, .btn.is-min.is-light:focus {
  color: #fafafa;
}

.btn.is-min.is-light.hover::before, .btn.is-min.is-light:hover::before, .btn.is-min.is-light.focus::before, .btn.is-min.is-light:focus::before {
  border-bottom-color: #fafafa;
}

.btn.is-min.is-light.is-loading::before {
  color: #fafafa;
}

.btn.is-min.is-dark::before {
  border-bottom-color: #474747;
}

.btn.is-min.is-dark.hover, .btn.is-min.is-dark:hover, .btn.is-min.is-dark.focus, .btn.is-min.is-dark:focus {
  color: #474747;
}

.btn.is-min.is-dark.hover::before, .btn.is-min.is-dark:hover::before, .btn.is-min.is-dark.focus::before, .btn.is-min.is-dark:focus::before {
  border-bottom-color: #474747;
}

.btn.is-min.is-dark.is-loading::before {
  color: #474747;
}

.btn.is-min:not([disabled]):not(:disabled).active::before, .btn.is-min:not([disabled]):not(:disabled):active::before {
  -webkit-animation: none;
          animation: none;
}

.btn.is-min.hover::before, .btn.is-min:hover::before, .btn.is-min.focus::before, .btn.is-min:focus::before {
  width: 100%;
}

.btn.is-min.focus, .btn.is-min:focus {
  -webkit-animation: none;
          animation: none;
  border-bottom-color: transparent;
}

.btn.is-min.focus::before, .btn.is-min:focus::before {
  -webkit-animation: flash 1s ease-out both;
          animation: flash 1s ease-out both;
}

@-webkit-keyframes flash {
  from,
  50% {
    opacity: 1;
  }
  25%,
  75% {
    opacity: 0;
  }
}

@keyframes flash {
  from,
  50% {
    opacity: 1;
  }
  25%,
  75% {
    opacity: 0;
  }
}

.btn.is-min[disabled], .btn.is-min:disabled {
  color: #636363;
}

.btn.is-min[disabled]::before, .btn.is-min:disabled::before {
  border-bottom-color: #636363;
}

.btn.is-loading {
  pointer-events: none;
  color: transparent !important;
  position: relative;
}

.btn.is-loading::before {
  content: "";
  position: absolute;
  top: calc(50% - (1em / 2));
  right: 0;
  bottom: 0;
  left: calc(50% - (1em / 2));
  transform: inherit;
  width: 1em;
  height: 1em;
  border: .15em solid currentColor;
  border-right-color: transparent;
  border-radius: 50%;
  -webkit-animation: spin 1s infinite linear;
          animation: spin 1s infinite linear;
  color: #636363;
}

@-webkit-keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

@keyframes spin {
  100% {
    transform: rotate(360deg);
  }
}

.btn.is-block {
  width: 100%;
}

.btn.is-circle {
  width: 2.35em;
  height: 2.35em;
  padding: 0;
}

.control > .file ~ label {
  margin-bottom: 0;
}

.control > .radio:checked ~ label::before {
  border-width: 0.35em;
  background-color: #fff;
}

.control > .radio ~ label::before {
  border-radius: 50%;
}

.control > .checkbox:checked ~ label::after {
  top: 45%;
  transform: translate(-50%, -50%) rotate(45deg);
  width: 0.28571em;
  height: 0.57143em;
  border: 0.12em solid #fff;
  border-top-width: 0;
  border-left-width: 0;
}

.control > .checkbox:indeterminate ~ label::before {
  border-color: currentColor;
  background: currentColor;
}

.control > .checkbox:indeterminate ~ label::after {
  content: "";
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 0.57143em;
  height: 2px;
  background: #fff;
}

.control > .checkbox ~ label::after {
  content: "";
  position: absolute;
  left: 0.57143em;
}

.range {
  display: block;
  width: 100%;
  height: 1.5em;
  padding: 0;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
}

.range.focus, .range:focus {
  outline: 0;
}

.range::-webkit-slider-thumb {
  width: 1em;
  height: 1em;
  border: 1px solid currentColor;
  border-radius: 50%;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background: #fff;
  box-shadow: 1px 1px 2px 0 rgba(0, 0, 0, 0.15);
  transition: transform 0.15s ease-in-out,border 0.15s ease-in-out;
}

.range::-moz-range-thumb {
  width: 1em;
  height: 1em;
  border: 1px solid currentColor;
  border-radius: 50%;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background: #fff;
  box-shadow: 1px 1px 2px 0 rgba(0, 0, 0, 0.15);
  transition: transform 0.15s ease-in-out,border 0.15s ease-in-out;
}

.range::-ms-thumb {
  width: 1em;
  height: 1em;
  border: 1px solid currentColor;
  border-radius: 50%;
  -moz-appearance: none;
  -webkit-appearance: none;
  appearance: none;
  background: #fff;
  box-shadow: 1px 1px 2px 0 rgba(0, 0, 0, 0.15);
  transition: transform 0.15s ease-in-out,border 0.15s ease-in-out;
}

.range.hover::-webkit-slider-thumb, .range:hover::-webkit-slider-thumb {
  transform: scale(1.1);
  border-width: 3px;
}

.range.hover::-moz-range-thumb, .range:hover::-moz-range-thumb {
  transform: scale(1.1);
  border-width: 3px;
}

.range.hover::-ms-thumb, .range:hover::-ms-thumb {
  transform: scale(1.1);
  border-width: 3px;
}

.range::-moz-range-track {
  display: flex;
  align-items: center;
  width: 100%;
  height: 0.22rem;
  margin: 0;
  border: 0;
  border-radius: 50em;
  background-color: #b8b8b8;
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.2);
  transition: background 0.15s ease-in-out;
}

.range::-webkit-slider-runnable-track {
  display: flex;
  align-items: center;
  width: 100%;
  height: 0.22rem;
  margin: 0;
  border: 0;
  border-radius: 50em;
  background-color: #b8b8b8;
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.2);
  transition: background 0.15s ease-in-out;
}

.range::-ms-track {
  color: transparent;
  display: flex;
  align-items: center;
  width: 100%;
  height: 0.22rem;
  margin: 0;
  border: 0;
  border-radius: 50em;
  background-color: #b8b8b8;
  box-shadow: inset 0 1px 2px rgba(15, 15, 15, 0.2);
  transition: background 0.15s ease-in-out;
}

.range::-ms-fill-lower {
  background: #636363;
}

.range.focus::-moz-range-track, .range:focus::-moz-range-track, .range:not([disabled]):not(:disabled).active::-moz-range-track, .range:not([disabled]):not(:disabled):active::-moz-range-track {
  background-color: currentColor;
}

.range.focus::-webkit-slider-runnable-track, .range:focus::-webkit-slider-runnable-track, .range:not([disabled]):not(:disabled).active::-webkit-slider-runnable-track, .range:not([disabled]):not(:disabled):active::-webkit-slider-runnable-track {
  background-color: currentColor;
}

.range.focus::-ms-fill-lower, .range:focus::-ms-fill-lower, .range:not([disabled]):not(:disabled).active::-ms-fill-lower, .range:not([disabled]):not(:disabled):active::-ms-fill-lower {
  color: inherit;
  background: currentColor;
}

.range.is-primary {
  color: #805ad5;
}

.range.is-secondary {
  color: gray;
}

.range.is-valid {
  color: #52c41a;
}

.range.is-info {
  color: #13c2c2;
}

.range.is-warn {
  color: #fadb14;
}

.range.is-error {
  color: #f5222d;
}

.range.is-light {
  color: #fafafa;
}

.range.is-dark {
  color: #474747;
}

.control > .switch:checked ~ label::after {
  left: 1.14286em;
  background-color: #fff;
}

.control > .switch ~ label {
  padding-left: 2.85714em;
}

.control > .switch ~ label::before {
  width: 2.28571em;
  border-radius: 50em;
}

.control > .switch ~ label::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 0;
  transform: translateY(-50%) scale(0.7);
  width: 1.14286em;
  height: 1.14286em;
  border-radius: 50%;
  background: #b8b8b8;
  transition: left 0.2s ease-in-out,background-color 0.2s ease-in-out;
}

.menu {
  display: block;
  padding: 0.35em 0;
  margin: 0;
  font-size: 1rem;
}

.menu .menu-item.hover, .menu .menu-item:hover, .menu .menu-item.focus, .menu .menu-item:focus {
  color: #636363;
  background-color: #e0e0e0;
}

.menu .menu-item.active {
  color: #fff;
  background-color: #636363;
}

.menu-item {
  display: flex;
  width: 100%;
  padding-left: 1.5em;
  border: 0;
  border-radius: 0;
  text-align: left;
}

.menu-item::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  border-left: 0 solid currentColor;
  transition: border-width 0.15s linear,border-color 2s cubic-bezier(1, 0, 1, 0),color 2s cubic-bezier(1, 0, 1, 0);
}

.menu-item:not(.active).hover::before, .menu-item:not(.active):hover::before, .menu-item:not(.active).focus::before, .menu-item:not(.active):focus::before {
  transition: border-width 0.15s linear;
  border-left-width: 3px;
}

.menu-item.hover, .menu-item:hover {
  text-decoration: none;
}

.menu-item.focus, .menu-item:focus {
  outline: 0;
}

.menu.is-primary .menu-item.hover, .menu.is-primary .menu-item:hover, .menu.is-primary .menu-item.focus, .menu.is-primary .menu-item:focus {
  color: #805ad5;
  background-color: #e6def7;
}

.menu.is-primary .menu-item.active {
  color: #fff;
  background-color: #805ad5;
}

.menu.is-secondary .menu-item.hover, .menu.is-secondary .menu-item:hover, .menu.is-secondary .menu-item.focus, .menu.is-secondary .menu-item:focus {
  color: gray;
  background-color: #e6e6e6;
}

.menu.is-secondary .menu-item.active {
  color: #fff;
  background-color: gray;
}

.menu.is-valid .menu-item.hover, .menu.is-valid .menu-item:hover, .menu.is-valid .menu-item.focus, .menu.is-valid .menu-item:focus {
  color: #52c41a;
  background-color: #dcf3d1;
}

.menu.is-valid .menu-item.active {
  color: #0f0f0f;
  background-color: #52c41a;
}

.menu.is-info .menu-item.hover, .menu.is-info .menu-item:hover, .menu.is-info .menu-item.focus, .menu.is-info .menu-item:focus {
  color: #13c2c2;
  background-color: #d0f3f3;
}

.menu.is-info .menu-item.active {
  color: #0f0f0f;
  background-color: #13c2c2;
}

.menu.is-warn .menu-item.hover, .menu.is-warn .menu-item:hover, .menu.is-warn .menu-item.focus, .menu.is-warn .menu-item:focus {
  color: #fadb14;
  background-color: #fef8d0;
}

.menu.is-warn .menu-item.active {
  color: #0f0f0f;
  background-color: #fadb14;
}

.menu.is-error .menu-item.hover, .menu.is-error .menu-item:hover, .menu.is-error .menu-item.focus, .menu.is-error .menu-item:focus {
  color: #f5222d;
  background-color: #fdd3d5;
}

.menu.is-error .menu-item.active {
  color: #0f0f0f;
  background-color: #f5222d;
}

.menu.is-light .menu-item.hover, .menu.is-light .menu-item:hover, .menu.is-light .menu-item.focus, .menu.is-light .menu-item:focus {
  color: #fafafa;
  background-color: #fefefe;
}

.menu.is-light .menu-item.active {
  color: #0f0f0f;
  background-color: #fafafa;
}

.menu.is-dark .menu-item.hover, .menu.is-dark .menu-item:hover, .menu.is-dark .menu-item.focus, .menu.is-dark .menu-item:focus {
  color: #474747;
  background-color: #dadada;
}

.menu.is-dark .menu-item.active {
  color: #fff;
  background-color: #474747;
}

.menu-trigger::after {
  content: "";
  align-self: center;
  margin-top: 0.25em;
  margin-left: auto;
  border: 6px solid transparent;
  border-top-color: currentColor;
}

.menu-trigger.active::after {
  transform: rotate(180deg) translateY(50%);
}

.menu-trigger:not(.active) ~ * {
  display: none;
}

.menu .menu {
  overflow: hidden;
  padding: 0;
  font-size: inherit;
}

.menu .menu *:not(.menu-trigger) {
  -webkit-animation: fadein 0.5s ease-out both;
          animation: fadein 0.5s ease-out both;
  margin-left: 1.5em;
}

@-webkit-keyframes fadein {
  from {
    opacity: 0;
  }
}

@keyframes fadein {
  from {
    opacity: 0;
  }
}

.menu > .divider {
  padding: 0.375em 0;
}

.blockquote {
  padding: .4rem .8rem;
  border-left: 3px solid #805ad5;
}

.list {
  padding-left: 0;
}

.list.is-inline > .list-item:not(:last-child) {
  margin-right: 0.5em;
}

.control {
  position: relative;
  display: block;
  font-size: 1rem;
}

label.control {
  cursor: pointer;
  margin-bottom: 0;
}

label.control label {
  pointer-events: none;
}

.control > .feedback {
  position: absolute;
  right: 0;
  bottom: 100%;
  display: none;
  padding: 3px 6px;
  margin-bottom: 7px;
  border-radius: 0.25em;
  color: #fff;
  box-shadow: 1px 4px 6px 0 rgba(0, 0, 0, 0.15);
  background-color: #474747;
}

.control > .feedback::before {
  content: "";
  position: absolute;
  top: 100%;
  right: 10px;
  border: 6px solid transparent;
  border-top-color: #474747;
}

.addon {
  display: flex;
  -webkit-user-select: auto;
     -moz-user-select: auto;
      -ms-user-select: auto;
          user-select: auto;
  align-items: center;
  border-color: #b8b8b8;
  background-color: #fafafa;
}

.group {
  display: flex;
  flex-wrap: wrap;
}

.group.is-lg > .addon,
.group.is-lg > .btn {
  padding: 0.75rem 1.25rem;
}

.group > .input.hover, .group > .input:hover, .group > .input.focus, .group > .input:focus,
.group > .control.hover,
.group > .control:hover,
.group > .control.focus,
.group > .control:focus,
.group > .addon.hover,
.group > .addon:hover,
.group > .addon.focus,
.group > .addon:focus,
.group > .btn.hover,
.group > .btn:hover,
.group > .btn.focus,
.group > .btn:focus {
  z-index: 10;
}

.group > .input,
.group > .control:not(.addon) {
  flex: 1 1 0%;
}

.group.buttons {
  display: inline-flex;
}

.embed {
  position: relative;
  display: block;
  overflow: hidden;
  width: 100%;
  padding: 0;
}

.embed::before {
  content: "";
  display: block;
  padding-top: 56.25%;
}

.embed-item {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
}

.embed.is-1-1::before {
  padding-top: 100%;
}

.embed.is-4-3::before {
  padding-top: 75%;
}

.embed.is-16-10::before {
  padding-top: 62.5%;
}

.embed.is-21-9::before {
  padding-top: 42.85714%;
}

.breadcrumb {
  display: flex;
  list-style: none;
  flex-wrap: wrap;
  padding: 0.75rem 1rem;
  margin-bottom: 1rem;
  font-size: 1rem;
}

.breadcrumb a.hover, .breadcrumb a:hover {
  text-decoration: none;
}

.breadcrumb-item {
  padding-right: 0.5em;
}

.breadcrumb-item:not(:first-child)::before {
  content: "🠚";
  padding-right: 0.25em;
  color: #636363;
}

.breadcrumb-item:not([disabled]):not(:disabled).active, .breadcrumb-item:not([disabled]):not(:disabled):active {
  color: #636363;
}

.breadcrumb-item[data-separator]:not(:first-child)::before {
  content: attr(data-separator);
}
@media (prefers-reduced-motion: reduce) {
  .control > .radio ~ label::before, .control > .checkbox ~ label::before, .control > .switch ~ label::before, .input, .btn, .range, .menu-item, .addon, .control.has-floating-label > .input[placeholder=" "] ~ label, .btn.is-min::before, .range::-webkit-slider-thumb, .range::-moz-range-thumb, .range::-ms-thumb, .range::-moz-range-track, .range::-webkit-slider-runnable-track, .range::-ms-track, .control > .switch ~ label::after, .menu-item::before, .menu-item.hover:not(.active)::before, .menu-item:not(.active):hover::before, .menu-item.focus:not(.active)::before, .menu-item:not(.active):focus::before {
    transition: none;
  }
}
/*# sourceMappingURL=data:application/json;base64, */